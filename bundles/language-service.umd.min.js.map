{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/language-service/bundles/language-service.umd.js"],"names":["$getModule","name","$provided","require","define","modules","cb","$deferred","$reflect","defineMetadata","getOwnMetadata","global","$resolved","module","exports","provided","result","Object","assign","reflect-metadata","apply","this","map","fs","path","ts","__extends","d","b","__","constructor","extendStatics","prototype","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","SchemaMetadata","MetadataFactory","makeMetadataFactory","props","factory","args","_i","arguments","length","values","__assign","ngMetadataName","isTypeOf","obj","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","Error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten$1","list","reduce","flat","item","flatItem","concat","jitSourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf$1$1","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path$$1","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ERROR_COMPONENT_TYPE","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector$1","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","symbol","metadata","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","transitiveModule","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","__symbolic","isNgSymbol","isDirective","isPipe","isInjectable","getNgModuleMetadata","isValueExportingNonSourceFile","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","compiler","AotCompiler","StyleCompiler","NgModuleCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","seen","summaries","createOutputContext","genFilePath","moduleName","runtime","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","createCommonjsModule","isFunction","isObject","tryCatcher","tryCatchTarget","errorObject","tryCatch","flattenUnsubscriptionErrors","errs","err","UnsubscriptionError_1","UnsubscriptionError","toSubscriber","nextOrObserver","complete","Subscriber_1","Subscriber","rxSubscriber","Observer","empty","isScheduler","schedule","isPromise$2","subscribe","subscribeToResult","outerSubscriber","outerValue","outerIndex","destination","InnerSubscriber_1","InnerSubscriber","closed","Observable_1","Observable","_isScalar","next","isArrayLike","isPromise_1","root","setTimeout","iterator","iterator$$1","done","observable","obs","TypeError","isObject_1","mergeAll","concurrent","POSITIVE_INFINITY","lift","MergeAllOperator","merge$2","observables","call","mergeStatic","scheduler","last","isScheduler_1","ArrayObservable_1","ArrayObservable","mergeAll_1","multicast","subjectOrSubjectFactory","subjectFactory","MulticastOperator","connectable","ConnectableObservable_1","connectableObservableDescriptor","shareSubjectFactory","Subject_1","Subject","share","multicast_1","refCount","makeDecorator","parentClass","chainFn","DecoratorFactory","objOrType","metaCtor","annotationInstance","TypeDecorator","cls","ANNOTATIONS","makeMetadataCtor","annotationCls","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","parameters","PARAMETERS","annotation","getSymbolIterator","_symbolIterator","Symbol_1","_global","getOwnPropertyNames","scheduleMicroTask","Zone","current","looseIdentical","stringify$1","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef$1","resolveProvider","computeDeps","IDENT","EMPTY","useNew","provide","USE_VALUE$1","staticError","multiProviderMixError","recursivelyProcessProviders","records","MULTI_PROVIDER_FN","record","tryResolveToken","notFoundValue","resolveToken","NG_TEMP_TOKEN_PATH","CIRCULAR","NO_NEW_LINE","depRecords","depRecord","childRecord","NULL_INJECTOR","Injector","THROW_IF_NOT_FOUND","providerDeps","annotations","Optional","SkipSelf","Self","Inject$1","formatError","charAt","JSON","NEW_LINE","getDebugContext","ERROR_DEBUG_CONTEXT","getOriginalError","ERROR_ORIGINAL_ERROR","getErrorLogger","ERROR_LOGGER","defaultErrorLogger","wrappedError","originalError","findFirstClosedCycle","constructResolvingPath","injectionError","injector","constructResolvingMessage","errMsg","addKey","injectors","noProviderError","cyclicDependencyError","instantiationError","originalException","originalStack","first","invalidProviderError","noAnnotationError","typeOrFunc","signature","ii","parameter","outOfBoundsError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","isType","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","getParentCtor","parentProto","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","constructDependencies","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","resolveReflectiveProviders","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","resolvedFactories","Type$1$1","params_1","t","_extractToken","optional","_createDependency","visibility","paramMetadata","InjectionToken","_mapProviders","_providers","getProviderAtIndex","isPromise$1","_appIdRandomProviderFactory","_randomChar","floor","random","_throwError","noComponentFactoryError","ERROR_COMPONENT","createScope","events","leave","scope","returnValue","trace","leaveScope","noopScope","arg0","arg1","noop","checkStable","zone","_nesting","hasPendingMicrotasks","isStable","onMicrotaskEmpty","emit","runOutsideAngular","onStable","forkInnerZoneWithAngularBehavior","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","hasPendingMacrotasks","macroTask","onHandleError","handleError","onError","onUnstable","isDevMode","_runModeLocked","_devMode","createPlatform","_platform","destroyed","ALLOW_MULTIPLE_PLATFORMS","PlatformRef","inits","PLATFORM_INITIALIZER","init","assertPlatform","requiredToken","platform","getPlatform","getNgZone","ngZoneOption","NoopNgZone","NgZone","enableLongStackTrace","_callAndReportToErrorHandler","errorHandler","ngZone","catch","optionsReducer","dst","objs","remove","splice","flatten$2","_queryElementChildren","predicate","matches","childNodes","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","isJsObject","comparator","iterator1","iterator2","item1","item2","iterateListLike","getPreviousIndex","addRemoveOffset","moveOffsets","previousIndex","moveOffset","getTypeNameForDebugging","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","_localeFactory","locale","asTextData","view","asElementData","asProviderData","asPureExpressionData","asQueryList","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","viewWrappedDebugError","_addDebugContext","logError","isViewDebugError","viewDestroyedError","tokenKey","_tokenKeyCache","size","checkBinding","def","oldValues","state","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","Services","createDebugContext","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","eventName","event","componentView","handleEvent","declaredViewContainer","viewParentEl","renderNode","renderElement","renderText","elementEventFullName$1","isComponentView","isEmbeddedView","splitDepsDsl","getParentRenderElement","renderHost","renderParent","componentRendererType","encapsulation","ViewEncapsulation$1","Native","resolveDefinition","DEFINITION_CACHE","NOOP","rootRenderNodes","renderNodes","visitRootRenderNodes","nextSibling","renderer","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","appendChild","insertBefore","removeChild","splitNamespace","NS_PREFIX_RE","createElement","elDef","rootSelectorOrNode","selectorOrNode","ns","createComment","parentEl","selectRootElement","name_2","setAttribute","listenToElementOutputs","outputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","outputIndex","checkAndUpdateElementInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","bindings","changed","checkAndUpdateElementValue","checkAndUpdateElementDynamic","binding","elData","renderNode$$1","setElementAttribute","setElementClass","setElementStyle","setElementProperty","renderValue","sanitizer","sanitize","removeAttribute","addClass","removeClass","SecurityContext$1","setStyle","removeStyle","setProperty","initNgModule","data","_def","provDef","_createProviderInstance$1","resolveNgModuleDep","_parent","tokenKey$$1","InjectorRefTokenKey$1","NgModuleRefTokenKey","providersByKey","providerInstance","UNDEFINED_VALUE","injectable","_createClass","_callFactory","depValues","callNgModuleLifecycle","lifecycles","instance","ngOnDestroy","attachEmbeddedView","parentView","elementData","viewIndex","addToArray","attachProjectedView","dirtyParentQueries","renderAttachEmbeddedView","vcElementData","dvcElementData","projectedViews","template","_projectedViews","markNodeAsProjectedTemplate","viewDef","nodeFlags","parentNodeDef","childFlags","detachEmbeddedView","removeFromArray","renderDetachView","detachProjectedView","moveEmbeddedView","oldViewIndex","newViewIndex","prevView","prevRenderNode","createViewContainerData","ViewContainerRef_","createChangeDetectorRef","ViewRef_","createTemplateData","TemplateRef_","createInjector","Injector_","createRendererV1","RendererAdapter","createNgModuleRef","moduleType","bootstrapComponents","NgModuleRef_","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","allowPrivateServices","subscription","eventHandlerClosure","unsubscribe","checkAndUpdateDirectiveInline","providerData","changes","updateProp","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveDynamic","callFactory","resolveDep","startView","ChangeDetectorRefTokenKey","RendererV1TokenKey","findCompView","Renderer2TokenKey","ElementRefTokenKey","ElementRef","ViewContainerRefTokenKey","viewContainer","TemplateRefTokenKey","InjectorRefTokenKey","providerDef_1","allProviders","publicProviders","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","WrappedValue","wrapped","SimpleChange","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","directChildFlags","callElementProvidersLifecycles","setCurrentNode","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","createQuery","QueryList","nodeMatchedQueries","tplDef","filterId","setDirty","checkAndUpdateQuery","queryList","dirty","directiveInstance","newValues","elementDef","calcQueryValues","reset","notify","boundValue","bindingType","notifyOnChanges","queryDef","valueType","matchedQueries","getQueryValue","childMatchedQueries","embeddedView","dvc","projectedView","queryValueType","appendNgContent","createPureExpression","checkAndUpdatePureExpressionInline","pipe","checkAndUpdatePureExpressionDynamic","createText","checkAndUpdateTextInline","_addInterpolationPart","checkAndUpdateTextDynamic","createEmbeddedView","anchorDef$$1","createView","initView","createViewNodes","createRootView","createComponentView","hostElement","compRenderer","rendererType","rendererFactory","createRenderer","componentProvider","disposables","outputCount","bindingCount","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","checkNoChangesView","markProjectedViewsForCheck","updateDirectives","execEmbeddedViewsAction","CheckNoChanges","updateRenderer","checkAndUpdateView","CheckAndUpdate","checkAndUpdateNode","argStyle","checkAndUpdateNodeInline","checkAndUpdateNodeDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","destroyView","Destroy","destroyNode","destroyViewNodes","destroy","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","nodeCount","initServicesIfNeeded","initialized","services","createDebugServices","createProdServices","overrideProvider","clearProviderOverrides","createProdRootView","DebugContext_","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugClearProviderOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","elInjector","createRootData","RendererFactory2","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","Sanitizer","ErrorHandler","anchorDef","viewDef$$1","parentInjector","applyProviderOverridesToNgModule","override","providerOverrides","clear","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","elIndex","checkIndex","detectChanges","checkNoChanges","_currentView","_currentNodeIndex","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","_currentAction","debugCheckRenderNodeFn","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","camelCaseToDashCase","CAMEL_CASE_REGEXP","getRenderNodeIndex","renderNodeIndex","findHostElement","collectReferences","references","refName","self","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","isParseSourceSpan","spanOf","inSpan","exclusive","offsetSpan","amount","isNarrower","spanA","spanB","hasTemplateReference","diDep","getSelectors","info","flatten","removeSuffix","uniqueByName","elements","elements_1","diagnosticInfoFromTemplateInfo","members","htmlAst","templateAst","findTemplateAstAt","allowWidening","visitEmbeddedTemplate","visitChildren","visitElement","inputs","visitDirective","RecursiveTemplateAstVisitor","findAstAt","excludeEmpty","NullAstVisitor","getExpressionCompletions","getType","language_services_7","tail","getPipes","receiverType","getBuiltinType","language_services_10","Any","getExpressionSymbol","compose","indexes","indexes_1","group","groups","name_1","attributeNames","defaultAttributes","eventNames","SchemaInformation","eventsOf","propertyNames","propertiesOf","getTemplateCompletions","templateInfo","templatePosition_1","path_1","mostSpecific","elementCompletions","astPosition_1","startTagSpan","tagLen","attributeCompletions","visitAttribute","valueSpan","attributeValueCompletions","visitText","entityCompletions","getSourceText","interpolationCompletions","contentType","TagContentType","PARSABLE_DATA","voidElementAttributeCompletions","visitComment","visitExpansion","visitExpansionCase","parentOf","attributeCompletionsForElement","getAttributeInfosForElement","fromHtml","nameOfAttr","htmlAttributes","htmlProperties","htmlEvents","selectorMap","applicableSelectors","selectorAndAttributeNames","attrs_1","selectorAndAttr","elementSelector","createElementCssSelector","SelectorMatcher","addSelectables","foldAttrs","expandedAttr","dinfo","ExpressionVisitor","language_services_5","widerPath_1","widerVisitor","htmlNames","hiddenHtmlElements","directiveElements","components","found","re","exec","NAMED_ENTITIES","templatePath","templateAttr","inputOutput","templates","duplicate","cloneAttr","lowerName","locateSymbol","templatePosition","symbol_1","span_1","attributeValueSymbol_1","inEvent","attribute","findAttribute","expressionOffset","visitNgContent","getTypeSymbol","OverrideKindSymbol","visitReference","visitVariable","visitEvent","handler","findOutputBinding","visitElementProperty","visitAttr","visitBoundText","expressionPosition","visitDirectiveProperty","findInputBinding","invertedInput","invertMap","fieldName","templateName","classSymbol","invertedOutputs","getDefinition","definition","getTemplateDiagnostics","astProvider","results","templates_1","getTemplateAst","DiagnosticKind","expressionDiagnostics","language_services_6","getDeclarationDiagnostics","declarations","declarations_1","declaration","report","declarationSpan","templateUrl","getHover","hoverTextOf","language","container","createLanguageService","LanguageServiceImpl","removeMissing","uniqueBySpan","findSuitableDefaultModule","resultSize","module_1","moduleSize","createLanguageServiceFromTypescript","service","ngHost","TypeScriptServiceHost","ngServer","setSite","findTsConfig","dirname","existsSync","candidate","parentDir","spanOf$1","getStart","getEnd","shrink","spanAt","position_1","getPositionOfLineAndCharacter","findChild","SyntaxKind","LastToken","forEachChild","getExternalFiles","project","projectHostMap","getTemplateReferences","angularOnlyFilter","ls","cleanupSemanticCache","getSyntacticDiagnostics","getSemanticDiagnostics","getCompilerOptionsDiagnostics","getSyntacticClassifications","getSemanticClassifications","getEncodedSyntacticClassifications","getEncodedSemanticClassifications","getCompletionsAtPosition","getCompletionEntryDetails","entryName","getCompletionEntrySymbol","getQuickInfoAtPosition","getNameOrDottedNameSpan","startPos","endPos","getBreakpointStatementAtPosition","getSignatureHelpItems","getRenameInfo","findRenameLocations","findInStrings","findInComments","getDefinitionAtPosition","getTypeDefinitionAtPosition","getImplementationAtPosition","getReferencesAtPosition","findReferences","getDocumentHighlights","filesToSearch","getOccurrencesAtPosition","getNavigateToItems","searchValue","getNavigationBarItems","getNavigationTree","getOutliningSpans","getTodoComments","descriptors","getBraceMatchingAtPosition","getIndentationAtPosition","getFormattingEditsForRange","getFormattingEditsForDocument","getFormattingEditsAfterKeystroke","getDocCommentTemplateAtPosition","isValidBraceCompletionAtPosition","openingBrace","getCodeFixesAtPosition","errorCodes","getEmitOutput","getProgram","dispose","getApplicableRefactors","positionOrRaneg","getEditsForRefactor","formatOptions","positionOrRange","refactorName","actionName","tryCall","oldLS","getSourceFile","tryFilenameCall","tryFilenameOneCall","tryFilenameTwoCall","p1","p2","tryFilenameThreeCall","p3","tryFilenameFourCall","p4","completionToEntry","sortText","kindModifiers","diagnosticToDiagnostic","messageText","category","DiagnosticCategory","tryOperation","attempting","projectService","logger","proxy","languageService","angularOnlyResults","maxResultCount","excludeDtsFiles","serviceHost","languageServiceHost","isGlobalCompletion","isMemberCompletion","isNewIdentifierLocation","entries","getCompletionsAt","results_1","ours","getHoverAt","displayParts","tags","documentation","textSpan","getDiagnostics","file_1","getDefinitionAt","ours_1","loc","containerName","containerKind","fs__default","path__default","ts__default","setPrototypeOf","__proto__","createInject","createInjectionToken","desc","_desc","createAttribute","attributeName","createContentChildren","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","createNgModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createInjectable","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","CatQuery","Types","DepFlags","Value","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","RenderElement","TemplateRef","ViewContainerRef","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION$1","TextAst","BoundTextAst","AttrAst","BoundElementPropertyAst","BoundEventAst","calcFullName","ReferenceAst","VariableAst","variables","BoundDirectivePropertyAst","directiveName","DirectiveAst","hostProperties","hostEvents","Builtin","NullTemplateVisitor","jitDevMode","assertNoMembers","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileSummaryKind","Injectable","CompileStylesheetMetadata","styles","styleUrls","CompileTemplateMetadata","externalStylesheets","animations","ngContentSelectors","interpolation","toSummary","CompileDirectiveMetadata","isHost","hostListeners","componentViewType","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","childOf","Expansion","ExpansionCase","expSourceSpan","startSourceSpan","InterpolationConfig","fromArray","markers","style","RAW_TEXT","ESCAPABLE_RAW_TEXT","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","_dedupeBindings","names","reversedResult","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","isClosedByChild","_getParentElementSkippingContainers","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","stackIndex","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","_f","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","textDef","directiveDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","_SELECTOR_REGEXP","classNames","_addResult","cssSel","inNot","hasElementSelector","getMatchingElementTemplate","classAttr","klass","notSelector","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","isNgModule","getNgModuleSummary","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","oldModule","modulesByToken","modSummary","mod","addedTokens","tokenRef","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","hasUnknownDeps","dependenciesMetadata","isSelf","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassField","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","ProviderViewContext","ProviderElementContext","viewContext","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","foundLocal","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","emitSourceMaps","referenceFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","metas","ElementSchemaRegistry","BOOLEAN$1","NUMBER$1","STRING$1","OBJECT$1","SCHEMA$1","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","isHostComponent","refOutputVars","updates","actions","getOutputVar","targetStatements","viewStmts","preprocessUpdateExpression","nameResolver","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","_preprocessUpdateExpression","_visitElementOrTemplate","queryMatchesExpr","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","createUpdateStatements","allowEmptyExprs","updateBindingCount","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","GeneratedFile","srcFileUrl","sourceOrStmts","indexBySymbol","processedSummaryBySymbol","processedSummaries","getKnownModuleName","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","ngModuleSummary","summary_1","importAs","__symbol","toSummaryFileName","baseSymbol","visitStaticSymbol","loadSummary","isLibrary","ngModuleSymbols","serializeSummaryWithDeps","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","loadingPromises","loadFilesSync","emitFlags","ngModuleIndex","typeIndex","dirId","_createTypeCheckBlock","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","arity","getTypeArity","getImportAs","importModule","fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","stylesheetMetadata","compiledStylesheet","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","staticSymbol","findSymbolDeclaration","getResourcePath","refSymbol","getSymbolByModule","declarationSymbol","recordModuleNameForFileName","recordImportAs","findDeclaration","containingFile","tryFindDeclaration","ignoreErrorsFor","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","decorators","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","lcProperty","injectionToken","opaqueToken","ROUTES","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","PopulatedScope","ResolvedStaticSymbol","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","importedFilePath","containingFilePath","sourceSymbol","targetSymbol","invalidateFile","symbols_1","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","createResolvedSymbol","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor","VERSION","commonjsGlobal","window","isModuleMetadata","isClassMetadata","isInterfaceMetadata","isMemberMetadata","isMethodMetadata","isConstructorMetadata","isFunctionMetadata","isMetadataSymbolicExpression","isMetadataSymbolicBinaryExpression","isMetadataSymbolicIndexExpression","isMetadataSymbolicCallExpression","isMetadataSymbolicPrefixExpression","isMetadataSymbolicIfExpression","isMetadataGlobalReferenceExpression","isMetadataSymbolicReferenceExpression","isMetadataModuleReferenceExpression","default","isMetadataImportedSymbolReferenceExpression","isMetadataImportDefaultReference","isMetadataSymbolicSelectExpression","isMetadataSymbolicSpreadExpression","isMetadataError","METADATA_VERSION","evaluator","isMethodCallOf","callExpression","PropertyAccessExpression","propertyAccessExpression","isCallOf","ident","everyNodeChild","getSourceFileOfNode","SourceFile","errorSymbol","getLineAndCharacterOfPosition","isPropertyAssignment","PropertyAssignment","arrayOrEmpty","spreadElementSyntaxKind","SpreadElement","SpreadElementExpression","Evaluator","nodeMap","recordExport","nameOf","evaluateNode","received","getText","isFoldable","isFoldableWorker","folding","ObjectLiteralExpression","propertyAssignment","initializer","ArrayLiteralExpression","CallExpression","arrayNode","arrayValue","NoSubstitutionTemplateLiteral","StringLiteral","NumericLiteral","NullKeyword","TrueKeyword","FalseKeyword","TemplateHead","TemplateMiddle","TemplateTail","ParenthesizedExpression","parenthesizedExpression","BinaryExpression","binaryExpression","operatorToken","PlusToken","MinusToken","AsteriskToken","SlashToken","PercentToken","AmpersandAmpersandToken","BarBarToken","ElementAccessExpression","elementAccessExpression","argumentExpression","TemplateExpression","templateSpans","preferReference","recordEntry","substituteExpression","newEntry","isFoldableError","verboseInvalidExpression","resolveName","obj_1","quoted_1","ShorthandPropertyAssignment","assignment","propertyValue","quotedNames","arr_1","spreadValue","firstArgument","ArrowFunction","arrowFunction","NewExpression","newExpression","newArgs","newTarget","expression_1","expression_2","TypeReference","typeReferenceNode","typeNameNode_1","typeReference","QualifiedName","qualifiedName","left_1","identifier_1","typeArguments","args_1","UnionType","unionType","UndefinedKeyword","AnyKeyword","StringKeyword","NumberKeyword","BooleanKeyword","arrayTypeNode","elementType","TypeAssertionExpression","typeAssertion","PrefixUnaryExpression","prefixUnaryExpression","TildeToken","ExclamationToken","operatorText","AmpersandToken","BarToken","CaretToken","EqualsEqualsToken","ExclamationEqualsToken","EqualsEqualsEqualsToken","ExclamationEqualsEqualsToken","LessThanToken","GreaterThanToken","LessThanEqualsToken","GreaterThanEqualsToken","LessThanLessThanToken","GreaterThanGreaterThanToken","GreaterThanGreaterThanGreaterThanToken","ConditionalExpression","conditionalExpression","thenExpression","whenTrue","elseExpression","whenFalse","FunctionExpression","TaggedTemplateExpression","templateExpression","previous","head","AsExpression","asExpression","ClassExpression","createNodeArray","populateBuiltins","Symbols","defineReference","_symbols","buildImports","stripQuotes","ImportEqualsDeclaration","importEqualsDeclaration","moduleReference","ExternalModuleReference","externalReference","from_1","ImportDeclaration","importDecl","importClause","moduleSpecifier","namedBindings","NamedImports","NamespaceImport","validateMetadata","validateExpression","locals","validateFunction","indexExpression","prefixExpression","selectExpression","spreadExpression","ifExpression","validateMember","classData","parameterDecorators","validateClass","staticMember","functionDeclaration","oldLocals","shouldReportNode","nodeStart","lineInfo","namesOf","addNamesOf","bindingPattern","name_11","parameters_2","isStatic","getCombinedModifierFlags","ModifierFlags","Static","MetadataCollector","getMetadata","objFromDecorator","decoratorNode","evaluator$$1","errorSym","maybeGetSimpleFunction","nameNode","functionName","functionBody","statement","returnStatement","func","classMetadataOf","classDeclaration","getDecorators","decorator","referenceFrom","recordMember","recordStaticMember","heritageClauses","hc","ExtendsKeyword","extends","typeParameters","isConstructor","Constructor","MethodDeclaration","maybeFunc","methodDecorators","parameterDecoratorData","parametersData","hasDecoratorData","hasParameterData","parameterData","PropertyDeclaration","GetAccessor","SetAccessor","propertyDecorators","composedSubstituter","evaluatorOptions","exportMap","ExportDeclaration","exportDeclaration","exportClause","exportedAs","isExport","isDeclarationFile","Export","isExportedIdentifier","isExported","exportedIdentifierName","exportedName","ClassDeclaration","InterfaceDeclaration","interfaceDeclaration","interfaceName","FunctionDeclaration","propNode","name_4","TypeAliasDeclaration","typeDeclaration","name_5","name_6","name_7","EnumDeclaration","enumDeclaration","enumValueHolder","enumName","nextDefaultValue","writtenMembers","enumValue","name_8","VariableStatement","variableStatement","declarationList","variableDeclaration","exported","name_9","report_1","name_10","BindingElement","ObjectBindingPattern","ArrayBindingPattern","bundler","importName","normalPath","normalize","getRootExport","reexportedAs","getSymbolDeclaration","PRIVATE_NAME_CHARS","MetadataBundler","symbolMap","rootModule","basename","getMetadataBundle","exportedSymbols","exportAll","canonicalizeSymbols","getEntries","privates","referenced","isPrivate","privateName","origins","getReExports","fullModuleName","exportedSymbol","symbolOf","exportFrom","exportItem","exportedSymbols_1","exportedSymbols_2","canonicalizeSymbol","rootExport","canonicalSymbol","newPrivateName","digits","exportedNames","convertSymbol","symbolsMap","declaredName","reference_1","exportAlls","exportedSymbols_3","module_2","module_3","convertEntry","convertClass","convertFunction","convertValue","convertExpression","convertMembers","convertStatics","convertMember","convertError","object","convertReference","convertExpressionNode","createReference","canonicalSymbolOf","referencedModule","referencedName","symbolKey","CompilerHostAdapter","ScriptTarget","Latest","index_writer","privateEntriesToIndex","INDEX_HEADER","privates_1","compareEntries","compare","compareModules","orderedExports","orderedExports_1","select","ak","bk","bundle_index_host","createSyntheticIndexHost","syntheticIndex","normalSyntheticIndexName","indexContent","indexMetadata","newHost","fileExists","readFile","languageVersion","createSourceFile","writeFile","writeByteOrderMark","sourceFiles","DTS","metadataName","writeFileSync","createBundleIndexHost","ngOptions","indexModule","bundler$$1","flatModuleId","metadataBundle","flatModuleOutFile","JS_EXT","libraryIndex","indexName","__export","compiler_1","compiler_host","EXT","IS_GENERATED","GENERATED_FILES","GENERATED_OR_DTS_FILES","SHALLOW_IMPORT","BaseAotCompilerHost","resolverCache","flatModuleIndexCache","flatModuleIndexNames","flatModuleIndexRedirectNames","metadatas","readMetadata","upgradeMetadataWithDtsData","getMetadataForSourceFile","dtsFilePath","metadataPath","metadataOrMetadatas","metadatas_1","maxMetadata","oldMetadata","newMetadata","dtsMetadata","readResource","generateCodeForLibraries","hasBundleIndex","normalFilePath","checkBundleIndex","directory","packageFile","packageContent","typings","metadataFile","flatModuleIndexRedirect","CompilerHost","program","collectorOptions","moduleFileNames","metadataProvider","genDir","genPath","relative","isGenDirChildOfRootDir","resolveModuleNameHost","sf","calculateEmitPath","rootDirs","eachRootDir","relativePath","getCanonicalFileName","resolveModuleName","resolvedFileName","importedFile","assumeFileExists","rewriteGenDirPath","containingDir","nodeModulesIndex","dotRelative","filepath","to","rPath","CompilerHostContextAdapter","assumedExists","ModuleResolutionHostAdapter","directoryExists","directoryName","NodeCompilerHostContext","statSync","isDirectory","readFileSync","symbols$2","expression_type","TypeDiagnostic","AstType","diagnostics","callable","reportWarning","Undefined","Null","Other","nullable","getNonNullableType","leftType","rightType","leftRawKind","getTypeKind","rightRawKind","leftKind","rightKind","operKind","errorAst","Boolean","anyType","getTypeUnion","selectSignature","public","signatures","indexed","argument","undefinedType","targetType","keyType","getArrayType","resolveMethodCall","expType","resolvePropertyRead","_anyType","_undefinedType","isAny","receiverInfo","expression_diagnostics","getTemplateExpressionDiagnostics","ExpressionDiagnosticsVisitor","includeEvent","getExpressionScope","getExpressionDiagnostics","analyzer","getReferences","processReferences","references_1","getDefinitionOf","templateOffset","getVarDeclarations","getTemplateContext","Unbound","refinedVariableType","templateElement","ngForDirective","ngForOfBinding","getElementType","getEventDeclaration","referenceTable","createSymbolTable","variableTable","eventsTable","mergeSymbolTable","diagnoseExpression","attributeValueLocation","directiveSummary","previousDirectiveSummary","typescript_symbols","getSymbolQuery","checker","fetchPipes","TypeScriptSymbolQuery","getClassMembers","getClassFromStaticSymbol","getTypeAtLocation","TypeWrapper","getClassMembersFromDeclaration","getPipesTable","PipesTable","typeCallable","getCallSignatures","signaturesOf","SignatureWrapper","toSymbols","symbolTable","table","own","findClassSymbolInContext","moduleSymbol","getExportsOfModule","isSymbolPrivate","valueDeclaration","getBuiltinTypeFromTs","setParents","numeric","VoidExpression","definitionFromTsSymbol","parentDeclarationOf","getContainerOf","getFlags","SymbolFlags","ClassMember","getTypeParameterOf","typeKindOf","TypeFlags","StringLike","NumberLike","Union","TypeParameter","getFromSymbolTable","toNumbers","compareNumbers","isReferenceType","ObjectFlags","objectFlags","Reference","typeCache","getTsTypeOf","tsType","nonNullableType","pipesCache","contextType","getTemplateRefContextType","SymbolWrapper","MapSymbolTable","addAll","DeclaredSymbol","symbolTables","symbolTables_1","getSpanAt","getTypeOfSymbolAtLocation","constructorDeclaration","type_1","getTypeWrapper","getSymbol","SymbolTableWrapper","getProperties","Alias","getAliasedSymbol","_members","Interface","getDeclaredTypeOfSymbol","typeWrapper","_tsType","getParameters","getReturnType","SignatureResultOverride","resultType","toSymbolTable","tsNumbers","symbols_2","symbols_3","_values","symbols_4","PipeSymbol","EmptyTable","parameterType","findClassSymbol","findTransformMethodType","classType","getProperty","language_services","language_services_1","language_services_2","language_services_13","language_services_14","language_services_15","__window$1","__self$1","WorkerGlobalScope","__global$1","_root","root_1","isFunction_2","isFunction_1","isArray_1","isObject_2","errorObject_1","tryCatch_2","tryCatch_1","__extends$2","UnsubscriptionError_2","Subscription","_parents","_subscriptions","_unsubscribe","hasErrors","trial","teardown","_addParent","tmp","subscriptions","subscriptionIndex","Subscription_2","Subscription_1","Symbol","$$rxSubscriber","__extends$1","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","Subscriber_2","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","toSubscriber_2","toSubscriber_1","getSymbolObservable","$$observable","_subscribe","observable$$1","sink","_trySubscribe","PromiseCtor","Rx","reject","Observable_2","__extends$4","ScalarObservable","dispatch","ScalarObservable_2","ScalarObservable_1","__extends$5","EmptyObservable","EmptyObservable_2","EmptyObservable_1","isScheduler_2","__extends$3","ArrayObservable_2","__extends$7","OuterSubscriber","notifyNext","innerValue","innerIndex","innerSub","notifyError","notifyComplete","OuterSubscriber_2","OuterSubscriber_1","isArrayLike_1","isPromise_2","symbolIteratorPonyfill","root$$2","Set_1","Map_1","$$iterator","__extends$8","InnerSubscriber_2","subscribeToResult_2","subscribeToResult_1","__extends$6","mergeAll_2","observer","MergeAllSubscriber","MergeAllOperator_1","hasCompleted","active","shift","MergeAllSubscriber_1","merge_2$1","mergeStatic_1","merge_1","merge_2","__extends$11","ObjectUnsubscribedError","ObjectUnsubscribedError_2","ObjectUnsubscribedError_1","__extends$12","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscription_2","SubjectSubscription_1","__extends$10","SubjectSubscriber","SubjectSubscriber_1","hasError","thrownError","AnonymousSubject","asObservable","Subject_2","AnonymousSubject_1","__extends$9","ConnectableObservable","_refCount","_isComplete","getSubject","_subject","connect","connection","_connection","ConnectableSubscriber","RefCountOperator","ConnectableObservable_2","connectableProto","refCounter","RefCountSubscriber","sharedConnection","multicast_2","MulticastOperator_1","share_2","ChangeDetectionStrategy$1","Directive$1","NgModule$1","Version$1","VERSION$2","__window","__self","__global","_THROW_IF_NOT_FOUND","_NullInjector","StaticInjector","NULL","GET_PROPERTY_NAME","ɵ2","objWithPropertyToExtract","_records","tokenPath","_findOriginalError","_findContext","errorLogger","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","_ownAnnotations","ownAnnotations","_ownPropMetadata","propDecorators","propDecorators_1","propMetadata_1","ownPropMetadata","setter","importUri","resourceUri","resolveIdentifier","resolveEnum","enumIdentifier","Reflector","reflectionCapabilities","updateCapabilities","caps","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_constructionCounter","keyIds","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","APP_INITIALIZER","ApplicationInitStatus","appInits","donePromise","rej","runInitializers","asyncInitPromises","initResult","APP_ID","APP_ID_RANDOM_PROVIDER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","Console","log","Compiler","CompilerFactory","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryBoundToModule","wtfEnabled","wtf","wtfCreateScope","wtfLeave","EventEmitter","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","assertZonePatched","_outer","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZoneInjector","exceptionHandler","onDestroy","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","createCompiler","appRef","ApplicationRef","_bootstrapComponents","ngDoBootstrap","listener","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","stableSub","unstableSub","componentOrFactory","compRef","_unloadComponent","nativeElement","_loadComponent","_tickScope","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","Renderer2","_results","toArray","ViewRef","EventListener","EmbeddedViewRef","DebugNode","_debugContext","addChild","listeners","providerTokens","classes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","queryAllNodes","triggerEventHandler","eventObj","wrap","previousValue","currentValue","firstChange","isFirstChange","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","forEachOperation","nextIt","nextRemove","adjPreviousIndex","currentIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","factories","copied","extend","iterable","KeyValueDiffers","kv","keyValDiff","iterableDiff","_CORE_PLATFORM_PROVIDERS","parentPlatformFactory","ApplicationModule","WeakMap","EMPTY_CONTEXT","ComponentRef_","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","componentNodeIndex","_view","_viewRef","_component","_elDef","changeDetectorRef","_data","attachToViewContainerRef","templateRef","insert","ngModuleRef","contextInjector","viewRef_","viewData","move","detach","_viewContainerRef","_appRef","markForCheck","fs$$1","begin","reattach","vcRef","_parentView","namespaceAndName","createViewRoot","createTemplateAnchor","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","_moduleType","elView","elOrCompView","childDef","logViewDef","logNodeIndex","currRenderNodeIndex","nodeLogger","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","NgModuleFactory_","_ngModuleDefFactory","onclick","ondblclick","onmousedown","onmouseup","onmouseover","onmousemove","onmouseout","onkeypress","onkeydown","onkeyup","onload","onunload","href","alt","media","nohref","usemap","onfocus","onblur","charset","declare","classid","codebase","codetype","archive","standby","cite","datetime","accept","shape","coords","enctype","onsubmit","onreset","accept-charset","valuetype","longdesc","width","disabled","onselect","accesskey","multiple","onchange","label","selected","checked","maxlength","rows","cols","height","border","frame","rules","cellspacing","cellpadding","datapagesize","align","charoff","valign","abbr","axis","headers","rowspan","colspan","profile","http-equiv","scheme","hreflang","rel","rev","ismap","defer","BIG","STRONG","DFN","CODE","SAMP","KBD","VAR","CITE","ABBR","ACRONYM","SPAN","BDO","BODY","ADDRESS","DIV","MAP","AREA","IMG","OBJECT","PARAM","PRE","BLOCKQUOTE","INS","DEL","DL","DT","DD","FORM","LABEL","INPUT","SELECT","OPTGROUP","OPTION","TEXTAREA","FIELDSET","LEGEND","BUTTON","TABLE","CAPTION","COLGROUP","COL","HEAD","TITLE","BASE","META","NOSCRIPT","SCHEMA","EVENT","BOOLEAN","NUMBER","STRING","typeParts","allKnownElements","typeOf","_instance","noscript","getExpressionScope$$1","key_1","selectorInfo","selector_1","templateBindingResult","valueRelativePosition_1","keyCompletions","equalLocation","directiveMetadata","contextTable","symbolsToCompletions","completions","attributeValuePosition","sym","kindOverride","getTemplates","getDeclarations","getAnalyzedModules","getPipesAt","getTemplateAstAtPosition","getTemplateAt","contextFile","resolvedMetadata","rawHtmlParser","parser","htmlResult","resolvedDirectives","ReflectorModuleModuleResolutionHost","getScriptSnapshot","snapshot","getLength","ReflectorHost","DummyHtmlParser","DummyResourceLoader","tsService","_typeCache","modulesOutOfDate","fileVersions","validate","_resolver","moduleResolver","directiveResolver","pipeResolver","resourceLoader","directiveNormalizer","collectError","ensureTemplateMap","templateReferences","getSourceFromNode","getScriptVersion","fileToComponent","getSourceFromType","ensureAnalyzedModules","analyzeHost","programFiles","getSourceFiles","version_1","visit_1","templateSource","visit_2","getDeclarationFromNode","updateAnalyzedModules","_checker","getTypeChecker","_staticSymbolResolver","lastProgram","clearCaches","seen_1","version$$1","collectedErrors","templateReference","getSourceFromDeclaration","queryCache","pipes_1","getTemplateClassDeclFromNode","stringOf","getTemplateClassFromStaticSymbol","_reflectorHost","getScriptFileNames","tsConfigPath","getCompilationSettings","errorMap","sourceFilePath","reflectorHost","ssr","currentToken","missingTemplate","callTarget","Decorator","getCollectedErrors","defaultSpan","process","argv"],"mappings":"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A,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC;iwUACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZnuF,yBAA4B,SAAUj7B,QAEtC,QAASi7B,4BACL,GAAIxD,OAAQz3B,OAAOilC,KAAKzvC,OAASA,IAqCjC,OApCAiiC,OAAM4xF,WACNR,SAASzsH,QAAQ,SAAUktH,aACvB,GAAqB1tH,SACjB+S,GAAK26G,YAAYvqH,MAAM,KAAMwqH,QAAU56G,GAAG,GAAI66G,cAAgB76G,GAAG,GAChDyiC,WAAao4E,cAAczqH,MAAM,KAClD+P,GAAKy6G,QAAQxqH,MAAM,KAAM0qH,UAAY36G,GAAG,GAAI46G,UAAY56G,GAAG,EAC/D26G,WAAU1qH,MAAM,KAAK3C,QAAQ,SAAU+Y,KAAO,MAAOsiB,OAAM4xF,QAAQl0G,IA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CzBG,IAAK,EAAG,EAAG,EAAG,GAAI,GAAI,IACtBF,IAAK,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAC1BF,IAAK,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAC1B8tF,MAAO,EAAG,IACVC,OAAQ,GACRC,MAAO,GACPC,MAAO,EAAG,IACVtmL,OAAQ,EAAG,EAAG,EAAG,IACjBE,QAAS,EAAG,GAAI,GAAI,IACpBqmL,UAAW,EAAG,EAAG,EAAG,GAAI,IACxB5jH,MAAO,IAEP3S,mBAAqB,EAAG,EAAG,EAAG,GA0B9Bw2H,QACA,iYAGA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA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","file":"/home/travis/build/angular/angular/dist/packages-dist/language-service/bundles/language-service.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0-rc.1-931cf78\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nvar $reflect = {defineMetadata: function() {}, getOwnMetadata: function(){}};\n((typeof global !== 'undefined' && global)||{})['Reflect'] = $reflect;\nvar $deferred, $resolved, $provided;\nfunction $getModule(name) { return $provided[name] || require(name); }\nfunction define(modules, cb) { $deferred = { modules: modules, cb: cb }; }\nmodule.exports = function(provided) {\n  if ($resolved) return $resolved;\n  var result = {};\n  $provided = Object.assign({'reflect-metadata': $reflect}, provided || {}, { exports: result });\n  $deferred.cb.apply(this, $deferred.modules.map($getModule));\n  $resolved = result;\n  return result;\n}\n\ndefine(['exports', 'fs', 'path', 'typescript'], function (exports, fs, path, ts) { 'use strict';\n\nvar fs__default = 'default' in fs ? fs['default'] : fs;\nvar path__default = 'default' in path ? path['default'] : path;\nvar ts__default = 'default' in ts ? ts['default'] : ts;\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.0.0-rc.1-931cf78\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createInjectable = makeMetadataFactory('Injectable');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateInjectable: createInjectable,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION$1 = new Version('5.0.0-rc.1-931cf78');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CompilerConfig = (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten$1(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten$1(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten$1(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    function AstPath(path$$1, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path$$1;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf$1$1(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf$1$1(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path$$1 = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf$1$1(ast);\n            if (span.start <= position && position < span.end) {\n                path$$1.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path$$1, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar StyleWithImports = (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ParserError = (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar Message = (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return /** @type {?} */ ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path$$1, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path$$1.endsWith('.d.ts')) {\n        return [path$$1.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path$$1.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path$$1.substring(0, lastDot), path$$1.substring(lastDot)];\n    }\n    return [path$$1, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CORE = '@angular/core';\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN$1 = 'boolean';\nvar NUMBER$1 = 'number';\nvar STRING$1 = 'string';\nvar OBJECT$1 = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA$1 = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA$1.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN$1;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER$1;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT$1;\n                            break;\n                        default:\n                            type[property] = STRING$1;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX$1 = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX$1)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX$1.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector$1(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector$1(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return /** @type {?} */ ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector$1(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector$1(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (component, template, usedPipes, externalReferenceVars) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        return visitor.build();\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar ViewBuilder = (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        var /** @type {?} */ viewName = \"_View_\" + this.component.name + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE :\n            /** @type {?} */ ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                    if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                        importAs = symbol.name + \"_\" + index;\n                        exportAs.push({ symbol: symbol, exportAs: importAs });\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    function ForJitSerializer(outputCtx, symbolResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    function (exportAs) {\n        var _this = this;\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata, isLibrary = _a.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                modSummary.modules.forEach(function (mod) { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(_this.outputCtx, summary.type.reference, _this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        });\n        exportAs.forEach(function (entry) {\n            var /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                var /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(symbol)).toDeclStmt(null, [\n                    StmtModifier.Exported\n                ]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { moduleName: data.moduleName, summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(file.fileName, true)[1];\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw new Error(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        return Promise.all(loadingPromises).then(function (_) { return mergeAndValidateNgFiles(files); });\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        return mergeAndValidateNgFiles(files);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.declaredDirectives.map(function (d) { return d.reference; }).concat(ngModuleMeta.declaredPipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                if (_this._host.isSourceFile(ref.filePath)) {\n                    externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n                }\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    _this._createTypeCheckBlock(outputCtx, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(compMeta, parsedTemplate, usedPipes, externalReferenceVars));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten$1(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._symbolResolver.fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._symbolResolver.fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    injectables.push(symbol);\n                }\n                else {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) {\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n        this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path$$1) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path$$1);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1, references);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyInContext(context, item.expression, depth, 0);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyInContext(context, expression['expression'], depth, 0);\n                                var /** @type {?} */ index = simplifyInContext(context, expression['index'], depth, 0);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1, references);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1, references);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name_1 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_1);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions\n                                            .map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyInContext(context, value, depth, references + 1);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value) {\n            try {\n                return simplifyInContext(context, value, 0, 0);\n            }\n            catch (/** @type {?} */ e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n            simplifyInContext(context, value, 0, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = new Error(message);\n    (/** @type {?} */ (result)).fileName = fileName;\n    (/** @type {?} */ (result)).line = line;\n    (/** @type {?} */ (result)).column = column;\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ResolvedStaticSymbol = (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.fileNameToModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this.summaryResolver.getKnownModuleName(importedFilePath) ||\n            this.knownFileNameToModuleNames.get(importedFilePath) ||\n            this.host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name_1);\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path$$1) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path$$1);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? \" relative to $ {\\n            containingFile\\n          } \" : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) {\n                _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n            });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @param {?} fn\n * @param {?=} out\n * @param {?=} seen\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out, seen) {\n    if (out === void 0) { out = []; }\n    if (seen === void 0) { seen = new Set(); }\n    if (seen.has(fn$$1)) {\n        return out;\n    }\n    seen.add(fn$$1);\n    var /** @type {?} */ summaries = fn$$1();\n    for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n        var /** @type {?} */ entry = summaries[i];\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out, seen);\n        }\n        else {\n            out.push(entry);\n        }\n    }\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path$$1 = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path$$1 = path$$1.replace(/^\\/+/, '');\n            return prefix + \"/\" + path$$1;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path$$1) {\n    if (path$$1 == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path$$1[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path$$1[path$$1.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path$$1.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path$$1 = parts[_ComponentIndex.Path];\n    path$$1 = path$$1 == null ? '' : _removeDotSegments(path$$1);\n    parts[_ComponentIndex.Path] = path$$1;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path$$1, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path$$1 = baseParts[_ComponentIndex.Path];\n    if (path$$1 == null)\n        path$$1 = '/';\n    var /** @type {?} */ index = path$$1.lastIndexOf('/');\n    path$$1 = path$$1.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path$$1;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\n\n\n\n\nvar compiler = Object.freeze({\n\tcore: core,\n\tCompilerConfig: CompilerConfig,\n\tpreserveWhitespacesDefault: preserveWhitespacesDefault,\n\tIdentifiers: Identifiers,\n\tJitCompiler: JitCompiler,\n\tDirectiveResolver: DirectiveResolver,\n\tPipeResolver: PipeResolver,\n\tNgModuleResolver: NgModuleResolver,\n\tDEFAULT_INTERPOLATION_CONFIG: DEFAULT_INTERPOLATION_CONFIG,\n\tInterpolationConfig: InterpolationConfig,\n\tNgModuleCompiler: NgModuleCompiler,\n\tAssertNotNull: AssertNotNull,\n\tBinaryOperator: BinaryOperator,\n\tBinaryOperatorExpr: BinaryOperatorExpr,\n\tBuiltinMethod: BuiltinMethod,\n\tBuiltinVar: BuiltinVar,\n\tCastExpr: CastExpr,\n\tClassStmt: ClassStmt,\n\tCommaExpr: CommaExpr,\n\tCommentStmt: CommentStmt,\n\tConditionalExpr: ConditionalExpr,\n\tDeclareFunctionStmt: DeclareFunctionStmt,\n\tDeclareVarStmt: DeclareVarStmt,\n\tExpressionStatement: ExpressionStatement,\n\tExternalExpr: ExternalExpr,\n\tExternalReference: ExternalReference,\n\tFunctionExpr: FunctionExpr,\n\tIfStmt: IfStmt,\n\tInstantiateExpr: InstantiateExpr,\n\tInvokeFunctionExpr: InvokeFunctionExpr,\n\tInvokeMethodExpr: InvokeMethodExpr,\n\tLiteralArrayExpr: LiteralArrayExpr,\n\tLiteralExpr: LiteralExpr,\n\tLiteralMapExpr: LiteralMapExpr,\n\tNotExpr: NotExpr,\n\tReadKeyExpr: ReadKeyExpr,\n\tReadPropExpr: ReadPropExpr,\n\tReadVarExpr: ReadVarExpr,\n\tReturnStatement: ReturnStatement,\n\tThrowStmt: ThrowStmt,\n\tTryCatchStmt: TryCatchStmt,\n\tWriteKeyExpr: WriteKeyExpr,\n\tWritePropExpr: WritePropExpr,\n\tWriteVarExpr: WriteVarExpr,\n\tStmtModifier: StmtModifier,\n\tStatement: Statement,\n\tcollectExternalReferences: collectExternalReferences,\n\tEmitterVisitorContext: EmitterVisitorContext,\n\tViewCompiler: ViewCompiler,\n\tgetParseErrors: getParseErrors,\n\tisSyntaxError: isSyntaxError,\n\tsyntaxError: syntaxError,\n\tVersion: Version,\n\tVERSION: VERSION$1,\n\tTextAst: TextAst,\n\tBoundTextAst: BoundTextAst,\n\tAttrAst: AttrAst,\n\tBoundElementPropertyAst: BoundElementPropertyAst,\n\tBoundEventAst: BoundEventAst,\n\tReferenceAst: ReferenceAst,\n\tVariableAst: VariableAst,\n\tElementAst: ElementAst,\n\tEmbeddedTemplateAst: EmbeddedTemplateAst,\n\tBoundDirectivePropertyAst: BoundDirectivePropertyAst,\n\tDirectiveAst: DirectiveAst,\n\tProviderAst: ProviderAst,\n\tProviderAstType: ProviderAstType,\n\tNgContentAst: NgContentAst,\n\tPropertyBindingType: PropertyBindingType,\n\tNullTemplateVisitor: NullTemplateVisitor,\n\tRecursiveTemplateAstVisitor: RecursiveTemplateAstVisitor,\n\ttemplateVisitAll: templateVisitAll,\n\tidentifierName: identifierName,\n\tidentifierModuleUrl: identifierModuleUrl,\n\tviewClassName: viewClassName,\n\trendererTypeName: rendererTypeName,\n\thostViewClassName: hostViewClassName,\n\tcomponentFactoryName: componentFactoryName,\n\tCompileSummaryKind: CompileSummaryKind,\n\ttokenName: tokenName,\n\ttokenReference: tokenReference,\n\tCompileStylesheetMetadata: CompileStylesheetMetadata,\n\tCompileTemplateMetadata: CompileTemplateMetadata,\n\tCompileDirectiveMetadata: CompileDirectiveMetadata,\n\tCompilePipeMetadata: CompilePipeMetadata,\n\tCompileNgModuleMetadata: CompileNgModuleMetadata,\n\tTransitiveCompileNgModuleMetadata: TransitiveCompileNgModuleMetadata,\n\tProviderMeta: ProviderMeta,\n\tflatten: flatten$1,\n\ttemplateSourceUrl: templateSourceUrl,\n\tsharedStylesheetJitUrl: sharedStylesheetJitUrl,\n\tngModuleJitUrl: ngModuleJitUrl,\n\ttemplateJitUrl: templateJitUrl,\n\tcreateAotUrlResolver: createAotUrlResolver,\n\tcreateAotCompiler: createAotCompiler,\n\tAotCompiler: AotCompiler,\n\tanalyzeNgModules: analyzeNgModules,\n\tanalyzeAndValidateNgModules: analyzeAndValidateNgModules,\n\tanalyzeFile: analyzeFile,\n\tmergeAnalyzedFiles: mergeAnalyzedFiles,\n\tGeneratedFile: GeneratedFile,\n\ttoTypeScript: toTypeScript,\n\tStaticReflector: StaticReflector,\n\tStaticSymbol: StaticSymbol,\n\tStaticSymbolCache: StaticSymbolCache,\n\tResolvedStaticSymbol: ResolvedStaticSymbol,\n\tStaticSymbolResolver: StaticSymbolResolver,\n\tunescapeIdentifier: unescapeIdentifier,\n\tAotSummaryResolver: AotSummaryResolver,\n\tAstPath: AstPath,\n\tSummaryResolver: SummaryResolver,\n\tJitSummaryResolver: JitSummaryResolver,\n\tCompileReflector: CompileReflector,\n\tcreateUrlResolverWithoutPackagePrefix: createUrlResolverWithoutPackagePrefix,\n\tcreateOfflineCompileUrlResolver: createOfflineCompileUrlResolver,\n\tUrlResolver: UrlResolver,\n\tgetUrlScheme: getUrlScheme,\n\tResourceLoader: ResourceLoader,\n\tElementSchemaRegistry: ElementSchemaRegistry,\n\tExtractor: Extractor,\n\tI18NHtmlParser: I18NHtmlParser,\n\tMessageBundle: MessageBundle,\n\tSerializer: Serializer,\n\tXliff: Xliff,\n\tXliff2: Xliff2,\n\tXmb: Xmb,\n\tXtb: Xtb,\n\tDirectiveNormalizer: DirectiveNormalizer,\n\tParserError: ParserError,\n\tParseSpan: ParseSpan,\n\tAST: AST,\n\tQuote: Quote,\n\tEmptyExpr: EmptyExpr,\n\tImplicitReceiver: ImplicitReceiver,\n\tChain: Chain,\n\tConditional: Conditional,\n\tPropertyRead: PropertyRead,\n\tPropertyWrite: PropertyWrite,\n\tSafePropertyRead: SafePropertyRead,\n\tKeyedRead: KeyedRead,\n\tKeyedWrite: KeyedWrite,\n\tBindingPipe: BindingPipe,\n\tLiteralPrimitive: LiteralPrimitive,\n\tLiteralArray: LiteralArray,\n\tLiteralMap: LiteralMap,\n\tInterpolation: Interpolation,\n\tBinary: Binary,\n\tPrefixNot: PrefixNot,\n\tNonNullAssert: NonNullAssert,\n\tMethodCall: MethodCall,\n\tSafeMethodCall: SafeMethodCall,\n\tFunctionCall: FunctionCall,\n\tASTWithSource: ASTWithSource,\n\tTemplateBinding: TemplateBinding,\n\tNullAstVisitor: NullAstVisitor,\n\tRecursiveAstVisitor: RecursiveAstVisitor,\n\tAstTransformer: AstTransformer,\n\tvisitAstChildren: visitAstChildren,\n\tTokenType: TokenType,\n\tLexer: Lexer,\n\tToken: Token,\n\tEOF: EOF,\n\tisIdentifier: isIdentifier,\n\tisQuote: isQuote,\n\tSplitInterpolation: SplitInterpolation,\n\tTemplateBindingParseResult: TemplateBindingParseResult,\n\tParser: Parser,\n\t_ParseAST: _ParseAST,\n\tERROR_COMPONENT_TYPE: ERROR_COMPONENT_TYPE,\n\tCompileMetadataResolver: CompileMetadataResolver,\n\tText: Text,\n\tExpansion: Expansion,\n\tExpansionCase: ExpansionCase,\n\tAttribute: Attribute$1,\n\tElement: Element,\n\tComment: Comment,\n\tvisitAll: visitAll,\n\tRecursiveVisitor: RecursiveVisitor,\n\tfindNode: findNode,\n\tParseTreeResult: ParseTreeResult,\n\tTreeError: TreeError,\n\tHtmlParser: HtmlParser,\n\tHtmlTagDefinition: HtmlTagDefinition,\n\tgetHtmlTagDefinition: getHtmlTagDefinition,\n\tTagContentType: TagContentType,\n\tsplitNsName: splitNsName,\n\tisNgContainer: isNgContainer,\n\tisNgContent: isNgContent,\n\tisNgTemplate: isNgTemplate,\n\tgetNsPrefix: getNsPrefix,\n\tmergeNsAndName: mergeNsAndName,\n\tNAMED_ENTITIES: NAMED_ENTITIES,\n\tNGSP_UNICODE: NGSP_UNICODE,\n\tdebugOutputAstAsTypeScript: debugOutputAstAsTypeScript,\n\tTypeScriptEmitter: TypeScriptEmitter,\n\tParseLocation: ParseLocation,\n\tParseSourceFile: ParseSourceFile,\n\tParseSourceSpan: ParseSourceSpan,\n\tParseErrorLevel: ParseErrorLevel,\n\tParseError: ParseError,\n\ttypeSourceSpan: typeSourceSpan,\n\tDomElementSchemaRegistry: DomElementSchemaRegistry,\n\tCssSelector: CssSelector,\n\tSelectorMatcher: SelectorMatcher,\n\tSelectorListContext: SelectorListContext,\n\tSelectorContext: SelectorContext,\n\tStylesCompileDependency: StylesCompileDependency,\n\tCompiledStylesheet: CompiledStylesheet,\n\tStyleCompiler: StyleCompiler,\n\tTemplateParseError: TemplateParseError,\n\tTemplateParseResult: TemplateParseResult,\n\tTemplateParser: TemplateParser,\n\tsplitClasses: splitClasses,\n\tcreateElementCssSelector: createElementCssSelector$1,\n\tremoveSummaryDuplicates: removeSummaryDuplicates\n});\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar schema = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Metadata Schema\n// If you make a backwards incompatible change to the schema, increment the METADTA_VERSION number.\n// If you make a backwards compatible change to the metadata (such as adding an option field) then\n// leave METADATA_VERSION the same. If possible, supply as many versions of the metadata that can\n// represent the semantics of the file in an array. For example, when generating a version 2 file,\n// if version 1 can accurately represent the metadata, generate both version 1 and version 2 in\n// an array.\nexports.METADATA_VERSION = 4;\nfunction isModuleMetadata(value) {\n    return value && value.__symbolic === 'module';\n}\nexports.isModuleMetadata = isModuleMetadata;\nfunction isClassMetadata(value) {\n    return value && value.__symbolic === 'class';\n}\nexports.isClassMetadata = isClassMetadata;\nfunction isInterfaceMetadata(value) {\n    return value && value.__symbolic === 'interface';\n}\nexports.isInterfaceMetadata = isInterfaceMetadata;\nfunction isMemberMetadata(value) {\n    if (value) {\n        switch (value.__symbolic) {\n            case 'constructor':\n            case 'method':\n            case 'property':\n                return true;\n        }\n    }\n    return false;\n}\nexports.isMemberMetadata = isMemberMetadata;\nfunction isMethodMetadata(value) {\n    return value && (value.__symbolic === 'constructor' || value.__symbolic === 'method');\n}\nexports.isMethodMetadata = isMethodMetadata;\nfunction isConstructorMetadata(value) {\n    return value && value.__symbolic === 'constructor';\n}\nexports.isConstructorMetadata = isConstructorMetadata;\nfunction isFunctionMetadata(value) {\n    return value && value.__symbolic === 'function';\n}\nexports.isFunctionMetadata = isFunctionMetadata;\nfunction isMetadataSymbolicExpression(value) {\n    if (value) {\n        switch (value.__symbolic) {\n            case 'binary':\n            case 'call':\n            case 'index':\n            case 'new':\n            case 'pre':\n            case 'reference':\n            case 'select':\n            case 'spread':\n            case 'if':\n                return true;\n        }\n    }\n    return false;\n}\nexports.isMetadataSymbolicExpression = isMetadataSymbolicExpression;\nfunction isMetadataSymbolicBinaryExpression(value) {\n    return value && value.__symbolic === 'binary';\n}\nexports.isMetadataSymbolicBinaryExpression = isMetadataSymbolicBinaryExpression;\nfunction isMetadataSymbolicIndexExpression(value) {\n    return value && value.__symbolic === 'index';\n}\nexports.isMetadataSymbolicIndexExpression = isMetadataSymbolicIndexExpression;\nfunction isMetadataSymbolicCallExpression(value) {\n    return value && (value.__symbolic === 'call' || value.__symbolic === 'new');\n}\nexports.isMetadataSymbolicCallExpression = isMetadataSymbolicCallExpression;\nfunction isMetadataSymbolicPrefixExpression(value) {\n    return value && value.__symbolic === 'pre';\n}\nexports.isMetadataSymbolicPrefixExpression = isMetadataSymbolicPrefixExpression;\nfunction isMetadataSymbolicIfExpression(value) {\n    return value && value.__symbolic === 'if';\n}\nexports.isMetadataSymbolicIfExpression = isMetadataSymbolicIfExpression;\nfunction isMetadataGlobalReferenceExpression(value) {\n    return value && value.name && !value.module && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataGlobalReferenceExpression = isMetadataGlobalReferenceExpression;\nfunction isMetadataModuleReferenceExpression(value) {\n    return value && value.module && !value.name && !value.default &&\n        isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataModuleReferenceExpression = isMetadataModuleReferenceExpression;\nfunction isMetadataImportedSymbolReferenceExpression(value) {\n    return value && value.module && !!value.name && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataImportedSymbolReferenceExpression = isMetadataImportedSymbolReferenceExpression;\nfunction isMetadataImportDefaultReference(value) {\n    return value.module && value.default && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataImportDefaultReference = isMetadataImportDefaultReference;\nfunction isMetadataSymbolicReferenceExpression(value) {\n    return value && value.__symbolic === 'reference';\n}\nexports.isMetadataSymbolicReferenceExpression = isMetadataSymbolicReferenceExpression;\nfunction isMetadataSymbolicSelectExpression(value) {\n    return value && value.__symbolic === 'select';\n}\nexports.isMetadataSymbolicSelectExpression = isMetadataSymbolicSelectExpression;\nfunction isMetadataSymbolicSpreadExpression(value) {\n    return value && value.__symbolic === 'spread';\n}\nexports.isMetadataSymbolicSpreadExpression = isMetadataSymbolicSpreadExpression;\nfunction isMetadataError(value) {\n    return value && value.__symbolic === 'error';\n}\nexports.isMetadataError = isMetadataError;\n\n});\n\nvar evaluator = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n// In TypeScript 2.1 the spread element kind was renamed.\nvar spreadElementSyntaxKind = ts__default.SyntaxKind.SpreadElement || ts__default.SyntaxKind.SpreadElementExpression;\nfunction isMethodCallOf(callExpression, memberName) {\n    var expression = callExpression.expression;\n    if (expression.kind === ts__default.SyntaxKind.PropertyAccessExpression) {\n        var propertyAccessExpression = expression;\n        var name_1 = propertyAccessExpression.name;\n        if (name_1.kind == ts__default.SyntaxKind.Identifier) {\n            return name_1.text === memberName;\n        }\n    }\n    return false;\n}\nfunction isCallOf(callExpression, ident) {\n    var expression = callExpression.expression;\n    if (expression.kind === ts__default.SyntaxKind.Identifier) {\n        var identifier = expression;\n        return identifier.text === ident;\n    }\n    return false;\n}\n/**\n * ts.forEachChild stops iterating children when the callback return a truthy value.\n * This method inverts this to implement an `every` style iterator. It will return\n * true if every call to `cb` returns `true`.\n */\nfunction everyNodeChild(node, cb) {\n    return !ts__default.forEachChild(node, function (node) { return !cb(node); });\n}\nfunction isPrimitive(value) {\n    return Object(value) !== value;\n}\nexports.isPrimitive = isPrimitive;\nfunction isDefined(obj) {\n    return obj !== undefined;\n}\nfunction getSourceFileOfNode(node) {\n    while (node && node.kind != ts__default.SyntaxKind.SourceFile) {\n        node = node.parent;\n    }\n    return node;\n}\n/* @internal */\nfunction errorSymbol(message, node, context, sourceFile) {\n    var result = undefined;\n    if (node) {\n        sourceFile = sourceFile || getSourceFileOfNode(node);\n        if (sourceFile) {\n            var _a = ts__default.getLineAndCharacterOfPosition(sourceFile, node.getStart(sourceFile)), line = _a.line, character = _a.character;\n            result = { __symbolic: 'error', message: message, line: line, character: character };\n        }\n    }\n    if (!result) {\n        result = { __symbolic: 'error', message: message };\n    }\n    if (context) {\n        result.context = context;\n    }\n    return result;\n}\nexports.errorSymbol = errorSymbol;\n/**\n * Produce a symbolic representation of an expression folding values into their final value when\n * possible.\n */\nvar Evaluator = (function () {\n    function Evaluator(symbols, nodeMap, options, recordExport) {\n        if (options === void 0) { options = {}; }\n        this.symbols = symbols;\n        this.nodeMap = nodeMap;\n        this.options = options;\n        this.recordExport = recordExport;\n    }\n    Evaluator.prototype.nameOf = function (node) {\n        if (node && node.kind == ts__default.SyntaxKind.Identifier) {\n            return node.text;\n        }\n        var result = node && this.evaluateNode(node);\n        if (schema.isMetadataError(result) || typeof result === 'string') {\n            return result;\n        }\n        else {\n            return errorSymbol('Name expected', node, { received: (node && node.getText()) || '<missing>' });\n        }\n    };\n    /**\n     * Returns true if the expression represented by `node` can be folded into a literal expression.\n     *\n     * For example, a literal is always foldable. This means that literal expressions such as `1.2`\n     * `\"Some value\"` `true` `false` are foldable.\n     *\n     * - An object literal is foldable if all the properties in the literal are foldable.\n     * - An array literal is foldable if all the elements are foldable.\n     * - A call is foldable if it is a call to a Array.prototype.concat or a call to CONST_EXPR.\n     * - A property access is foldable if the object is foldable.\n     * - A array index is foldable if index expression is foldable and the array is foldable.\n     * - Binary operator expressions are foldable if the left and right expressions are foldable and\n     *   it is one of '+', '-', '*', '/', '%', '||', and '&&'.\n     * - An identifier is foldable if a value can be found for its symbol in the evaluator symbol\n     *   table.\n     */\n    Evaluator.prototype.isFoldable = function (node) {\n        return this.isFoldableWorker(node, new Map());\n    };\n    Evaluator.prototype.isFoldableWorker = function (node, folding) {\n        var _this = this;\n        if (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ObjectLiteralExpression:\n                    return everyNodeChild(node, function (child) {\n                        if (child.kind === ts__default.SyntaxKind.PropertyAssignment) {\n                            var propertyAssignment = child;\n                            return _this.isFoldableWorker(propertyAssignment.initializer, folding);\n                        }\n                        return false;\n                    });\n                case ts__default.SyntaxKind.ArrayLiteralExpression:\n                    return everyNodeChild(node, function (child) { return _this.isFoldableWorker(child, folding); });\n                case ts__default.SyntaxKind.CallExpression:\n                    var callExpression = node;\n                    // We can fold a <array>.concat(<v>).\n                    if (isMethodCallOf(callExpression, 'concat') &&\n                        arrayOrEmpty(callExpression.arguments).length === 1) {\n                        var arrayNode = callExpression.expression.expression;\n                        if (this.isFoldableWorker(arrayNode, folding) &&\n                            this.isFoldableWorker(callExpression.arguments[0], folding)) {\n                            // It needs to be an array.\n                            var arrayValue = this.evaluateNode(arrayNode);\n                            if (arrayValue && Array.isArray(arrayValue)) {\n                                return true;\n                            }\n                        }\n                    }\n                    // We can fold a call to CONST_EXPR\n                    if (isCallOf(callExpression, 'CONST_EXPR') &&\n                        arrayOrEmpty(callExpression.arguments).length === 1)\n                        return this.isFoldableWorker(callExpression.arguments[0], folding);\n                    return false;\n                case ts__default.SyntaxKind.NoSubstitutionTemplateLiteral:\n                case ts__default.SyntaxKind.StringLiteral:\n                case ts__default.SyntaxKind.NumericLiteral:\n                case ts__default.SyntaxKind.NullKeyword:\n                case ts__default.SyntaxKind.TrueKeyword:\n                case ts__default.SyntaxKind.FalseKeyword:\n                case ts__default.SyntaxKind.TemplateHead:\n                case ts__default.SyntaxKind.TemplateMiddle:\n                case ts__default.SyntaxKind.TemplateTail:\n                    return true;\n                case ts__default.SyntaxKind.ParenthesizedExpression:\n                    var parenthesizedExpression = node;\n                    return this.isFoldableWorker(parenthesizedExpression.expression, folding);\n                case ts__default.SyntaxKind.BinaryExpression:\n                    var binaryExpression = node;\n                    switch (binaryExpression.operatorToken.kind) {\n                        case ts__default.SyntaxKind.PlusToken:\n                        case ts__default.SyntaxKind.MinusToken:\n                        case ts__default.SyntaxKind.AsteriskToken:\n                        case ts__default.SyntaxKind.SlashToken:\n                        case ts__default.SyntaxKind.PercentToken:\n                        case ts__default.SyntaxKind.AmpersandAmpersandToken:\n                        case ts__default.SyntaxKind.BarBarToken:\n                            return this.isFoldableWorker(binaryExpression.left, folding) &&\n                                this.isFoldableWorker(binaryExpression.right, folding);\n                        default:\n                            return false;\n                    }\n                case ts__default.SyntaxKind.PropertyAccessExpression:\n                    var propertyAccessExpression = node;\n                    return this.isFoldableWorker(propertyAccessExpression.expression, folding);\n                case ts__default.SyntaxKind.ElementAccessExpression:\n                    var elementAccessExpression = node;\n                    return this.isFoldableWorker(elementAccessExpression.expression, folding) &&\n                        this.isFoldableWorker(elementAccessExpression.argumentExpression, folding);\n                case ts__default.SyntaxKind.Identifier:\n                    var identifier = node;\n                    var reference = this.symbols.resolve(identifier.text);\n                    if (reference !== undefined && isPrimitive(reference)) {\n                        return true;\n                    }\n                    break;\n                case ts__default.SyntaxKind.TemplateExpression:\n                    var templateExpression = node;\n                    return templateExpression.templateSpans.every(function (span) { return _this.isFoldableWorker(span.expression, folding); });\n            }\n        }\n        return false;\n    };\n    /**\n     * Produce a JSON serialiable object representing `node`. The foldable values in the expression\n     * tree are folded. For example, a node representing `1 + 2` is folded into `3`.\n     */\n    Evaluator.prototype.evaluateNode = function (node, preferReference) {\n        var _this = this;\n        var t = this;\n        var error;\n        function recordEntry(entry, node) {\n            if (t.options.substituteExpression) {\n                var newEntry = t.options.substituteExpression(entry, node);\n                if (t.recordExport && newEntry != entry && schema.isMetadataGlobalReferenceExpression(newEntry)) {\n                    t.recordExport(newEntry.name, entry);\n                }\n                entry = newEntry;\n            }\n            t.nodeMap.set(entry, node);\n            return entry;\n        }\n        function isFoldableError(value) {\n            return !t.options.verboseInvalidExpression && schema.isMetadataError(value);\n        }\n        var resolveName = function (name, preferReference) {\n            var reference = _this.symbols.resolve(name, preferReference);\n            if (reference === undefined) {\n                // Encode as a global reference. StaticReflector will check the reference.\n                return recordEntry({ __symbolic: 'reference', name: name }, node);\n            }\n            return reference;\n        };\n        switch (node.kind) {\n            case ts__default.SyntaxKind.ObjectLiteralExpression:\n                var obj_1 = {};\n                var quoted_1 = [];\n                ts__default.forEachChild(node, function (child) {\n                    switch (child.kind) {\n                        case ts__default.SyntaxKind.ShorthandPropertyAssignment:\n                        case ts__default.SyntaxKind.PropertyAssignment:\n                            var assignment = child;\n                            if (assignment.name.kind == ts__default.SyntaxKind.StringLiteral) {\n                                var name_2 = assignment.name.text;\n                                quoted_1.push(name_2);\n                            }\n                            var propertyName = _this.nameOf(assignment.name);\n                            if (isFoldableError(propertyName)) {\n                                error = propertyName;\n                                return true;\n                            }\n                            var propertyValue = isPropertyAssignment(assignment) ?\n                                _this.evaluateNode(assignment.initializer, /* preferReference */ true) :\n                                resolveName(propertyName, /* preferReference */ true);\n                            if (isFoldableError(propertyValue)) {\n                                error = propertyValue;\n                                return true; // Stop the forEachChild.\n                            }\n                            else {\n                                obj_1[propertyName] = isPropertyAssignment(assignment) ?\n                                    recordEntry(propertyValue, assignment.initializer) :\n                                    propertyValue;\n                            }\n                    }\n                });\n                if (error)\n                    return error;\n                if (this.options.quotedNames && quoted_1.length) {\n                    obj_1['$quoted$'] = quoted_1;\n                }\n                return recordEntry(obj_1, node);\n            case ts__default.SyntaxKind.ArrayLiteralExpression:\n                var arr_1 = [];\n                ts__default.forEachChild(node, function (child) {\n                    var value = _this.evaluateNode(child, /* preferReference */ true);\n                    // Check for error\n                    if (isFoldableError(value)) {\n                        error = value;\n                        return true; // Stop the forEachChild.\n                    }\n                    // Handle spread expressions\n                    if (schema.isMetadataSymbolicSpreadExpression(value)) {\n                        if (Array.isArray(value.expression)) {\n                            for (var _i = 0, _a = value.expression; _i < _a.length; _i++) {\n                                var spreadValue = _a[_i];\n                                arr_1.push(spreadValue);\n                            }\n                            return;\n                        }\n                    }\n                    arr_1.push(value);\n                });\n                if (error)\n                    return error;\n                return recordEntry(arr_1, node);\n            case spreadElementSyntaxKind:\n                var spreadExpression = this.evaluateNode(node.expression);\n                return recordEntry({ __symbolic: 'spread', expression: spreadExpression }, node);\n            case ts__default.SyntaxKind.CallExpression:\n                var callExpression = node;\n                if (isCallOf(callExpression, 'forwardRef') &&\n                    arrayOrEmpty(callExpression.arguments).length === 1) {\n                    var firstArgument = callExpression.arguments[0];\n                    if (firstArgument.kind == ts__default.SyntaxKind.ArrowFunction) {\n                        var arrowFunction = firstArgument;\n                        return recordEntry(this.evaluateNode(arrowFunction.body), node);\n                    }\n                }\n                var args = arrayOrEmpty(callExpression.arguments).map(function (arg) { return _this.evaluateNode(arg); });\n                if (!this.options.verboseInvalidExpression && args.some(schema.isMetadataError)) {\n                    return args.find(schema.isMetadataError);\n                }\n                if (this.isFoldable(callExpression)) {\n                    if (isMethodCallOf(callExpression, 'concat')) {\n                        var arrayValue = this.evaluateNode(callExpression.expression.expression);\n                        if (isFoldableError(arrayValue))\n                            return arrayValue;\n                        return arrayValue.concat(args[0]);\n                    }\n                }\n                // Always fold a CONST_EXPR even if the argument is not foldable.\n                if (isCallOf(callExpression, 'CONST_EXPR') &&\n                    arrayOrEmpty(callExpression.arguments).length === 1) {\n                    return recordEntry(args[0], node);\n                }\n                var expression = this.evaluateNode(callExpression.expression);\n                if (isFoldableError(expression)) {\n                    return recordEntry(expression, node);\n                }\n                var result = { __symbolic: 'call', expression: expression };\n                if (args && args.length) {\n                    result.arguments = args;\n                }\n                return recordEntry(result, node);\n            case ts__default.SyntaxKind.NewExpression:\n                var newExpression = node;\n                var newArgs = arrayOrEmpty(newExpression.arguments).map(function (arg) { return _this.evaluateNode(arg); });\n                if (!this.options.verboseInvalidExpression && newArgs.some(schema.isMetadataError)) {\n                    return recordEntry(newArgs.find(schema.isMetadataError), node);\n                }\n                var newTarget = this.evaluateNode(newExpression.expression);\n                if (schema.isMetadataError(newTarget)) {\n                    return recordEntry(newTarget, node);\n                }\n                var call = { __symbolic: 'new', expression: newTarget };\n                if (newArgs.length) {\n                    call.arguments = newArgs;\n                }\n                return recordEntry(call, node);\n            case ts__default.SyntaxKind.PropertyAccessExpression: {\n                var propertyAccessExpression = node;\n                var expression_1 = this.evaluateNode(propertyAccessExpression.expression);\n                if (isFoldableError(expression_1)) {\n                    return recordEntry(expression_1, node);\n                }\n                var member = this.nameOf(propertyAccessExpression.name);\n                if (isFoldableError(member)) {\n                    return recordEntry(member, node);\n                }\n                if (expression_1 && this.isFoldable(propertyAccessExpression.expression))\n                    return expression_1[member];\n                if (schema.isMetadataModuleReferenceExpression(expression_1)) {\n                    // A select into a module reference and be converted into a reference to the symbol\n                    // in the module\n                    return recordEntry({ __symbolic: 'reference', module: expression_1.module, name: member }, node);\n                }\n                return recordEntry({ __symbolic: 'select', expression: expression_1, member: member }, node);\n            }\n            case ts__default.SyntaxKind.ElementAccessExpression: {\n                var elementAccessExpression = node;\n                var expression_2 = this.evaluateNode(elementAccessExpression.expression);\n                if (isFoldableError(expression_2)) {\n                    return recordEntry(expression_2, node);\n                }\n                if (!elementAccessExpression.argumentExpression) {\n                    return recordEntry(errorSymbol('Expression form not supported', node), node);\n                }\n                var index = this.evaluateNode(elementAccessExpression.argumentExpression);\n                if (isFoldableError(expression_2)) {\n                    return recordEntry(expression_2, node);\n                }\n                if (this.isFoldable(elementAccessExpression.expression) &&\n                    this.isFoldable(elementAccessExpression.argumentExpression))\n                    return expression_2[index];\n                return recordEntry({ __symbolic: 'index', expression: expression_2, index: index }, node);\n            }\n            case ts__default.SyntaxKind.Identifier:\n                var identifier = node;\n                var name_3 = identifier.text;\n                return resolveName(name_3, preferReference);\n            case ts__default.SyntaxKind.TypeReference:\n                var typeReferenceNode = node;\n                var typeNameNode_1 = typeReferenceNode.typeName;\n                var getReference = function (node) {\n                    if (typeNameNode_1.kind === ts__default.SyntaxKind.QualifiedName) {\n                        var qualifiedName = node;\n                        var left_1 = _this.evaluateNode(qualifiedName.left);\n                        if (schema.isMetadataModuleReferenceExpression(left_1)) {\n                            return recordEntry({\n                                __symbolic: 'reference',\n                                module: left_1.module,\n                                name: qualifiedName.right.text\n                            }, node);\n                        }\n                        // Record a type reference to a declared type as a select.\n                        return { __symbolic: 'select', expression: left_1, member: qualifiedName.right.text };\n                    }\n                    else {\n                        var identifier_1 = typeNameNode_1;\n                        var symbol = _this.symbols.resolve(identifier_1.text);\n                        if (isFoldableError(symbol) || schema.isMetadataSymbolicReferenceExpression(symbol)) {\n                            return recordEntry(symbol, node);\n                        }\n                        return recordEntry(errorSymbol('Could not resolve type', node, { typeName: identifier_1.text }), node);\n                    }\n                };\n                var typeReference = getReference(typeNameNode_1);\n                if (isFoldableError(typeReference)) {\n                    return recordEntry(typeReference, node);\n                }\n                if (!schema.isMetadataModuleReferenceExpression(typeReference) &&\n                    typeReferenceNode.typeArguments && typeReferenceNode.typeArguments.length) {\n                    var args_1 = typeReferenceNode.typeArguments.map(function (element) { return _this.evaluateNode(element); });\n                    // TODO: Remove typecast when upgraded to 2.0 as it will be corretly inferred.\n                    // Some versions of 1.9 do not infer this correctly.\n                    typeReference.arguments = args_1;\n                }\n                return recordEntry(typeReference, node);\n            case ts__default.SyntaxKind.UnionType:\n                var unionType = node;\n                // Remove null and undefined from the list of unions.\n                var references = unionType.types\n                    .filter(function (n) { return n.kind != ts__default.SyntaxKind.NullKeyword &&\n                    n.kind != ts__default.SyntaxKind.UndefinedKeyword; })\n                    .map(function (n) { return _this.evaluateNode(n); });\n                // The remmaining reference must be the same. If two have type arguments consider them\n                // different even if the type arguments are the same.\n                var candidate = null;\n                for (var i = 0; i < references.length; i++) {\n                    var reference = references[i];\n                    if (schema.isMetadataSymbolicReferenceExpression(reference)) {\n                        if (candidate) {\n                            if (reference.name == candidate.name &&\n                                reference.module == candidate.module && !reference.arguments) {\n                                candidate = reference;\n                            }\n                        }\n                        else {\n                            candidate = reference;\n                        }\n                    }\n                    else {\n                        return reference;\n                    }\n                }\n                if (candidate)\n                    return candidate;\n                break;\n            case ts__default.SyntaxKind.NoSubstitutionTemplateLiteral:\n            case ts__default.SyntaxKind.StringLiteral:\n            case ts__default.SyntaxKind.TemplateHead:\n            case ts__default.SyntaxKind.TemplateTail:\n            case ts__default.SyntaxKind.TemplateMiddle:\n                return node.text;\n            case ts__default.SyntaxKind.NumericLiteral:\n                return parseFloat(node.text);\n            case ts__default.SyntaxKind.AnyKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'any' }, node);\n            case ts__default.SyntaxKind.StringKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'string' }, node);\n            case ts__default.SyntaxKind.NumberKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'number' }, node);\n            case ts__default.SyntaxKind.BooleanKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'boolean' }, node);\n            case ts__default.SyntaxKind.ArrayType:\n                var arrayTypeNode = node;\n                return recordEntry({\n                    __symbolic: 'reference',\n                    name: 'Array',\n                    arguments: [this.evaluateNode(arrayTypeNode.elementType)]\n                }, node);\n            case ts__default.SyntaxKind.NullKeyword:\n                return null;\n            case ts__default.SyntaxKind.TrueKeyword:\n                return true;\n            case ts__default.SyntaxKind.FalseKeyword:\n                return false;\n            case ts__default.SyntaxKind.ParenthesizedExpression:\n                var parenthesizedExpression = node;\n                return this.evaluateNode(parenthesizedExpression.expression);\n            case ts__default.SyntaxKind.TypeAssertionExpression:\n                var typeAssertion = node;\n                return this.evaluateNode(typeAssertion.expression);\n            case ts__default.SyntaxKind.PrefixUnaryExpression:\n                var prefixUnaryExpression = node;\n                var operand = this.evaluateNode(prefixUnaryExpression.operand);\n                if (isDefined(operand) && isPrimitive(operand)) {\n                    switch (prefixUnaryExpression.operator) {\n                        case ts__default.SyntaxKind.PlusToken:\n                            return +operand;\n                        case ts__default.SyntaxKind.MinusToken:\n                            return -operand;\n                        case ts__default.SyntaxKind.TildeToken:\n                            return ~operand;\n                        case ts__default.SyntaxKind.ExclamationToken:\n                            return !operand;\n                    }\n                }\n                var operatorText = void 0;\n                switch (prefixUnaryExpression.operator) {\n                    case ts__default.SyntaxKind.PlusToken:\n                        operatorText = '+';\n                        break;\n                    case ts__default.SyntaxKind.MinusToken:\n                        operatorText = '-';\n                        break;\n                    case ts__default.SyntaxKind.TildeToken:\n                        operatorText = '~';\n                        break;\n                    case ts__default.SyntaxKind.ExclamationToken:\n                        operatorText = '!';\n                        break;\n                    default:\n                        return undefined;\n                }\n                return recordEntry({ __symbolic: 'pre', operator: operatorText, operand: operand }, node);\n            case ts__default.SyntaxKind.BinaryExpression:\n                var binaryExpression = node;\n                var left = this.evaluateNode(binaryExpression.left);\n                var right = this.evaluateNode(binaryExpression.right);\n                if (isDefined(left) && isDefined(right)) {\n                    if (isPrimitive(left) && isPrimitive(right))\n                        switch (binaryExpression.operatorToken.kind) {\n                            case ts__default.SyntaxKind.BarBarToken:\n                                return left || right;\n                            case ts__default.SyntaxKind.AmpersandAmpersandToken:\n                                return left && right;\n                            case ts__default.SyntaxKind.AmpersandToken:\n                                return left & right;\n                            case ts__default.SyntaxKind.BarToken:\n                                return left | right;\n                            case ts__default.SyntaxKind.CaretToken:\n                                return left ^ right;\n                            case ts__default.SyntaxKind.EqualsEqualsToken:\n                                return left == right;\n                            case ts__default.SyntaxKind.ExclamationEqualsToken:\n                                return left != right;\n                            case ts__default.SyntaxKind.EqualsEqualsEqualsToken:\n                                return left === right;\n                            case ts__default.SyntaxKind.ExclamationEqualsEqualsToken:\n                                return left !== right;\n                            case ts__default.SyntaxKind.LessThanToken:\n                                return left < right;\n                            case ts__default.SyntaxKind.GreaterThanToken:\n                                return left > right;\n                            case ts__default.SyntaxKind.LessThanEqualsToken:\n                                return left <= right;\n                            case ts__default.SyntaxKind.GreaterThanEqualsToken:\n                                return left >= right;\n                            case ts__default.SyntaxKind.LessThanLessThanToken:\n                                return left << right;\n                            case ts__default.SyntaxKind.GreaterThanGreaterThanToken:\n                                return left >> right;\n                            case ts__default.SyntaxKind.GreaterThanGreaterThanGreaterThanToken:\n                                return left >>> right;\n                            case ts__default.SyntaxKind.PlusToken:\n                                return left + right;\n                            case ts__default.SyntaxKind.MinusToken:\n                                return left - right;\n                            case ts__default.SyntaxKind.AsteriskToken:\n                                return left * right;\n                            case ts__default.SyntaxKind.SlashToken:\n                                return left / right;\n                            case ts__default.SyntaxKind.PercentToken:\n                                return left % right;\n                        }\n                    return recordEntry({\n                        __symbolic: 'binop',\n                        operator: binaryExpression.operatorToken.getText(),\n                        left: left,\n                        right: right\n                    }, node);\n                }\n                break;\n            case ts__default.SyntaxKind.ConditionalExpression:\n                var conditionalExpression = node;\n                var condition = this.evaluateNode(conditionalExpression.condition);\n                var thenExpression = this.evaluateNode(conditionalExpression.whenTrue);\n                var elseExpression = this.evaluateNode(conditionalExpression.whenFalse);\n                if (isPrimitive(condition)) {\n                    return condition ? thenExpression : elseExpression;\n                }\n                return recordEntry({ __symbolic: 'if', condition: condition, thenExpression: thenExpression, elseExpression: elseExpression }, node);\n            case ts__default.SyntaxKind.FunctionExpression:\n            case ts__default.SyntaxKind.ArrowFunction:\n                return recordEntry(errorSymbol('Function call not supported', node), node);\n            case ts__default.SyntaxKind.TaggedTemplateExpression:\n                return recordEntry(errorSymbol('Tagged template expressions are not supported in metadata', node), node);\n            case ts__default.SyntaxKind.TemplateExpression:\n                var templateExpression = node;\n                if (this.isFoldable(node)) {\n                    return templateExpression.templateSpans.reduce(function (previous, current) { return previous + _this.evaluateNode(current.expression) +\n                        _this.evaluateNode(current.literal); }, this.evaluateNode(templateExpression.head));\n                }\n                else {\n                    return templateExpression.templateSpans.reduce(function (previous, current) {\n                        var expr = _this.evaluateNode(current.expression);\n                        var literal = _this.evaluateNode(current.literal);\n                        if (isFoldableError(expr))\n                            return expr;\n                        if (isFoldableError(literal))\n                            return literal;\n                        if (typeof previous === 'string' && typeof expr === 'string' &&\n                            typeof literal === 'string') {\n                            return previous + expr + literal;\n                        }\n                        var result = expr;\n                        if (previous !== '') {\n                            result = { __symbolic: 'binop', operator: '+', left: previous, right: expr };\n                        }\n                        if (literal != '') {\n                            result = { __symbolic: 'binop', operator: '+', left: result, right: literal };\n                        }\n                        return result;\n                    }, this.evaluateNode(templateExpression.head));\n                }\n            case ts__default.SyntaxKind.AsExpression:\n                var asExpression = node;\n                return this.evaluateNode(asExpression.expression);\n            case ts__default.SyntaxKind.ClassExpression:\n                return { __symbolic: 'class' };\n        }\n        return recordEntry(errorSymbol('Expression form not supported', node), node);\n    };\n    return Evaluator;\n}());\nexports.Evaluator = Evaluator;\nfunction isPropertyAssignment(node) {\n    return node.kind == ts__default.SyntaxKind.PropertyAssignment;\n}\nvar empty = ts__default.createNodeArray();\nfunction arrayOrEmpty(v) {\n    return v || empty;\n}\n\n});\n\nvar symbols = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar Symbols = (function () {\n    function Symbols(sourceFile) {\n        this.sourceFile = sourceFile;\n        this.references = new Map();\n    }\n    Symbols.prototype.resolve = function (name, preferReference) {\n        return (preferReference && this.references.get(name)) || this.symbols.get(name);\n    };\n    Symbols.prototype.define = function (name, value) { this.symbols.set(name, value); };\n    Symbols.prototype.defineReference = function (name, value) {\n        this.references.set(name, value);\n    };\n    Symbols.prototype.has = function (name) { return this.symbols.has(name); };\n    Object.defineProperty(Symbols.prototype, \"symbols\", {\n        get: function () {\n            var result = this._symbols;\n            if (!result) {\n                result = this._symbols = new Map();\n                populateBuiltins(result);\n                this.buildImports();\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Symbols.prototype.buildImports = function () {\n        var _this = this;\n        var symbols = this._symbols;\n        // Collect the imported symbols into this.symbols\n        var stripQuotes = function (s) { return s.replace(/^['\"]|['\"]$/g, ''); };\n        var visit = function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ImportEqualsDeclaration:\n                    var importEqualsDeclaration = node;\n                    if (importEqualsDeclaration.moduleReference.kind ===\n                        ts__default.SyntaxKind.ExternalModuleReference) {\n                        var externalReference = importEqualsDeclaration.moduleReference;\n                        if (externalReference.expression) {\n                            // An `import <identifier> = require(<module-specifier>);\n                            if (!externalReference.expression.parent) {\n                                // The `parent` field of a node is set by the TypeScript binder (run as\n                                // part of the type checker). Setting it here allows us to call `getText()`\n                                // even if the `SourceFile` was not type checked (which looks for `SourceFile`\n                                // in the parent chain). This doesn't damage the node as the binder unconditionally\n                                // sets the parent.\n                                externalReference.expression.parent = externalReference;\n                                externalReference.parent = _this.sourceFile;\n                            }\n                            var from_1 = stripQuotes(externalReference.expression.getText());\n                            symbols.set(importEqualsDeclaration.name.text, { __symbolic: 'reference', module: from_1 });\n                            break;\n                        }\n                    }\n                    symbols.set(importEqualsDeclaration.name.text, { __symbolic: 'error', message: \"Unsupported import syntax\" });\n                    break;\n                case ts__default.SyntaxKind.ImportDeclaration:\n                    var importDecl = node;\n                    if (!importDecl.importClause) {\n                        // An `import <module-specifier>` clause which does not bring symbols into scope.\n                        break;\n                    }\n                    if (!importDecl.moduleSpecifier.parent) {\n                        // See note above in the `ImportEqualDeclaration` case.\n                        importDecl.moduleSpecifier.parent = importDecl;\n                        importDecl.parent = _this.sourceFile;\n                    }\n                    var from = stripQuotes(importDecl.moduleSpecifier.getText());\n                    if (importDecl.importClause.name) {\n                        // An `import <identifier> form <module-specifier>` clause. Record the defualt symbol.\n                        symbols.set(importDecl.importClause.name.text, { __symbolic: 'reference', module: from, default: true });\n                    }\n                    var bindings = importDecl.importClause.namedBindings;\n                    if (bindings) {\n                        switch (bindings.kind) {\n                            case ts__default.SyntaxKind.NamedImports:\n                                // An `import { [<identifier> [, <identifier>] } from <module-specifier>` clause\n                                for (var _i = 0, _a = bindings.elements; _i < _a.length; _i++) {\n                                    var binding = _a[_i];\n                                    symbols.set(binding.name.text, {\n                                        __symbolic: 'reference',\n                                        module: from,\n                                        name: binding.propertyName ? binding.propertyName.text : binding.name.text\n                                    });\n                                }\n                                break;\n                            case ts__default.SyntaxKind.NamespaceImport:\n                                // An `input * as <identifier> from <module-specifier>` clause.\n                                symbols.set(bindings.name.text, { __symbolic: 'reference', module: from });\n                                break;\n                        }\n                    }\n                    break;\n            }\n            ts__default.forEachChild(node, visit);\n        };\n        if (this.sourceFile) {\n            ts__default.forEachChild(this.sourceFile, visit);\n        }\n    };\n    return Symbols;\n}());\nexports.Symbols = Symbols;\nfunction populateBuiltins(symbols) {\n    // From lib.core.d.ts (all \"define const\")\n    ['Object', 'Function', 'String', 'Number', 'Array', 'Boolean', 'Map', 'NaN', 'Infinity', 'Math',\n        'Date', 'RegExp', 'Error', 'Error', 'EvalError', 'RangeError', 'ReferenceError', 'SyntaxError',\n        'TypeError', 'URIError', 'JSON', 'ArrayBuffer', 'DataView', 'Int8Array', 'Uint8Array',\n        'Uint8ClampedArray', 'Uint16Array', 'Int16Array', 'Int32Array', 'Uint32Array', 'Float32Array',\n        'Float64Array']\n        .forEach(function (name) { return symbols.set(name, { __symbolic: 'reference', name: name }); });\n}\n\n});\n\nvar collector = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign = (commonjsGlobal && commonjsGlobal.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\nvar isStatic = function (node) { return ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Static; };\n/**\n * Collect decorator metadata from a TypeScript module.\n */\nvar MetadataCollector = (function () {\n    function MetadataCollector(options) {\n        if (options === void 0) { options = {}; }\n        this.options = options;\n    }\n    /**\n     * Returns a JSON.stringify friendly form describing the decorators of the exported classes from\n     * the source file that is expected to correspond to a module.\n     */\n    MetadataCollector.prototype.getMetadata = function (sourceFile, strict, substituteExpression) {\n        var _this = this;\n        if (strict === void 0) { strict = false; }\n        var locals = new symbols.Symbols(sourceFile);\n        var nodeMap = new Map();\n        var composedSubstituter = substituteExpression && this.options.substituteExpression ?\n            function (value, node) {\n                return _this.options.substituteExpression(substituteExpression(value, node), node);\n            } :\n            substituteExpression;\n        var evaluatorOptions = substituteExpression ? __assign({}, this.options, { substituteExpression: composedSubstituter }) :\n            this.options;\n        var metadata;\n        var evaluator$$1 = new evaluator.Evaluator(locals, nodeMap, evaluatorOptions, function (name, value) {\n            if (!metadata)\n                metadata = {};\n            metadata[name] = value;\n        });\n        var exports = undefined;\n        function objFromDecorator(decoratorNode) {\n            return evaluator$$1.evaluateNode(decoratorNode.expression);\n        }\n        function recordEntry(entry, node) {\n            nodeMap.set(entry, node);\n            return entry;\n        }\n        function errorSym(message, node, context) {\n            return evaluator.errorSymbol(message, node, context, sourceFile);\n        }\n        function maybeGetSimpleFunction(functionDeclaration) {\n            if (functionDeclaration.name && functionDeclaration.name.kind == ts__default.SyntaxKind.Identifier) {\n                var nameNode = functionDeclaration.name;\n                var functionName = nameNode.text;\n                var functionBody = functionDeclaration.body;\n                if (functionBody && functionBody.statements.length == 1) {\n                    var statement = functionBody.statements[0];\n                    if (statement.kind === ts__default.SyntaxKind.ReturnStatement) {\n                        var returnStatement = statement;\n                        if (returnStatement.expression) {\n                            var func = {\n                                __symbolic: 'function',\n                                parameters: namesOf(functionDeclaration.parameters),\n                                value: evaluator$$1.evaluateNode(returnStatement.expression)\n                            };\n                            if (functionDeclaration.parameters.some(function (p) { return p.initializer != null; })) {\n                                func.defaults = functionDeclaration.parameters.map(function (p) { return p.initializer && evaluator$$1.evaluateNode(p.initializer); });\n                            }\n                            return recordEntry({ func: func, name: functionName }, functionDeclaration);\n                        }\n                    }\n                }\n            }\n        }\n        function classMetadataOf(classDeclaration) {\n            var result = { __symbolic: 'class' };\n            function getDecorators(decorators) {\n                if (decorators && decorators.length)\n                    return decorators.map(function (decorator) { return objFromDecorator(decorator); });\n                return undefined;\n            }\n            function referenceFrom(node) {\n                var result = evaluator$$1.evaluateNode(node);\n                if (schema.isMetadataError(result) || schema.isMetadataSymbolicReferenceExpression(result) ||\n                    schema.isMetadataSymbolicSelectExpression(result)) {\n                    return result;\n                }\n                else {\n                    return errorSym('Symbol reference expected', node);\n                }\n            }\n            // Add class parents\n            if (classDeclaration.heritageClauses) {\n                classDeclaration.heritageClauses.forEach(function (hc) {\n                    if (hc.token === ts__default.SyntaxKind.ExtendsKeyword && hc.types) {\n                        hc.types.forEach(function (type) { return result.extends = referenceFrom(type.expression); });\n                    }\n                });\n            }\n            // Add arity if the type is generic\n            var typeParameters = classDeclaration.typeParameters;\n            if (typeParameters && typeParameters.length) {\n                result.arity = typeParameters.length;\n            }\n            // Add class decorators\n            if (classDeclaration.decorators) {\n                result.decorators = getDecorators(classDeclaration.decorators);\n            }\n            // member decorators\n            var members = null;\n            function recordMember(name, metadata) {\n                if (!members)\n                    members = {};\n                var data = members.hasOwnProperty(name) ? members[name] : [];\n                data.push(metadata);\n                members[name] = data;\n            }\n            // static member\n            var statics = null;\n            function recordStaticMember(name, value) {\n                if (!statics)\n                    statics = {};\n                statics[name] = value;\n            }\n            for (var _i = 0, _a = classDeclaration.members; _i < _a.length; _i++) {\n                var member = _a[_i];\n                var isConstructor = false;\n                switch (member.kind) {\n                    case ts__default.SyntaxKind.Constructor:\n                    case ts__default.SyntaxKind.MethodDeclaration:\n                        isConstructor = member.kind === ts__default.SyntaxKind.Constructor;\n                        var method = member;\n                        if (isStatic(method)) {\n                            var maybeFunc = maybeGetSimpleFunction(method);\n                            if (maybeFunc) {\n                                recordStaticMember(maybeFunc.name, maybeFunc.func);\n                            }\n                            continue;\n                        }\n                        var methodDecorators = getDecorators(method.decorators);\n                        var parameters = method.parameters;\n                        var parameterDecoratorData = [];\n                        var parametersData = [];\n                        var hasDecoratorData = false;\n                        var hasParameterData = false;\n                        for (var _b = 0, parameters_1 = parameters; _b < parameters_1.length; _b++) {\n                            var parameter = parameters_1[_b];\n                            var parameterData = getDecorators(parameter.decorators);\n                            parameterDecoratorData.push(parameterData);\n                            hasDecoratorData = hasDecoratorData || !!parameterData;\n                            if (isConstructor) {\n                                if (parameter.type) {\n                                    parametersData.push(referenceFrom(parameter.type));\n                                }\n                                else {\n                                    parametersData.push(null);\n                                }\n                                hasParameterData = true;\n                            }\n                        }\n                        var data = { __symbolic: isConstructor ? 'constructor' : 'method' };\n                        var name_1 = isConstructor ? '__ctor__' : evaluator$$1.nameOf(member.name);\n                        if (methodDecorators) {\n                            data.decorators = methodDecorators;\n                        }\n                        if (hasDecoratorData) {\n                            data.parameterDecorators = parameterDecoratorData;\n                        }\n                        if (hasParameterData) {\n                            data.parameters = parametersData;\n                        }\n                        if (!schema.isMetadataError(name_1)) {\n                            recordMember(name_1, data);\n                        }\n                        break;\n                    case ts__default.SyntaxKind.PropertyDeclaration:\n                    case ts__default.SyntaxKind.GetAccessor:\n                    case ts__default.SyntaxKind.SetAccessor:\n                        var property = member;\n                        if (isStatic(property)) {\n                            var name_2 = evaluator$$1.nameOf(property.name);\n                            if (!schema.isMetadataError(name_2)) {\n                                if (property.initializer) {\n                                    var value = evaluator$$1.evaluateNode(property.initializer);\n                                    recordStaticMember(name_2, value);\n                                }\n                                else {\n                                    recordStaticMember(name_2, errorSym('Variable not initialized', property.name));\n                                }\n                            }\n                        }\n                        var propertyDecorators = getDecorators(property.decorators);\n                        if (propertyDecorators) {\n                            var name_3 = evaluator$$1.nameOf(property.name);\n                            if (!schema.isMetadataError(name_3)) {\n                                recordMember(name_3, { __symbolic: 'property', decorators: propertyDecorators });\n                            }\n                        }\n                        break;\n                }\n            }\n            if (members) {\n                result.members = members;\n            }\n            if (statics) {\n                result.statics = statics;\n            }\n            return recordEntry(result, classDeclaration);\n        }\n        // Collect all exported symbols from an exports clause.\n        var exportMap = new Map();\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ExportDeclaration:\n                    var exportDeclaration = node;\n                    var moduleSpecifier = exportDeclaration.moduleSpecifier, exportClause = exportDeclaration.exportClause;\n                    if (!moduleSpecifier) {\n                        // If there is a module specifier there is also an exportClause\n                        exportClause.elements.forEach(function (spec) {\n                            var exportedAs = spec.name.text;\n                            var name = (spec.propertyName || spec.name).text;\n                            exportMap.set(name, exportedAs);\n                        });\n                    }\n            }\n        });\n        var isExport = function (node) {\n            return sourceFile.isDeclarationFile || ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Export;\n        };\n        var isExportedIdentifier = function (identifier) {\n            return identifier && exportMap.has(identifier.text);\n        };\n        var isExported = function (node) {\n            return isExport(node) || isExportedIdentifier(node.name);\n        };\n        var exportedIdentifierName = function (identifier) {\n            return identifier && (exportMap.get(identifier.text) || identifier.text);\n        };\n        var exportedName = function (node) { return exportedIdentifierName(node.name); };\n        // Predeclare classes and functions\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ClassDeclaration:\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        var className = classDeclaration.name.text;\n                        if (isExported(classDeclaration)) {\n                            locals.define(className, { __symbolic: 'reference', name: exportedName(classDeclaration) });\n                        }\n                        else {\n                            locals.define(className, errorSym('Reference to non-exported class', node, { className: className }));\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.InterfaceDeclaration:\n                    var interfaceDeclaration = node;\n                    if (interfaceDeclaration.name) {\n                        var interfaceName = interfaceDeclaration.name.text;\n                        // All references to interfaces should be converted to references to `any`.\n                        locals.define(interfaceName, { __symbolic: 'reference', name: 'any' });\n                    }\n                    break;\n                case ts__default.SyntaxKind.FunctionDeclaration:\n                    var functionDeclaration = node;\n                    if (!isExported(functionDeclaration)) {\n                        // Report references to this function as an error.\n                        var nameNode = functionDeclaration.name;\n                        if (nameNode && nameNode.text) {\n                            locals.define(nameNode.text, errorSym('Reference to a non-exported function', nameNode, { name: nameNode.text }));\n                        }\n                    }\n                    break;\n            }\n        });\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ExportDeclaration:\n                    // Record export declarations\n                    var exportDeclaration = node;\n                    var moduleSpecifier = exportDeclaration.moduleSpecifier, exportClause = exportDeclaration.exportClause;\n                    if (!moduleSpecifier) {\n                        // no module specifier -> export {propName as name};\n                        if (exportClause) {\n                            exportClause.elements.forEach(function (spec) {\n                                var name = spec.name.text;\n                                // If the symbol was not already exported, export a reference since it is a\n                                // reference to an import\n                                if (!metadata || !metadata[name]) {\n                                    var propNode = spec.propertyName || spec.name;\n                                    var value = evaluator$$1.evaluateNode(propNode);\n                                    if (!metadata)\n                                        metadata = {};\n                                    metadata[name] = recordEntry(value, node);\n                                }\n                            });\n                        }\n                    }\n                    if (moduleSpecifier && moduleSpecifier.kind == ts__default.SyntaxKind.StringLiteral) {\n                        // Ignore exports that don't have string literals as exports.\n                        // This is allowed by the syntax but will be flagged as an error by the type checker.\n                        var from = moduleSpecifier.text;\n                        var moduleExport = { from: from };\n                        if (exportClause) {\n                            moduleExport.export = exportClause.elements.map(function (spec) { return spec.propertyName ? { name: spec.propertyName.text, as: spec.name.text } :\n                                spec.name.text; });\n                        }\n                        if (!exports)\n                            exports = [];\n                        exports.push(moduleExport);\n                    }\n                    break;\n                case ts__default.SyntaxKind.ClassDeclaration:\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        if (isExported(classDeclaration)) {\n                            var name_4 = exportedName(classDeclaration);\n                            if (name_4) {\n                                if (!metadata)\n                                    metadata = {};\n                                metadata[name_4] = classMetadataOf(classDeclaration);\n                            }\n                        }\n                    }\n                    // Otherwise don't record metadata for the class.\n                    break;\n                case ts__default.SyntaxKind.TypeAliasDeclaration:\n                    var typeDeclaration = node;\n                    if (typeDeclaration.name && isExported(typeDeclaration)) {\n                        var name_5 = exportedName(typeDeclaration);\n                        if (name_5) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_5] = { __symbolic: 'interface' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.InterfaceDeclaration:\n                    var interfaceDeclaration = node;\n                    if (interfaceDeclaration.name && isExported(interfaceDeclaration)) {\n                        var name_6 = exportedName(interfaceDeclaration);\n                        if (name_6) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_6] = { __symbolic: 'interface' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.FunctionDeclaration:\n                    // Record functions that return a single value. Record the parameter\n                    // names substitution will be performed by the StaticReflector.\n                    var functionDeclaration = node;\n                    if (isExported(functionDeclaration) && functionDeclaration.name) {\n                        var name_7 = exportedName(functionDeclaration);\n                        var maybeFunc = maybeGetSimpleFunction(functionDeclaration);\n                        if (name_7) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_7] =\n                                maybeFunc ? recordEntry(maybeFunc.func, node) : { __symbolic: 'function' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.EnumDeclaration:\n                    var enumDeclaration = node;\n                    if (isExported(enumDeclaration)) {\n                        var enumValueHolder = {};\n                        var enumName = exportedName(enumDeclaration);\n                        var nextDefaultValue = 0;\n                        var writtenMembers = 0;\n                        for (var _i = 0, _a = enumDeclaration.members; _i < _a.length; _i++) {\n                            var member = _a[_i];\n                            var enumValue = void 0;\n                            if (!member.initializer) {\n                                enumValue = nextDefaultValue;\n                            }\n                            else {\n                                enumValue = evaluator$$1.evaluateNode(member.initializer);\n                            }\n                            var name_8 = undefined;\n                            if (member.name.kind == ts__default.SyntaxKind.Identifier) {\n                                var identifier = member.name;\n                                name_8 = identifier.text;\n                                enumValueHolder[name_8] = enumValue;\n                                writtenMembers++;\n                            }\n                            if (typeof enumValue === 'number') {\n                                nextDefaultValue = enumValue + 1;\n                            }\n                            else if (name_8) {\n                                nextDefaultValue = {\n                                    __symbolic: 'binary',\n                                    operator: '+',\n                                    left: {\n                                        __symbolic: 'select',\n                                        expression: recordEntry({ __symbolic: 'reference', name: enumName }, node), name: name_8\n                                    }\n                                };\n                            }\n                            else {\n                                nextDefaultValue =\n                                    recordEntry(errorSym('Unsuppported enum member name', member.name), node);\n                            }\n                        }\n                        if (writtenMembers) {\n                            if (enumName) {\n                                if (!metadata)\n                                    metadata = {};\n                                metadata[enumName] = recordEntry(enumValueHolder, node);\n                            }\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.VariableStatement:\n                    var variableStatement = node;\n                    var _loop_1 = function (variableDeclaration) {\n                        if (variableDeclaration.name.kind == ts__default.SyntaxKind.Identifier) {\n                            var nameNode = variableDeclaration.name;\n                            var varValue = void 0;\n                            if (variableDeclaration.initializer) {\n                                varValue = evaluator$$1.evaluateNode(variableDeclaration.initializer);\n                            }\n                            else {\n                                varValue = recordEntry(errorSym('Variable not initialized', nameNode), nameNode);\n                            }\n                            var exported = false;\n                            if (isExport(variableStatement) || isExport(variableDeclaration) ||\n                                isExportedIdentifier(nameNode)) {\n                                var name_9 = exportedIdentifierName(nameNode);\n                                if (name_9) {\n                                    if (!metadata)\n                                        metadata = {};\n                                    metadata[name_9] = recordEntry(varValue, node);\n                                }\n                                exported = true;\n                            }\n                            if (typeof varValue == 'string' || typeof varValue == 'number' ||\n                                typeof varValue == 'boolean') {\n                                locals.define(nameNode.text, varValue);\n                                if (exported) {\n                                    locals.defineReference(nameNode.text, { __symbolic: 'reference', name: nameNode.text });\n                                }\n                            }\n                            else if (!exported) {\n                                if (varValue && !schema.isMetadataError(varValue)) {\n                                    locals.define(nameNode.text, recordEntry(varValue, node));\n                                }\n                                else {\n                                    locals.define(nameNode.text, recordEntry(errorSym('Reference to a local symbol', nameNode, { name: nameNode.text }), node));\n                                }\n                            }\n                        }\n                        else {\n                            // Destructuring (or binding) declarations are not supported,\n                            // var {<identifier>[, <identifier>]+} = <expression>;\n                            //   or\n                            // var [<identifier>[, <identifier}+] = <expression>;\n                            // are not supported.\n                            var report_1 = function (nameNode) {\n                                switch (nameNode.kind) {\n                                    case ts__default.SyntaxKind.Identifier:\n                                        var name_10 = nameNode;\n                                        var varValue = errorSym('Destructuring not supported', name_10);\n                                        locals.define(name_10.text, varValue);\n                                        if (isExport(node)) {\n                                            if (!metadata)\n                                                metadata = {};\n                                            metadata[name_10.text] = varValue;\n                                        }\n                                        break;\n                                    case ts__default.SyntaxKind.BindingElement:\n                                        var bindingElement = nameNode;\n                                        report_1(bindingElement.name);\n                                        break;\n                                    case ts__default.SyntaxKind.ObjectBindingPattern:\n                                    case ts__default.SyntaxKind.ArrayBindingPattern:\n                                        var bindings = nameNode;\n                                        bindings.elements.forEach(report_1);\n                                        break;\n                                }\n                            };\n                            report_1(variableDeclaration.name);\n                        }\n                    };\n                    for (var _b = 0, _c = variableStatement.declarationList.declarations; _b < _c.length; _b++) {\n                        var variableDeclaration = _c[_b];\n                        _loop_1(variableDeclaration);\n                    }\n                    break;\n            }\n        });\n        if (metadata || exports) {\n            if (!metadata)\n                metadata = {};\n            else if (strict) {\n                validateMetadata(sourceFile, nodeMap, metadata);\n            }\n            var result = {\n                __symbolic: 'module',\n                version: this.options.version || schema.METADATA_VERSION, metadata: metadata\n            };\n            if (exports)\n                result.exports = exports;\n            return result;\n        }\n    };\n    return MetadataCollector;\n}());\nexports.MetadataCollector = MetadataCollector;\n// This will throw if the metadata entry given contains an error node.\nfunction validateMetadata(sourceFile, nodeMap, metadata) {\n    var locals = new Set(['Array', 'Object', 'Set', 'Map', 'string', 'number', 'any']);\n    function validateExpression(expression) {\n        if (!expression) {\n            return;\n        }\n        else if (Array.isArray(expression)) {\n            expression.forEach(validateExpression);\n        }\n        else if (typeof expression === 'object' && !expression.hasOwnProperty('__symbolic')) {\n            Object.getOwnPropertyNames(expression).forEach(function (v) { return validateExpression(expression[v]); });\n        }\n        else if (schema.isMetadataError(expression)) {\n            reportError(expression);\n        }\n        else if (schema.isMetadataGlobalReferenceExpression(expression)) {\n            if (!locals.has(expression.name)) {\n                var reference = metadata[expression.name];\n                if (reference) {\n                    validateExpression(reference);\n                }\n            }\n        }\n        else if (schema.isFunctionMetadata(expression)) {\n            validateFunction(expression);\n        }\n        else if (schema.isMetadataSymbolicExpression(expression)) {\n            switch (expression.__symbolic) {\n                case 'binary':\n                    var binaryExpression = expression;\n                    validateExpression(binaryExpression.left);\n                    validateExpression(binaryExpression.right);\n                    break;\n                case 'call':\n                case 'new':\n                    var callExpression = expression;\n                    validateExpression(callExpression.expression);\n                    if (callExpression.arguments)\n                        callExpression.arguments.forEach(validateExpression);\n                    break;\n                case 'index':\n                    var indexExpression = expression;\n                    validateExpression(indexExpression.expression);\n                    validateExpression(indexExpression.index);\n                    break;\n                case 'pre':\n                    var prefixExpression = expression;\n                    validateExpression(prefixExpression.operand);\n                    break;\n                case 'select':\n                    var selectExpression = expression;\n                    validateExpression(selectExpression.expression);\n                    break;\n                case 'spread':\n                    var spreadExpression = expression;\n                    validateExpression(spreadExpression.expression);\n                    break;\n                case 'if':\n                    var ifExpression = expression;\n                    validateExpression(ifExpression.condition);\n                    validateExpression(ifExpression.elseExpression);\n                    validateExpression(ifExpression.thenExpression);\n                    break;\n            }\n        }\n    }\n    function validateMember(classData, member) {\n        if (member.decorators) {\n            member.decorators.forEach(validateExpression);\n        }\n        if (schema.isMethodMetadata(member) && member.parameterDecorators) {\n            member.parameterDecorators.forEach(validateExpression);\n        }\n        // Only validate parameters of classes for which we know that are used with our DI\n        if (classData.decorators && schema.isConstructorMetadata(member) && member.parameters) {\n            member.parameters.forEach(validateExpression);\n        }\n    }\n    function validateClass(classData) {\n        if (classData.decorators) {\n            classData.decorators.forEach(validateExpression);\n        }\n        if (classData.members) {\n            Object.getOwnPropertyNames(classData.members)\n                .forEach(function (name) { return classData.members[name].forEach(function (m) { return validateMember(classData, m); }); });\n        }\n        if (classData.statics) {\n            Object.getOwnPropertyNames(classData.statics).forEach(function (name) {\n                var staticMember = classData.statics[name];\n                if (schema.isFunctionMetadata(staticMember)) {\n                    validateExpression(staticMember.value);\n                }\n                else {\n                    validateExpression(staticMember);\n                }\n            });\n        }\n    }\n    function validateFunction(functionDeclaration) {\n        if (functionDeclaration.value) {\n            var oldLocals = locals;\n            if (functionDeclaration.parameters) {\n                locals = new Set(oldLocals.values());\n                if (functionDeclaration.parameters)\n                    functionDeclaration.parameters.forEach(function (n) { return locals.add(n); });\n            }\n            validateExpression(functionDeclaration.value);\n            locals = oldLocals;\n        }\n    }\n    function shouldReportNode(node) {\n        if (node) {\n            var nodeStart = node.getStart();\n            return !(node.pos != nodeStart &&\n                sourceFile.text.substring(node.pos, nodeStart).indexOf('@dynamic') >= 0);\n        }\n        return true;\n    }\n    function reportError(error) {\n        var node = nodeMap.get(error);\n        if (shouldReportNode(node)) {\n            var lineInfo = error.line != undefined ?\n                error.character != undefined ? \":\" + (error.line + 1) + \":\" + (error.character + 1) :\n                    \":\" + (error.line + 1) :\n                '';\n            throw new Error(\"\" + sourceFile.fileName + lineInfo + \": Metadata collected contains an error that will be reported at runtime: \" + expandedMessage(error) + \".\\n  \" + JSON.stringify(error));\n        }\n    }\n    Object.getOwnPropertyNames(metadata).forEach(function (name) {\n        var entry = metadata[name];\n        try {\n            if (schema.isClassMetadata(entry)) {\n                validateClass(entry);\n            }\n        }\n        catch (e) {\n            var node = nodeMap.get(entry);\n            if (shouldReportNode(node)) {\n                if (node) {\n                    var _a = sourceFile.getLineAndCharacterOfPosition(node.getStart()), line = _a.line, character = _a.character;\n                    throw new Error(sourceFile.fileName + \":\" + (line + 1) + \":\" + (character + 1) + \": Error encountered in metadata generated for exported symbol '\" + name + \"': \\n \" + e.message);\n                }\n                throw new Error(\"Error encountered in metadata generated for exported symbol \" + name + \": \\n \" + e.message);\n            }\n        }\n    });\n}\n// Collect parameter names from a function.\nfunction namesOf(parameters) {\n    var result = [];\n    function addNamesOf(name) {\n        if (name.kind == ts__default.SyntaxKind.Identifier) {\n            var identifier = name;\n            result.push(identifier.text);\n        }\n        else {\n            var bindingPattern = name;\n            for (var _i = 0, _a = bindingPattern.elements; _i < _a.length; _i++) {\n                var element = _a[_i];\n                var name_11 = element.name;\n                if (name_11) {\n                    addNamesOf(name_11);\n                }\n            }\n        }\n    }\n    for (var _i = 0, parameters_2 = parameters; _i < parameters_2.length; _i++) {\n        var parameter = parameters_2[_i];\n        addNamesOf(parameter.name);\n    }\n    return result;\n}\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n    }\n    return error.message;\n}\n\n});\n\nvar bundler = createCommonjsModule(function (module, exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\n\n// The character set used to produce private names.\nvar PRIVATE_NAME_CHARS = 'abcdefghijklmnopqrstuvwxyz';\nvar MetadataBundler = (function () {\n    function MetadataBundler(root, importAs, host) {\n        this.root = root;\n        this.importAs = importAs;\n        this.host = host;\n        this.symbolMap = new Map();\n        this.metadataCache = new Map();\n        this.exports = new Map();\n        this.rootModule = \"./\" + path__default.basename(root);\n    }\n    MetadataBundler.prototype.getMetadataBundle = function () {\n        // Export the root module. This also collects the transitive closure of all values referenced by\n        // the exports.\n        var exportedSymbols = this.exportAll(this.rootModule);\n        this.canonicalizeSymbols(exportedSymbols);\n        // TODO: exports? e.g. a module re-exports a symbol from another bundle\n        var metadata = this.getEntries(exportedSymbols);\n        var privates = Array.from(this.symbolMap.values())\n            .filter(function (s) { return s.referenced && s.isPrivate; })\n            .map(function (s) { return ({\n            privateName: s.privateName,\n            name: s.declaration.name,\n            module: s.declaration.module\n        }); });\n        var origins = Array.from(this.symbolMap.values())\n            .filter(function (s) { return s.referenced && !s.reexport; })\n            .reduce(function (p, s) {\n            p[s.isPrivate ? s.privateName : s.name] = s.declaration.module;\n            return p;\n        }, {});\n        var exports = this.getReExports(exportedSymbols);\n        return {\n            metadata: {\n                __symbolic: 'module',\n                version: schema.METADATA_VERSION,\n                exports: exports.length ? exports : undefined, metadata: metadata, origins: origins,\n                importAs: this.importAs\n            },\n            privates: privates\n        };\n    };\n    MetadataBundler.resolveModule = function (importName, from) {\n        return resolveModule(importName, from);\n    };\n    MetadataBundler.prototype.getMetadata = function (moduleName) {\n        var result = this.metadataCache.get(moduleName);\n        if (!result) {\n            if (moduleName.startsWith('.')) {\n                var fullModuleName = resolveModule(moduleName, this.root);\n                result = this.host.getMetadataFor(fullModuleName);\n            }\n            this.metadataCache.set(moduleName, result);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.exportAll = function (moduleName) {\n        var _this = this;\n        var module = this.getMetadata(moduleName);\n        var result = this.exports.get(moduleName);\n        if (result) {\n            return result;\n        }\n        result = [];\n        var exportSymbol = function (exportedSymbol, exportAs) {\n            var symbol = _this.symbolOf(moduleName, exportAs);\n            result.push(symbol);\n            exportedSymbol.reexportedAs = symbol;\n            symbol.exports = exportedSymbol;\n        };\n        // Export all the symbols defined in this module.\n        if (module && module.metadata) {\n            for (var key in module.metadata) {\n                var data = module.metadata[key];\n                if (schema.isMetadataImportedSymbolReferenceExpression(data)) {\n                    // This is a re-export of an imported symbol. Record this as a re-export.\n                    var exportFrom = resolveModule(data.module, moduleName);\n                    this.exportAll(exportFrom);\n                    var symbol = this.symbolOf(exportFrom, data.name);\n                    exportSymbol(symbol, key);\n                }\n                else {\n                    // Record that this symbol is exported by this module.\n                    result.push(this.symbolOf(moduleName, key));\n                }\n            }\n        }\n        // Export all the re-exports from this module\n        if (module && module.exports) {\n            for (var _i = 0, _a = module.exports; _i < _a.length; _i++) {\n                var exportDeclaration = _a[_i];\n                var exportFrom = resolveModule(exportDeclaration.from, moduleName);\n                // Record all the exports from the module even if we don't use it directly.\n                var exportedSymbols = this.exportAll(exportFrom);\n                if (exportDeclaration.export) {\n                    // Re-export all the named exports from a module.\n                    for (var _b = 0, _c = exportDeclaration.export; _b < _c.length; _b++) {\n                        var exportItem = _c[_b];\n                        var name_1 = typeof exportItem == 'string' ? exportItem : exportItem.name;\n                        var exportAs = typeof exportItem == 'string' ? exportItem : exportItem.as;\n                        var symbol = this.symbolOf(exportFrom, name_1);\n                        if (exportedSymbols && exportedSymbols.length == 1 && exportedSymbols[0].reexport &&\n                            exportedSymbols[0].name == '*') {\n                            // This is a named export from a module we have no metadata about. Record the named\n                            // export as a re-export.\n                            symbol.reexport = true;\n                        }\n                        exportSymbol(this.symbolOf(exportFrom, name_1), exportAs);\n                    }\n                }\n                else {\n                    // Re-export all the symbols from the module\n                    var exportedSymbols_1 = this.exportAll(exportFrom);\n                    for (var _d = 0, exportedSymbols_2 = exportedSymbols_1; _d < exportedSymbols_2.length; _d++) {\n                        var exportedSymbol = exportedSymbols_2[_d];\n                        var name_2 = exportedSymbol.name;\n                        exportSymbol(exportedSymbol, name_2);\n                    }\n                }\n            }\n        }\n        if (!module) {\n            // If no metadata is found for this import then it is considered external to the\n            // library and should be recorded as a re-export in the final metadata if it is\n            // eventually re-exported.\n            var symbol = this.symbolOf(moduleName, '*');\n            symbol.reexport = true;\n            result.push(symbol);\n        }\n        this.exports.set(moduleName, result);\n        return result;\n    };\n    /**\n     * Fill in the canonicalSymbol which is the symbol that should be imported by factories.\n     * The canonical symbol is the one exported by the index file for the bundle or definition\n     * symbol for private symbols that are not exported by bundle index.\n     */\n    MetadataBundler.prototype.canonicalizeSymbols = function (exportedSymbols) {\n        var symbols = Array.from(this.symbolMap.values());\n        this.exported = new Set(exportedSymbols);\n        symbols.forEach(this.canonicalizeSymbol, this);\n    };\n    MetadataBundler.prototype.canonicalizeSymbol = function (symbol) {\n        var rootExport = getRootExport(symbol);\n        var declaration = getSymbolDeclaration(symbol);\n        var isPrivate = !this.exported.has(rootExport);\n        var canonicalSymbol = isPrivate ? declaration : rootExport;\n        symbol.isPrivate = isPrivate;\n        symbol.declaration = declaration;\n        symbol.canonicalSymbol = canonicalSymbol;\n        symbol.reexport = declaration.reexport;\n    };\n    MetadataBundler.prototype.getEntries = function (exportedSymbols) {\n        var _this = this;\n        var result = {};\n        var exportedNames = new Set(exportedSymbols.map(function (s) { return s.name; }));\n        var privateName = 0;\n        function newPrivateName() {\n            while (true) {\n                var digits = [];\n                var index = privateName++;\n                var base = PRIVATE_NAME_CHARS;\n                while (!digits.length || index > 0) {\n                    digits.unshift(base[index % base.length]);\n                    index = Math.floor(index / base.length);\n                }\n                digits.unshift('\\u0275');\n                var result_1 = digits.join('');\n                if (!exportedNames.has(result_1))\n                    return result_1;\n            }\n        }\n        exportedSymbols.forEach(function (symbol) { return _this.convertSymbol(symbol); });\n        var symbolsMap = new Map();\n        Array.from(this.symbolMap.values()).forEach(function (symbol) {\n            if (symbol.referenced && !symbol.reexport) {\n                var name_3 = symbol.name;\n                var identifier = symbol.declaration.module + \":\" + symbol.declaration.name;\n                if (symbol.isPrivate && !symbol.privateName) {\n                    name_3 = newPrivateName();\n                    symbol.privateName = name_3;\n                }\n                if (symbolsMap.has(identifier)) {\n                    var names = symbolsMap.get(identifier);\n                    names.push(name_3);\n                }\n                else {\n                    symbolsMap.set(identifier, [name_3]);\n                }\n                result[name_3] = symbol.value;\n            }\n        });\n        // check for duplicated entries\n        symbolsMap.forEach(function (names, identifier) {\n            if (names.length > 1) {\n                var _a = identifier.split(':'), module_1 = _a[0], declaredName = _a[1];\n                // prefer the export that uses the declared name (if any)\n                var reference_1 = names.indexOf(declaredName);\n                if (reference_1 === -1) {\n                    reference_1 = 0;\n                }\n                // keep one entry and replace the others by references\n                names.forEach(function (name, i) {\n                    if (i !== reference_1) {\n                        result[name] = { __symbolic: 'reference', name: names[reference_1] };\n                    }\n                });\n            }\n        });\n        return result;\n    };\n    MetadataBundler.prototype.getReExports = function (exportedSymbols) {\n        var modules = new Map();\n        var exportAlls = new Set();\n        for (var _i = 0, exportedSymbols_3 = exportedSymbols; _i < exportedSymbols_3.length; _i++) {\n            var symbol = exportedSymbols_3[_i];\n            if (symbol.reexport) {\n                // symbol.declaration is guarenteed to be defined during the phase this method is called.\n                var declaration = symbol.declaration;\n                var module_2 = declaration.module;\n                if (declaration.name == '*') {\n                    // Reexport all the symbols.\n                    exportAlls.add(declaration.module);\n                }\n                else {\n                    // Re-export the symbol as the exported name.\n                    var entry = modules.get(module_2);\n                    if (!entry) {\n                        entry = [];\n                        modules.set(module_2, entry);\n                    }\n                    var as = symbol.name;\n                    var name_4 = declaration.name;\n                    entry.push({ name: name_4, as: as });\n                }\n            }\n        }\n        return Array.from(exportAlls.values()).map(function (from) { return ({ from: from }); }).concat(Array.from(modules.entries()).map(function (_a) {\n            var from = _a[0], exports = _a[1];\n            return ({ export: exports, from: from });\n        }));\n    };\n    MetadataBundler.prototype.convertSymbol = function (symbol) {\n        // canonicalSymbol is ensured to be defined before this is called.\n        var canonicalSymbol = symbol.canonicalSymbol;\n        if (!canonicalSymbol.referenced) {\n            canonicalSymbol.referenced = true;\n            // declaration is ensured to be definded before this method is called.\n            var declaration = canonicalSymbol.declaration;\n            var module_3 = this.getMetadata(declaration.module);\n            if (module_3) {\n                var value = module_3.metadata[declaration.name];\n                if (value && !declaration.name.startsWith('___')) {\n                    canonicalSymbol.value = this.convertEntry(declaration.module, value);\n                }\n            }\n        }\n    };\n    MetadataBundler.prototype.convertEntry = function (moduleName, value) {\n        if (schema.isClassMetadata(value)) {\n            return this.convertClass(moduleName, value);\n        }\n        if (schema.isFunctionMetadata(value)) {\n            return this.convertFunction(moduleName, value);\n        }\n        if (schema.isInterfaceMetadata(value)) {\n            return value;\n        }\n        return this.convertValue(moduleName, value);\n    };\n    MetadataBundler.prototype.convertClass = function (moduleName, value) {\n        var _this = this;\n        return {\n            __symbolic: 'class',\n            arity: value.arity,\n            extends: this.convertExpression(moduleName, value.extends),\n            decorators: value.decorators && value.decorators.map(function (d) { return _this.convertExpression(moduleName, d); }),\n            members: this.convertMembers(moduleName, value.members),\n            statics: value.statics && this.convertStatics(moduleName, value.statics)\n        };\n    };\n    MetadataBundler.prototype.convertMembers = function (moduleName, members) {\n        var _this = this;\n        var result = {};\n        for (var name_5 in members) {\n            var value = members[name_5];\n            result[name_5] = value.map(function (v) { return _this.convertMember(moduleName, v); });\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertMember = function (moduleName, member) {\n        var _this = this;\n        var result = { __symbolic: member.__symbolic };\n        result.decorators =\n            member.decorators && member.decorators.map(function (d) { return _this.convertExpression(moduleName, d); });\n        if (schema.isMethodMetadata(member)) {\n            result.parameterDecorators = member.parameterDecorators &&\n                member.parameterDecorators.map(function (d) { return d && d.map(function (p) { return _this.convertExpression(moduleName, p); }); });\n            if (schema.isConstructorMetadata(member)) {\n                if (member.parameters) {\n                    result.parameters =\n                        member.parameters.map(function (p) { return _this.convertExpression(moduleName, p); });\n                }\n            }\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertStatics = function (moduleName, statics) {\n        var result = {};\n        for (var key in statics) {\n            var value = statics[key];\n            result[key] = schema.isFunctionMetadata(value) ? this.convertFunction(moduleName, value) : value;\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertFunction = function (moduleName, value) {\n        var _this = this;\n        return {\n            __symbolic: 'function',\n            parameters: value.parameters,\n            defaults: value.defaults && value.defaults.map(function (v) { return _this.convertValue(moduleName, v); }),\n            value: this.convertValue(moduleName, value.value)\n        };\n    };\n    MetadataBundler.prototype.convertValue = function (moduleName, value) {\n        var _this = this;\n        if (isPrimitive(value)) {\n            return value;\n        }\n        if (schema.isMetadataError(value)) {\n            return this.convertError(moduleName, value);\n        }\n        if (schema.isMetadataSymbolicExpression(value)) {\n            return this.convertExpression(moduleName, value);\n        }\n        if (Array.isArray(value)) {\n            return value.map(function (v) { return _this.convertValue(moduleName, v); });\n        }\n        // Otherwise it is a metadata object.\n        var object = value;\n        var result = {};\n        for (var key in object) {\n            result[key] = this.convertValue(moduleName, object[key]);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertExpression = function (moduleName, value) {\n        if (value) {\n            switch (value.__symbolic) {\n                case 'error':\n                    return this.convertError(moduleName, value);\n                case 'reference':\n                    return this.convertReference(moduleName, value);\n                default:\n                    return this.convertExpressionNode(moduleName, value);\n            }\n        }\n        return value;\n    };\n    MetadataBundler.prototype.convertError = function (module, value) {\n        return {\n            __symbolic: 'error',\n            message: value.message,\n            line: value.line,\n            character: value.character,\n            context: value.context, module: module\n        };\n    };\n    MetadataBundler.prototype.convertReference = function (moduleName, value) {\n        var _this = this;\n        var createReference = function (symbol) {\n            var declaration = symbol.declaration;\n            if (declaration.module.startsWith('.')) {\n                // Reference to a symbol defined in the module. Ensure it is converted then return a\n                // references to the final symbol.\n                _this.convertSymbol(symbol);\n                return {\n                    __symbolic: 'reference',\n                    get name() {\n                        // Resolved lazily because private names are assigned late.\n                        var canonicalSymbol = symbol.canonicalSymbol;\n                        if (canonicalSymbol.isPrivate == null) {\n                            throw Error('Invalid state: isPrivate was not initialized');\n                        }\n                        return canonicalSymbol.isPrivate ? canonicalSymbol.privateName : canonicalSymbol.name;\n                    }\n                };\n            }\n            else {\n                // The symbol was a re-exported symbol from another module. Return a reference to the\n                // original imported symbol.\n                return { __symbolic: 'reference', name: declaration.name, module: declaration.module };\n            }\n        };\n        if (schema.isMetadataGlobalReferenceExpression(value)) {\n            var metadata = this.getMetadata(moduleName);\n            if (metadata && metadata.metadata && metadata.metadata[value.name]) {\n                // Reference to a symbol defined in the module\n                return createReference(this.canonicalSymbolOf(moduleName, value.name));\n            }\n            // If a reference has arguments, the arguments need to be converted.\n            if (value.arguments) {\n                return {\n                    __symbolic: 'reference',\n                    name: value.name,\n                    arguments: value.arguments.map(function (a) { return _this.convertValue(moduleName, a); })\n                };\n            }\n            // Global references without arguments (such as to Math or JSON) are unmodified.\n            return value;\n        }\n        if (schema.isMetadataImportedSymbolReferenceExpression(value)) {\n            // References to imported symbols are separated into two, references to bundled modules and\n            // references to modules external to the bundle. If the module reference is relative it is\n            // assumed to be in the bundle. If it is Global it is assumed to be outside the bundle.\n            // References to symbols outside the bundle are left unmodified. References to symbol inside\n            // the bundle need to be converted to a bundle import reference reachable from the bundle\n            // index.\n            if (value.module.startsWith('.')) {\n                // Reference is to a symbol defined inside the module. Convert the reference to a reference\n                // to the canonical symbol.\n                var referencedModule = resolveModule(value.module, moduleName);\n                var referencedName = value.name;\n                return createReference(this.canonicalSymbolOf(referencedModule, referencedName));\n            }\n            // Value is a reference to a symbol defined outside the module.\n            if (value.arguments) {\n                // If a reference has arguments the arguments need to be converted.\n                return {\n                    __symbolic: 'reference',\n                    name: value.name,\n                    module: value.module,\n                    arguments: value.arguments.map(function (a) { return _this.convertValue(moduleName, a); })\n                };\n            }\n            return value;\n        }\n        if (schema.isMetadataModuleReferenceExpression(value)) {\n            // Cannot support references to bundled modules as the internal modules of a bundle are erased\n            // by the bundler.\n            if (value.module.startsWith('.')) {\n                return {\n                    __symbolic: 'error',\n                    message: 'Unsupported bundled module reference',\n                    context: { module: value.module }\n                };\n            }\n            // References to unbundled modules are unmodified.\n            return value;\n        }\n    };\n    MetadataBundler.prototype.convertExpressionNode = function (moduleName, value) {\n        var result = { __symbolic: value.__symbolic };\n        for (var key in value) {\n            result[key] = this.convertValue(moduleName, value[key]);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.symbolOf = function (module, name) {\n        var symbolKey = module + \":\" + name;\n        var symbol = this.symbolMap.get(symbolKey);\n        if (!symbol) {\n            symbol = { module: module, name: name };\n            this.symbolMap.set(symbolKey, symbol);\n        }\n        return symbol;\n    };\n    MetadataBundler.prototype.canonicalSymbolOf = function (module, name) {\n        // Ensure the module has been seen.\n        this.exportAll(module);\n        var symbol = this.symbolOf(module, name);\n        if (!symbol.canonicalSymbol) {\n            this.canonicalizeSymbol(symbol);\n        }\n        return symbol;\n    };\n    return MetadataBundler;\n}());\nexports.MetadataBundler = MetadataBundler;\nvar CompilerHostAdapter = (function () {\n    function CompilerHostAdapter(host) {\n        this.host = host;\n        this.collector = new collector.MetadataCollector();\n    }\n    CompilerHostAdapter.prototype.getMetadataFor = function (fileName) {\n        var sourceFile = this.host.getSourceFile(fileName + '.ts', ts__default.ScriptTarget.Latest);\n        return this.collector.getMetadata(sourceFile);\n    };\n    return CompilerHostAdapter;\n}());\nexports.CompilerHostAdapter = CompilerHostAdapter;\nfunction resolveModule(importName, from) {\n    if (importName.startsWith('.') && from) {\n        var normalPath = path__default.normalize(path__default.join(path__default.dirname(from), importName));\n        if (!normalPath.startsWith('.') && from.startsWith('.')) {\n            // path.normalize() preserves leading '../' but not './'. This adds it back.\n            normalPath = \".\" + path__default.sep + normalPath;\n        }\n        // Replace windows path delimiters with forward-slashes. Otherwise the paths are not\n        // TypeScript compatible when building the bundle.\n        return normalPath.replace(/\\\\/g, '/');\n    }\n    return importName;\n}\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\nfunction getRootExport(symbol) {\n    return symbol.reexportedAs ? getRootExport(symbol.reexportedAs) : symbol;\n}\nfunction getSymbolDeclaration(symbol) {\n    return symbol.exports ? getSymbolDeclaration(symbol.exports) : symbol;\n}\n\n});\n\nvar index_writer = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar INDEX_HEADER = \"/**\\n * Generated bundle index. Do not edit.\\n */\\n\";\nfunction privateEntriesToIndex(index, privates) {\n    var results = [INDEX_HEADER];\n    // Export all of the index symbols.\n    results.push(\"export * from '\" + index + \"';\", '');\n    // Simplify the exports\n    var exports = new Map();\n    for (var _i = 0, privates_1 = privates; _i < privates_1.length; _i++) {\n        var entry = privates_1[_i];\n        var entries = exports.get(entry.module);\n        if (!entries) {\n            entries = [];\n            exports.set(entry.module, entries);\n        }\n        entries.push(entry);\n    }\n    var compareEntries = compare(function (e) { return e.name; });\n    var compareModules = compare(function (e) { return e[0]; });\n    var orderedExports = Array.from(exports)\n        .map(function (_a) {\n        var module = _a[0], entries = _a[1];\n        return [module, entries.sort(compareEntries)];\n    })\n        .sort(compareModules);\n    for (var _a = 0, orderedExports_1 = orderedExports; _a < orderedExports_1.length; _a++) {\n        var _b = orderedExports_1[_a], module_1 = _b[0], entries = _b[1];\n        var symbols = entries.map(function (e) { return e.name + \" as \" + e.privateName; });\n        results.push(\"export {\" + symbols + \"} from '\" + module_1 + \"';\");\n    }\n    return results.join('\\n');\n}\nexports.privateEntriesToIndex = privateEntriesToIndex;\nfunction compare(select) {\n    return function (a, b) {\n        var ak = select(a);\n        var bk = select(b);\n        return ak > bk ? 1 : ak < bk ? -1 : 0;\n    };\n}\n\n});\n\nvar bundle_index_host = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\n\nvar DTS = /\\.d\\.ts$/;\nvar JS_EXT = /(\\.js|)$/;\nfunction createSyntheticIndexHost(delegate, syntheticIndex) {\n    var normalSyntheticIndexName = path__default.normalize(syntheticIndex.name);\n    var indexContent = syntheticIndex.content;\n    var indexMetadata = syntheticIndex.metadata;\n    var newHost = Object.create(delegate);\n    newHost.fileExists = function (fileName) {\n        return path__default.normalize(fileName) == normalSyntheticIndexName || delegate.fileExists(fileName);\n    };\n    newHost.readFile = function (fileName) {\n        return path__default.normalize(fileName) == normalSyntheticIndexName ? indexContent :\n            delegate.readFile(fileName);\n    };\n    newHost.getSourceFile =\n        function (fileName, languageVersion, onError) {\n            if (path__default.normalize(fileName) == normalSyntheticIndexName) {\n                return ts__default.createSourceFile(fileName, indexContent, languageVersion, true);\n            }\n            return delegate.getSourceFile(fileName, languageVersion, onError);\n        };\n    newHost.writeFile =\n        function (fileName, data, writeByteOrderMark, onError, sourceFiles) {\n            delegate.writeFile(fileName, data, writeByteOrderMark, onError, sourceFiles);\n            if (fileName.match(DTS) && sourceFiles && sourceFiles.length == 1 &&\n                path__default.normalize(sourceFiles[0].fileName) == normalSyntheticIndexName) {\n                // If we are writing the synthetic index, write the metadata along side.\n                var metadataName = fileName.replace(DTS, '.metadata.json');\n                fs__default.writeFileSync(metadataName, indexMetadata, { encoding: 'utf8' });\n            }\n        };\n    return newHost;\n}\nfunction createBundleIndexHost(ngOptions, rootFiles, host) {\n    var files = rootFiles.filter(function (f) { return !DTS.test(f); });\n    if (files.length != 1) {\n        return {\n            host: host,\n            errors: [{\n                    file: null,\n                    start: null,\n                    length: null,\n                    messageText: 'Angular compiler option \"flatModuleIndex\" requires one and only one .ts file in the \"files\" field.',\n                    category: ts__default.DiagnosticCategory.Error,\n                    code: 0\n                }]\n        };\n    }\n    var file = files[0];\n    var indexModule = file.replace(/\\.ts$/, '');\n    var bundler$$1 = new bundler.MetadataBundler(indexModule, ngOptions.flatModuleId, new bundler.CompilerHostAdapter(host));\n    var metadataBundle = bundler$$1.getMetadataBundle();\n    var metadata = JSON.stringify(metadataBundle.metadata);\n    var name = path__default.join(path__default.dirname(indexModule), ngOptions.flatModuleOutFile.replace(JS_EXT, '.ts'));\n    var libraryIndex = \"./\" + path__default.basename(indexModule);\n    var content = index_writer.privateEntriesToIndex(libraryIndex, metadataBundle.privates);\n    host = createSyntheticIndexHost(host, { name: name, content: content, metadata: metadata });\n    return { host: host, indexName: name };\n}\nexports.createBundleIndexHost = createBundleIndexHost;\n\n});\n\nvar index = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(collector);\n__export(schema);\n__export(bundle_index_host);\n\n});\n\nvar compiler_1 = ( compiler && undefined ) || compiler;\n\nvar compiler_host = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (commonjsGlobal && commonjsGlobal.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\n\nvar EXT = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar DTS = /\\.d\\.ts$/;\nvar NODE_MODULES = '/node_modules/';\nvar IS_GENERATED = /\\.(ngfactory|ngstyle|ngsummary)$/;\nvar GENERATED_FILES = /\\.ngfactory\\.ts$|\\.ngstyle\\.ts$|\\.ngsummary\\.ts$/;\nvar GENERATED_OR_DTS_FILES = /\\.d\\.ts$|\\.ngfactory\\.ts$|\\.ngstyle\\.ts$|\\.ngsummary\\.ts$/;\nvar SHALLOW_IMPORT = /^((\\w|-)+|(@(\\w|-)+(\\/(\\w|-)+)+))$/;\nvar BaseAotCompilerHost = (function () {\n    function BaseAotCompilerHost(options, context) {\n        this.options = options;\n        this.context = context;\n        this.resolverCache = new Map();\n        this.flatModuleIndexCache = new Map();\n        this.flatModuleIndexNames = new Set();\n        this.flatModuleIndexRedirectNames = new Set();\n    }\n    BaseAotCompilerHost.prototype.getMetadataFor = function (filePath) {\n        if (!this.context.fileExists(filePath)) {\n            // If the file doesn't exists then we cannot return metadata for the file.\n            // This will occur if the user referenced a declared module for which no file\n            // exists for the module (i.e. jQuery or angularjs).\n            return;\n        }\n        if (DTS.test(filePath)) {\n            var metadatas = this.readMetadata(filePath);\n            if (!metadatas) {\n                // If there is a .d.ts file but no metadata file we need to produce a\n                // metadata from the .d.ts file as metadata files capture reexports\n                // (starting with v3).\n                metadatas = [this.upgradeMetadataWithDtsData({ '__symbolic': 'module', 'version': 1, 'metadata': {} }, filePath)];\n            }\n            return metadatas;\n        }\n        // Attention: don't cache this, so that e.g. the LanguageService\n        // can read in changes from source files in the metadata!\n        var metadata = this.getMetadataForSourceFile(filePath);\n        return metadata ? [metadata] : [];\n    };\n    BaseAotCompilerHost.prototype.readMetadata = function (dtsFilePath) {\n        var metadatas = this.resolverCache.get(dtsFilePath);\n        if (metadatas) {\n            return metadatas;\n        }\n        var metadataPath = dtsFilePath.replace(DTS, '.metadata.json');\n        if (!this.context.fileExists(metadataPath)) {\n            return undefined;\n        }\n        try {\n            var metadataOrMetadatas = JSON.parse(this.context.readFile(metadataPath));\n            var metadatas_1 = metadataOrMetadatas ?\n                (Array.isArray(metadataOrMetadatas) ? metadataOrMetadatas : [metadataOrMetadatas]) :\n                [];\n            if (metadatas_1.length) {\n                var maxMetadata = metadatas_1.reduce(function (p, c) { return p.version > c.version ? p : c; });\n                if (maxMetadata.version < index.METADATA_VERSION) {\n                    metadatas_1.push(this.upgradeMetadataWithDtsData(maxMetadata, dtsFilePath));\n                }\n            }\n            this.resolverCache.set(dtsFilePath, metadatas_1);\n            return metadatas_1;\n        }\n        catch (e) {\n            console.error(\"Failed to read JSON file \" + metadataPath);\n            throw e;\n        }\n    };\n    BaseAotCompilerHost.prototype.upgradeMetadataWithDtsData = function (oldMetadata, dtsFilePath) {\n        // patch v1 to v3 by adding exports and the `extends` clause.\n        // patch v3 to v4 by adding `interface` symbols for TypeAlias\n        var newMetadata = {\n            '__symbolic': 'module',\n            'version': index.METADATA_VERSION,\n            'metadata': __assign({}, oldMetadata.metadata),\n        };\n        if (oldMetadata.exports) {\n            newMetadata.exports = oldMetadata.exports;\n        }\n        if (oldMetadata.importAs) {\n            newMetadata.importAs = oldMetadata.importAs;\n        }\n        if (oldMetadata.origins) {\n            newMetadata.origins = oldMetadata.origins;\n        }\n        var dtsMetadata = this.getMetadataForSourceFile(dtsFilePath);\n        if (dtsMetadata) {\n            for (var prop in dtsMetadata.metadata) {\n                if (!newMetadata.metadata[prop]) {\n                    newMetadata.metadata[prop] = dtsMetadata.metadata[prop];\n                }\n            }\n            // Only copy exports from exports from metadata prior to version 3.\n            // Starting with version 3 the collector began collecting exports and\n            // this should be redundant. Also, with bundler will rewrite the exports\n            // which will hoist the exports from modules referenced indirectly causing\n            // the imports to be different than the .d.ts files and using the .d.ts file\n            // exports would cause the StaticSymbolResolver to redirect symbols to the\n            // incorrect location.\n            if ((!oldMetadata.version || oldMetadata.version < 3) && dtsMetadata.exports) {\n                newMetadata.exports = dtsMetadata.exports;\n            }\n        }\n        return newMetadata;\n    };\n    BaseAotCompilerHost.prototype.loadResource = function (filePath) {\n        if (this.context.readResource)\n            return this.context.readResource(filePath);\n        if (!this.context.fileExists(filePath)) {\n            throw compiler_1.syntaxError(\"Error: Resource file not found: \" + filePath);\n        }\n        return this.context.readFile(filePath);\n    };\n    BaseAotCompilerHost.prototype.loadSummary = function (filePath) {\n        if (this.context.fileExists(filePath)) {\n            return this.context.readFile(filePath);\n        }\n        return null;\n    };\n    BaseAotCompilerHost.prototype.isSourceFile = function (filePath) {\n        var excludeRegex = this.options.generateCodeForLibraries === false ? GENERATED_OR_DTS_FILES : GENERATED_FILES;\n        if (excludeRegex.test(filePath)) {\n            return false;\n        }\n        if (DTS.test(filePath)) {\n            // Check for a bundle index.\n            if (this.hasBundleIndex(filePath)) {\n                var normalFilePath = path__default.normalize(filePath);\n                return this.flatModuleIndexNames.has(normalFilePath) ||\n                    this.flatModuleIndexRedirectNames.has(normalFilePath);\n            }\n        }\n        return true;\n    };\n    BaseAotCompilerHost.prototype.hasBundleIndex = function (filePath) {\n        var _this = this;\n        var checkBundleIndex = function (directory) {\n            var result = _this.flatModuleIndexCache.get(directory);\n            if (result == null) {\n                if (path__default.basename(directory) == 'node_module') {\n                    // Don't look outside the node_modules this package is installed in.\n                    result = false;\n                }\n                else {\n                    // A bundle index exists if the typings .d.ts file has a metadata.json that has an\n                    // importAs.\n                    try {\n                        var packageFile = path__default.join(directory, 'package.json');\n                        if (_this.context.fileExists(packageFile)) {\n                            // Once we see a package.json file, assume false until it we find the bundle index.\n                            result = false;\n                            var packageContent = JSON.parse(_this.context.readFile(packageFile));\n                            if (packageContent.typings) {\n                                var typings = path__default.normalize(path__default.join(directory, packageContent.typings));\n                                if (DTS.test(typings)) {\n                                    var metadataFile = typings.replace(DTS, '.metadata.json');\n                                    if (_this.context.fileExists(metadataFile)) {\n                                        var metadata = JSON.parse(_this.context.readFile(metadataFile));\n                                        if (metadata.flatModuleIndexRedirect) {\n                                            _this.flatModuleIndexRedirectNames.add(typings);\n                                            // Note: don't set result = true,\n                                            // as this would mark this folder\n                                            // as having a bundleIndex too early without\n                                            // filling the bundleIndexNames.\n                                        }\n                                        else if (metadata.importAs) {\n                                            _this.flatModuleIndexNames.add(typings);\n                                            result = true;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            var parent_1 = path__default.dirname(directory);\n                            if (parent_1 != directory) {\n                                // Try the parent directory.\n                                result = checkBundleIndex(parent_1);\n                            }\n                            else {\n                                result = false;\n                            }\n                        }\n                    }\n                    catch (e) {\n                        // If we encounter any errors assume we this isn't a bundle index.\n                        result = false;\n                    }\n                }\n                _this.flatModuleIndexCache.set(directory, result);\n            }\n            return result;\n        };\n        return checkBundleIndex(path__default.dirname(filePath));\n    };\n    return BaseAotCompilerHost;\n}());\nexports.BaseAotCompilerHost = BaseAotCompilerHost;\n// TODO(tbosch): remove this once G3 uses the transformer compiler!\nvar CompilerHost = (function (_super) {\n    __extends(CompilerHost, _super);\n    function CompilerHost(program, options, context, collectorOptions) {\n        var _this = _super.call(this, options, context) || this;\n        _this.program = program;\n        _this.moduleFileNames = new Map();\n        _this.metadataProvider = new index.MetadataCollector(collectorOptions);\n        // normalize the path so that it never ends with '/'.\n        _this.basePath = path__default.normalize(path__default.join(_this.options.basePath, '.')).replace(/\\\\/g, '/');\n        _this.genDir = path__default.normalize(path__default.join(_this.options.genDir, '.')).replace(/\\\\/g, '/');\n        var genPath = path__default.relative(_this.basePath, _this.genDir);\n        _this.isGenDirChildOfRootDir = genPath === '' || !genPath.startsWith('..');\n        _this.resolveModuleNameHost = Object.create(_this.context);\n        // When calling ts.resolveModuleName,\n        // additional allow checks for .d.ts files to be done based on\n        // checks for .ngsummary.json files,\n        // so that our codegen depends on fewer inputs and requires to be called\n        // less often.\n        // This is needed as we use ts.resolveModuleName in reflector_host\n        // and it should be able to resolve summary file names.\n        _this.resolveModuleNameHost.fileExists = function (fileName) {\n            if (_this.context.fileExists(fileName)) {\n                return true;\n            }\n            if (DTS.test(fileName)) {\n                var base = fileName.substring(0, fileName.length - 5);\n                return _this.context.fileExists(base + '.ngsummary.json');\n            }\n            return false;\n        };\n        _this.urlResolver = compiler_1.createOfflineCompileUrlResolver();\n        return _this;\n    }\n    CompilerHost.prototype.getSourceFile = function (filePath) {\n        var sf = this.program.getSourceFile(filePath);\n        if (!sf) {\n            if (this.context.fileExists(filePath)) {\n                var sourceText = this.context.readFile(filePath);\n                sf = ts__default.createSourceFile(filePath, sourceText, ts__default.ScriptTarget.Latest, true);\n            }\n            else {\n                throw new Error(\"Source file \" + filePath + \" not present in program.\");\n            }\n        }\n        return sf;\n    };\n    CompilerHost.prototype.getMetadataForSourceFile = function (filePath) {\n        return this.metadataProvider.getMetadata(this.getSourceFile(filePath));\n    };\n    CompilerHost.prototype.toSummaryFileName = function (fileName, referringSrcFileName) {\n        return fileName.replace(EXT, '') + '.d.ts';\n    };\n    CompilerHost.prototype.fromSummaryFileName = function (fileName, referringLibFileName) { return fileName; };\n    CompilerHost.prototype.calculateEmitPath = function (filePath) {\n        // Write codegen in a directory structure matching the sources.\n        var root = this.options.basePath;\n        for (var _i = 0, _a = this.options.rootDirs || []; _i < _a.length; _i++) {\n            var eachRootDir = _a[_i];\n            if (this.options.trace) {\n                console.error(\"Check if \" + filePath + \" is under rootDirs element \" + eachRootDir);\n            }\n            if (path__default.relative(eachRootDir, filePath).indexOf('.') !== 0) {\n                root = eachRootDir;\n            }\n        }\n        // transplant the codegen path to be inside the `genDir`\n        var relativePath = path__default.relative(root, filePath);\n        while (relativePath.startsWith('..' + path__default.sep)) {\n            // Strip out any `..` path such as: `../node_modules/@foo` as we want to put everything\n            // into `genDir`.\n            relativePath = relativePath.substr(3);\n        }\n        return path__default.join(this.options.genDir, relativePath);\n    };\n    // We use absolute paths on disk as canonical.\n    CompilerHost.prototype.getCanonicalFileName = function (fileName) { return fileName; };\n    CompilerHost.prototype.moduleNameToFileName = function (m, containingFile) {\n        var key = m + ':' + (containingFile || '');\n        var result = this.moduleFileNames.get(key) || null;\n        if (!result) {\n            if (!containingFile || !containingFile.length) {\n                if (m.indexOf('.') === 0) {\n                    throw new Error('Resolution of relative paths requires a containing file.');\n                }\n                // Any containing file gives the same result for absolute imports\n                containingFile = this.getCanonicalFileName(path__default.join(this.basePath, 'index.ts'));\n            }\n            m = m.replace(EXT, '');\n            var resolved = ts__default.resolveModuleName(m, containingFile.replace(/\\\\/g, '/'), this.options, this.resolveModuleNameHost)\n                .resolvedModule;\n            result = resolved ? this.getCanonicalFileName(resolved.resolvedFileName) : null;\n            this.moduleFileNames.set(key, result);\n        }\n        return result;\n    };\n    /**\n     * We want a moduleId that will appear in import statements in the generated code.\n     * These need to be in a form that system.js can load, so absolute file paths don't work.\n     *\n     * The `containingFile` is always in the `genDir`, where as the `importedFile` can be in\n     * `genDir`, `node_module` or `basePath`.  The `importedFile` is either a generated file or\n     * existing file.\n     *\n     *               | genDir   | node_module |  rootDir\n     * --------------+----------+-------------+----------\n     * generated     | relative |   relative  |   n/a\n     * existing file |   n/a    |   absolute  |  relative(*)\n     *\n     * NOTE: (*) the relative path is computed depending on `isGenDirChildOfRootDir`.\n     */\n    CompilerHost.prototype.fileNameToModuleName = function (importedFile, containingFile) {\n        // If a file does not yet exist (because we compile it later), we still need to\n        // assume it exists it so that the `resolve` method works!\n        if (importedFile !== containingFile && !this.context.fileExists(importedFile)) {\n            this.context.assumeFileExists(importedFile);\n        }\n        containingFile = this.rewriteGenDirPath(containingFile);\n        var containingDir = path__default.dirname(containingFile);\n        // drop extension\n        importedFile = importedFile.replace(EXT, '');\n        var nodeModulesIndex = importedFile.indexOf(NODE_MODULES);\n        var importModule = nodeModulesIndex === -1 ?\n            null :\n            importedFile.substring(nodeModulesIndex + NODE_MODULES.length);\n        var isGeneratedFile = IS_GENERATED.test(importedFile);\n        if (isGeneratedFile) {\n            // rewrite to genDir path\n            if (importModule) {\n                // it is generated, therefore we do a relative path to the factory\n                return this.dotRelative(containingDir, this.genDir + NODE_MODULES + importModule);\n            }\n            else {\n                // assume that import is also in `genDir`\n                importedFile = this.rewriteGenDirPath(importedFile);\n                return this.dotRelative(containingDir, importedFile);\n            }\n        }\n        else {\n            // user code import\n            if (importModule) {\n                return importModule;\n            }\n            else {\n                if (!this.isGenDirChildOfRootDir) {\n                    // assume that they are on top of each other.\n                    importedFile = importedFile.replace(this.basePath, this.genDir);\n                }\n                if (SHALLOW_IMPORT.test(importedFile)) {\n                    return importedFile;\n                }\n                return this.dotRelative(containingDir, importedFile);\n            }\n        }\n    };\n    CompilerHost.prototype.resourceNameToFileName = function (m, containingFile) {\n        return this.urlResolver.resolve(containingFile, m);\n    };\n    /**\n     * Moves the path into `genDir` folder while preserving the `node_modules` directory.\n     */\n    CompilerHost.prototype.rewriteGenDirPath = function (filepath) {\n        var nodeModulesIndex = filepath.indexOf(NODE_MODULES);\n        if (nodeModulesIndex !== -1) {\n            // If we are in node_modules, transplant them into `genDir`.\n            return path__default.join(this.genDir, filepath.substring(nodeModulesIndex));\n        }\n        else {\n            // pretend that containing file is on top of the `genDir` to normalize the paths.\n            // we apply the `genDir` => `rootDir` delta through `rootDirPrefix` later.\n            return filepath.replace(this.basePath, this.genDir);\n        }\n    };\n    CompilerHost.prototype.dotRelative = function (from, to) {\n        var rPath = path__default.relative(from, to).replace(/\\\\/g, '/');\n        return rPath.startsWith('.') ? rPath : './' + rPath;\n    };\n    return CompilerHost;\n}(BaseAotCompilerHost));\nexports.CompilerHost = CompilerHost;\nvar CompilerHostContextAdapter = (function () {\n    function CompilerHostContextAdapter() {\n        this.assumedExists = {};\n    }\n    CompilerHostContextAdapter.prototype.assumeFileExists = function (fileName) { this.assumedExists[fileName] = true; };\n    return CompilerHostContextAdapter;\n}());\nexports.CompilerHostContextAdapter = CompilerHostContextAdapter;\nvar ModuleResolutionHostAdapter = (function (_super) {\n    __extends(ModuleResolutionHostAdapter, _super);\n    function ModuleResolutionHostAdapter(host) {\n        var _this = _super.call(this) || this;\n        _this.host = host;\n        if (host.directoryExists) {\n            _this.directoryExists = function (directoryName) { return host.directoryExists(directoryName); };\n        }\n        return _this;\n    }\n    ModuleResolutionHostAdapter.prototype.fileExists = function (fileName) {\n        return this.assumedExists[fileName] || this.host.fileExists(fileName);\n    };\n    ModuleResolutionHostAdapter.prototype.readFile = function (fileName) { return this.host.readFile(fileName); };\n    ModuleResolutionHostAdapter.prototype.readResource = function (s) {\n        if (!this.host.fileExists(s)) {\n            // TODO: We should really have a test for error cases like this!\n            throw new Error(\"Compilation failed. Resource file not found: \" + s);\n        }\n        return Promise.resolve(this.host.readFile(s));\n    };\n    return ModuleResolutionHostAdapter;\n}(CompilerHostContextAdapter));\nexports.ModuleResolutionHostAdapter = ModuleResolutionHostAdapter;\nvar NodeCompilerHostContext = (function (_super) {\n    __extends(NodeCompilerHostContext, _super);\n    function NodeCompilerHostContext() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NodeCompilerHostContext.prototype.fileExists = function (fileName) {\n        return this.assumedExists[fileName] || fs__default.existsSync(fileName);\n    };\n    NodeCompilerHostContext.prototype.directoryExists = function (directoryName) {\n        try {\n            return fs__default.statSync(directoryName).isDirectory();\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    NodeCompilerHostContext.prototype.readFile = function (fileName) { return fs__default.readFileSync(fileName, 'utf8'); };\n    NodeCompilerHostContext.prototype.readResource = function (s) {\n        if (!this.fileExists(s)) {\n            // TODO: We should really have a test for error cases like this!\n            throw new Error(\"Compilation failed. Resource file not found: \" + s);\n        }\n        return Promise.resolve(this.readFile(s));\n    };\n    return NodeCompilerHostContext;\n}(CompilerHostContextAdapter));\nexports.NodeCompilerHostContext = NodeCompilerHostContext;\n\n});\n\nvar symbols$2 = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An enumeration of basic types.\n *\n * @experimental\n */\nvar BuiltinType;\n(function (BuiltinType) {\n    /**\n     * The type is a type that can hold any other type.\n     */\n    BuiltinType[BuiltinType[\"Any\"] = 0] = \"Any\";\n    /**\n     * The type of a string literal.\n     */\n    BuiltinType[BuiltinType[\"String\"] = 1] = \"String\";\n    /**\n     * The type of a numeric literal.\n     */\n    BuiltinType[BuiltinType[\"Number\"] = 2] = \"Number\";\n    /**\n     * The type of the `true` and `false` literals.\n     */\n    BuiltinType[BuiltinType[\"Boolean\"] = 3] = \"Boolean\";\n    /**\n     * The type of the `undefined` literal.\n     */\n    BuiltinType[BuiltinType[\"Undefined\"] = 4] = \"Undefined\";\n    /**\n     * the type of the `null` literal.\n     */\n    BuiltinType[BuiltinType[\"Null\"] = 5] = \"Null\";\n    /**\n     * the type is an unbound type parameter.\n     */\n    BuiltinType[BuiltinType[\"Unbound\"] = 6] = \"Unbound\";\n    /**\n     * Not a built-in type.\n     */\n    BuiltinType[BuiltinType[\"Other\"] = 7] = \"Other\";\n})(BuiltinType = exports.BuiltinType || (exports.BuiltinType = {}));\n\n});\n\nvar expression_type = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\nvar DiagnosticKind;\n(function (DiagnosticKind) {\n    DiagnosticKind[DiagnosticKind[\"Error\"] = 0] = \"Error\";\n    DiagnosticKind[DiagnosticKind[\"Warning\"] = 1] = \"Warning\";\n})(DiagnosticKind = exports.DiagnosticKind || (exports.DiagnosticKind = {}));\nvar TypeDiagnostic = (function () {\n    function TypeDiagnostic(kind, message, ast) {\n        this.kind = kind;\n        this.message = message;\n        this.ast = ast;\n    }\n    return TypeDiagnostic;\n}());\nexports.TypeDiagnostic = TypeDiagnostic;\n// AstType calculatetype of the ast given AST element.\nvar AstType = (function () {\n    function AstType(scope, query, context) {\n        this.scope = scope;\n        this.query = query;\n        this.context = context;\n    }\n    AstType.prototype.getType = function (ast) { return ast.visit(this); };\n    AstType.prototype.getDiagnostics = function (ast) {\n        this.diagnostics = [];\n        var type = ast.visit(this);\n        if (this.context.event && type.callable) {\n            this.reportWarning('Unexpected callable expression. Expected a method call', ast);\n        }\n        return this.diagnostics;\n    };\n    AstType.prototype.visitBinary = function (ast) {\n        var _this = this;\n        // Treat undefined and null as other.\n        function normalize(kind, other) {\n            switch (kind) {\n                case symbols$2.BuiltinType.Undefined:\n                case symbols$2.BuiltinType.Null:\n                    return normalize(other, symbols$2.BuiltinType.Other);\n            }\n            return kind;\n        }\n        var getType = function (ast, operation) {\n            var type = _this.getType(ast);\n            if (type.nullable) {\n                switch (operation) {\n                    case '&&':\n                    case '||':\n                    case '==':\n                    case '!=':\n                    case '===':\n                    case '!==':\n                        // Nullable allowed.\n                        break;\n                    default:\n                        _this.reportError(\"The expression might be null\", ast);\n                        break;\n                }\n                return _this.query.getNonNullableType(type);\n            }\n            return type;\n        };\n        var leftType = getType(ast.left, ast.operation);\n        var rightType = getType(ast.right, ast.operation);\n        var leftRawKind = this.query.getTypeKind(leftType);\n        var rightRawKind = this.query.getTypeKind(rightType);\n        var leftKind = normalize(leftRawKind, rightRawKind);\n        var rightKind = normalize(rightRawKind, leftRawKind);\n        // The following swtich implements operator typing similar to the\n        // type production tables in the TypeScript specification.\n        // https://github.com/Microsoft/TypeScript/blob/v1.8.10/doc/spec.md#4.19\n        var operKind = leftKind << 8 | rightKind;\n        switch (ast.operation) {\n            case '*':\n            case '/':\n            case '%':\n            case '-':\n            case '<<':\n            case '>>':\n            case '>>>':\n            case '&':\n            case '^':\n            case '|':\n                switch (operKind) {\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Number:\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.Number);\n                    default:\n                        var errorAst = ast.left;\n                        switch (leftKind) {\n                            case symbols$2.BuiltinType.Any:\n                            case symbols$2.BuiltinType.Number:\n                                errorAst = ast.right;\n                                break;\n                        }\n                        return this.reportError('Expected a numeric type', errorAst);\n                }\n            case '+':\n                switch (operKind) {\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Boolean:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Other:\n                    case symbols$2.BuiltinType.Boolean << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Other << 8 | symbols$2.BuiltinType.Any:\n                        return this.anyType;\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.Boolean << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.Boolean:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.Other:\n                    case symbols$2.BuiltinType.Other << 8 | symbols$2.BuiltinType.String:\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.String);\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Number:\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.Number);\n                    case symbols$2.BuiltinType.Boolean << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.Other << 8 | symbols$2.BuiltinType.Number:\n                        return this.reportError('Expected a number type', ast.left);\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Boolean:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Other:\n                        return this.reportError('Expected a number type', ast.right);\n                    default:\n                        return this.reportError('Expected operands to be a string or number type', ast);\n                }\n            case '>':\n            case '<':\n            case '<=':\n            case '>=':\n            case '==':\n            case '!=':\n            case '===':\n            case '!==':\n                switch (operKind) {\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Boolean:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Other:\n                    case symbols$2.BuiltinType.Boolean << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Boolean << 8 | symbols$2.BuiltinType.Boolean:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.Other << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Other << 8 | symbols$2.BuiltinType.Other:\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.Boolean);\n                    default:\n                        return this.reportError('Expected the operants to be of similar type or any', ast);\n                }\n            case '&&':\n                return rightType;\n            case '||':\n                return this.query.getTypeUnion(leftType, rightType);\n        }\n        return this.reportError(\"Unrecognized operator \" + ast.operation, ast);\n    };\n    AstType.prototype.visitChain = function (ast) {\n        if (this.diagnostics) {\n            // If we are producing diagnostics, visit the children\n            compiler_1.visitAstChildren(ast, this);\n        }\n        // The type of a chain is always undefined.\n        return this.query.getBuiltinType(symbols$2.BuiltinType.Undefined);\n    };\n    AstType.prototype.visitConditional = function (ast) {\n        // The type of a conditional is the union of the true and false conditions.\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        return this.query.getTypeUnion(this.getType(ast.trueExp), this.getType(ast.falseExp));\n    };\n    AstType.prototype.visitFunctionCall = function (ast) {\n        var _this = this;\n        // The type of a function call is the return type of the selected signature.\n        // The signature is selected based on the types of the arguments. Angular doesn't\n        // support contextual typing of arguments so this is simpler than TypeScript's\n        // version.\n        var args = ast.args.map(function (arg) { return _this.getType(arg); });\n        var target = this.getType(ast.target);\n        if (!target || !target.callable)\n            return this.reportError('Call target is not callable', ast);\n        var signature = target.selectSignature(args);\n        if (signature)\n            return signature.result;\n        // TODO: Consider a better error message here.\n        return this.reportError('Unable no compatible signature found for call', ast);\n    };\n    AstType.prototype.visitImplicitReceiver = function (ast) {\n        var _this = this;\n        // Return a pseudo-symbol for the implicit receiver.\n        // The members of the implicit receiver are what is defined by the\n        // scope passed into this class.\n        return {\n            name: '$implict',\n            kind: 'component',\n            language: 'ng-template',\n            type: undefined,\n            container: undefined,\n            callable: false,\n            nullable: false,\n            public: true,\n            definition: undefined,\n            members: function () { return _this.scope; },\n            signatures: function () { return []; },\n            selectSignature: function (types) { return undefined; },\n            indexed: function (argument) { return undefined; }\n        };\n    };\n    AstType.prototype.visitInterpolation = function (ast) {\n        // If we are producing diagnostics, visit the children.\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        return this.undefinedType;\n    };\n    AstType.prototype.visitKeyedRead = function (ast) {\n        var targetType = this.getType(ast.obj);\n        var keyType = this.getType(ast.key);\n        var result = targetType.indexed(keyType);\n        return result || this.anyType;\n    };\n    AstType.prototype.visitKeyedWrite = function (ast) {\n        // The write of a type is the type of the value being written.\n        return this.getType(ast.value);\n    };\n    AstType.prototype.visitLiteralArray = function (ast) {\n        var _this = this;\n        // A type literal is an array type of the union of the elements\n        return this.query.getArrayType((_a = this.query).getTypeUnion.apply(_a, ast.expressions.map(function (element) { return _this.getType(element); })));\n        var _a;\n    };\n    AstType.prototype.visitLiteralMap = function (ast) {\n        // If we are producing diagnostics, visit the children\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        // TODO: Return a composite type.\n        return this.anyType;\n    };\n    AstType.prototype.visitLiteralPrimitive = function (ast) {\n        // The type of a literal primitive depends on the value of the literal.\n        switch (ast.value) {\n            case true:\n            case false:\n                return this.query.getBuiltinType(symbols$2.BuiltinType.Boolean);\n            case null:\n                return this.query.getBuiltinType(symbols$2.BuiltinType.Null);\n            case undefined:\n                return this.query.getBuiltinType(symbols$2.BuiltinType.Undefined);\n            default:\n                switch (typeof ast.value) {\n                    case 'string':\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.String);\n                    case 'number':\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.Number);\n                    default:\n                        return this.reportError('Unrecognized primitive', ast);\n                }\n        }\n    };\n    AstType.prototype.visitMethodCall = function (ast) {\n        return this.resolveMethodCall(this.getType(ast.receiver), ast);\n    };\n    AstType.prototype.visitPipe = function (ast) {\n        var _this = this;\n        // The type of a pipe node is the return type of the pipe's transform method. The table returned\n        // by getPipes() is expected to contain symbols with the corresponding transform method type.\n        var pipe = this.query.getPipes().get(ast.name);\n        if (!pipe)\n            return this.reportError(\"No pipe by the name \" + ast.name + \" found\", ast);\n        var expType = this.getType(ast.exp);\n        var signature = pipe.selectSignature([expType].concat(ast.args.map(function (arg) { return _this.getType(arg); })));\n        if (!signature)\n            return this.reportError('Unable to resolve signature for pipe invocation', ast);\n        return signature.result;\n    };\n    AstType.prototype.visitPrefixNot = function (ast) {\n        // The type of a prefix ! is always boolean.\n        return this.query.getBuiltinType(symbols$2.BuiltinType.Boolean);\n    };\n    AstType.prototype.visitNonNullAssert = function (ast) {\n        var expressionType = this.getType(ast.expression);\n        return this.query.getNonNullableType(expressionType);\n    };\n    AstType.prototype.visitPropertyRead = function (ast) {\n        return this.resolvePropertyRead(this.getType(ast.receiver), ast);\n    };\n    AstType.prototype.visitPropertyWrite = function (ast) {\n        // The type of a write is the type of the value being written.\n        return this.getType(ast.value);\n    };\n    AstType.prototype.visitQuote = function (ast) {\n        // The type of a quoted expression is any.\n        return this.query.getBuiltinType(symbols$2.BuiltinType.Any);\n    };\n    AstType.prototype.visitSafeMethodCall = function (ast) {\n        return this.resolveMethodCall(this.query.getNonNullableType(this.getType(ast.receiver)), ast);\n    };\n    AstType.prototype.visitSafePropertyRead = function (ast) {\n        return this.resolvePropertyRead(this.query.getNonNullableType(this.getType(ast.receiver)), ast);\n    };\n    Object.defineProperty(AstType.prototype, \"anyType\", {\n        get: function () {\n            var result = this._anyType;\n            if (!result) {\n                result = this._anyType = this.query.getBuiltinType(symbols$2.BuiltinType.Any);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstType.prototype, \"undefinedType\", {\n        get: function () {\n            var result = this._undefinedType;\n            if (!result) {\n                result = this._undefinedType = this.query.getBuiltinType(symbols$2.BuiltinType.Undefined);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AstType.prototype.resolveMethodCall = function (receiverType, ast) {\n        var _this = this;\n        if (this.isAny(receiverType)) {\n            return this.anyType;\n        }\n        // The type of a method is the selected methods result type.\n        var method = receiverType.members().get(ast.name);\n        if (!method)\n            return this.reportError(\"Unknown method '\" + ast.name + \"'\", ast);\n        if (!method.type)\n            return this.reportError(\"Could not find a type for '\" + ast.name + \"'\", ast);\n        if (!method.type.callable)\n            return this.reportError(\"Member '\" + ast.name + \"' is not callable\", ast);\n        var signature = method.type.selectSignature(ast.args.map(function (arg) { return _this.getType(arg); }));\n        if (!signature)\n            return this.reportError(\"Unable to resolve signature for call of method \" + ast.name, ast);\n        return signature.result;\n    };\n    AstType.prototype.resolvePropertyRead = function (receiverType, ast) {\n        if (this.isAny(receiverType)) {\n            return this.anyType;\n        }\n        // The type of a property read is the seelcted member's type.\n        var member = receiverType.members().get(ast.name);\n        if (!member) {\n            var receiverInfo = receiverType.name;\n            if (receiverInfo == '$implict') {\n                receiverInfo =\n                    'The component declaration, template variable declarations, and element references do';\n            }\n            else if (receiverType.nullable) {\n                return this.reportError(\"The expression might be null\", ast.receiver);\n            }\n            else {\n                receiverInfo = \"'\" + receiverInfo + \"' does\";\n            }\n            return this.reportError(\"Identifier '\" + ast.name + \"' is not defined. \" + receiverInfo + \" not contain such a member\", ast);\n        }\n        if (!member.public) {\n            var receiverInfo = receiverType.name;\n            if (receiverInfo == '$implict') {\n                receiverInfo = 'the component';\n            }\n            else {\n                receiverInfo = \"'\" + receiverInfo + \"'\";\n            }\n            this.reportWarning(\"Identifier '\" + ast.name + \"' refers to a private member of \" + receiverInfo, ast);\n        }\n        return member.type;\n    };\n    AstType.prototype.reportError = function (message, ast) {\n        if (this.diagnostics) {\n            this.diagnostics.push(new TypeDiagnostic(DiagnosticKind.Error, message, ast));\n        }\n        return this.anyType;\n    };\n    AstType.prototype.reportWarning = function (message, ast) {\n        if (this.diagnostics) {\n            this.diagnostics.push(new TypeDiagnostic(DiagnosticKind.Warning, message, ast));\n        }\n        return this.anyType;\n    };\n    AstType.prototype.isAny = function (symbol) {\n        return !symbol || this.query.getTypeKind(symbol) == symbols$2.BuiltinType.Any ||\n            (!!symbol.type && this.isAny(symbol.type));\n    };\n    return AstType;\n}());\nexports.AstType = AstType;\n\n});\n\nvar expression_diagnostics = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\nfunction getTemplateExpressionDiagnostics(info) {\n    var visitor = new ExpressionDiagnosticsVisitor(info, function (path$$1, includeEvent) {\n        return getExpressionScope(info, path$$1, includeEvent);\n    });\n    compiler_1.templateVisitAll(visitor, info.templateAst);\n    return visitor.diagnostics;\n}\nexports.getTemplateExpressionDiagnostics = getTemplateExpressionDiagnostics;\nfunction getExpressionDiagnostics(scope, ast, query, context) {\n    if (context === void 0) { context = {}; }\n    var analyzer = new expression_type.AstType(scope, query, context);\n    analyzer.getDiagnostics(ast);\n    return analyzer.diagnostics;\n}\nexports.getExpressionDiagnostics = getExpressionDiagnostics;\nfunction getReferences(info) {\n    var result = [];\n    function processReferences(references) {\n        var _loop_1 = function (reference) {\n            var type = undefined;\n            if (reference.value) {\n                type = info.query.getTypeSymbol(compiler_1.tokenReference(reference.value));\n            }\n            result.push({\n                name: reference.name,\n                kind: 'reference',\n                type: type || info.query.getBuiltinType(symbols$2.BuiltinType.Any),\n                get definition() { return getDefinitionOf(info, reference); }\n            });\n        };\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var reference = references_1[_i];\n            _loop_1(reference);\n        }\n    }\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visitEmbeddedTemplate = function (ast, context) {\n            _super.prototype.visitEmbeddedTemplate.call(this, ast, context);\n            processReferences(ast.references);\n        };\n        class_1.prototype.visitElement = function (ast, context) {\n            _super.prototype.visitElement.call(this, ast, context);\n            processReferences(ast.references);\n        };\n        return class_1;\n    }(compiler_1.RecursiveTemplateAstVisitor));\n    compiler_1.templateVisitAll(visitor, info.templateAst);\n    return result;\n}\nfunction getDefinitionOf(info, ast) {\n    if (info.fileName) {\n        var templateOffset = info.offset;\n        return [{\n                fileName: info.fileName,\n                span: {\n                    start: ast.sourceSpan.start.offset + templateOffset,\n                    end: ast.sourceSpan.end.offset + templateOffset\n                }\n            }];\n    }\n}\nfunction getVarDeclarations(info, path$$1) {\n    var result = [];\n    var current = path$$1.tail;\n    while (current) {\n        if (current instanceof compiler_1.EmbeddedTemplateAst) {\n            var _loop_2 = function (variable) {\n                var name_1 = variable.name;\n                // Find the first directive with a context.\n                var context = current.directives.map(function (d) { return info.query.getTemplateContext(d.directive.type.reference); })\n                    .find(function (c) { return !!c; });\n                // Determine the type of the context field referenced by variable.value.\n                var type = undefined;\n                if (context) {\n                    var value = context.get(variable.value);\n                    if (value) {\n                        type = value.type;\n                        var kind = info.query.getTypeKind(type);\n                        if (kind === symbols$2.BuiltinType.Any || kind == symbols$2.BuiltinType.Unbound) {\n                            // The any type is not very useful here. For special cases, such as ngFor, we can do\n                            // better.\n                            type = refinedVariableType(type, info, current);\n                        }\n                    }\n                }\n                if (!type) {\n                    type = info.query.getBuiltinType(symbols$2.BuiltinType.Any);\n                }\n                result.push({\n                    name: name_1,\n                    kind: 'variable', type: type, get definition() { return getDefinitionOf(info, variable); }\n                });\n            };\n            for (var _i = 0, _a = current.variables; _i < _a.length; _i++) {\n                var variable = _a[_i];\n                _loop_2(variable);\n            }\n        }\n        current = path$$1.parentOf(current);\n    }\n    return result;\n}\nfunction refinedVariableType(type, info, templateElement) {\n    // Special case the ngFor directive\n    var ngForDirective = templateElement.directives.find(function (d) {\n        var name = compiler_1.identifierName(d.directive.type);\n        return name == 'NgFor' || name == 'NgForOf';\n    });\n    if (ngForDirective) {\n        var ngForOfBinding = ngForDirective.inputs.find(function (i) { return i.directiveName == 'ngForOf'; });\n        if (ngForOfBinding) {\n            var bindingType = new expression_type.AstType(info.members, info.query, {}).getType(ngForOfBinding.value);\n            if (bindingType) {\n                var result = info.query.getElementType(bindingType);\n                if (result) {\n                    return result;\n                }\n            }\n        }\n    }\n    // We can't do better, return any\n    return info.query.getBuiltinType(symbols$2.BuiltinType.Any);\n}\nfunction getEventDeclaration(info, includeEvent) {\n    var result = [];\n    if (includeEvent) {\n        // TODO: Determine the type of the event parameter based on the Observable<T> or EventEmitter<T>\n        // of the event.\n        result = [{ name: '$event', kind: 'variable', type: info.query.getBuiltinType(symbols$2.BuiltinType.Any) }];\n    }\n    return result;\n}\nfunction getExpressionScope(info, path$$1, includeEvent) {\n    var result = info.members;\n    var references = getReferences(info);\n    var variables = getVarDeclarations(info, path$$1);\n    var events = getEventDeclaration(info, includeEvent);\n    if (references.length || variables.length || events.length) {\n        var referenceTable = info.query.createSymbolTable(references);\n        var variableTable = info.query.createSymbolTable(variables);\n        var eventsTable = info.query.createSymbolTable(events);\n        result = info.query.mergeSymbolTable([result, referenceTable, variableTable, eventsTable]);\n    }\n    return result;\n}\nexports.getExpressionScope = getExpressionScope;\nvar ExpressionDiagnosticsVisitor = (function (_super) {\n    __extends(ExpressionDiagnosticsVisitor, _super);\n    function ExpressionDiagnosticsVisitor(info, getExpressionScope) {\n        var _this = _super.call(this) || this;\n        _this.info = info;\n        _this.getExpressionScope = getExpressionScope;\n        _this.diagnostics = [];\n        _this.path = new compiler_1.AstPath([]);\n        return _this;\n    }\n    ExpressionDiagnosticsVisitor.prototype.visitDirective = function (ast, context) {\n        // Override the default child visitor to ignore the host properties of a directive.\n        if (ast.inputs && ast.inputs.length) {\n            compiler_1.templateVisitAll(this, ast.inputs, context);\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitBoundText = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, ast.sourceSpan.start.offset, false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitDirectiveProperty = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitElementProperty = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitEvent = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.handler, this.attributeValueLocation(ast), true);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitVariable = function (ast) {\n        var directive = this.directiveSummary;\n        if (directive && ast.value) {\n            var context = this.info.query.getTemplateContext(directive.type.reference);\n            if (context && !context.has(ast.value)) {\n                if (ast.value === '$implicit') {\n                    this.reportError('The template context does not have an implicit value', spanOf(ast.sourceSpan));\n                }\n                else {\n                    this.reportError(\"The template context does not defined a member called '\" + ast.value + \"'\", spanOf(ast.sourceSpan));\n                }\n            }\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitElement = function (ast, context) {\n        this.push(ast);\n        _super.prototype.visitElement.call(this, ast, context);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var previousDirectiveSummary = this.directiveSummary;\n        this.push(ast);\n        // Find directive that refernces this template\n        this.directiveSummary =\n            ast.directives.map(function (d) { return d.directive; }).find(function (d) { return hasTemplateReference(d.type); });\n        // Process children\n        _super.prototype.visitEmbeddedTemplate.call(this, ast, context);\n        this.pop();\n        this.directiveSummary = previousDirectiveSummary;\n    };\n    ExpressionDiagnosticsVisitor.prototype.attributeValueLocation = function (ast) {\n        var path$$1 = compiler_1.findNode(this.info.htmlAst, ast.sourceSpan.start.offset);\n        var last = path$$1.tail;\n        if (last instanceof compiler_1.Attribute && last.valueSpan) {\n            // Add 1 for the quote.\n            return last.valueSpan.start.offset + 1;\n        }\n        return ast.sourceSpan.start.offset;\n    };\n    ExpressionDiagnosticsVisitor.prototype.diagnoseExpression = function (ast, offset, includeEvent) {\n        var _this = this;\n        var scope = this.getExpressionScope(this.path, includeEvent);\n        (_a = this.diagnostics).push.apply(_a, getExpressionDiagnostics(scope, ast, this.info.query, {\n            event: includeEvent\n        }).map(function (d) { return ({\n            span: offsetSpan(d.ast.span, offset + _this.info.offset),\n            kind: d.kind,\n            message: d.message\n        }); }));\n        var _a;\n    };\n    ExpressionDiagnosticsVisitor.prototype.push = function (ast) { this.path.push(ast); };\n    ExpressionDiagnosticsVisitor.prototype.pop = function () { this.path.pop(); };\n    ExpressionDiagnosticsVisitor.prototype.reportError = function (message, span) {\n        if (span) {\n            this.diagnostics.push({ span: offsetSpan(span, this.info.offset), kind: expression_type.DiagnosticKind.Error, message: message });\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.reportWarning = function (message, span) {\n        this.diagnostics.push({ span: offsetSpan(span, this.info.offset), kind: expression_type.DiagnosticKind.Warning, message: message });\n    };\n    return ExpressionDiagnosticsVisitor;\n}(compiler_1.RecursiveTemplateAstVisitor));\nfunction hasTemplateReference(type) {\n    if (type.diDeps) {\n        for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n            var diDep = _a[_i];\n            if (diDep.token && diDep.token.identifier &&\n                compiler_1.identifierName(diDep.token.identifier) == 'TemplateRef')\n                return true;\n        }\n    }\n    return false;\n}\nfunction offsetSpan(span, amount) {\n    return { start: span.start + amount, end: span.end + amount };\n}\nfunction spanOf(sourceSpan) {\n    return { start: sourceSpan.start.offset, end: sourceSpan.end.offset };\n}\n\n});\n\nvar typescript_symbols = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\n// In TypeScript 2.1 these flags moved\n// These helpers work for both 2.0 and 2.1.\nvar isPrivate = ts__default.ModifierFlags ?\n    (function (node) {\n        return !!(ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Private);\n    }) :\n    (function (node) { return !!(node.flags & ts__default.NodeFlags.Private); });\nvar isReferenceType = ts__default.ObjectFlags ?\n    (function (type) {\n        return !!(type.flags & ts__default.TypeFlags.Object &&\n            type.objectFlags & ts__default.ObjectFlags.Reference);\n    }) :\n    (function (type) { return !!(type.flags & ts__default.TypeFlags.Reference); });\nfunction getSymbolQuery(program, checker, source, fetchPipes) {\n    return new TypeScriptSymbolQuery(program, checker, source, fetchPipes);\n}\nexports.getSymbolQuery = getSymbolQuery;\nfunction getClassMembers(program, checker, staticSymbol) {\n    var declaration = getClassFromStaticSymbol(program, staticSymbol);\n    if (declaration) {\n        var type = checker.getTypeAtLocation(declaration);\n        var node = program.getSourceFile(staticSymbol.filePath);\n        return new TypeWrapper(type, { node: node, program: program, checker: checker }).members();\n    }\n}\nexports.getClassMembers = getClassMembers;\nfunction getClassMembersFromDeclaration(program, checker, source, declaration) {\n    var type = checker.getTypeAtLocation(declaration);\n    return new TypeWrapper(type, { node: source, program: program, checker: checker }).members();\n}\nexports.getClassMembersFromDeclaration = getClassMembersFromDeclaration;\nfunction getClassFromStaticSymbol(program, type) {\n    var source = program.getSourceFile(type.filePath);\n    if (source) {\n        return ts__default.forEachChild(source, function (child) {\n            if (child.kind === ts__default.SyntaxKind.ClassDeclaration) {\n                var classDeclaration = child;\n                if (classDeclaration.name != null && classDeclaration.name.text === type.name) {\n                    return classDeclaration;\n                }\n            }\n        });\n    }\n    return undefined;\n}\nexports.getClassFromStaticSymbol = getClassFromStaticSymbol;\nfunction getPipesTable(source, program, checker, pipes) {\n    return new PipesTable(pipes, { program: program, checker: checker, node: source });\n}\nexports.getPipesTable = getPipesTable;\nvar TypeScriptSymbolQuery = (function () {\n    function TypeScriptSymbolQuery(program, checker, source, fetchPipes) {\n        this.program = program;\n        this.checker = checker;\n        this.source = source;\n        this.fetchPipes = fetchPipes;\n        this.typeCache = new Map();\n    }\n    TypeScriptSymbolQuery.prototype.getTypeKind = function (symbol) { return typeKindOf(this.getTsTypeOf(symbol)); };\n    TypeScriptSymbolQuery.prototype.getBuiltinType = function (kind) {\n        var result = this.typeCache.get(kind);\n        if (!result) {\n            var type = getBuiltinTypeFromTs(kind, { checker: this.checker, node: this.source, program: this.program });\n            result =\n                new TypeWrapper(type, { program: this.program, checker: this.checker, node: this.source });\n            this.typeCache.set(kind, result);\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getTypeUnion = function () {\n        var types = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            types[_i] = arguments[_i];\n        }\n        // No API exists so return any if the types are not all the same type.\n        var result = undefined;\n        if (types.length) {\n            result = types[0];\n            for (var i = 1; i < types.length; i++) {\n                if (types[i] != result) {\n                    result = undefined;\n                    break;\n                }\n            }\n        }\n        return result || this.getBuiltinType(symbols$2.BuiltinType.Any);\n    };\n    TypeScriptSymbolQuery.prototype.getArrayType = function (type) { return this.getBuiltinType(symbols$2.BuiltinType.Any); };\n    TypeScriptSymbolQuery.prototype.getElementType = function (type) {\n        if (type instanceof TypeWrapper) {\n            var elementType = getTypeParameterOf(type.tsType, 'Array');\n            if (elementType) {\n                return new TypeWrapper(elementType, type.context);\n            }\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getNonNullableType = function (symbol) {\n        if (symbol instanceof TypeWrapper && (typeof this.checker.getNonNullableType == 'function')) {\n            var tsType = symbol.tsType;\n            var nonNullableType = this.checker.getNonNullableType(tsType);\n            if (nonNullableType != tsType) {\n                return new TypeWrapper(nonNullableType, symbol.context);\n            }\n            else if (nonNullableType == tsType) {\n                return symbol;\n            }\n        }\n        return this.getBuiltinType(symbols$2.BuiltinType.Any);\n    };\n    TypeScriptSymbolQuery.prototype.getPipes = function () {\n        var result = this.pipesCache;\n        if (!result) {\n            result = this.pipesCache = this.fetchPipes();\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getTemplateContext = function (type) {\n        var context = { node: this.source, program: this.program, checker: this.checker };\n        var typeSymbol = findClassSymbolInContext(type, context);\n        if (typeSymbol) {\n            var contextType = this.getTemplateRefContextType(typeSymbol);\n            if (contextType)\n                return new SymbolWrapper(contextType, context).members();\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getTypeSymbol = function (type) {\n        var context = { node: this.source, program: this.program, checker: this.checker };\n        var typeSymbol = findClassSymbolInContext(type, context);\n        return typeSymbol && new SymbolWrapper(typeSymbol, context);\n    };\n    TypeScriptSymbolQuery.prototype.createSymbolTable = function (symbols) {\n        var result = new MapSymbolTable();\n        result.addAll(symbols.map(function (s) { return new DeclaredSymbol(s); }));\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.mergeSymbolTable = function (symbolTables) {\n        var result = new MapSymbolTable();\n        for (var _i = 0, symbolTables_1 = symbolTables; _i < symbolTables_1.length; _i++) {\n            var symbolTable = symbolTables_1[_i];\n            result.addAll(symbolTable.values());\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getSpanAt = function (line, column) {\n        return spanAt(this.source, line, column);\n    };\n    TypeScriptSymbolQuery.prototype.getTemplateRefContextType = function (typeSymbol) {\n        var type = this.checker.getTypeOfSymbolAtLocation(typeSymbol, this.source);\n        var constructor = type.symbol && type.symbol.members &&\n            getFromSymbolTable(type.symbol.members, '__constructor');\n        if (constructor) {\n            var constructorDeclaration = constructor.declarations[0];\n            for (var _i = 0, _a = constructorDeclaration.parameters; _i < _a.length; _i++) {\n                var parameter = _a[_i];\n                var type_1 = this.checker.getTypeAtLocation(parameter.type);\n                if (type_1.symbol.name == 'TemplateRef' && isReferenceType(type_1)) {\n                    var typeReference = type_1;\n                    if (typeReference.typeArguments && typeReference.typeArguments.length === 1) {\n                        return typeReference.typeArguments[0].symbol;\n                    }\n                }\n            }\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getTsTypeOf = function (symbol) {\n        var type = this.getTypeWrapper(symbol);\n        return type && type.tsType;\n    };\n    TypeScriptSymbolQuery.prototype.getTypeWrapper = function (symbol) {\n        var type = undefined;\n        if (symbol instanceof TypeWrapper) {\n            type = symbol;\n        }\n        else if (symbol.type instanceof TypeWrapper) {\n            type = symbol.type;\n        }\n        return type;\n    };\n    return TypeScriptSymbolQuery;\n}());\nfunction typeCallable(type) {\n    var signatures = type.getCallSignatures();\n    return signatures && signatures.length != 0;\n}\nfunction signaturesOf(type, context) {\n    return type.getCallSignatures().map(function (s) { return new SignatureWrapper(s, context); });\n}\nfunction selectSignature(type, context, types) {\n    // TODO: Do a better job of selecting the right signature.\n    var signatures = type.getCallSignatures();\n    return signatures.length ? new SignatureWrapper(signatures[0], context) : undefined;\n}\nvar TypeWrapper = (function () {\n    function TypeWrapper(tsType, context) {\n        this.tsType = tsType;\n        this.context = context;\n        this.kind = 'type';\n        this.language = 'typescript';\n        this.type = undefined;\n        this.container = undefined;\n        this.public = true;\n        if (!tsType) {\n            throw Error('Internal: null type');\n        }\n    }\n    Object.defineProperty(TypeWrapper.prototype, \"name\", {\n        get: function () {\n            var symbol = this.tsType.symbol;\n            return (symbol && symbol.name) || '<anonymous>';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"callable\", {\n        get: function () { return typeCallable(this.tsType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"nullable\", {\n        get: function () {\n            return this.context.checker.getNonNullableType(this.tsType) != this.tsType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"definition\", {\n        get: function () {\n            var symbol = this.tsType.getSymbol();\n            return symbol ? definitionFromTsSymbol(symbol) : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeWrapper.prototype.members = function () {\n        return new SymbolTableWrapper(this.tsType.getProperties(), this.context);\n    };\n    TypeWrapper.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    TypeWrapper.prototype.selectSignature = function (types) {\n        return selectSignature(this.tsType, this.context, types);\n    };\n    TypeWrapper.prototype.indexed = function (argument) { return undefined; };\n    return TypeWrapper;\n}());\nvar SymbolWrapper = (function () {\n    function SymbolWrapper(symbol, context) {\n        this.context = context;\n        this.nullable = false;\n        this.language = 'typescript';\n        this.symbol = symbol && context && (symbol.flags & ts__default.SymbolFlags.Alias) ?\n            context.checker.getAliasedSymbol(symbol) :\n            symbol;\n    }\n    Object.defineProperty(SymbolWrapper.prototype, \"name\", {\n        get: function () { return this.symbol.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"kind\", {\n        get: function () { return this.callable ? 'method' : 'property'; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"type\", {\n        get: function () { return new TypeWrapper(this.tsType, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"container\", {\n        get: function () { return getContainerOf(this.symbol, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"public\", {\n        get: function () {\n            // Symbols that are not explicitly made private are public.\n            return !isSymbolPrivate(this.symbol);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"callable\", {\n        get: function () { return typeCallable(this.tsType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"definition\", {\n        get: function () { return definitionFromTsSymbol(this.symbol); },\n        enumerable: true,\n        configurable: true\n    });\n    SymbolWrapper.prototype.members = function () {\n        if (!this._members) {\n            if ((this.symbol.flags & (ts__default.SymbolFlags.Class | ts__default.SymbolFlags.Interface)) != 0) {\n                var declaredType = this.context.checker.getDeclaredTypeOfSymbol(this.symbol);\n                var typeWrapper = new TypeWrapper(declaredType, this.context);\n                this._members = typeWrapper.members();\n            }\n            else {\n                this._members = new SymbolTableWrapper(this.symbol.members, this.context);\n            }\n        }\n        return this._members;\n    };\n    SymbolWrapper.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    SymbolWrapper.prototype.selectSignature = function (types) {\n        return selectSignature(this.tsType, this.context, types);\n    };\n    SymbolWrapper.prototype.indexed = function (argument) { return undefined; };\n    Object.defineProperty(SymbolWrapper.prototype, \"tsType\", {\n        get: function () {\n            var type = this._tsType;\n            if (!type) {\n                type = this._tsType =\n                    this.context.checker.getTypeOfSymbolAtLocation(this.symbol, this.context.node);\n            }\n            return type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SymbolWrapper;\n}());\nvar DeclaredSymbol = (function () {\n    function DeclaredSymbol(declaration) {\n        this.declaration = declaration;\n        this.language = 'ng-template';\n        this.nullable = false;\n        this.public = true;\n    }\n    Object.defineProperty(DeclaredSymbol.prototype, \"name\", {\n        get: function () { return this.declaration.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"kind\", {\n        get: function () { return this.declaration.kind; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"container\", {\n        get: function () { return undefined; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"type\", {\n        get: function () { return this.declaration.type; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"callable\", {\n        get: function () { return this.declaration.type.callable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"definition\", {\n        get: function () { return this.declaration.definition; },\n        enumerable: true,\n        configurable: true\n    });\n    DeclaredSymbol.prototype.members = function () { return this.declaration.type.members(); };\n    DeclaredSymbol.prototype.signatures = function () { return this.declaration.type.signatures(); };\n    DeclaredSymbol.prototype.selectSignature = function (types) {\n        return this.declaration.type.selectSignature(types);\n    };\n    DeclaredSymbol.prototype.indexed = function (argument) { return undefined; };\n    return DeclaredSymbol;\n}());\nvar SignatureWrapper = (function () {\n    function SignatureWrapper(signature, context) {\n        this.signature = signature;\n        this.context = context;\n    }\n    Object.defineProperty(SignatureWrapper.prototype, \"arguments\", {\n        get: function () {\n            return new SymbolTableWrapper(this.signature.getParameters(), this.context);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SignatureWrapper.prototype, \"result\", {\n        get: function () { return new TypeWrapper(this.signature.getReturnType(), this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    return SignatureWrapper;\n}());\nvar SignatureResultOverride = (function () {\n    function SignatureResultOverride(signature, resultType) {\n        this.signature = signature;\n        this.resultType = resultType;\n    }\n    Object.defineProperty(SignatureResultOverride.prototype, \"arguments\", {\n        get: function () { return this.signature.arguments; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SignatureResultOverride.prototype, \"result\", {\n        get: function () { return this.resultType; },\n        enumerable: true,\n        configurable: true\n    });\n    return SignatureResultOverride;\n}());\nvar toSymbolTable = isTypescriptVersion('2.2') ?\n    (function (symbols) {\n        var result = new Map();\n        for (var _i = 0, symbols_2 = symbols; _i < symbols_2.length; _i++) {\n            var symbol = symbols_2[_i];\n            result.set(symbol.name, symbol);\n        }\n        return result;\n    }) :\n    (function (symbols) {\n        var result = {};\n        for (var _i = 0, symbols_3 = symbols; _i < symbols_3.length; _i++) {\n            var symbol = symbols_3[_i];\n            result[symbol.name] = symbol;\n        }\n        return result;\n    });\nfunction toSymbols(symbolTable) {\n    if (!symbolTable)\n        return [];\n    var table = symbolTable;\n    if (typeof table.values === 'function') {\n        return Array.from(table.values());\n    }\n    var result = [];\n    var own = typeof table.hasOwnProperty === 'function' ?\n        function (name) { return table.hasOwnProperty(name); } :\n        function (name) { return !!table[name]; };\n    for (var name_1 in table) {\n        if (own(name_1)) {\n            result.push(table[name_1]);\n        }\n    }\n    return result;\n}\nvar SymbolTableWrapper = (function () {\n    function SymbolTableWrapper(symbols, context) {\n        this.context = context;\n        symbols = symbols || [];\n        if (Array.isArray(symbols)) {\n            this.symbols = symbols;\n            this.symbolTable = toSymbolTable(symbols);\n        }\n        else {\n            this.symbols = toSymbols(symbols);\n            this.symbolTable = symbols;\n        }\n    }\n    Object.defineProperty(SymbolTableWrapper.prototype, \"size\", {\n        get: function () { return this.symbols.length; },\n        enumerable: true,\n        configurable: true\n    });\n    SymbolTableWrapper.prototype.get = function (key) {\n        var symbol = getFromSymbolTable(this.symbolTable, key);\n        return symbol ? new SymbolWrapper(symbol, this.context) : undefined;\n    };\n    SymbolTableWrapper.prototype.has = function (key) {\n        var table = this.symbolTable;\n        return (typeof table.has === 'function') ? table.has(key) : table[key] != null;\n    };\n    SymbolTableWrapper.prototype.values = function () {\n        var _this = this;\n        return this.symbols.map(function (s) { return new SymbolWrapper(s, _this.context); });\n    };\n    return SymbolTableWrapper;\n}());\nvar MapSymbolTable = (function () {\n    function MapSymbolTable() {\n        this.map = new Map();\n        this._values = [];\n    }\n    Object.defineProperty(MapSymbolTable.prototype, \"size\", {\n        get: function () { return this.map.size; },\n        enumerable: true,\n        configurable: true\n    });\n    MapSymbolTable.prototype.get = function (key) { return this.map.get(key); };\n    MapSymbolTable.prototype.add = function (symbol) {\n        if (this.map.has(symbol.name)) {\n            var previous = this.map.get(symbol.name);\n            this._values[this._values.indexOf(previous)] = symbol;\n        }\n        this.map.set(symbol.name, symbol);\n        this._values.push(symbol);\n    };\n    MapSymbolTable.prototype.addAll = function (symbols) {\n        for (var _i = 0, symbols_4 = symbols; _i < symbols_4.length; _i++) {\n            var symbol = symbols_4[_i];\n            this.add(symbol);\n        }\n    };\n    MapSymbolTable.prototype.has = function (key) { return this.map.has(key); };\n    MapSymbolTable.prototype.values = function () {\n        // Switch to this.map.values once iterables are supported by the target language.\n        return this._values;\n    };\n    return MapSymbolTable;\n}());\nvar PipesTable = (function () {\n    function PipesTable(pipes, context) {\n        this.pipes = pipes;\n        this.context = context;\n    }\n    Object.defineProperty(PipesTable.prototype, \"size\", {\n        get: function () { return this.pipes.length; },\n        enumerable: true,\n        configurable: true\n    });\n    PipesTable.prototype.get = function (key) {\n        var pipe = this.pipes.find(function (pipe) { return pipe.name == key; });\n        if (pipe) {\n            return new PipeSymbol(pipe, this.context);\n        }\n    };\n    PipesTable.prototype.has = function (key) { return this.pipes.find(function (pipe) { return pipe.name == key; }) != null; };\n    PipesTable.prototype.values = function () {\n        var _this = this;\n        return this.pipes.map(function (pipe) { return new PipeSymbol(pipe, _this.context); });\n    };\n    return PipesTable;\n}());\nvar PipeSymbol = (function () {\n    function PipeSymbol(pipe, context) {\n        this.pipe = pipe;\n        this.context = context;\n        this.kind = 'pipe';\n        this.language = 'typescript';\n        this.container = undefined;\n        this.callable = true;\n        this.nullable = false;\n        this.public = true;\n    }\n    Object.defineProperty(PipeSymbol.prototype, \"name\", {\n        get: function () { return this.pipe.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PipeSymbol.prototype, \"type\", {\n        get: function () { return new TypeWrapper(this.tsType, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PipeSymbol.prototype, \"definition\", {\n        get: function () {\n            var symbol = this.tsType.getSymbol();\n            return symbol ? definitionFromTsSymbol(symbol) : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PipeSymbol.prototype.members = function () { return EmptyTable.instance; };\n    PipeSymbol.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    PipeSymbol.prototype.selectSignature = function (types) {\n        var signature = selectSignature(this.tsType, this.context, types);\n        if (types.length == 1) {\n            var parameterType = types[0];\n            if (parameterType instanceof TypeWrapper) {\n                var resultType = undefined;\n                switch (this.name) {\n                    case 'async':\n                        switch (parameterType.name) {\n                            case 'Observable':\n                            case 'Promise':\n                            case 'EventEmitter':\n                                resultType = getTypeParameterOf(parameterType.tsType, parameterType.name);\n                                break;\n                            default:\n                                resultType = getBuiltinTypeFromTs(symbols$2.BuiltinType.Any, this.context);\n                                break;\n                        }\n                        break;\n                    case 'slice':\n                        resultType = getTypeParameterOf(parameterType.tsType, 'Array');\n                        break;\n                }\n                if (resultType) {\n                    signature = new SignatureResultOverride(signature, new TypeWrapper(resultType, parameterType.context));\n                }\n            }\n        }\n        return signature;\n    };\n    PipeSymbol.prototype.indexed = function (argument) { return undefined; };\n    Object.defineProperty(PipeSymbol.prototype, \"tsType\", {\n        get: function () {\n            var type = this._tsType;\n            if (!type) {\n                var classSymbol = this.findClassSymbol(this.pipe.type.reference);\n                if (classSymbol) {\n                    type = this._tsType = this.findTransformMethodType(classSymbol);\n                }\n                if (!type) {\n                    type = this._tsType = getBuiltinTypeFromTs(symbols$2.BuiltinType.Any, this.context);\n                }\n            }\n            return type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PipeSymbol.prototype.findClassSymbol = function (type) {\n        return findClassSymbolInContext(type, this.context);\n    };\n    PipeSymbol.prototype.findTransformMethodType = function (classSymbol) {\n        var classType = this.context.checker.getDeclaredTypeOfSymbol(classSymbol);\n        if (classType) {\n            var transform = classType.getProperty('transform');\n            if (transform) {\n                return this.context.checker.getTypeOfSymbolAtLocation(transform, this.context.node);\n            }\n        }\n    };\n    return PipeSymbol;\n}());\nfunction findClassSymbolInContext(type, context) {\n    var sourceFile = context.program.getSourceFile(type.filePath);\n    if (sourceFile) {\n        var moduleSymbol = sourceFile.module || sourceFile.symbol;\n        var exports_1 = context.checker.getExportsOfModule(moduleSymbol);\n        return (exports_1 || []).find(function (symbol) { return symbol.name == type.name; });\n    }\n}\nvar EmptyTable = (function () {\n    function EmptyTable() {\n        this.size = 0;\n    }\n    EmptyTable.prototype.get = function (key) { return undefined; };\n    EmptyTable.prototype.has = function (key) { return false; };\n    EmptyTable.prototype.values = function () { return []; };\n    EmptyTable.instance = new EmptyTable();\n    return EmptyTable;\n}());\nfunction isSymbolPrivate(s) {\n    return !!s.valueDeclaration && isPrivate(s.valueDeclaration);\n}\nfunction getBuiltinTypeFromTs(kind, context) {\n    var type;\n    var checker = context.checker;\n    var node = context.node;\n    switch (kind) {\n        case symbols$2.BuiltinType.Any:\n            type = checker.getTypeAtLocation(setParents({\n                kind: ts__default.SyntaxKind.AsExpression,\n                expression: { kind: ts__default.SyntaxKind.TrueKeyword },\n                type: { kind: ts__default.SyntaxKind.AnyKeyword }\n            }, node));\n            break;\n        case symbols$2.BuiltinType.Boolean:\n            type =\n                checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.TrueKeyword }, node));\n            break;\n        case symbols$2.BuiltinType.Null:\n            type =\n                checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.NullKeyword }, node));\n            break;\n        case symbols$2.BuiltinType.Number:\n            var numeric = { kind: ts__default.SyntaxKind.NumericLiteral };\n            setParents({ kind: ts__default.SyntaxKind.ExpressionStatement, expression: numeric }, node);\n            type = checker.getTypeAtLocation(numeric);\n            break;\n        case symbols$2.BuiltinType.String:\n            type = checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.NoSubstitutionTemplateLiteral }, node));\n            break;\n        case symbols$2.BuiltinType.Undefined:\n            type = checker.getTypeAtLocation(setParents({\n                kind: ts__default.SyntaxKind.VoidExpression,\n                expression: { kind: ts__default.SyntaxKind.NumericLiteral }\n            }, node));\n            break;\n        default:\n            throw new Error(\"Internal error, unhandled literal kind \" + kind + \":\" + symbols$2.BuiltinType[kind]);\n    }\n    return type;\n}\nfunction setParents(node, parent) {\n    node.parent = parent;\n    ts__default.forEachChild(node, function (child) { return setParents(child, node); });\n    return node;\n}\nfunction spanAt(sourceFile, line, column) {\n    if (line != null && column != null) {\n        var position_1 = ts__default.getPositionOfLineAndCharacter(sourceFile, line, column);\n        var findChild = function findChild(node) {\n            if (node.kind > ts__default.SyntaxKind.LastToken && node.pos <= position_1 && node.end > position_1) {\n                var betterNode = ts__default.forEachChild(node, findChild);\n                return betterNode || node;\n            }\n        };\n        var node = ts__default.forEachChild(sourceFile, findChild);\n        if (node) {\n            return { start: node.getStart(), end: node.getEnd() };\n        }\n    }\n}\nfunction definitionFromTsSymbol(symbol) {\n    var declarations = symbol.declarations;\n    if (declarations) {\n        return declarations.map(function (declaration) {\n            var sourceFile = declaration.getSourceFile();\n            return {\n                fileName: sourceFile.fileName,\n                span: { start: declaration.getStart(), end: declaration.getEnd() }\n            };\n        });\n    }\n}\nfunction parentDeclarationOf(node) {\n    while (node) {\n        switch (node.kind) {\n            case ts__default.SyntaxKind.ClassDeclaration:\n            case ts__default.SyntaxKind.InterfaceDeclaration:\n                return node;\n            case ts__default.SyntaxKind.SourceFile:\n                return undefined;\n        }\n        node = node.parent;\n    }\n}\nfunction getContainerOf(symbol, context) {\n    if (symbol.getFlags() & ts__default.SymbolFlags.ClassMember && symbol.declarations) {\n        for (var _i = 0, _a = symbol.declarations; _i < _a.length; _i++) {\n            var declaration = _a[_i];\n            var parent_1 = parentDeclarationOf(declaration);\n            if (parent_1) {\n                var type = context.checker.getTypeAtLocation(parent_1);\n                if (type) {\n                    return new TypeWrapper(type, context);\n                }\n            }\n        }\n    }\n}\nfunction getTypeParameterOf(type, name) {\n    if (type && type.symbol && type.symbol.name == name) {\n        var typeArguments = type.typeArguments;\n        if (typeArguments && typeArguments.length <= 1) {\n            return typeArguments[0];\n        }\n    }\n}\nfunction typeKindOf(type) {\n    if (type) {\n        if (type.flags & ts__default.TypeFlags.Any) {\n            return symbols$2.BuiltinType.Any;\n        }\n        else if (type.flags & (ts__default.TypeFlags.String | ts__default.TypeFlags.StringLike | ts__default.TypeFlags.StringLiteral)) {\n            return symbols$2.BuiltinType.String;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Number | ts__default.TypeFlags.NumberLike)) {\n            return symbols$2.BuiltinType.Number;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Undefined)) {\n            return symbols$2.BuiltinType.Undefined;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Null)) {\n            return symbols$2.BuiltinType.Null;\n        }\n        else if (type.flags & ts__default.TypeFlags.Union) {\n            // If all the constituent types of a union are the same kind, it is also that kind.\n            var candidate = null;\n            var unionType = type;\n            if (unionType.types.length > 0) {\n                candidate = typeKindOf(unionType.types[0]);\n                for (var _i = 0, _a = unionType.types; _i < _a.length; _i++) {\n                    var subType = _a[_i];\n                    if (candidate != typeKindOf(subType)) {\n                        return symbols$2.BuiltinType.Other;\n                    }\n                }\n            }\n            if (candidate != null) {\n                return candidate;\n            }\n        }\n        else if (type.flags & ts__default.TypeFlags.TypeParameter) {\n            return symbols$2.BuiltinType.Unbound;\n        }\n    }\n    return symbols$2.BuiltinType.Other;\n}\nfunction getFromSymbolTable(symbolTable, key) {\n    var table = symbolTable;\n    var symbol;\n    if (typeof table.get === 'function') {\n        // TS 2.2 uses a Map\n        symbol = table.get(key);\n    }\n    else {\n        // TS pre-2.2 uses an object\n        symbol = table[key];\n    }\n    return symbol;\n}\nfunction toNumbers(value) {\n    return value ? value.split('.').map(function (v) { return +v; }) : [];\n}\nfunction compareNumbers(a, b) {\n    for (var i = 0; i < a.length && i < b.length; i++) {\n        if (a[i] > b[i])\n            return 1;\n        if (a[i] < b[i])\n            return -1;\n    }\n    return 0;\n}\nfunction isTypescriptVersion(low, high) {\n    var tsNumbers = toNumbers(ts__default.version);\n    return compareNumbers(toNumbers(low), tsNumbers) <= 0 &&\n        compareNumbers(toNumbers(high), tsNumbers) >= 0;\n}\n\n});\n\nvar language_services = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n\nThe API from compiler-cli that language-service can see.\nIt is important that none the exported modules require anything other than\nAngular modules and Typescript as this will indirectly add a dependency\nto the language service.\n\n*/\n\nexports.CompilerHost = compiler_host.CompilerHost;\nexports.ModuleResolutionHostAdapter = compiler_host.ModuleResolutionHostAdapter;\nexports.NodeCompilerHostContext = compiler_host.NodeCompilerHostContext;\n\nexports.getExpressionDiagnostics = expression_diagnostics.getExpressionDiagnostics;\nexports.getExpressionScope = expression_diagnostics.getExpressionScope;\nexports.getTemplateExpressionDiagnostics = expression_diagnostics.getTemplateExpressionDiagnostics;\n\nexports.AstType = expression_type.AstType;\nexports.DiagnosticKind = expression_type.DiagnosticKind;\nexports.TypeDiagnostic = expression_type.TypeDiagnostic;\n\nexports.BuiltinType = symbols$2.BuiltinType;\n\nexports.getClassFromStaticSymbol = typescript_symbols.getClassFromStaticSymbol;\nexports.getClassMembers = typescript_symbols.getClassMembers;\nexports.getClassMembersFromDeclaration = typescript_symbols.getClassMembersFromDeclaration;\nexports.getPipesTable = typescript_symbols.getPipesTable;\nexports.getSymbolQuery = typescript_symbols.getSymbolQuery;\n\n});\n\nvar language_services_1 = language_services.CompilerHost;\nvar language_services_2 = language_services.ModuleResolutionHostAdapter;\nvar language_services_5 = language_services.getExpressionScope;\nvar language_services_6 = language_services.getTemplateExpressionDiagnostics;\nvar language_services_7 = language_services.AstType;\nvar language_services_10 = language_services.BuiltinType;\nvar language_services_13 = language_services.getClassMembersFromDeclaration;\nvar language_services_14 = language_services.getPipesTable;\nvar language_services_15 = language_services.getSymbolQuery;\n\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window$1 = typeof window !== 'undefined' && window;\nvar __self$1 = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global$1 = typeof commonjsGlobal !== 'undefined' && commonjsGlobal;\nvar _root = __window$1 || __global$1 || __self$1;\nvar root_1 = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n\n\nvar root = {\n\troot: root_1\n};\n\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nvar isFunction_2 = isFunction;\n\n\nvar isFunction_1 = {\n\tisFunction: isFunction_2\n};\n\nvar isArray_1 = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n\n\nvar isArray = {\n\tisArray: isArray_1\n};\n\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nvar isObject_2 = isObject;\n\n\nvar isObject_1 = {\n\tisObject: isObject_2\n};\n\n// typeof any so that it we don't have to cast when comparing a result to the error object\nvar errorObject_1 = { e: {} };\n\n\nvar errorObject = {\n\terrorObject: errorObject_1\n};\n\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.errorObject.e = e;\n        return errorObject.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nvar tryCatch_2 = tryCatch;\n\n\n\nvar tryCatch_1 = {\n\ttryCatch: tryCatch_2\n};\n\nvar __extends$2 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends$2(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nvar UnsubscriptionError_2 = UnsubscriptionError;\n\n\nvar UnsubscriptionError_1 = {\n\tUnsubscriptionError: UnsubscriptionError_2\n};\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.errorObject.e.errors) : [errorObject.errorObject.e]);\n            }\n        }\n        if (isArray.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nvar Subscription_2 = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n\n\nvar Subscription_1 = {\n\tSubscription: Subscription_2\n};\n\nvar empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n\n\nvar Observer = {\n\tempty: empty\n};\n\nvar rxSubscriber = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nvar Symbol = root.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n\n});\n\nvar __extends$1 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends$1(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nvar Subscriber_2 = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends$1(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n\n\nvar Subscriber_1 = {\n\tSubscriber: Subscriber_2\n};\n\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nvar toSubscriber_2 = toSubscriber;\n\n\nvar toSubscriber_1 = {\n\ttoSubscriber: toSubscriber_2\n};\n\nvar observable = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n\n});\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable$$1 = new Observable();\n        observable$$1.source = this;\n        observable$$1.operator = operator;\n        return observable$$1;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.root.Rx && root.root.Rx.config && root.root.Rx.config.Promise) {\n                PromiseCtor = root.root.Rx.config.Promise;\n            }\n            else if (root.root.Promise) {\n                PromiseCtor = root.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable.observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nvar Observable_2 = Observable;\n\n\nvar Observable_1 = {\n\tObservable: Observable_2\n};\n\nvar __extends$4 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends$4(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nvar ScalarObservable_2 = ScalarObservable;\n\n\nvar ScalarObservable_1 = {\n\tScalarObservable: ScalarObservable_2\n};\n\nvar __extends$5 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends$5(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nvar EmptyObservable_2 = EmptyObservable;\n\n\nvar EmptyObservable_1 = {\n\tEmptyObservable: EmptyObservable_2\n};\n\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nvar isScheduler_2 = isScheduler;\n\n\nvar isScheduler_1 = {\n\tisScheduler: isScheduler_2\n};\n\nvar __extends$3 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends$3(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nvar ArrayObservable_2 = ArrayObservable;\n\n\nvar ArrayObservable_1 = {\n\tArrayObservable: ArrayObservable_2\n};\n\nvar __extends$7 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends$7(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nvar OuterSubscriber_2 = OuterSubscriber;\n\n\nvar OuterSubscriber_1 = {\n\tOuterSubscriber: OuterSubscriber_2\n};\n\nvar isArrayLike_1 = (function (x) { return x && typeof x.length === 'number'; });\n\n\nvar isArrayLike = {\n\tisArrayLike: isArrayLike_1\n};\n\nfunction isPromise$2(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nvar isPromise_2 = isPromise$2;\n\n\nvar isPromise_1 = {\n\tisPromise: isPromise_2\n};\n\nvar iterator = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nfunction symbolIteratorPonyfill(root$$2) {\n    var Symbol = root$$2.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root$$2.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root$$2.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.iterator = symbolIteratorPonyfill(root.root);\n/**\n * @deprecated use iterator instead\n */\nexports.$$iterator = exports.iterator;\n\n});\n\nvar __extends$8 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends$8(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nvar InnerSubscriber_2 = InnerSubscriber;\n\n\nvar InnerSubscriber_1 = {\n\tInnerSubscriber: InnerSubscriber_2\n};\n\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike.isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[iterator.iterator] === 'function') {\n        var iterator$$1 = result[iterator.iterator]();\n        do {\n            var item = iterator$$1.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[observable.observable] === 'function') {\n        var obs = result[observable.observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = (\"You provided \" + value + \" where a stream was expected.\")\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\nvar subscribeToResult_2 = subscribeToResult;\n\n\nvar subscribeToResult_1 = {\n\tsubscribeToResult: subscribeToResult_2\n};\n\nvar __extends$6 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return this.lift(new MergeAllOperator(concurrent));\n}\nvar mergeAll_2 = mergeAll;\nvar MergeAllOperator = (function () {\n    function MergeAllOperator(concurrent) {\n        this.concurrent = concurrent;\n    }\n    MergeAllOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeAllSubscriber(observer, this.concurrent));\n    };\n    return MergeAllOperator;\n}());\nvar MergeAllOperator_1 = MergeAllOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeAllSubscriber = (function (_super) {\n    __extends$6(MergeAllSubscriber, _super);\n    function MergeAllSubscriber(destination, concurrent) {\n        _super.call(this, destination);\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n    }\n    MergeAllSubscriber.prototype._next = function (observable) {\n        if (this.active < this.concurrent) {\n            this.active++;\n            this.add(subscribeToResult_1.subscribeToResult(this, observable));\n        }\n        else {\n            this.buffer.push(observable);\n        }\n    };\n    MergeAllSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeAllSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeAllSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nvar MergeAllSubscriber_1 = MergeAllSubscriber;\n\n\nvar mergeAll_1 = {\n\tmergeAll: mergeAll_2,\n\tMergeAllOperator: MergeAllOperator_1,\n\tMergeAllSubscriber: MergeAllSubscriber_1\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge$2() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return this.lift.call(mergeStatic.apply(void 0, [this].concat(observables)));\n}\nvar merge_2$1 = merge$2;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction mergeStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler_1.isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n        return observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(concurrent));\n}\nvar mergeStatic_1 = mergeStatic;\n\n\nvar merge_1 = {\n\tmerge: merge_2$1,\n\tmergeStatic: mergeStatic_1\n};\n\nvar merge_2 = merge_1.mergeStatic;\n\nvar __extends$11 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends$11(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nvar ObjectUnsubscribedError_2 = ObjectUnsubscribedError;\n\n\nvar ObjectUnsubscribedError_1 = {\n\tObjectUnsubscribedError: ObjectUnsubscribedError_2\n};\n\nvar __extends$12 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends$12(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nvar SubjectSubscription_2 = SubjectSubscription;\n\n\nvar SubjectSubscription_1 = {\n\tSubjectSubscription: SubjectSubscription_2\n};\n\nvar __extends$10 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends$10(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nvar SubjectSubscriber_1 = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends$10(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nvar Subject_2 = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends$10(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nvar AnonymousSubject_1 = AnonymousSubject;\n\n\nvar Subject_1 = {\n\tSubjectSubscriber: SubjectSubscriber_1,\n\tSubject: Subject_2,\n\tAnonymousSubject: AnonymousSubject_1\n};\n\nvar __extends$9 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = (function (_super) {\n    __extends$9(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n        this._isComplete = false;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription_1.Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_1.Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return this.lift(new RefCountOperator(this));\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nvar ConnectableObservable_2 = ConnectableObservable;\nvar connectableProto = ConnectableObservable.prototype;\nvar connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = (function (_super) {\n    __extends$9(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber));\nvar RefCountOperator = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = (function (_super) {\n    __extends$9(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar ConnectableObservable_1 = {\n\tConnectableObservable: ConnectableObservable_2,\n\tconnectableObservableDescriptor: connectableObservableDescriptor\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    var subjectFactory;\n    if (typeof subjectOrSubjectFactory === 'function') {\n        subjectFactory = subjectOrSubjectFactory;\n    }\n    else {\n        subjectFactory = function subjectFactory() {\n            return subjectOrSubjectFactory;\n        };\n    }\n    if (typeof selector === 'function') {\n        return this.lift(new MulticastOperator(subjectFactory, selector));\n    }\n    var connectable = Object.create(this, ConnectableObservable_1.connectableObservableDescriptor);\n    connectable.source = this;\n    connectable.subjectFactory = subjectFactory;\n    return connectable;\n}\nvar multicast_2 = multicast;\nvar MulticastOperator = (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nvar MulticastOperator_1 = MulticastOperator;\n\n\nvar multicast_1 = {\n\tmulticast: multicast_2,\n\tMulticastOperator: MulticastOperator_1\n};\n\nfunction shareSubjectFactory() {\n    return new Subject_1.Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .publish().refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return multicast_1.multicast.call(this, shareSubjectFactory).refCount();\n}\nvar share_2 = share;\n\n/**\n * @license Angular v5.0.0-rc.1-931cf78\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar InjectionToken = (function () {\n    function InjectionToken(_desc) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\n\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__paramaters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {?} objOrType\n     * @return {?}\n     */\n    function DecoratorFactory(objOrType) {\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, objOrType);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new (/** @type {?} */ (DecoratorFactory))(objOrType);\n        var /** @type {?} */ TypeDecorator = /** @type {?} */ (function TypeDecorator(cls) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var /** @type {?} */ values = props.apply(void 0, args);\n            for (var /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = (/** @type {?} */ (ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Attribute$1$1 = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy$1 = {\n    /**\n       * `OnPush` means that the change detector's mode will be set to `CheckOnce` during hydration.\n       */\n    OnPush: 0,\n    /**\n       * `Default` means that the change detector's mode will be set to `CheckAlways` during hydration.\n       */\n    Default: 1,\n};\nChangeDetectionStrategy$1[ChangeDetectionStrategy$1.OnPush] = \"OnPush\";\nChangeDetectionStrategy$1[ChangeDetectionStrategy$1.Default] = \"Default\";\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Directive$1 = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Type of the Component decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Component$1 = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy$1.Default }, c));\n}, Directive$1);\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Pipe$1 = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar NgModule$1 = makeDecorator('NgModule', function (ngModule) { return ngModule; });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ViewEncapsulation$1 = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via\n       * {@link Component#styles} or {@link Component#styleUrls}, and adding the new Host Element\n       * attribute to all selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n};\nViewEncapsulation$1[ViewEncapsulation$1.Emulated] = \"Emulated\";\nViewEncapsulation$1[ViewEncapsulation$1.Native] = \"Native\";\nViewEncapsulation$1[ViewEncapsulation$1.None] = \"None\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar Version$1 = (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * \\@stable\n */\nvar VERSION$2 = new Version$1('5.0.0-rc.1-931cf78');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Inject$1 = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Injectable = makeDecorator('Injectable');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify$1(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify$1).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify$1(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef$1(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify$1(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new StaticInjector(providers, parent);\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new _NullInjector();\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = /** @type {?} */ ([]);\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = /** @type {?} */ ({});\nvar ɵ2 = GET_PROPERTY_NAME;\nvar USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ2 });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = (function () {\n    function StaticInjector(providers, parent) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        this.parent = parent;\n        var /** @type {?} */ records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    StaticInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        var /** @type {?} */ record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ tokenPath = e[NG_TEMP_TOKEN_PATH];\n            e.message = formatError('\\n' + e.message, tokenPath);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokens = /** @type {?} */ ([]), /** @type {?} */ records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify$1(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    var /** @type {?} */ deps = computeDeps(provider);\n    var /** @type {?} */ fn = IDENT;\n    var /** @type {?} */ value = EMPTY;\n    var /** @type {?} */ useNew = false;\n    var /** @type {?} */ provide = resolveForwardRef$1(provider.provide);\n    if (USE_VALUE$1 in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef$1((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef$1(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var /** @type {?} */ i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var /** @type {?} */ token = resolveForwardRef$1(provider.provide);\n            var /** @type {?} */ resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var /** @type {?} */ multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var /** @type {?} */ record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue);\n    }\n    catch (/** @type {?} */ e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var /** @type {?} */ path$$1 = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path$$1.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue) {\n    var /** @type {?} */ value;\n    if (record) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var /** @type {?} */ obj = undefined;\n            var /** @type {?} */ useNew = record.useNew;\n            var /** @type {?} */ fn = record.fn;\n            var /** @type {?} */ depRecords = record.deps;\n            var /** @type {?} */ deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var /** @type {?} */ i = 0; i < depRecords.length; i++) {\n                    var /** @type {?} */ depRecord = depRecords[i];\n                    var /** @type {?} */ options = depRecord.options;\n                    var /** @type {?} */ childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND));\n                }\n            }\n            record.value = value = useNew ? new ((_a = (/** @type {?} */ (fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else {\n        value = parent.get(token, notFoundValue);\n    }\n    return value;\n    var _a;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    var /** @type {?} */ deps = EMPTY;\n    var /** @type {?} */ providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n            var /** @type {?} */ options = 6;\n            var /** @type {?} */ token = resolveForwardRef$1(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n                    var /** @type {?} */ annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject$1) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef$1(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        var /** @type {?} */ token = resolveForwardRef$1((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE$1 in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction formatError(text, obj) {\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var /** @type {?} */ context = stringify$1(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify$1).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var /** @type {?} */ parts = /** @type {?} */ ([]);\n        for (var /** @type {?} */ key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var /** @type {?} */ value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify$1(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar ErrorHandler = (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify$1(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\n\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ keys = [key];\n    var /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    var /** @type {?} */ error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify$1(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify$1(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify$1).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify$1(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify$1(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify$1(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef$1(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n         * @return {?} the number of keys registered in the system.\n         */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\n/**\n * \\@internal\n */\nvar KeyRegistry = (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nvar Type$1$1 = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar ReflectionCapabilities = (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (type, parentCtor) {\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(type.toString())) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        var /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = /** @type {?} */ ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return type instanceof Type$1$1 && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify$1(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return \"./\" + stringify$1(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = /**\n     * @param {?} caps\n     * @return {?}\n     */\n    function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\n\nvar ResolvedReflectiveProvider_ = (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n    }\n    Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.resolvedFactories[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar ResolvedReflectiveFactory = (function () {\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef$1(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type$1$1) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject$1) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type$1$1) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject$1) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef$1(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar ReflectiveInjector = (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders} for more info.\n     */\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve} and {@link ReflectiveInjector#fromResolvedProviders}.\n     */\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var /** @type {?} */ len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = /**\n     * @return {?}\n     */\n    function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (/** @type {?} */ e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (/** @type {?} */ e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = /** @type {?} */ (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise$1(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var /** @type {?} */ asyncInitPromises = [];\n        var /** @type {?} */ complete = function () {\n            (/** @type {?} */ (_this)).done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                var /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise$1(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject$1, args: [APP_INITIALIZER,] }, { type: Optional },] },\n    ]; };\n    return ApplicationInitStatus;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nvar APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Console.ctorParameters = function () { return []; };\n    return Console;\n}());\n\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = /**\n     * Clears all caches.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { };\n    Compiler.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Compiler.ctorParameters = function () { return []; };\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar CompilerFactory = (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar ComponentRef = (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactory = (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify$1(component) + \". Did you add it to @NgModule.entryComponents?\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nvar _NullComponentFactoryResolver = (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"selector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.selector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.componentType; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"ngContentSelectors\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.ngContentSelectors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.inputs; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.outputs; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar NgModuleRef = (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar NgModuleFactory = (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar trace;\nvar events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    var /** @type {?} */ wtf = (/** @type {?} */ (_global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar EventEmitter = (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(Subject_2));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar NgZone = (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error('Angular requires Zone.js prolyfill.');\n        }\n        Zone.assertZonePatched();\n        var /** @type {?} */ self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = /**\n     * @return {?}\n     */\n    function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs, name) {\n        var /** @type {?} */ zone = (/** @type {?} */ ((this)))._inner;\n        var /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * @return {?}\n */\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n *\n * \\@internal\n */\nvar NoopNgZone = (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.run = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runGuarded = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runOutsideAngular = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runTask = /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = (function () {\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     */\n    /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     */\n    /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    Testability.prototype.isStable = /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (/** @type {?} */ ((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * Run callback when the application is stable\n     * @param callback function to be called after the application is stable\n     */\n    /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    Testability.prototype.whenStable = /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     */\n    /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone, },\n    ]; };\n    return Testability;\n}());\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\n\nvar _NoopGetTestability = (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ marker = new InjectionToken(\"Platform: \" + name);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                createPlatform(Injector.create(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * Provides additional options to the bootstraping process.\n *\n * \\@stable\n * @record\n */\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n */\nvar PlatformRef = (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var /** @type {?} */ ngZoneOption = options ? options.ngZone : undefined;\n        var /** @type {?} */ ngZone = getNgZone(ngZoneOption);\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = Injector.create([{ provide: NgZone, useValue: ngZone }], _this.injector);\n            var /** @type {?} */ moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { return /** @type {?} */ ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * @stable\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModule = /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ options = optionsReducer({}, compilerOptions);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef.prototype._moduleDoBootstrap = /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    function (moduleRef) {\n        var /** @type {?} */ appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify$1(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef.prototype.onDestroy = /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @return {?}\n         */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    PlatformRef.prototype.destroy = /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector, },\n    ]; };\n    return PlatformRef;\n}());\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    var /** @type {?} */ ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise$1(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n */\nvar ApplicationRef = (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var /** @type {?} */ isCurrentlyStable = new Observable_2(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var /** @type {?} */ isStable = new Observable_2(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var /** @type {?} */ stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var /** @type {?} */ unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            merge_2(isCurrentlyStable, share_2.call(isStable));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef.prototype.bootstrap = /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    ApplicationRef.prototype.tick = /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (/** @type {?} */ e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.attachView = /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.detachView = /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._loadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._unloadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationRef.prototype.ngOnDestroy = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: /**\n         * Returns the number of attached views.\n         * @return {?}\n         */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Console, },\n        { type: Injector, },\n        { type: ErrorHandler, },\n        { type: ComponentFactoryResolver, },\n        { type: ApplicationInitStatus, },\n    ]; };\n    return ApplicationRef;\n}());\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar Renderer = (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * \\@experimental\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar RendererFactory2 = (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * \\@experimental\n * @abstract\n */\nvar Renderer2 = (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n */\nvar ElementRef = (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar QueryList = (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n    }\n    Object.defineProperty(QueryList.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[this.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._results = flatten$2(res);\n        (/** @type {?} */ (this)).dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = /**\n     * internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = /**\n     * internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten$2(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten$2(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use\n * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n * View Container.\n * \\@stable\n * @abstract\n */\nvar TemplateRef = (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar ViewContainerRef = (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ChangeDetectorRef = (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ViewRef = (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar EmbeddedViewRef = (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EventListener = (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugNode = (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugElement = (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar WrappedValue = (function () {\n    function WrappedValue(wrapped) {\n        this.wrapped = wrapped;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new WrappedValue(value); };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar SimpleChange = (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) &&\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                /** @type {?} */ ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify$1(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * \\@stable\n */\nvar IterableChangeRecord_ = (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\nvar _DuplicateItemRecordList = (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = /**\n     * @template K, V\n     * @return {?}\n     */\n    function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = /**\n     * @param {?=} map\n     * @return {?}\n     */\n    function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify$1(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * \\@stable\n */\nvar KeyValueChangeRecord_ = (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\n\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar IterableDiffers = (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n            return new IterableDiffers(factories);\n        }\n        else {\n            return new IterableDiffers(factories);\n        }\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar KeyValueDiffers = (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = /**\n     * @param {?} kv\n     * @return {?}\n     */\n    function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule$1, args: [{\n                    providers: [\n                        ApplicationRef,\n                        ApplicationInitStatus,\n                        Compiler,\n                        APP_ID_RANDOM_PROVIDER,\n                        { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                        {\n                            provide: LOCALE_ID,\n                            useFactory: _localeFactory,\n                            deps: [[new Inject$1(LOCALE_ID), new Optional(), new SkipSelf()]]\n                        },\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n    ]; };\n    return ApplicationModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar SecurityContext$1 = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext$1[SecurityContext$1.NONE] = \"NONE\";\nSecurityContext$1[SecurityContext$1.HTML] = \"HTML\";\nSecurityContext$1[SecurityContext$1.STYLE] = \"STYLE\";\nSecurityContext$1[SecurityContext$1.SCRIPT] = \"SCRIPT\";\nSecurityContext$1[SecurityContext$1.URL] = \"URL\";\nSecurityContext$1[SecurityContext$1.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar Sanitizer = (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @record\n */\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    clearProviderOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify$1(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), oldValue, value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (/** @type {?} */ e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName$1(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nfunction splitDepsDsl(deps) {\n    return deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation$1.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    var /** @type {?} */ value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = /** @type {?} */ ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = /** @type {?} */ ((hostElDef)).nodeIndex + 1;\n    var /** @type {?} */ endIndex = /** @type {?} */ ((hostElDef)).nodeIndex + /** @type {?} */ ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = /** @type {?} */ ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName$1(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n    var /** @type {?} */ renderNode$$1 = elData.renderElement;\n    var /** @type {?} */ name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var /** @type {?} */ bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext$1.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    var /** @type {?} */ def = data._def;\n    var /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            providers[i] = _createProviderInstance$1(data, provDef);\n        }\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var /** @type {?} */ providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        var /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === undefined) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var /** @type {?} */ injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var /** @type {?} */ def = ngModule._def;\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EMPTY_CONTEXT = new Object();\nvar ComponentFactory_ = (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ inputsArr = [];\n            var /** @type {?} */ inputs = /** @type {?} */ ((this._inputs));\n            for (var /** @type {?} */ propName in inputs) {\n                var /** @type {?} */ templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION$2.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = /** @type {?} */ ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ viewRef_ = /** @type {?} */ (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ fs$$1 = this._view.root.rendererFactory;\n        if (fs$$1.begin) {\n            fs$$1.begin();\n        }\n        Services.checkAndUpdateView(this._view);\n        if (fs$$1.end) {\n            fs$$1.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = /**\n     * @return {?}\n     */\n    function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: 0 /* None */ }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify$1(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[/** @type {?} */ ((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return /** @type {?} */ ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    while (view) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(view, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(view, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(view, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(view, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(view, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(view, providerDef_1) };\n                            view.nodes[providerDef_1.nodeIndex] = /** @type {?} */ (providerData);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(view);\n        elDef = /** @type {?} */ ((viewParentEl(view)));\n        view = /** @type {?} */ ((view.parent));\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                callElementProvidersLifecycles(view, parent_1, lifecycles);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles) {\n    for (var /** @type {?} */ i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles) {\n    var /** @type {?} */ providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var /** @type {?} */ provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.nodeIndex + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var /** @type {?} */ elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var /** @type {?} */ elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode$$1;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    var /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var /** @type {?} */ el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var /** @type {?} */ projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" not dirty\", \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.clearProviderOverrides = services.clearProviderOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        clearProviderOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) {\n            return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n        updateRenderer: function (view, checkType) {\n            return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        clearProviderOverrides: debugClearProviderOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n    providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    for (var /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        var /** @type {?} */ lastElementDef = null;\n        for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var /** @type {?} */ i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                // Make all providers lazy, so that we don't get into trouble\n                // with ordering problems of providers on the same element\n                nodeDef.flags |= 4096 /* LazyProvider */;\n                var /** @type {?} */ provider = /** @type {?} */ ((nodeDef.provider));\n                var /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    if (providerOverrides.size === 0 || !hasOverrrides(def)) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function hasOverrrides(def) {\n        return def.providers.some(function (node) {\n            return !!(node.flags & 3840 /* CatProviderNoDirective */) && providerOverrides.has(node.token);\n        });\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            var /** @type {?} */ provider = def.providers[i];\n            // Make all providers lazy, so that we don't get into trouble\n            // with ordering problems of providers on the same element\n            provider.flags |= 4096 /* LazyProvider */;\n            var /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = (/** @type {?} */ (checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = /** @type {?} */ ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (/** @type {?} */ e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ elDef = this.nodeDef;\n        var /** @type {?} */ elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n    }\n    Object.defineProperty(DebugRenderer2.prototype, \"data\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\nvar NgModuleFactory_ = (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        initServicesIfNeeded();\n        var /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @license Angular v5.0.0-rc.1-931cf78\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The kind of diagnostic message.\n *\n * @experimental\n */\nvar DiagnosticKind;\n(function (DiagnosticKind) {\n    DiagnosticKind[DiagnosticKind[\"Error\"] = 0] = \"Error\";\n    DiagnosticKind[DiagnosticKind[\"Warning\"] = 1] = \"Warning\";\n})(DiagnosticKind || (DiagnosticKind = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isParseSourceSpan(value) {\n    return value && !!value.start;\n}\nfunction spanOf(span) {\n    if (!span)\n        return undefined;\n    if (isParseSourceSpan(span)) {\n        return { start: span.start.offset, end: span.end.offset };\n    }\n    else {\n        if (span.endSourceSpan) {\n            return { start: span.sourceSpan.start.offset, end: span.endSourceSpan.end.offset };\n        }\n        else if (span.children && span.children.length) {\n            return {\n                start: span.sourceSpan.start.offset,\n                end: spanOf(span.children[span.children.length - 1]).end\n            };\n        }\n        return { start: span.sourceSpan.start.offset, end: span.sourceSpan.end.offset };\n    }\n}\nfunction inSpan(position, span, exclusive) {\n    return span != null && (exclusive ? position >= span.start && position < span.end :\n        position >= span.start && position <= span.end);\n}\nfunction offsetSpan(span, amount) {\n    return { start: span.start + amount, end: span.end + amount };\n}\nfunction isNarrower(spanA, spanB) {\n    return spanA.start >= spanB.start && spanA.end <= spanB.end;\n}\nfunction hasTemplateReference(type) {\n    if (type.diDeps) {\n        for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n            var diDep = _a[_i];\n            if (diDep.token && diDep.token.identifier &&\n                identifierName(diDep.token.identifier) == 'TemplateRef')\n                return true;\n        }\n    }\n    return false;\n}\nfunction getSelectors(info) {\n    var map = new Map();\n    var selectors = flatten(info.directives.map(function (directive) {\n        var selectors = CssSelector.parse(directive.selector);\n        selectors.forEach(function (selector) { return map.set(selector, directive); });\n        return selectors;\n    }));\n    return { selectors: selectors, map: map };\n}\nfunction flatten(a) {\n    return (_a = []).concat.apply(_a, a);\n    var _a;\n}\nfunction removeSuffix(value, suffix) {\n    if (value.endsWith(suffix))\n        return value.substring(0, value.length - suffix.length);\n    return value;\n}\nfunction uniqueByName(elements) {\n    if (elements) {\n        var result = [];\n        var set = new Set();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            if (!set.has(element.name)) {\n                set.add(element.name);\n                result.push(element);\n            }\n        }\n        return result;\n    }\n}\n\nfunction diagnosticInfoFromTemplateInfo(info) {\n    return {\n        fileName: info.fileName,\n        offset: info.template.span.start,\n        query: info.template.query,\n        members: info.template.members,\n        htmlAst: info.htmlAst,\n        templateAst: info.templateAst\n    };\n}\nfunction findTemplateAstAt(ast, position, allowWidening) {\n    if (allowWidening === void 0) { allowWidening = false; }\n    var path$$1 = [];\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visit = function (ast, context) {\n            var span = spanOf(ast);\n            if (inSpan(position, span)) {\n                var len = path$$1.length;\n                if (!len || allowWidening || isNarrower(span, spanOf(path$$1[len - 1]))) {\n                    path$$1.push(ast);\n                }\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        class_1.prototype.visitEmbeddedTemplate = function (ast, context) {\n            return this.visitChildren(context, function (visit) {\n                // Ignore reference, variable and providers\n                visit(ast.attrs);\n                visit(ast.directives);\n                visit(ast.children);\n            });\n        };\n        class_1.prototype.visitElement = function (ast, context) {\n            return this.visitChildren(context, function (visit) {\n                // Ingnore providers\n                visit(ast.attrs);\n                visit(ast.inputs);\n                visit(ast.outputs);\n                visit(ast.references);\n                visit(ast.directives);\n                visit(ast.children);\n            });\n        };\n        class_1.prototype.visitDirective = function (ast, context) {\n            // Ignore the host properties of a directive\n            var result = this.visitChildren(context, function (visit) { visit(ast.inputs); });\n            // We never care about the diretive itself, just its inputs.\n            if (path$$1[path$$1.length - 1] == ast) {\n                path$$1.pop();\n            }\n            return result;\n        };\n        return class_1;\n    }(RecursiveTemplateAstVisitor));\n    templateVisitAll(visitor, ast);\n    return new AstPath(path$$1, position);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findAstAt(ast, position, excludeEmpty) {\n    if (excludeEmpty === void 0) { excludeEmpty = false; }\n    var path$$1 = [];\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visit = function (ast) {\n            if ((!excludeEmpty || ast.span.start < ast.span.end) && inSpan(position, ast.span)) {\n                path$$1.push(ast);\n                visitAstChildren(ast, this);\n            }\n        };\n        return class_1;\n    }(NullAstVisitor));\n    // We never care about the ASTWithSource node and its visit() method calls its ast's visit so\n    // the visit() method above would never see it.\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    visitor.visit(ast);\n    return new AstPath(path$$1, position);\n}\nfunction getExpressionCompletions(scope, ast, position, query) {\n    var path$$1 = findAstAt(ast, position);\n    if (path$$1.empty)\n        return undefined;\n    var tail = path$$1.tail;\n    var result = scope;\n    function getType(ast) { return new language_services_7(scope, query, {}).getType(ast); }\n    // If the completion request is in a not in a pipe or property access then the global scope\n    // (that is the scope of the implicit receiver) is the right scope as the user is typing the\n    // beginning of an expression.\n    tail.visit({\n        visitBinary: function (ast) { },\n        visitChain: function (ast) { },\n        visitConditional: function (ast) { },\n        visitFunctionCall: function (ast) { },\n        visitImplicitReceiver: function (ast) { },\n        visitInterpolation: function (ast) { result = undefined; },\n        visitKeyedRead: function (ast) { },\n        visitKeyedWrite: function (ast) { },\n        visitLiteralArray: function (ast) { },\n        visitLiteralMap: function (ast) { },\n        visitLiteralPrimitive: function (ast) { },\n        visitMethodCall: function (ast) { },\n        visitPipe: function (ast) {\n            if (position >= ast.exp.span.end &&\n                (!ast.args || !ast.args.length || position < ast.args[0].span.start)) {\n                // We are in a position a pipe name is expected.\n                result = query.getPipes();\n            }\n        },\n        visitPrefixNot: function (ast) { },\n        visitNonNullAssert: function (ast) { },\n        visitPropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitPropertyWrite: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitQuote: function (ast) {\n            // For a quote, return the members of any (if there are any).\n            result = query.getBuiltinType(language_services_10.Any).members();\n        },\n        visitSafeMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitSafePropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n    });\n    return result && result.values();\n}\nfunction getExpressionSymbol(scope, ast, position, query) {\n    var path$$1 = findAstAt(ast, position, /* excludeEmpty */ true);\n    if (path$$1.empty)\n        return undefined;\n    var tail = path$$1.tail;\n    function getType(ast) { return new language_services_7(scope, query, {}).getType(ast); }\n    var symbol = undefined;\n    var span = undefined;\n    // If the completion request is in a not in a pipe or property access then the global scope\n    // (that is the scope of the implicit receiver) is the right scope as the user is typing the\n    // beginning of an expression.\n    tail.visit({\n        visitBinary: function (ast) { },\n        visitChain: function (ast) { },\n        visitConditional: function (ast) { },\n        visitFunctionCall: function (ast) { },\n        visitImplicitReceiver: function (ast) { },\n        visitInterpolation: function (ast) { },\n        visitKeyedRead: function (ast) { },\n        visitKeyedWrite: function (ast) { },\n        visitLiteralArray: function (ast) { },\n        visitLiteralMap: function (ast) { },\n        visitLiteralPrimitive: function (ast) { },\n        visitMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitPipe: function (ast) {\n            if (position >= ast.exp.span.end &&\n                (!ast.args || !ast.args.length || position < ast.args[0].span.start)) {\n                // We are in a position a pipe name is expected.\n                var pipes = query.getPipes();\n                if (pipes) {\n                    symbol = pipes.get(ast.name);\n                    span = ast.span;\n                }\n            }\n        },\n        visitPrefixNot: function (ast) { },\n        visitNonNullAssert: function (ast) { },\n        visitPropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitPropertyWrite: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitQuote: function (ast) { },\n        visitSafeMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitSafePropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n    });\n    if (symbol && span) {\n        return { symbol: symbol, span: span };\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar values = [\n    'ID',\n    'CDATA',\n    'NAME',\n    ['ltr', 'rtl'],\n    ['rect', 'circle', 'poly', 'default'],\n    'NUMBER',\n    ['nohref'],\n    ['ismap'],\n    ['declare'],\n    ['DATA', 'REF', 'OBJECT'],\n    ['GET', 'POST'],\n    'IDREF',\n    ['TEXT', 'PASSWORD', 'CHECKBOX', 'RADIO', 'SUBMIT', 'RESET', 'FILE', 'HIDDEN', 'IMAGE', 'BUTTON'],\n    ['checked'],\n    ['disabled'],\n    ['readonly'],\n    ['multiple'],\n    ['selected'],\n    ['button', 'submit', 'reset'],\n    ['void', 'above', 'below', 'hsides', 'lhs', 'rhs', 'vsides', 'box', 'border'],\n    ['none', 'groups', 'rows', 'cols', 'all'],\n    ['left', 'center', 'right', 'justify', 'char'],\n    ['top', 'middle', 'bottom', 'baseline'],\n    'IDREFS',\n    ['row', 'col', 'rowgroup', 'colgroup'],\n    ['defer']\n];\nvar groups = [\n    { id: 0 },\n    {\n        onclick: 1,\n        ondblclick: 1,\n        onmousedown: 1,\n        onmouseup: 1,\n        onmouseover: 1,\n        onmousemove: 1,\n        onmouseout: 1,\n        onkeypress: 1,\n        onkeydown: 1,\n        onkeyup: 1\n    },\n    { lang: 2, dir: 3 },\n    { onload: 1, onunload: 1 },\n    { name: 1 },\n    { href: 1 },\n    { type: 1 },\n    { alt: 1 },\n    { tabindex: 5 },\n    { media: 1 },\n    { nohref: 6 },\n    { usemap: 1 },\n    { src: 1 },\n    { onfocus: 1, onblur: 1 },\n    { charset: 1 },\n    { declare: 8, classid: 1, codebase: 1, data: 1, codetype: 1, archive: 1, standby: 1 },\n    { title: 1 },\n    { value: 1 },\n    { cite: 1 },\n    { datetime: 1 },\n    { accept: 1 },\n    { shape: 4, coords: 1 },\n    { for: 11\n    },\n    { action: 1, method: 10, enctype: 1, onsubmit: 1, onreset: 1, 'accept-charset': 1 },\n    { valuetype: 9 },\n    { longdesc: 1 },\n    { width: 1 },\n    { disabled: 14 },\n    { readonly: 15, onselect: 1 },\n    { accesskey: 1 },\n    { size: 5, multiple: 16 },\n    { onchange: 1 },\n    { label: 1 },\n    { selected: 17 },\n    { type: 12, checked: 13, size: 1, maxlength: 5 },\n    { rows: 5, cols: 5 },\n    { type: 18 },\n    { height: 1 },\n    { summary: 1, border: 1, frame: 19, rules: 20, cellspacing: 1, cellpadding: 1, datapagesize: 1 },\n    { align: 21, char: 1, charoff: 1, valign: 22 },\n    { span: 5 },\n    { abbr: 1, axis: 1, headers: 23, scope: 24, rowspan: 5, colspan: 5 },\n    { profile: 1 },\n    { 'http-equiv': 2, name: 2, content: 1, scheme: 1 },\n    { class: 1, style: 1 },\n    { hreflang: 2, rel: 1, rev: 1 },\n    { ismap: 7 },\n    { defer: 25, event: 1, for: 1 }\n];\nvar elements = {\n    TT: [0, 1, 2, 16, 44],\n    I: [0, 1, 2, 16, 44],\n    B: [0, 1, 2, 16, 44],\n    BIG: [0, 1, 2, 16, 44],\n    SMALL: [0, 1, 2, 16, 44],\n    EM: [0, 1, 2, 16, 44],\n    STRONG: [0, 1, 2, 16, 44],\n    DFN: [0, 1, 2, 16, 44],\n    CODE: [0, 1, 2, 16, 44],\n    SAMP: [0, 1, 2, 16, 44],\n    KBD: [0, 1, 2, 16, 44],\n    VAR: [0, 1, 2, 16, 44],\n    CITE: [0, 1, 2, 16, 44],\n    ABBR: [0, 1, 2, 16, 44],\n    ACRONYM: [0, 1, 2, 16, 44],\n    SUB: [0, 1, 2, 16, 44],\n    SUP: [0, 1, 2, 16, 44],\n    SPAN: [0, 1, 2, 16, 44],\n    BDO: [0, 2, 16, 44],\n    BR: [0, 16, 44],\n    BODY: [0, 1, 2, 3, 16, 44],\n    ADDRESS: [0, 1, 2, 16, 44],\n    DIV: [0, 1, 2, 16, 44],\n    A: [0, 1, 2, 4, 5, 6, 8, 13, 14, 16, 21, 29, 44, 45],\n    MAP: [0, 1, 2, 4, 16, 44],\n    AREA: [0, 1, 2, 5, 7, 8, 10, 13, 16, 21, 29, 44],\n    LINK: [0, 1, 2, 5, 6, 9, 14, 16, 44, 45],\n    IMG: [0, 1, 2, 4, 7, 11, 12, 16, 25, 26, 37, 44, 46],\n    OBJECT: [0, 1, 2, 4, 6, 8, 11, 15, 16, 26, 37, 44],\n    PARAM: [0, 4, 6, 17, 24],\n    HR: [0, 1, 2, 16, 44],\n    P: [0, 1, 2, 16, 44],\n    H1: [0, 1, 2, 16, 44],\n    H2: [0, 1, 2, 16, 44],\n    H3: [0, 1, 2, 16, 44],\n    H4: [0, 1, 2, 16, 44],\n    H5: [0, 1, 2, 16, 44],\n    H6: [0, 1, 2, 16, 44],\n    PRE: [0, 1, 2, 16, 44],\n    Q: [0, 1, 2, 16, 18, 44],\n    BLOCKQUOTE: [0, 1, 2, 16, 18, 44],\n    INS: [0, 1, 2, 16, 18, 19, 44],\n    DEL: [0, 1, 2, 16, 18, 19, 44],\n    DL: [0, 1, 2, 16, 44],\n    DT: [0, 1, 2, 16, 44],\n    DD: [0, 1, 2, 16, 44],\n    OL: [0, 1, 2, 16, 44],\n    UL: [0, 1, 2, 16, 44],\n    LI: [0, 1, 2, 16, 44],\n    FORM: [0, 1, 2, 4, 16, 20, 23, 44],\n    LABEL: [0, 1, 2, 13, 16, 22, 29, 44],\n    INPUT: [0, 1, 2, 4, 7, 8, 11, 12, 13, 16, 17, 20, 27, 28, 29, 31, 34, 44, 46],\n    SELECT: [0, 1, 2, 4, 8, 13, 16, 27, 30, 31, 44],\n    OPTGROUP: [0, 1, 2, 16, 27, 32, 44],\n    OPTION: [0, 1, 2, 16, 17, 27, 32, 33, 44],\n    TEXTAREA: [0, 1, 2, 4, 8, 13, 16, 27, 28, 29, 31, 35, 44],\n    FIELDSET: [0, 1, 2, 16, 44],\n    LEGEND: [0, 1, 2, 16, 29, 44],\n    BUTTON: [0, 1, 2, 4, 8, 13, 16, 17, 27, 29, 36, 44],\n    TABLE: [0, 1, 2, 16, 26, 38, 44],\n    CAPTION: [0, 1, 2, 16, 44],\n    COLGROUP: [0, 1, 2, 16, 26, 39, 40, 44],\n    COL: [0, 1, 2, 16, 26, 39, 40, 44],\n    THEAD: [0, 1, 2, 16, 39, 44],\n    TBODY: [0, 1, 2, 16, 39, 44],\n    TFOOT: [0, 1, 2, 16, 39, 44],\n    TR: [0, 1, 2, 16, 39, 44],\n    TH: [0, 1, 2, 16, 39, 41, 44],\n    TD: [0, 1, 2, 16, 39, 41, 44],\n    HEAD: [2, 42],\n    TITLE: [2],\n    BASE: [5],\n    META: [2, 43],\n    STYLE: [2, 6, 9, 16],\n    SCRIPT: [6, 12, 14, 47],\n    NOSCRIPT: [0, 1, 2, 16, 44],\n    HTML: [2]\n};\nvar defaultAttributes = [0, 1, 2, 4];\nfunction elementNames() {\n    return Object.keys(elements).sort().map(function (v) { return v.toLowerCase(); });\n}\nfunction compose(indexes) {\n    var result = {};\n    if (indexes) {\n        for (var _i = 0, indexes_1 = indexes; _i < indexes_1.length; _i++) {\n            var index = indexes_1[_i];\n            var group = groups[index];\n            for (var name_1 in group)\n                if (group.hasOwnProperty(name_1))\n                    result[name_1] = values[group[name_1]];\n        }\n    }\n    return result;\n}\nfunction attributeNames(element) {\n    return Object.keys(compose(elements[element.toUpperCase()] || defaultAttributes)).sort();\n}\n\n// This section is describes the DOM property surface of a DOM element and is derivgulp formated\n// from\n// from the SCHEMA strings from the security context information. SCHEMA is copied here because\n// it would be an unnecessary risk to allow this array to be imported from the security context\n// schema registry.\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        /* added manually to avoid breaking changes */\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar EVENT = 'event';\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\nvar SchemaInformation = (function () {\n    function SchemaInformation() {\n        var _this = this;\n        this.schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var parts = encodedType.split('|');\n            var properties = parts[1].split(',');\n            var typeParts = (parts[0] + '^').split('^');\n            var typeName = typeParts[0];\n            var type = {};\n            typeName.split(',').forEach(function (tag) { return _this.schema[tag.toLowerCase()] = type; });\n            var superName = typeParts[1];\n            var superType = superName && _this.schema[superName.toLowerCase()];\n            if (superType) {\n                for (var key in superType) {\n                    type[key] = superType[key];\n                }\n            }\n            properties.forEach(function (property) {\n                if (property == '') {\n                }\n                else if (property.startsWith('*')) {\n                    type[property.substring(1)] = EVENT;\n                }\n                else if (property.startsWith('!')) {\n                    type[property.substring(1)] = BOOLEAN;\n                }\n                else if (property.startsWith('#')) {\n                    type[property.substring(1)] = NUMBER;\n                }\n                else if (property.startsWith('%')) {\n                    type[property.substring(1)] = OBJECT;\n                }\n                else {\n                    type[property] = STRING;\n                }\n            });\n        });\n    }\n    SchemaInformation.prototype.allKnownElements = function () { return Object.keys(this.schema); };\n    SchemaInformation.prototype.eventsOf = function (elementName) {\n        var elementType = this.schema[elementName.toLowerCase()] || {};\n        return Object.keys(elementType).filter(function (property) { return elementType[property] === EVENT; });\n    };\n    SchemaInformation.prototype.propertiesOf = function (elementName) {\n        var elementType = this.schema[elementName.toLowerCase()] || {};\n        return Object.keys(elementType).filter(function (property) { return elementType[property] !== EVENT; });\n    };\n    SchemaInformation.prototype.typeOf = function (elementName, property) {\n        return (this.schema[elementName.toLowerCase()] || {})[property];\n    };\n    Object.defineProperty(SchemaInformation, \"instance\", {\n        get: function () {\n            var result = SchemaInformation._instance;\n            if (!result) {\n                result = SchemaInformation._instance = new SchemaInformation();\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SchemaInformation;\n}());\nfunction eventNames(elementName) {\n    return SchemaInformation.instance.eventsOf(elementName);\n}\nfunction propertyNames(elementName) {\n    return SchemaInformation.instance.propertiesOf(elementName);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar hiddenHtmlElements = {\n    html: true,\n    script: true,\n    noscript: true,\n    base: true,\n    body: true,\n    title: true,\n    head: true,\n    link: true,\n};\nfunction getTemplateCompletions(templateInfo) {\n    var result = undefined;\n    var htmlAst = templateInfo.htmlAst, templateAst = templateInfo.templateAst, template = templateInfo.template;\n    // The templateNode starts at the delimiter character so we add 1 to skip it.\n    if (templateInfo.position != null) {\n        var templatePosition_1 = templateInfo.position - template.span.start;\n        var path_1 = findNode(htmlAst, templatePosition_1);\n        var mostSpecific = path_1.tail;\n        if (path_1.empty || !mostSpecific) {\n            result = elementCompletions(templateInfo, path_1);\n        }\n        else {\n            var astPosition_1 = templatePosition_1 - mostSpecific.sourceSpan.start.offset;\n            mostSpecific.visit({\n                visitElement: function (ast) {\n                    var startTagSpan = spanOf(ast.sourceSpan);\n                    var tagLen = ast.name.length;\n                    if (templatePosition_1 <=\n                        startTagSpan.start + tagLen + 1 /* 1 for the opening angle bracked */) {\n                        // If we are in the tag then return the element completions.\n                        result = elementCompletions(templateInfo, path_1);\n                    }\n                    else if (templatePosition_1 < startTagSpan.end) {\n                        // We are in the attribute section of the element (but not in an attribute).\n                        // Return the attribute completions.\n                        result = attributeCompletions(templateInfo, path_1);\n                    }\n                },\n                visitAttribute: function (ast) {\n                    if (!ast.valueSpan || !inSpan(templatePosition_1, spanOf(ast.valueSpan))) {\n                        // We are in the name of an attribute. Show attribute completions.\n                        result = attributeCompletions(templateInfo, path_1);\n                    }\n                    else if (ast.valueSpan && inSpan(templatePosition_1, spanOf(ast.valueSpan))) {\n                        result = attributeValueCompletions(templateInfo, templatePosition_1, ast);\n                    }\n                },\n                visitText: function (ast) {\n                    // Check if we are in a entity.\n                    result = entityCompletions(getSourceText(template, spanOf(ast)), astPosition_1);\n                    if (result)\n                        return result;\n                    result = interpolationCompletions(templateInfo, templatePosition_1);\n                    if (result)\n                        return result;\n                    var element = path_1.first(Element);\n                    if (element) {\n                        var definition = getHtmlTagDefinition(element.name);\n                        if (definition.contentType === TagContentType.PARSABLE_DATA) {\n                            result = voidElementAttributeCompletions(templateInfo, path_1);\n                            if (!result) {\n                                // If the element can hold content Show element completions.\n                                result = elementCompletions(templateInfo, path_1);\n                            }\n                        }\n                    }\n                    else {\n                        // If no element container, implies parsable data so show elements.\n                        result = voidElementAttributeCompletions(templateInfo, path_1);\n                        if (!result) {\n                            result = elementCompletions(templateInfo, path_1);\n                        }\n                    }\n                },\n                visitComment: function (ast) { },\n                visitExpansion: function (ast) { },\n                visitExpansionCase: function (ast) { }\n            }, null);\n        }\n    }\n    return result;\n}\nfunction attributeCompletions(info, path$$1) {\n    var item = path$$1.tail instanceof Element ? path$$1.tail : path$$1.parentOf(path$$1.tail);\n    if (item instanceof Element) {\n        return attributeCompletionsForElement(info, item.name, item);\n    }\n    return undefined;\n}\nfunction attributeCompletionsForElement(info, elementName, element) {\n    var attributes = getAttributeInfosForElement(info, elementName, element);\n    // Map all the attributes to a completion\n    return attributes.map(function (attr) { return ({\n        kind: attr.fromHtml ? 'html attribute' : 'attribute',\n        name: nameOfAttr(attr),\n        sort: attr.name\n    }); });\n}\nfunction getAttributeInfosForElement(info, elementName, element) {\n    var attributes = [];\n    // Add html attributes\n    var htmlAttributes = attributeNames(elementName) || [];\n    if (htmlAttributes) {\n        attributes.push.apply(attributes, htmlAttributes.map(function (name) { return ({ name: name, fromHtml: true }); }));\n    }\n    // Add html properties\n    var htmlProperties = propertyNames(elementName);\n    if (htmlProperties) {\n        attributes.push.apply(attributes, htmlProperties.map(function (name) { return ({ name: name, input: true }); }));\n    }\n    // Add html events\n    var htmlEvents = eventNames(elementName);\n    if (htmlEvents) {\n        attributes.push.apply(attributes, htmlEvents.map(function (name) { return ({ name: name, output: true }); }));\n    }\n    var _a = getSelectors(info), selectors = _a.selectors, selectorMap = _a.map;\n    if (selectors && selectors.length) {\n        // All the attributes that are selectable should be shown.\n        var applicableSelectors = selectors.filter(function (selector) { return !selector.element || selector.element == elementName; });\n        var selectorAndAttributeNames = applicableSelectors.map(function (selector) { return ({ selector: selector, attrs: selector.attrs.filter(function (a) { return !!a; }) }); });\n        var attrs_1 = flatten(selectorAndAttributeNames.map(function (selectorAndAttr) {\n            var directive = selectorMap.get(selectorAndAttr.selector);\n            var result = selectorAndAttr.attrs.map(function (name) { return ({ name: name, input: name in directive.inputs, output: name in directive.outputs }); });\n            return result;\n        }));\n        // Add template attribute if a directive contains a template reference\n        selectorAndAttributeNames.forEach(function (selectorAndAttr) {\n            var selector = selectorAndAttr.selector;\n            var directive = selectorMap.get(selector);\n            if (directive && hasTemplateReference(directive.type) && selector.attrs.length &&\n                selector.attrs[0]) {\n                attrs_1.push({ name: selector.attrs[0], template: true });\n            }\n        });\n        // All input and output properties of the matching directives should be added.\n        var elementSelector = element ?\n            createElementCssSelector(element) :\n            createElementCssSelector(new Element(elementName, [], [], null, null, null));\n        var matcher = new SelectorMatcher();\n        matcher.addSelectables(selectors);\n        matcher.match(elementSelector, function (selector) {\n            var directive = selectorMap.get(selector);\n            if (directive) {\n                attrs_1.push.apply(attrs_1, Object.keys(directive.inputs).map(function (name) { return ({ name: name, input: true }); }));\n                attrs_1.push.apply(attrs_1, Object.keys(directive.outputs).map(function (name) { return ({ name: name, output: true }); }));\n            }\n        });\n        // If a name shows up twice, fold it into a single value.\n        attrs_1 = foldAttrs(attrs_1);\n        // Now expand them back out to ensure that input/output shows up as well as input and\n        // output.\n        attributes.push.apply(attributes, flatten(attrs_1.map(expandedAttr)));\n    }\n    return attributes;\n}\nfunction attributeValueCompletions(info, position, attr) {\n    var path$$1 = findTemplateAstAt(info.templateAst, position);\n    var mostSpecific = path$$1.tail;\n    var dinfo = diagnosticInfoFromTemplateInfo(info);\n    if (mostSpecific) {\n        var visitor = new ExpressionVisitor(info, position, attr, function () { return language_services_5(dinfo, path$$1, false); });\n        mostSpecific.visit(visitor, null);\n        if (!visitor.result || !visitor.result.length) {\n            // Try allwoing widening the path\n            var widerPath_1 = findTemplateAstAt(info.templateAst, position, /* allowWidening */ true);\n            if (widerPath_1.tail) {\n                var widerVisitor = new ExpressionVisitor(info, position, attr, function () { return language_services_5(dinfo, widerPath_1, false); });\n                widerPath_1.tail.visit(widerVisitor, null);\n                return widerVisitor.result;\n            }\n        }\n        return visitor.result;\n    }\n}\nfunction elementCompletions(info, path$$1) {\n    var htmlNames = elementNames().filter(function (name) { return !(name in hiddenHtmlElements); });\n    // Collect the elements referenced by the selectors\n    var directiveElements = getSelectors(info)\n        .selectors.map(function (selector) { return selector.element; })\n        .filter(function (name) { return !!name; });\n    var components = directiveElements.map(function (name) { return ({ kind: 'component', name: name, sort: name }); });\n    var htmlElements = htmlNames.map(function (name) { return ({ kind: 'element', name: name, sort: name }); });\n    // Return components and html elements\n    return uniqueByName(htmlElements.concat(components));\n}\nfunction entityCompletions(value, position) {\n    // Look for entity completions\n    var re = /&[A-Za-z]*;?(?!\\d)/g;\n    var found;\n    var result = undefined;\n    while (found = re.exec(value)) {\n        var len = found[0].length;\n        if (position >= found.index && position < (found.index + len)) {\n            result = Object.keys(NAMED_ENTITIES)\n                .map(function (name) { return ({ kind: 'entity', name: \"&\" + name + \";\", sort: name }); });\n            break;\n        }\n    }\n    return result;\n}\nfunction interpolationCompletions(info, position) {\n    // Look for an interpolation in at the position.\n    var templatePath = findTemplateAstAt(info.templateAst, position);\n    var mostSpecific = templatePath.tail;\n    if (mostSpecific) {\n        var visitor = new ExpressionVisitor(info, position, undefined, function () { return language_services_5(diagnosticInfoFromTemplateInfo(info), templatePath, false); });\n        mostSpecific.visit(visitor, null);\n        return uniqueByName(visitor.result);\n    }\n}\n// There is a special case of HTML where text that contains a unclosed tag is treated as\n// text. For exaple '<h1> Some <a text </h1>' produces a text nodes inside of the H1\n// element \"Some <a text\". We, however, want to treat this as if the user was requesting\n// the attributes of an \"a\" element, not requesting completion in the a text element. This\n// code checks for this case and returns element completions if it is detected or undefined\n// if it is not.\nfunction voidElementAttributeCompletions(info, path$$1) {\n    var tail = path$$1.tail;\n    if (tail instanceof Text) {\n        var match = tail.value.match(/<(\\w(\\w|\\d|-)*:)?(\\w(\\w|\\d|-)*)\\s/);\n        // The position must be after the match, otherwise we are still in a place where elements\n        // are expected (such as `<|a` or `<a|`; we only want attributes for `<a |` or after).\n        if (match &&\n            path$$1.position >= (match.index || 0) + match[0].length + tail.sourceSpan.start.offset) {\n            return attributeCompletionsForElement(info, match[3]);\n        }\n    }\n}\nvar ExpressionVisitor = (function (_super) {\n    __extends(ExpressionVisitor, _super);\n    function ExpressionVisitor(info, position, attr, getExpressionScope$$1) {\n        var _this = _super.call(this) || this;\n        _this.info = info;\n        _this.position = position;\n        _this.attr = attr;\n        _this.getExpressionScope = getExpressionScope$$1 || (function () { return info.template.members; });\n        return _this;\n    }\n    ExpressionVisitor.prototype.visitDirectiveProperty = function (ast) {\n        this.attributeValueCompletions(ast.value);\n    };\n    ExpressionVisitor.prototype.visitElementProperty = function (ast) {\n        this.attributeValueCompletions(ast.value);\n    };\n    ExpressionVisitor.prototype.visitEvent = function (ast) { this.attributeValueCompletions(ast.handler); };\n    ExpressionVisitor.prototype.visitElement = function (ast) {\n        var _this = this;\n        if (this.attr && getSelectors(this.info) && this.attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\n            // The value is a template expression but the expression AST was not produced when the\n            // TemplateAst was produce so\n            // do that now.\n            var key_1 = this.attr.name.substr(TEMPLATE_ATTR_PREFIX.length);\n            // Find the selector\n            var selectorInfo = getSelectors(this.info);\n            var selectors = selectorInfo.selectors;\n            var selector_1 = selectors.filter(function (s) { return s.attrs.some(function (attr, i) { return i % 2 == 0 && attr == key_1; }); })[0];\n            var templateBindingResult = this.info.expressionParser.parseTemplateBindings(key_1, this.attr.value, null);\n            // find the template binding that contains the position\n            if (!this.attr.valueSpan)\n                return;\n            var valueRelativePosition_1 = this.position - this.attr.valueSpan.start.offset - 1;\n            var bindings = templateBindingResult.templateBindings;\n            var binding = bindings.find(function (binding) { return inSpan(valueRelativePosition_1, binding.span, /* exclusive */ true); }) ||\n                bindings.find(function (binding) { return inSpan(valueRelativePosition_1, binding.span); });\n            var keyCompletions = function () {\n                var keys = [];\n                if (selector_1) {\n                    var attrNames = selector_1.attrs.filter(function (_, i) { return i % 2 == 0; });\n                    keys = attrNames.filter(function (name) { return name.startsWith(key_1) && name != key_1; })\n                        .map(function (name) { return lowerName(name.substr(key_1.length)); });\n                }\n                keys.push('let');\n                _this.result = keys.map(function (key) { return ({ kind: 'key', name: key, sort: key }); });\n            };\n            if (!binding || (binding.key == key_1 && !binding.expression)) {\n                // We are in the root binding. We should return `let` and keys that are left in the\n                // selector.\n                keyCompletions();\n            }\n            else if (binding.keyIsVar) {\n                var equalLocation = this.attr.value.indexOf('=');\n                this.result = [];\n                if (equalLocation >= 0 && valueRelativePosition_1 >= equalLocation) {\n                    // We are after the '=' in a let clause. The valid values here are the members of the\n                    // template reference's type parameter.\n                    var directiveMetadata = selectorInfo.map.get(selector_1);\n                    if (directiveMetadata) {\n                        var contextTable = this.info.template.query.getTemplateContext(directiveMetadata.type.reference);\n                        if (contextTable) {\n                            this.result = this.symbolsToCompletions(contextTable.values());\n                        }\n                    }\n                }\n                else if (binding.key && valueRelativePosition_1 <= (binding.key.length - key_1.length)) {\n                    keyCompletions();\n                }\n            }\n            else {\n                // If the position is in the expression or after the key or there is no key, return the\n                // expression completions\n                if ((binding.expression && inSpan(valueRelativePosition_1, binding.expression.ast.span)) ||\n                    (binding.key &&\n                        valueRelativePosition_1 > binding.span.start + (binding.key.length - key_1.length)) ||\n                    !binding.key) {\n                    var span = new ParseSpan(0, this.attr.value.length);\n                    this.attributeValueCompletions(binding.expression ? binding.expression.ast :\n                        new PropertyRead(span, new ImplicitReceiver(span), ''), valueRelativePosition_1);\n                }\n                else {\n                    keyCompletions();\n                }\n            }\n        }\n    };\n    ExpressionVisitor.prototype.visitBoundText = function (ast) {\n        var expressionPosition = this.position - ast.sourceSpan.start.offset;\n        if (inSpan(expressionPosition, ast.value.span)) {\n            var completions = getExpressionCompletions(this.getExpressionScope(), ast.value, expressionPosition, this.info.template.query);\n            if (completions) {\n                this.result = this.symbolsToCompletions(completions);\n            }\n        }\n    };\n    ExpressionVisitor.prototype.attributeValueCompletions = function (value, position) {\n        var symbols = getExpressionCompletions(this.getExpressionScope(), value, position == null ? this.attributeValuePosition : position, this.info.template.query);\n        if (symbols) {\n            this.result = this.symbolsToCompletions(symbols);\n        }\n    };\n    ExpressionVisitor.prototype.symbolsToCompletions = function (symbols) {\n        return symbols.filter(function (s) { return !s.name.startsWith('__') && s.public; })\n            .map(function (symbol) { return ({ kind: symbol.kind, name: symbol.name, sort: symbol.name }); });\n    };\n    Object.defineProperty(ExpressionVisitor.prototype, \"attributeValuePosition\", {\n        get: function () {\n            if (this.attr && this.attr.valueSpan) {\n                return this.position - this.attr.valueSpan.start.offset - 1;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ExpressionVisitor;\n}(NullTemplateVisitor));\nfunction getSourceText(template, span) {\n    return template.source.substring(span.start, span.end);\n}\nfunction nameOfAttr(attr) {\n    var name = attr.name;\n    if (attr.output) {\n        name = removeSuffix(name, 'Events');\n        name = removeSuffix(name, 'Changed');\n    }\n    var result = [name];\n    if (attr.input) {\n        result.unshift('[');\n        result.push(']');\n    }\n    if (attr.output) {\n        result.unshift('(');\n        result.push(')');\n    }\n    if (attr.template) {\n        result.unshift('*');\n    }\n    return result.join('');\n}\nvar templateAttr = /^(\\w+:)?(template$|^\\*)/;\nfunction createElementCssSelector(element) {\n    var cssSelector = new CssSelector();\n    var elNameNoNs = splitNsName(element.name)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var _i = 0, _a = element.attrs; _i < _a.length; _i++) {\n        var attr = _a[_i];\n        if (!attr.name.match(templateAttr)) {\n            var _b = splitNsName(attr.name), _ = _b[0], attrNameNoNs = _b[1];\n            cssSelector.addAttribute(attrNameNoNs, attr.value);\n            if (attr.name.toLowerCase() == 'class') {\n                var classes = attr.value.split(/s+/g);\n                classes.forEach(function (className) { return cssSelector.addClassName(className); });\n            }\n        }\n    }\n    return cssSelector;\n}\nfunction foldAttrs(attrs) {\n    var inputOutput = new Map();\n    var templates = new Map();\n    var result = [];\n    attrs.forEach(function (attr) {\n        if (attr.fromHtml) {\n            return attr;\n        }\n        if (attr.template) {\n            var duplicate = templates.get(attr.name);\n            if (!duplicate) {\n                result.push({ name: attr.name, template: true });\n                templates.set(attr.name, attr);\n            }\n        }\n        if (attr.input || attr.output) {\n            var duplicate = inputOutput.get(attr.name);\n            if (duplicate) {\n                duplicate.input = duplicate.input || attr.input;\n                duplicate.output = duplicate.output || attr.output;\n            }\n            else {\n                var cloneAttr = { name: attr.name };\n                if (attr.input)\n                    cloneAttr.input = true;\n                if (attr.output)\n                    cloneAttr.output = true;\n                result.push(cloneAttr);\n                inputOutput.set(attr.name, cloneAttr);\n            }\n        }\n    });\n    return result;\n}\nfunction expandedAttr(attr) {\n    if (attr.input && attr.output) {\n        return [\n            attr, { name: attr.name, input: true, output: false },\n            { name: attr.name, input: false, output: true }\n        ];\n    }\n    return [attr];\n}\nfunction lowerName(name) {\n    return name && (name[0].toLowerCase() + name.substr(1));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction locateSymbol(info) {\n    if (!info.position)\n        return undefined;\n    var templatePosition = info.position - info.template.span.start;\n    var path$$1 = findTemplateAstAt(info.templateAst, templatePosition);\n    if (path$$1.tail) {\n        var symbol_1 = undefined;\n        var span_1 = undefined;\n        var attributeValueSymbol_1 = function (ast, inEvent) {\n            if (inEvent === void 0) { inEvent = false; }\n            var attribute = findAttribute(info);\n            if (attribute) {\n                if (inSpan(templatePosition, spanOf(attribute.valueSpan))) {\n                    var dinfo = diagnosticInfoFromTemplateInfo(info);\n                    var scope = language_services_5(dinfo, path$$1, inEvent);\n                    if (attribute.valueSpan) {\n                        var expressionOffset = attribute.valueSpan.start.offset + 1;\n                        var result = getExpressionSymbol(scope, ast, templatePosition - expressionOffset, info.template.query);\n                        if (result) {\n                            symbol_1 = result.symbol;\n                            span_1 = offsetSpan(result.span, expressionOffset);\n                        }\n                    }\n                    return true;\n                }\n            }\n            return false;\n        };\n        path$$1.tail.visit({\n            visitNgContent: function (ast) { },\n            visitEmbeddedTemplate: function (ast) { },\n            visitElement: function (ast) {\n                var component = ast.directives.find(function (d) { return d.directive.isComponent; });\n                if (component) {\n                    symbol_1 = info.template.query.getTypeSymbol(component.directive.type.reference);\n                    symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'component');\n                    span_1 = spanOf(ast);\n                }\n                else {\n                    // Find a directive that matches the element name\n                    var directive = ast.directives.find(function (d) { return d.directive.selector != null && d.directive.selector.indexOf(ast.name) >= 0; });\n                    if (directive) {\n                        symbol_1 = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                        symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'directive');\n                        span_1 = spanOf(ast);\n                    }\n                }\n            },\n            visitReference: function (ast) {\n                symbol_1 = ast.value && info.template.query.getTypeSymbol(tokenReference(ast.value));\n                span_1 = spanOf(ast);\n            },\n            visitVariable: function (ast) { },\n            visitEvent: function (ast) {\n                if (!attributeValueSymbol_1(ast.handler, /* inEvent */ true)) {\n                    symbol_1 = findOutputBinding(info, path$$1, ast);\n                    symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'event');\n                    span_1 = spanOf(ast);\n                }\n            },\n            visitElementProperty: function (ast) { attributeValueSymbol_1(ast.value); },\n            visitAttr: function (ast) { },\n            visitBoundText: function (ast) {\n                var expressionPosition = templatePosition - ast.sourceSpan.start.offset;\n                if (inSpan(expressionPosition, ast.value.span)) {\n                    var dinfo = diagnosticInfoFromTemplateInfo(info);\n                    var scope = language_services_5(dinfo, path$$1, /* includeEvent */ false);\n                    var result = getExpressionSymbol(scope, ast.value, expressionPosition, info.template.query);\n                    if (result) {\n                        symbol_1 = result.symbol;\n                        span_1 = offsetSpan(result.span, ast.sourceSpan.start.offset);\n                    }\n                }\n            },\n            visitText: function (ast) { },\n            visitDirective: function (ast) {\n                symbol_1 = info.template.query.getTypeSymbol(ast.directive.type.reference);\n                span_1 = spanOf(ast);\n            },\n            visitDirectiveProperty: function (ast) {\n                if (!attributeValueSymbol_1(ast.value)) {\n                    symbol_1 = findInputBinding(info, path$$1, ast);\n                    span_1 = spanOf(ast);\n                }\n            }\n        }, null);\n        if (symbol_1 && span_1) {\n            return { symbol: symbol_1, span: offsetSpan(span_1, info.template.span.start) };\n        }\n    }\n}\nfunction findAttribute(info) {\n    if (info.position) {\n        var templatePosition = info.position - info.template.span.start;\n        var path$$1 = findNode(info.htmlAst, templatePosition);\n        return path$$1.first(Attribute$1);\n    }\n}\nfunction findInputBinding(info, path$$1, binding) {\n    var element = path$$1.first(ElementAst);\n    if (element) {\n        for (var _i = 0, _a = element.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            var invertedInput = invertMap(directive.directive.inputs);\n            var fieldName = invertedInput[binding.templateName];\n            if (fieldName) {\n                var classSymbol = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                if (classSymbol) {\n                    return classSymbol.members().get(fieldName);\n                }\n            }\n        }\n    }\n}\nfunction findOutputBinding(info, path$$1, binding) {\n    var element = path$$1.first(ElementAst);\n    if (element) {\n        for (var _i = 0, _a = element.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            var invertedOutputs = invertMap(directive.directive.outputs);\n            var fieldName = invertedOutputs[binding.name];\n            if (fieldName) {\n                var classSymbol = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                if (classSymbol) {\n                    return classSymbol.members().get(fieldName);\n                }\n            }\n        }\n    }\n}\nfunction invertMap(obj) {\n    var result = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var name_1 = _a[_i];\n        var v = obj[name_1];\n        result[v] = name_1;\n    }\n    return result;\n}\n/**\n * Wrap a symbol and change its kind to component.\n */\nvar OverrideKindSymbol = (function () {\n    function OverrideKindSymbol(sym, kindOverride) {\n        this.sym = sym;\n        this.kind = kindOverride;\n    }\n    Object.defineProperty(OverrideKindSymbol.prototype, \"name\", {\n        get: function () { return this.sym.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"language\", {\n        get: function () { return this.sym.language; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"type\", {\n        get: function () { return this.sym.type; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"container\", {\n        get: function () { return this.sym.container; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"public\", {\n        get: function () { return this.sym.public; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"callable\", {\n        get: function () { return this.sym.callable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"nullable\", {\n        get: function () { return this.sym.nullable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"definition\", {\n        get: function () { return this.sym.definition; },\n        enumerable: true,\n        configurable: true\n    });\n    OverrideKindSymbol.prototype.members = function () { return this.sym.members(); };\n    OverrideKindSymbol.prototype.signatures = function () { return this.sym.signatures(); };\n    OverrideKindSymbol.prototype.selectSignature = function (types) { return this.sym.selectSignature(types); };\n    OverrideKindSymbol.prototype.indexed = function (argument) { return this.sym.indexed(argument); };\n    return OverrideKindSymbol;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getDefinition(info) {\n    var result = locateSymbol(info);\n    return result && result.symbol.definition;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getTemplateDiagnostics(fileName, astProvider, templates) {\n    var results = [];\n    var _loop_1 = function (template) {\n        var ast = astProvider.getTemplateAst(template, fileName);\n        if (ast) {\n            if (ast.parseErrors && ast.parseErrors.length) {\n                results.push.apply(results, ast.parseErrors.map(function (e) { return ({\n                    kind: DiagnosticKind.Error,\n                    span: offsetSpan(spanOf(e.span), template.span.start),\n                    message: e.msg\n                }); }));\n            }\n            else if (ast.templateAst && ast.htmlAst) {\n                var info = {\n                    templateAst: ast.templateAst,\n                    htmlAst: ast.htmlAst,\n                    offset: template.span.start,\n                    query: template.query,\n                    members: template.members\n                };\n                var expressionDiagnostics = language_services_6(info);\n                results.push.apply(results, expressionDiagnostics);\n            }\n            if (ast.errors) {\n                results.push.apply(results, ast.errors.map(function (e) { return ({ kind: e.kind, span: e.span || template.span, message: e.message }); }));\n            }\n        }\n    };\n    for (var _i = 0, templates_1 = templates; _i < templates_1.length; _i++) {\n        var template = templates_1[_i];\n        _loop_1(template);\n    }\n    return results;\n}\nfunction getDeclarationDiagnostics(declarations, modules) {\n    var results = [];\n    var directives = undefined;\n    var _loop_2 = function (declaration) {\n        var report = function (message, span) {\n            results.push({\n                kind: DiagnosticKind.Error,\n                span: span || declaration.declarationSpan, message: message\n            });\n        };\n        for (var _i = 0, _a = declaration.errors; _i < _a.length; _i++) {\n            var error = _a[_i];\n            report(error.message, error.span);\n        }\n        if (declaration.metadata) {\n            if (declaration.metadata.isComponent) {\n                if (!modules.ngModuleByPipeOrDirective.has(declaration.type)) {\n                    report(\"Component '\" + declaration.type.name + \"' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration\");\n                }\n                if (!declaration.metadata.template.template &&\n                    !declaration.metadata.template.templateUrl) {\n                    report(\"Component \" + declaration.type.name + \" must have a template or templateUrl\");\n                }\n            }\n            else {\n                if (!directives) {\n                    directives = new Set();\n                    modules.ngModules.forEach(function (module) {\n                        module.declaredDirectives.forEach(function (directive) { directives.add(directive.reference); });\n                    });\n                }\n                if (!directives.has(declaration.type)) {\n                    report(\"Directive '\" + declaration.type.name + \"' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration\");\n                }\n            }\n        }\n    };\n    for (var _i = 0, declarations_1 = declarations; _i < declarations_1.length; _i++) {\n        var declaration = declarations_1[_i];\n        _loop_2(declaration);\n    }\n    return results;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getHover(info) {\n    var result = locateSymbol(info);\n    if (result) {\n        return { text: hoverTextOf(result.symbol), span: result.span };\n    }\n}\nfunction hoverTextOf(symbol) {\n    var result = [{ text: symbol.kind }, { text: ' ' }, { text: symbol.name, language: symbol.language }];\n    var container = symbol.container;\n    if (container) {\n        result.push({ text: ' of ' }, { text: container.name, language: container.language });\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create an instance of an Angular `LanguageService`.\n *\n * @experimental\n */\nfunction createLanguageService(host) {\n    return new LanguageServiceImpl(host);\n}\nvar LanguageServiceImpl = (function () {\n    function LanguageServiceImpl(host) {\n        this.host = host;\n    }\n    Object.defineProperty(LanguageServiceImpl.prototype, \"metadataResolver\", {\n        get: function () { return this.host.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    LanguageServiceImpl.prototype.getTemplateReferences = function () { return this.host.getTemplateReferences(); };\n    LanguageServiceImpl.prototype.getDiagnostics = function (fileName) {\n        var results = [];\n        var templates = this.host.getTemplates(fileName);\n        if (templates && templates.length) {\n            results.push.apply(results, getTemplateDiagnostics(fileName, this, templates));\n        }\n        var declarations = this.host.getDeclarations(fileName);\n        if (declarations && declarations.length) {\n            var summary = this.host.getAnalyzedModules();\n            results.push.apply(results, getDeclarationDiagnostics(declarations, summary));\n        }\n        return uniqueBySpan(results);\n    };\n    LanguageServiceImpl.prototype.getPipesAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return templateInfo.pipes;\n        }\n        return [];\n    };\n    LanguageServiceImpl.prototype.getCompletionsAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getTemplateCompletions(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getDefinitionAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getDefinition(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getHoverAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getHover(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getTemplateAstAtPosition = function (fileName, position) {\n        var template = this.host.getTemplateAt(fileName, position);\n        if (template) {\n            var astResult = this.getTemplateAst(template, fileName);\n            if (astResult && astResult.htmlAst && astResult.templateAst && astResult.directive &&\n                astResult.directives && astResult.pipes && astResult.expressionParser)\n                return {\n                    position: position,\n                    fileName: fileName,\n                    template: template,\n                    htmlAst: astResult.htmlAst,\n                    directive: astResult.directive,\n                    directives: astResult.directives,\n                    pipes: astResult.pipes,\n                    templateAst: astResult.templateAst,\n                    expressionParser: astResult.expressionParser\n                };\n        }\n        return undefined;\n    };\n    LanguageServiceImpl.prototype.getTemplateAst = function (template, contextFile) {\n        var _this = this;\n        var result = undefined;\n        try {\n            var resolvedMetadata = this.metadataResolver.getNonNormalizedDirectiveMetadata(template.type);\n            var metadata = resolvedMetadata && resolvedMetadata.metadata;\n            if (metadata) {\n                var rawHtmlParser = new HtmlParser();\n                var htmlParser = new I18NHtmlParser(rawHtmlParser);\n                var expressionParser = new Parser(new Lexer());\n                var config = new CompilerConfig();\n                var parser = new TemplateParser(config, this.host.resolver.getReflector(), expressionParser, new DomElementSchemaRegistry(), htmlParser, null, []);\n                var htmlResult = htmlParser.parse(template.source, '', true);\n                var analyzedModules = this.host.getAnalyzedModules();\n                var errors = undefined;\n                var ngModule = analyzedModules.ngModuleByPipeOrDirective.get(template.type);\n                if (!ngModule) {\n                    // Reported by the the declaration diagnostics.\n                    ngModule = findSuitableDefaultModule(analyzedModules);\n                }\n                if (ngModule) {\n                    var resolvedDirectives = ngModule.transitiveModule.directives.map(function (d) { return _this.host.resolver.getNonNormalizedDirectiveMetadata(d.reference); });\n                    var directives = removeMissing(resolvedDirectives).map(function (d) { return d.metadata.toSummary(); });\n                    var pipes = ngModule.transitiveModule.pipes.map(function (p) { return _this.host.resolver.getOrLoadPipeMetadata(p.reference).toSummary(); });\n                    var schemas = ngModule.schemas;\n                    var parseResult = parser.tryParseHtml(htmlResult, metadata, directives, pipes, schemas);\n                    result = {\n                        htmlAst: htmlResult.rootNodes,\n                        templateAst: parseResult.templateAst,\n                        directive: metadata, directives: directives, pipes: pipes,\n                        parseErrors: parseResult.errors, expressionParser: expressionParser, errors: errors\n                    };\n                }\n            }\n        }\n        catch (e) {\n            var span = template.span;\n            if (e.fileName == contextFile) {\n                span = template.query.getSpanAt(e.line, e.column) || span;\n            }\n            result = { errors: [{ kind: DiagnosticKind.Error, message: e.message, span: span }] };\n        }\n        return result || {};\n    };\n    return LanguageServiceImpl;\n}());\nfunction removeMissing(values) {\n    return values.filter(function (e) { return !!e; });\n}\nfunction uniqueBySpan(elements) {\n    if (elements) {\n        var result = [];\n        var map = new Map();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            var span = element.span;\n            var set = map.get(span.start);\n            if (!set) {\n                set = new Set();\n                map.set(span.start, set);\n            }\n            if (!set.has(span.end)) {\n                set.add(span.end);\n                result.push(element);\n            }\n        }\n        return result;\n    }\n}\nfunction findSuitableDefaultModule(modules) {\n    var result = undefined;\n    var resultSize = 0;\n    for (var _i = 0, _a = modules.ngModules; _i < _a.length; _i++) {\n        var module_1 = _a[_i];\n        var moduleSize = module_1.transitiveModule.directives.length;\n        if (moduleSize > resultSize) {\n            result = module_1;\n            resultSize = moduleSize;\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ReflectorModuleModuleResolutionHost = (function () {\n    function ReflectorModuleModuleResolutionHost(host) {\n        var _this = this;\n        this.host = host;\n        if (host.directoryExists)\n            this.directoryExists = function (directoryName) { return _this.host.directoryExists(directoryName); };\n    }\n    ReflectorModuleModuleResolutionHost.prototype.fileExists = function (fileName) { return !!this.host.getScriptSnapshot(fileName); };\n    ReflectorModuleModuleResolutionHost.prototype.readFile = function (fileName) {\n        var snapshot = this.host.getScriptSnapshot(fileName);\n        if (snapshot) {\n            return snapshot.getText(0, snapshot.getLength());\n        }\n        // Typescript readFile() declaration should be `readFile(fileName: string): string | undefined\n        return undefined;\n    };\n    return ReflectorModuleModuleResolutionHost;\n}());\n// This reflector host's purpose is to first set verboseInvalidExpressions to true so the\n// reflector will collect errors instead of throwing, and second to all deferring the creation\n// of the program until it is actually needed.\nvar ReflectorHost = (function (_super) {\n    __extends(ReflectorHost, _super);\n    function ReflectorHost(getProgram, serviceHost, options) {\n        var _this = _super.call(this, \n        // The ancestor value for program is overridden below so passing null here is safe.\n        /* program */ null, options, new language_services_2(new ReflectorModuleModuleResolutionHost(serviceHost)), { verboseInvalidExpression: true }) || this;\n        _this.getProgram = getProgram;\n        return _this;\n    }\n    Object.defineProperty(ReflectorHost.prototype, \"program\", {\n        get: function () { return this.getProgram(); },\n        set: function (value) {\n            // Discard the result set by ancestor constructor\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectorHost;\n}(language_services_1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a `LanguageServiceHost`\n */\nfunction createLanguageServiceFromTypescript(host, service) {\n    var ngHost = new TypeScriptServiceHost(host, service);\n    var ngServer = createLanguageService(ngHost);\n    ngHost.setSite(ngServer);\n    return ngServer;\n}\n/**\n * The language service never needs the normalized versions of the metadata. To avoid parsing\n * the content and resolving references, return an empty file. This also allows normalizing\n * template that are syntatically incorrect which is required to provide completions in\n * syntactically incorrect templates.\n */\nvar DummyHtmlParser = (function (_super) {\n    __extends(DummyHtmlParser, _super);\n    function DummyHtmlParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DummyHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return new ParseTreeResult([], []);\n    };\n    return DummyHtmlParser;\n}(HtmlParser));\n/**\n * Avoid loading resources in the language servcie by using a dummy loader.\n */\nvar DummyResourceLoader = (function (_super) {\n    __extends(DummyResourceLoader, _super);\n    function DummyResourceLoader() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DummyResourceLoader.prototype.get = function (url) { return Promise.resolve(''); };\n    return DummyResourceLoader;\n}(ResourceLoader));\n/**\n * An implemntation of a `LanguageServiceHost` for a TypeScript project.\n *\n * The `TypeScriptServiceHost` implements the Angular `LanguageServiceHost` using\n * the TypeScript language services.\n *\n * @experimental\n */\nvar TypeScriptServiceHost = (function () {\n    function TypeScriptServiceHost(host, tsService) {\n        this.host = host;\n        this.tsService = tsService;\n        this._staticSymbolCache = new StaticSymbolCache();\n        this._typeCache = [];\n        this.modulesOutOfDate = true;\n        this.fileVersions = new Map();\n    }\n    TypeScriptServiceHost.prototype.setSite = function (service) { this.service = service; };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"resolver\", {\n        /**\n         * Angular LanguageServiceHost implementation\n         */\n        get: function () {\n            var _this = this;\n            this.validate();\n            var result = this._resolver;\n            if (!result) {\n                var moduleResolver = new NgModuleResolver(this.reflector);\n                var directiveResolver = new DirectiveResolver(this.reflector);\n                var pipeResolver = new PipeResolver(this.reflector);\n                var elementSchemaRegistry = new DomElementSchemaRegistry();\n                var resourceLoader = new DummyResourceLoader();\n                var urlResolver = createOfflineCompileUrlResolver();\n                var htmlParser = new DummyHtmlParser();\n                // This tracks the CompileConfig in codegen.ts. Currently these options\n                // are hard-coded.\n                var config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation$1.Emulated, useJit: false });\n                var directiveNormalizer = new DirectiveNormalizer(resourceLoader, urlResolver, htmlParser, config);\n                result = this._resolver = new CompileMetadataResolver(config, htmlParser, moduleResolver, directiveResolver, pipeResolver, new JitSummaryResolver(), elementSchemaRegistry, directiveNormalizer, new Console(), this._staticSymbolCache, this.reflector, function (error, type) { return _this.collectError(error, type && type.filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.getTemplateReferences = function () {\n        this.ensureTemplateMap();\n        return this.templateReferences || [];\n    };\n    TypeScriptServiceHost.prototype.getTemplateAt = function (fileName, position) {\n        var sourceFile = this.getSourceFile(fileName);\n        if (sourceFile) {\n            this.context = sourceFile.fileName;\n            var node = this.findNode(sourceFile, position);\n            if (node) {\n                return this.getSourceFromNode(fileName, this.host.getScriptVersion(sourceFile.fileName), node);\n            }\n        }\n        else {\n            this.ensureTemplateMap();\n            // TODO: Cannocalize the file?\n            var componentType = this.fileToComponent.get(fileName);\n            if (componentType) {\n                return this.getSourceFromType(fileName, this.host.getScriptVersion(fileName), componentType);\n            }\n        }\n        return undefined;\n    };\n    TypeScriptServiceHost.prototype.getAnalyzedModules = function () {\n        this.validate();\n        return this.ensureAnalyzedModules();\n    };\n    TypeScriptServiceHost.prototype.ensureAnalyzedModules = function () {\n        var analyzedModules = this.analyzedModules;\n        if (!analyzedModules) {\n            var analyzeHost = { isSourceFile: function (filePath) { return true; } };\n            var programFiles = this.program.getSourceFiles().map(function (sf) { return sf.fileName; });\n            analyzedModules = this.analyzedModules =\n                analyzeNgModules(programFiles, analyzeHost, this.staticSymbolResolver, this.resolver);\n        }\n        return analyzedModules;\n    };\n    TypeScriptServiceHost.prototype.getTemplates = function (fileName) {\n        var _this = this;\n        this.ensureTemplateMap();\n        var componentType = this.fileToComponent.get(fileName);\n        if (componentType) {\n            var templateSource = this.getTemplateAt(fileName, 0);\n            if (templateSource) {\n                return [templateSource];\n            }\n        }\n        else {\n            var version_1 = this.host.getScriptVersion(fileName);\n            var result_1 = [];\n            // Find each template string in the file\n            var visit_1 = function (child) {\n                var templateSource = _this.getSourceFromNode(fileName, version_1, child);\n                if (templateSource) {\n                    result_1.push(templateSource);\n                }\n                else {\n                    ts.forEachChild(child, visit_1);\n                }\n            };\n            var sourceFile = this.getSourceFile(fileName);\n            if (sourceFile) {\n                this.context = sourceFile.path || sourceFile.fileName;\n                ts.forEachChild(sourceFile, visit_1);\n            }\n            return result_1.length ? result_1 : undefined;\n        }\n    };\n    TypeScriptServiceHost.prototype.getDeclarations = function (fileName) {\n        var _this = this;\n        var result = [];\n        var sourceFile = this.getSourceFile(fileName);\n        if (sourceFile) {\n            var visit_2 = function (child) {\n                var declaration = _this.getDeclarationFromNode(sourceFile, child);\n                if (declaration) {\n                    result.push(declaration);\n                }\n                else {\n                    ts.forEachChild(child, visit_2);\n                }\n            };\n            ts.forEachChild(sourceFile, visit_2);\n        }\n        return result;\n    };\n    TypeScriptServiceHost.prototype.getSourceFile = function (fileName) {\n        return this.tsService.getProgram().getSourceFile(fileName);\n    };\n    TypeScriptServiceHost.prototype.updateAnalyzedModules = function () {\n        this.validate();\n        if (this.modulesOutOfDate) {\n            this.analyzedModules = null;\n            this._reflector = null;\n            this.templateReferences = null;\n            this.fileToComponent = null;\n            this.ensureAnalyzedModules();\n            this.modulesOutOfDate = false;\n        }\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"program\", {\n        get: function () { return this.tsService.getProgram(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"checker\", {\n        get: function () {\n            var checker = this._checker;\n            if (!checker) {\n                checker = this._checker = this.program.getTypeChecker();\n            }\n            return checker;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.validate = function () {\n        var _this = this;\n        var program = this.program;\n        if (this._staticSymbolResolver && this.lastProgram != program) {\n            // Invalidate file that have changed in the static symbol resolver\n            var invalidateFile = function (fileName) {\n                return _this._staticSymbolResolver.invalidateFile(fileName);\n            };\n            this.clearCaches();\n            var seen_1 = new Set();\n            for (var _i = 0, _a = this.program.getSourceFiles(); _i < _a.length; _i++) {\n                var sourceFile = _a[_i];\n                var fileName = sourceFile.fileName;\n                seen_1.add(fileName);\n                var version$$1 = this.host.getScriptVersion(fileName);\n                var lastVersion = this.fileVersions.get(fileName);\n                if (version$$1 != lastVersion) {\n                    this.fileVersions.set(fileName, version$$1);\n                    invalidateFile(fileName);\n                }\n            }\n            // Remove file versions that are no longer in the file and invalidate them.\n            var missing = Array.from(this.fileVersions.keys()).filter(function (f) { return !seen_1.has(f); });\n            missing.forEach(function (f) { return _this.fileVersions.delete(f); });\n            missing.forEach(invalidateFile);\n            this.lastProgram = program;\n        }\n    };\n    TypeScriptServiceHost.prototype.clearCaches = function () {\n        this._checker = null;\n        this._typeCache = [];\n        this._resolver = null;\n        this.collectedErrors = null;\n        this.modulesOutOfDate = true;\n    };\n    TypeScriptServiceHost.prototype.ensureTemplateMap = function () {\n        if (!this.fileToComponent || !this.templateReferences) {\n            var fileToComponent = new Map();\n            var templateReference = [];\n            var ngModuleSummary = this.getAnalyzedModules();\n            var urlResolver = createOfflineCompileUrlResolver();\n            for (var _i = 0, _a = ngModuleSummary.ngModules; _i < _a.length; _i++) {\n                var module_1 = _a[_i];\n                for (var _b = 0, _c = module_1.declaredDirectives; _b < _c.length; _b++) {\n                    var directive = _c[_b];\n                    var metadata = this.resolver.getNonNormalizedDirectiveMetadata(directive.reference).metadata;\n                    if (metadata.isComponent && metadata.template && metadata.template.templateUrl) {\n                        var templateName = urlResolver.resolve(this.reflector.componentModuleUrl(directive.reference), metadata.template.templateUrl);\n                        fileToComponent.set(templateName, directive.reference);\n                        templateReference.push(templateName);\n                    }\n                }\n            }\n            this.fileToComponent = fileToComponent;\n            this.templateReferences = templateReference;\n        }\n    };\n    TypeScriptServiceHost.prototype.getSourceFromDeclaration = function (fileName, version$$1, source, span, type, declaration, node, sourceFile) {\n        var queryCache = undefined;\n        var t = this;\n        if (declaration) {\n            return {\n                version: version$$1,\n                source: source,\n                span: span,\n                type: type,\n                get members() {\n                    return language_services_13(t.program, t.checker, sourceFile, declaration);\n                },\n                get query() {\n                    if (!queryCache) {\n                        var pipes_1 = t.service.getPipesAt(fileName, node.getStart());\n                        queryCache = language_services_15(t.program, t.checker, sourceFile, function () { return language_services_14(sourceFile, t.program, t.checker, pipes_1); });\n                    }\n                    return queryCache;\n                }\n            };\n        }\n    };\n    TypeScriptServiceHost.prototype.getSourceFromNode = function (fileName, version$$1, node) {\n        var result = undefined;\n        var t = this;\n        switch (node.kind) {\n            case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n            case ts.SyntaxKind.StringLiteral:\n                var _a = this.getTemplateClassDeclFromNode(node), declaration = _a[0], decorator = _a[1];\n                if (declaration && declaration.name) {\n                    var sourceFile = this.getSourceFile(fileName);\n                    return this.getSourceFromDeclaration(fileName, version$$1, this.stringOf(node) || '', shrink(spanOf$1(node)), this.reflector.getStaticSymbol(sourceFile.fileName, declaration.name.text), declaration, node, sourceFile);\n                }\n                break;\n        }\n        return result;\n    };\n    TypeScriptServiceHost.prototype.getSourceFromType = function (fileName, version$$1, type) {\n        var result = undefined;\n        var declaration = this.getTemplateClassFromStaticSymbol(type);\n        if (declaration) {\n            var snapshot = this.host.getScriptSnapshot(fileName);\n            if (snapshot) {\n                var source = snapshot.getText(0, snapshot.getLength());\n                result = this.getSourceFromDeclaration(fileName, version$$1, source, { start: 0, end: source.length }, type, declaration, declaration, declaration.getSourceFile());\n            }\n        }\n        return result;\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"reflectorHost\", {\n        get: function () {\n            var _this = this;\n            var result = this._reflectorHost;\n            if (!result) {\n                if (!this.context) {\n                    // Make up a context by finding the first script and using that as the base dir.\n                    this.context = this.host.getScriptFileNames()[0];\n                }\n                // Use the file context's directory as the base directory.\n                // The host's getCurrentDirectory() is not reliable as it is always \"\" in\n                // tsserver. We don't need the exact base directory, just one that contains\n                // a source file.\n                var source = this.tsService.getProgram().getSourceFile(this.context);\n                if (!source) {\n                    throw new Error('Internal error: no context could be determined');\n                }\n                var tsConfigPath = findTsConfig(source.fileName);\n                var basePath = path.dirname(tsConfigPath || this.context);\n                var options = { basePath: basePath, genDir: basePath };\n                var compilerOptions = this.host.getCompilationSettings();\n                if (compilerOptions && compilerOptions.baseUrl) {\n                    options.baseUrl = compilerOptions.baseUrl;\n                }\n                result = this._reflectorHost =\n                    new ReflectorHost(function () { return _this.tsService.getProgram(); }, this.host, options);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.collectError = function (error, filePath) {\n        if (filePath) {\n            var errorMap = this.collectedErrors;\n            if (!errorMap || !this.collectedErrors) {\n                errorMap = this.collectedErrors = new Map();\n            }\n            var errors = errorMap.get(filePath);\n            if (!errors) {\n                errors = [];\n                this.collectedErrors.set(filePath, errors);\n            }\n            errors.push(error);\n        }\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"staticSymbolResolver\", {\n        get: function () {\n            var _this = this;\n            var result = this._staticSymbolResolver;\n            if (!result) {\n                this._summaryResolver = new AotSummaryResolver({\n                    loadSummary: function (filePath) { return null; },\n                    isSourceFile: function (sourceFilePath) { return true; },\n                    toSummaryFileName: function (sourceFilePath) { return sourceFilePath; },\n                    fromSummaryFileName: function (filePath) { return filePath; },\n                }, this._staticSymbolCache);\n                result = this._staticSymbolResolver = new StaticSymbolResolver(this.reflectorHost, this._staticSymbolCache, this._summaryResolver, function (e, filePath) { return _this.collectError(e, filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"reflector\", {\n        get: function () {\n            var _this = this;\n            var result = this._reflector;\n            if (!result) {\n                var ssr = this.staticSymbolResolver;\n                result = this._reflector = new StaticReflector(this._summaryResolver, ssr, [], [], function (e, filePath) { return _this.collectError(e, filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.getTemplateClassFromStaticSymbol = function (type) {\n        var source = this.getSourceFile(type.filePath);\n        if (source) {\n            var declarationNode = ts.forEachChild(source, function (child) {\n                if (child.kind === ts.SyntaxKind.ClassDeclaration) {\n                    var classDeclaration = child;\n                    if (classDeclaration.name != null && classDeclaration.name.text === type.name) {\n                        return classDeclaration;\n                    }\n                }\n            });\n            return declarationNode;\n        }\n        return undefined;\n    };\n    /**\n     * Given a template string node, see if it is an Angular template string, and if so return the\n     * containing class.\n     */\n    TypeScriptServiceHost.prototype.getTemplateClassDeclFromNode = function (currentToken) {\n        // Verify we are in a 'template' property assignment, in an object literal, which is an call\n        // arg, in a decorator\n        var parentNode = currentToken.parent; // PropertyAssignment\n        if (!parentNode) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        if (parentNode.kind !== ts.SyntaxKind.PropertyAssignment) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        else {\n            // TODO: Is this different for a literal, i.e. a quoted property name like \"template\"?\n            if (parentNode.name.text !== 'template') {\n                return TypeScriptServiceHost.missingTemplate;\n            }\n        }\n        parentNode = parentNode.parent; // ObjectLiteralExpression\n        if (!parentNode || parentNode.kind !== ts.SyntaxKind.ObjectLiteralExpression) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        parentNode = parentNode.parent; // CallExpression\n        if (!parentNode || parentNode.kind !== ts.SyntaxKind.CallExpression) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        var callTarget = parentNode.expression;\n        var decorator = parentNode.parent; // Decorator\n        if (!decorator || decorator.kind !== ts.SyntaxKind.Decorator) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        var declaration = decorator.parent; // ClassDeclaration\n        if (!declaration || declaration.kind !== ts.SyntaxKind.ClassDeclaration) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        return [declaration, callTarget];\n    };\n    TypeScriptServiceHost.prototype.getCollectedErrors = function (defaultSpan, sourceFile) {\n        var errors = (this.collectedErrors && this.collectedErrors.get(sourceFile.fileName));\n        return (errors && errors.map(function (e) {\n            return { message: e.message, span: spanAt(sourceFile, e.line, e.column) || defaultSpan };\n        })) ||\n            [];\n    };\n    TypeScriptServiceHost.prototype.getDeclarationFromNode = function (sourceFile, node) {\n        if (node.kind == ts.SyntaxKind.ClassDeclaration && node.decorators &&\n            node.name) {\n            for (var _i = 0, _a = node.decorators; _i < _a.length; _i++) {\n                var decorator = _a[_i];\n                if (decorator.expression && decorator.expression.kind == ts.SyntaxKind.CallExpression) {\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        var call = decorator.expression;\n                        var target = call.expression;\n                        var type = this.checker.getTypeAtLocation(target);\n                        if (type) {\n                            var staticSymbol = this.reflector.getStaticSymbol(sourceFile.fileName, classDeclaration.name.text);\n                            try {\n                                if (this.resolver.isDirective(staticSymbol)) {\n                                    var metadata = this.resolver.getNonNormalizedDirectiveMetadata(staticSymbol).metadata;\n                                    var declarationSpan = spanOf$1(target);\n                                    return {\n                                        type: staticSymbol,\n                                        declarationSpan: declarationSpan,\n                                        metadata: metadata,\n                                        errors: this.getCollectedErrors(declarationSpan, sourceFile)\n                                    };\n                                }\n                            }\n                            catch (e) {\n                                if (e.message) {\n                                    this.collectError(e, sourceFile.fileName);\n                                    var declarationSpan = spanOf$1(target);\n                                    return {\n                                        type: staticSymbol,\n                                        declarationSpan: declarationSpan,\n                                        errors: this.getCollectedErrors(declarationSpan, sourceFile)\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TypeScriptServiceHost.prototype.stringOf = function (node) {\n        switch (node.kind) {\n            case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n                return node.text;\n            case ts.SyntaxKind.StringLiteral:\n                return node.text;\n        }\n    };\n    TypeScriptServiceHost.prototype.findNode = function (sourceFile, position) {\n        function find(node) {\n            if (position >= node.getStart() && position < node.getEnd()) {\n                return ts.forEachChild(node, find) || node;\n            }\n        }\n        return find(sourceFile);\n    };\n    TypeScriptServiceHost.missingTemplate = [undefined, undefined];\n    return TypeScriptServiceHost;\n}());\nfunction findTsConfig(fileName) {\n    var dir = path.dirname(fileName);\n    while (fs.existsSync(dir)) {\n        var candidate = path.join(dir, 'tsconfig.json');\n        if (fs.existsSync(candidate))\n            return candidate;\n        var parentDir = path.dirname(dir);\n        if (parentDir === dir)\n            break;\n        dir = parentDir;\n    }\n}\nfunction spanOf$1(node) {\n    return { start: node.getStart(), end: node.getEnd() };\n}\nfunction shrink(span, offset) {\n    if (offset == null)\n        offset = 1;\n    return { start: span.start + offset, end: span.end - offset };\n}\nfunction spanAt(sourceFile, line, column) {\n    if (line != null && column != null) {\n        var position_1 = ts.getPositionOfLineAndCharacter(sourceFile, line, column);\n        var findChild = function findChild(node) {\n            if (node.kind > ts.SyntaxKind.LastToken && node.pos <= position_1 && node.end > position_1) {\n                var betterNode = ts.forEachChild(node, findChild);\n                return betterNode || node;\n            }\n        };\n        var node = ts.forEachChild(sourceFile, findChild);\n        if (node) {\n            return { start: node.getStart(), end: node.getEnd() };\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar projectHostMap = new WeakMap();\nfunction getExternalFiles(project) {\n    var host = projectHostMap.get(project);\n    if (host) {\n        return host.getTemplateReferences();\n    }\n}\nvar angularOnlyResults = process.argv.indexOf('--angularOnlyResults') >= 0;\nfunction angularOnlyFilter(ls) {\n    return {\n        cleanupSemanticCache: function () { return ls.cleanupSemanticCache(); },\n        getSyntacticDiagnostics: function (fileName) { return []; },\n        getSemanticDiagnostics: function (fileName) { return []; },\n        getCompilerOptionsDiagnostics: function () { return []; },\n        getSyntacticClassifications: function (fileName, span) { return []; },\n        getSemanticClassifications: function (fileName, span) { return []; },\n        getEncodedSyntacticClassifications: function (fileName, span) { return ({ undefined: undefined }); },\n        getEncodedSemanticClassifications: function (fileName, span) { return undefined; },\n        getCompletionsAtPosition: function (fileName, position) { return undefined; },\n        getCompletionEntryDetails: function (fileName, position, entryName) {\n            return undefined;\n        },\n        getCompletionEntrySymbol: function (fileName, position, entryName) { return undefined; },\n        getQuickInfoAtPosition: function (fileName, position) { return undefined; },\n        getNameOrDottedNameSpan: function (fileName, startPos, endPos) { return undefined; },\n        getBreakpointStatementAtPosition: function (fileName, position) { return undefined; },\n        getSignatureHelpItems: function (fileName, position) { return undefined; },\n        getRenameInfo: function (fileName, position) { return undefined; },\n        findRenameLocations: function (fileName, position, findInStrings, findInComments) {\n            return [];\n        },\n        getDefinitionAtPosition: function (fileName, position) { return []; },\n        getTypeDefinitionAtPosition: function (fileName, position) { return []; },\n        getImplementationAtPosition: function (fileName, position) { return []; },\n        getReferencesAtPosition: function (fileName, position) { return []; },\n        findReferences: function (fileName, position) { return []; },\n        getDocumentHighlights: function (fileName, position, filesToSearch) { return []; },\n        /** @deprecated */\n        getOccurrencesAtPosition: function (fileName, position) { return []; },\n        getNavigateToItems: function (searchValue) { return []; },\n        getNavigationBarItems: function (fileName) { return []; },\n        getNavigationTree: function (fileName) { return undefined; },\n        getOutliningSpans: function (fileName) { return []; },\n        getTodoComments: function (fileName, descriptors) { return []; },\n        getBraceMatchingAtPosition: function (fileName, position) { return []; },\n        getIndentationAtPosition: function (fileName, position, options) { return undefined; },\n        getFormattingEditsForRange: function (fileName, start, end, options) { return []; },\n        getFormattingEditsForDocument: function (fileName, options) { return []; },\n        getFormattingEditsAfterKeystroke: function (fileName, position, key, options) { return []; },\n        getDocCommentTemplateAtPosition: function (fileName, position) { return undefined; },\n        isValidBraceCompletionAtPosition: function (fileName, position, openingBrace) { return undefined; },\n        getCodeFixesAtPosition: function (fileName, start, end, errorCodes) { return []; },\n        getEmitOutput: function (fileName) { return undefined; },\n        getProgram: function () { return ls.getProgram(); },\n        dispose: function () { return ls.dispose(); },\n        getApplicableRefactors: function (fileName, positionOrRaneg) { return []; },\n        getEditsForRefactor: function (fileName, formatOptions, positionOrRange, refactorName, actionName) {\n            return undefined;\n        },\n    };\n}\nfunction create(info /* ts.server.PluginCreateInfo */) {\n    // Create the proxy\n    var proxy = Object.create(null);\n    var oldLS = info.languageService;\n    if (angularOnlyResults) {\n        oldLS = angularOnlyFilter(oldLS);\n    }\n    function tryCall(fileName, callback) {\n        if (fileName && !oldLS.getProgram().getSourceFile(fileName)) {\n            return undefined;\n        }\n        try {\n            return callback();\n        }\n        catch (e) {\n            return undefined;\n        }\n    }\n    function tryFilenameCall(m) {\n        return function (fileName) { return tryCall(fileName, function () { return (m.call(ls, fileName)); }); };\n    }\n    function tryFilenameOneCall(m) {\n        return function (fileName, p) { return tryCall(fileName, function () { return (m.call(ls, fileName, p)); }); };\n    }\n    function tryFilenameTwoCall(m) {\n        return function (fileName, p1, p2) { return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2)); }); };\n    }\n    function tryFilenameThreeCall(m) {\n        return function (fileName, p1, p2, p3) { return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2, p3)); }); };\n    }\n    function tryFilenameFourCall(m) {\n        return function (fileName, p1, p2, p3, p4) {\n            return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2, p3, p4)); });\n        };\n    }\n    function typescriptOnly(ls) {\n        return {\n            cleanupSemanticCache: function () { return ls.cleanupSemanticCache(); },\n            getSyntacticDiagnostics: tryFilenameCall(ls.getSyntacticDiagnostics),\n            getSemanticDiagnostics: tryFilenameCall(ls.getSemanticDiagnostics),\n            getCompilerOptionsDiagnostics: function () { return ls.getCompilerOptionsDiagnostics(); },\n            getSyntacticClassifications: tryFilenameOneCall(ls.getSemanticClassifications),\n            getSemanticClassifications: tryFilenameOneCall(ls.getSemanticClassifications),\n            getEncodedSyntacticClassifications: tryFilenameOneCall(ls.getEncodedSyntacticClassifications),\n            getEncodedSemanticClassifications: tryFilenameOneCall(ls.getEncodedSemanticClassifications),\n            getCompletionsAtPosition: tryFilenameOneCall(ls.getCompletionsAtPosition),\n            getCompletionEntryDetails: tryFilenameTwoCall(ls.getCompletionEntryDetails),\n            getCompletionEntrySymbol: tryFilenameTwoCall(ls.getCompletionEntrySymbol),\n            getQuickInfoAtPosition: tryFilenameOneCall(ls.getQuickInfoAtPosition),\n            getNameOrDottedNameSpan: tryFilenameTwoCall(ls.getNameOrDottedNameSpan),\n            getBreakpointStatementAtPosition: tryFilenameOneCall(ls.getBreakpointStatementAtPosition),\n            getSignatureHelpItems: tryFilenameOneCall(ls.getSignatureHelpItems),\n            getRenameInfo: tryFilenameOneCall(ls.getRenameInfo),\n            findRenameLocations: tryFilenameThreeCall(ls.findRenameLocations),\n            getDefinitionAtPosition: tryFilenameOneCall(ls.getDefinitionAtPosition),\n            getTypeDefinitionAtPosition: tryFilenameOneCall(ls.getTypeDefinitionAtPosition),\n            getImplementationAtPosition: tryFilenameOneCall(ls.getImplementationAtPosition),\n            getReferencesAtPosition: tryFilenameOneCall(ls.getReferencesAtPosition),\n            findReferences: tryFilenameOneCall(ls.findReferences),\n            getDocumentHighlights: tryFilenameTwoCall(ls.getDocumentHighlights),\n            /** @deprecated */\n            getOccurrencesAtPosition: tryFilenameOneCall(ls.getOccurrencesAtPosition),\n            getNavigateToItems: function (searchValue, maxResultCount, fileName, excludeDtsFiles) { return tryCall(fileName, function () { return ls.getNavigateToItems(searchValue, maxResultCount, fileName, excludeDtsFiles); }); },\n            getNavigationBarItems: tryFilenameCall(ls.getNavigationBarItems),\n            getNavigationTree: tryFilenameCall(ls.getNavigationTree),\n            getOutliningSpans: tryFilenameCall(ls.getOutliningSpans),\n            getTodoComments: tryFilenameOneCall(ls.getTodoComments),\n            getBraceMatchingAtPosition: tryFilenameOneCall(ls.getBraceMatchingAtPosition),\n            getIndentationAtPosition: tryFilenameTwoCall(ls.getIndentationAtPosition),\n            getFormattingEditsForRange: tryFilenameThreeCall(ls.getFormattingEditsForRange),\n            getFormattingEditsForDocument: tryFilenameOneCall(ls.getFormattingEditsForDocument),\n            getFormattingEditsAfterKeystroke: tryFilenameThreeCall(ls.getFormattingEditsAfterKeystroke),\n            getDocCommentTemplateAtPosition: tryFilenameOneCall(ls.getDocCommentTemplateAtPosition),\n            isValidBraceCompletionAtPosition: tryFilenameTwoCall(ls.isValidBraceCompletionAtPosition),\n            getCodeFixesAtPosition: tryFilenameFourCall(ls.getCodeFixesAtPosition),\n            getEmitOutput: tryFilenameCall(ls.getEmitOutput),\n            getProgram: function () { return ls.getProgram(); },\n            dispose: function () { return ls.dispose(); },\n            getApplicableRefactors: function (fileName, positionOrRaneg) { return []; },\n            getEditsForRefactor: function (fileName, formatOptions, positionOrRange, refactorName, actionName) {\n                return undefined;\n            },\n        };\n    }\n    oldLS = typescriptOnly(oldLS);\n    var _loop_1 = function (k) {\n        proxy[k] = function () { return oldLS[k].apply(oldLS, arguments); };\n    };\n    for (var k in oldLS) {\n        _loop_1(k);\n    }\n    function completionToEntry(c) {\n        return { kind: c.kind, name: c.name, sortText: c.sort, kindModifiers: '' };\n    }\n    function diagnosticToDiagnostic(d, file) {\n        var result = {\n            file: file,\n            start: d.span.start,\n            length: d.span.end - d.span.start,\n            messageText: d.message,\n            category: ts.DiagnosticCategory.Error,\n            code: 0,\n            source: 'ng'\n        };\n        return result;\n    }\n    function tryOperation(attempting, callback) {\n        try {\n            return callback();\n        }\n        catch (e) {\n            info.project.projectService.logger.info(\"Failed to \" + attempting + \": \" + e.toString());\n            info.project.projectService.logger.info(\"Stack trace: \" + e.stack);\n            return null;\n        }\n    }\n    var serviceHost = new TypeScriptServiceHost(info.languageServiceHost, info.languageService);\n    var ls = createLanguageService(serviceHost);\n    serviceHost.setSite(ls);\n    projectHostMap.set(info.project, serviceHost);\n    proxy.getCompletionsAtPosition = function (fileName, position) {\n        var base = oldLS.getCompletionsAtPosition(fileName, position) || {\n            isGlobalCompletion: false,\n            isMemberCompletion: false,\n            isNewIdentifierLocation: false,\n            entries: []\n        };\n        tryOperation('get completions', function () {\n            var results = ls.getCompletionsAt(fileName, position);\n            if (results && results.length) {\n                if (base === undefined) {\n                    base = {\n                        isGlobalCompletion: false,\n                        isMemberCompletion: false,\n                        isNewIdentifierLocation: false,\n                        entries: []\n                    };\n                }\n                for (var _i = 0, results_1 = results; _i < results_1.length; _i++) {\n                    var entry = results_1[_i];\n                    base.entries.push(completionToEntry(entry));\n                }\n            }\n        });\n        return base;\n    };\n    proxy.getQuickInfoAtPosition = function (fileName, position) {\n        var base = oldLS.getQuickInfoAtPosition(fileName, position);\n        // TODO(vicb): the tags property has been removed in TS 2.2\n        tryOperation('get quick info', function () {\n            var ours = ls.getHoverAt(fileName, position);\n            if (ours) {\n                var displayParts = [];\n                for (var _i = 0, _a = ours.text; _i < _a.length; _i++) {\n                    var part = _a[_i];\n                    displayParts.push({ kind: part.language || 'angular', text: part.text });\n                }\n                var tags = base && base.tags;\n                base = {\n                    displayParts: displayParts,\n                    documentation: [],\n                    kind: 'angular',\n                    kindModifiers: 'what does this do?',\n                    textSpan: { start: ours.span.start, length: ours.span.end - ours.span.start },\n                };\n                if (tags) {\n                    base.tags = tags;\n                }\n            }\n        });\n        return base;\n    };\n    proxy.getSemanticDiagnostics = function (fileName) {\n        var result = oldLS.getSemanticDiagnostics(fileName);\n        var base = result || [];\n        tryOperation('get diagnostics', function () {\n            info.project.projectService.logger.info(\"Computing Angular semantic diagnostics...\");\n            var ours = ls.getDiagnostics(fileName);\n            if (ours && ours.length) {\n                var file_1 = oldLS.getProgram().getSourceFile(fileName);\n                base.push.apply(base, ours.map(function (d) { return diagnosticToDiagnostic(d, file_1); }));\n            }\n        });\n        return base;\n    };\n    proxy.getDefinitionAtPosition = function (fileName, position) {\n        var base = oldLS.getDefinitionAtPosition(fileName, position);\n        if (base && base.length) {\n            return base;\n        }\n        return tryOperation('get definition', function () {\n            var ours = ls.getDefinitionAt(fileName, position);\n            if (ours && ours.length) {\n                base = base || [];\n                for (var _i = 0, ours_1 = ours; _i < ours_1.length; _i++) {\n                    var loc = ours_1[_i];\n                    base.push({\n                        fileName: loc.fileName,\n                        textSpan: { start: loc.span.start, length: loc.span.end - loc.span.start },\n                        name: '',\n                        kind: 'definition',\n                        containerName: loc.fileName,\n                        containerKind: 'file'\n                    });\n                }\n            }\n            return base;\n        }) || [];\n    };\n    return proxy;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * @stable\n */\nvar VERSION = new Version$1('5.0.0-rc.1-931cf78');\n\nexports.createLanguageService = createLanguageService;\nexports.TypeScriptServiceHost = TypeScriptServiceHost;\nexports.createLanguageServiceFromTypescript = createLanguageServiceFromTypescript;\nexports.VERSION = VERSION;\nexports.getExternalFiles = getExternalFiles;\nexports.create = create;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n});\n//# sourceMappingURL=language-service.umd.js.map\n"]}