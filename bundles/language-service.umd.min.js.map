{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/language-service/bundles/language-service.umd.js"],"names":["$getModule","name","$provided","require","define","modules","cb","$deferred","$reflect","defineMetadata","getOwnMetadata","global","$resolved","module","exports","provided","result","Object","assign","reflect-metadata","apply","this","map","fs","path","ts","__extends","d","b","__","constructor","extendStatics","prototype","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","SchemaMetadata","MetadataFactory","makeMetadataFactory","props","factory","args","_i","arguments","length","values","__assign","ngMetadataName","isTypeOf","obj","Route","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","Error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten$1","list","reduce","flat","item","flatItem","concat","jitSourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf$1$1","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path$$1","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ERROR_COMPONENT_TYPE","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector$1","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","listLazyRoutes","allLazyRoutes","transitiveModule","ROUTES","loadChildren","_collectLoadChildren","loadChildren_1","route","parseLazyRoute","routes","routes_1","routePath","routeName","referencedModule","moduleName","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","symbol","metadata","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","__symbolic","isNgSymbol","isDirective","isPipe","isInjectable","getNgModuleMetadata","isValueExportingNonSourceFile","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","errorCollector","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","compiler","AotCompiler","StyleCompiler","NgModuleCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","seen","summaries","createOutputContext","genFilePath","runtime","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","createCommonjsModule","isFunction","isObject","tryCatcher","tryCatchTarget","errorObject","tryCatch","flattenUnsubscriptionErrors","errs","err","UnsubscriptionError_1","UnsubscriptionError","toSubscriber","nextOrObserver","complete","Subscriber_1","Subscriber","rxSubscriber","Observer","empty","noop$1","pipe","fns","pipeFromArray","prev","noop_1","noop","isScheduler","schedule","isPromise$2","subscribe","subscribeToResult","outerSubscriber","outerValue","outerIndex","destination","InnerSubscriber_1","InnerSubscriber","closed","Observable_1","Observable","_isScalar","next","syncErrorThrowable","isArrayLike","isPromise_1","root","setTimeout","iterator","iterator$$1","done","observable","obs","TypeError","isObject_1","mergeMap","project","resultSelector","concurrent","POSITIVE_INFINITY","lift","MergeMapOperator","identity","mergeAll","mergeMap_1","identity_1","merge$3","observables","call","mergeStatic$1","scheduler","last","isScheduler_1","mergeAll_1","ArrayObservable_1","ArrayObservable","merge$2","merge_1","refCount","RefCountOperator$1","multicast","subjectOrSubjectFactory","subjectFactory","MulticastOperator","connectable","ConnectableObservable_1","connectableObservableDescriptor","shareSubjectFactory","Subject_1","Subject","share$1","refCount_1","multicast_1","share","share_1","makeDecorator","parentClass","chainFn","DecoratorFactory","objOrType","metaCtor","annotationInstance","TypeDecorator","cls","ANNOTATIONS","makeMetadataCtor","annotationCls","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","parameters","PARAMETERS","annotation","getSymbolIterator","_symbolIterator","Symbol_1","_global","getOwnPropertyNames","scheduleMicroTask","Zone","current","looseIdentical","stringify$1","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef$1","resolveProvider","computeDeps","IDENT","EMPTY","useNew","provide","USE_VALUE$1","staticError","multiProviderMixError","recursivelyProcessProviders","records","MULTI_PROVIDER_FN","record","tryResolveToken","notFoundValue","resolveToken","NG_TEMP_TOKEN_PATH","CIRCULAR","NO_NEW_LINE","depRecords","depRecord","childRecord","NULL_INJECTOR","Injector","THROW_IF_NOT_FOUND","providerDeps","annotations","Optional","SkipSelf","Self","Inject$1","formatError","charAt","JSON","NEW_LINE","getDebugContext","ERROR_DEBUG_CONTEXT","getOriginalError","ERROR_ORIGINAL_ERROR","getErrorLogger","ERROR_LOGGER","defaultErrorLogger","wrappedError","originalError","findFirstClosedCycle","constructResolvingPath","injectionError","injector","constructResolvingMessage","errMsg","addKey","injectors","noProviderError","cyclicDependencyError","instantiationError","originalException","originalStack","first","invalidProviderError","noAnnotationError","typeOrFunc","signature","ii","parameter","outOfBoundsError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","isType","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","getParentCtor","parentProto","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","constructDependencies","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","resolveReflectiveProviders","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","resolvedFactories","Type$1$1","params_1","t","_extractToken","optional","_createDependency","visibility","paramMetadata","InjectionToken","_mapProviders","_providers","getProviderAtIndex","isPromise$1","_appIdRandomProviderFactory","_randomChar","floor","random","_throwError","noComponentFactoryError","ERROR_COMPONENT","createScope","events","leave","scope","returnValue","trace","leaveScope","noopScope","arg0","arg1","checkStable","zone","_nesting","hasPendingMicrotasks","isStable","onMicrotaskEmpty","emit","runOutsideAngular","onStable","forkInnerZoneWithAngularBehavior","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","hasPendingMacrotasks","macroTask","onHandleError","handleError","onError","onUnstable","isDevMode","_runModeLocked","_devMode","createPlatform","_platform","destroyed","ALLOW_MULTIPLE_PLATFORMS","PlatformRef","inits","PLATFORM_INITIALIZER","init","assertPlatform","requiredToken","platform","getPlatform","getNgZone","ngZoneOption","NoopNgZone","NgZone","enableLongStackTrace","_callAndReportToErrorHandler","errorHandler","ngZone","catch","optionsReducer","dst","objs","remove","splice","flatten$2","_queryElementChildren","predicate","matches","childNodes","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","isJsObject","comparator","iterator1","iterator2","item1","item2","iterateListLike","getPreviousIndex","addRemoveOffset","moveOffsets","previousIndex","moveOffset","getTypeNameForDebugging","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","_localeFactory","locale","asTextData","view","asElementData","asProviderData","asPureExpressionData","asQueryList","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","viewWrappedDebugError","_addDebugContext","logError","isViewDebugError","viewDestroyedError","tokenKey","_tokenKeyCache","size","checkBinding","def","oldValues","state","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","Services","createDebugContext","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","eventName","event","componentView","handleEvent","declaredViewContainer","viewParentEl","renderNode","renderElement","renderText","elementEventFullName$1","isComponentView","isEmbeddedView","splitDepsDsl","getParentRenderElement","renderHost","renderParent","componentRendererType","encapsulation","ViewEncapsulation$1","Native","resolveDefinition","DEFINITION_CACHE","NOOP","rootRenderNodes","renderNodes","visitRootRenderNodes","nextSibling","renderer","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","appendChild","insertBefore","removeChild","splitNamespace","NS_PREFIX_RE","createElement","elDef","rootSelectorOrNode","selectorOrNode","ns","createComment","parentEl","selectRootElement","name_2","setAttribute","listenToElementOutputs","outputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","outputIndex","checkAndUpdateElementInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","bindings","changed","checkAndUpdateElementValue","checkAndUpdateElementDynamic","binding","elData","renderNode$$1","setElementAttribute","setElementClass","setElementStyle","setElementProperty","renderValue","sanitizer","sanitize","removeAttribute","addClass","removeClass","SecurityContext$1","setStyle","removeStyle","setProperty","initNgModule","data","_def","provDef","_createProviderInstance$1","resolveNgModuleDep","_parent","tokenKey$$1","InjectorRefTokenKey$1","NgModuleRefTokenKey","providersByKey","providerInstance","UNDEFINED_VALUE","injectable","_createClass","_callFactory","depValues","callNgModuleLifecycle","lifecycles","instance","ngOnDestroy","attachEmbeddedView","parentView","elementData","viewIndex","addToArray","attachProjectedView","dirtyParentQueries","renderAttachEmbeddedView","vcElementData","dvcElementData","projectedViews","template","_projectedViews","markNodeAsProjectedTemplate","viewDef","nodeFlags","parentNodeDef","childFlags","detachEmbeddedView","removeFromArray","renderDetachView","detachProjectedView","moveEmbeddedView","oldViewIndex","newViewIndex","prevView","prevRenderNode","createViewContainerData","ViewContainerRef_","createChangeDetectorRef","ViewRef_","createTemplateData","TemplateRef_","createInjector","Injector_","createRendererV1","RendererAdapter","createNgModuleRef","moduleType","bootstrapComponents","NgModuleRef_","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","allowPrivateServices","subscription","eventHandlerClosure","unsubscribe","checkAndUpdateDirectiveInline","providerData","changes","updateProp","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveDynamic","callFactory","resolveDep","startView","ChangeDetectorRefTokenKey","RendererV1TokenKey","findCompView","Renderer2TokenKey","ElementRefTokenKey","ElementRef","ViewContainerRefTokenKey","viewContainer","TemplateRefTokenKey","InjectorRefTokenKey","providerDef_1","allProviders","publicProviders","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","WrappedValue","wrapped","SimpleChange","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","directChildFlags","callElementProvidersLifecycles","setCurrentNode","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","createQuery","QueryList","nodeMatchedQueries","tplDef","filterId","setDirty","checkAndUpdateQuery","queryList","dirty","directiveInstance","newValues","elementDef","calcQueryValues","reset","notify","boundValue","bindingType","notifyOnChanges","queryDef","valueType","matchedQueries","getQueryValue","childMatchedQueries","embeddedView","dvc","projectedView","queryValueType","appendNgContent","createPureExpression","checkAndUpdatePureExpressionInline","checkAndUpdatePureExpressionDynamic","createText","checkAndUpdateTextInline","_addInterpolationPart","checkAndUpdateTextDynamic","createEmbeddedView","anchorDef$$1","createView","initView","createViewNodes","createRootView","createComponentView","hostElement","compRenderer","rendererType","rendererFactory","createRenderer","componentProvider","disposables","outputCount","bindingCount","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","checkNoChangesView","markProjectedViewsForCheck","updateDirectives","execEmbeddedViewsAction","CheckNoChanges","updateRenderer","checkAndUpdateView","CheckAndUpdate","checkAndUpdateNode","argStyle","checkAndUpdateNodeInline","checkAndUpdateNodeDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","destroyView","Destroy","destroyNode","destroyViewNodes","destroy","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","nodeCount","initServicesIfNeeded","initialized","services","createDebugServices","createProdServices","overrideProvider","clearProviderOverrides","createProdRootView","DebugContext_","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugClearProviderOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","elInjector","createRootData","RendererFactory2","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","Sanitizer","ErrorHandler","anchorDef","viewDef$$1","parentInjector","applyProviderOverridesToNgModule","override","providerOverrides","clear","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","elIndex","hasOverrides","hasDeprecatedOverrides","deprecatedBehavior","checkIndex","detectChanges","checkNoChanges","_currentView","_currentNodeIndex","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","_currentAction","debugCheckRenderNodeFn","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","camelCaseToDashCase","CAMEL_CASE_REGEXP","getRenderNodeIndex","renderNodeIndex","findHostElement","collectReferences","references","refName","self","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","isParseSourceSpan","spanOf","inSpan","exclusive","offsetSpan","amount","isNarrower","spanA","spanB","hasTemplateReference","diDep","getSelectors","info","flatten","removeSuffix","uniqueByName","elements","elements_1","diagnosticInfoFromTemplateInfo","members","htmlAst","templateAst","findTemplateAstAt","allowWidening","visitEmbeddedTemplate","visitChildren","visitElement","inputs","visitDirective","RecursiveTemplateAstVisitor","findAstAt","excludeEmpty","NullAstVisitor","getExpressionCompletions","getType","language_services_4","tail","getPipes","receiverType","getBuiltinType","language_services_7","Any","getExpressionSymbol","compose","indexes","indexes_1","group","groups","name_1","attributeNames","defaultAttributes","eventNames","SchemaInformation","eventsOf","propertyNames","propertiesOf","getTemplateCompletions","templateInfo","templatePosition_1","path_1","mostSpecific","elementCompletions","astPosition_1","startTagSpan","tagLen","attributeCompletions","visitAttribute","valueSpan","attributeValueCompletions","visitText","entityCompletions","getSourceText","interpolationCompletions","contentType","TagContentType","PARSABLE_DATA","voidElementAttributeCompletions","visitComment","visitExpansion","visitExpansionCase","parentOf","attributeCompletionsForElement","getAttributeInfosForElement","fromHtml","nameOfAttr","htmlAttributes","htmlProperties","htmlEvents","selectorMap","applicableSelectors","selectorAndAttributeNames","attrs_1","selectorAndAttr","elementSelector","createElementCssSelector","SelectorMatcher","addSelectables","foldAttrs","expandedAttr","dinfo","ExpressionVisitor","language_services_2","widerPath_1","widerVisitor","htmlNames","hiddenHtmlElements","directiveElements","components","found","re","exec","NAMED_ENTITIES","templatePath","templateAttr","inputOutput","templates","duplicate","cloneAttr","lowerName","locateSymbol","templatePosition","symbol_1","span_1","attributeValueSymbol_1","inEvent","attribute","findAttribute","expressionOffset","visitNgContent","getTypeSymbol","OverrideKindSymbol","visitReference","visitVariable","visitEvent","handler","findOutputBinding","visitElementProperty","visitAttr","visitBoundText","expressionPosition","visitDirectiveProperty","findInputBinding","invertedInput","invertMap","fieldName","templateName","classSymbol","invertedOutputs","getDefinition","definition","getTemplateDiagnostics","astProvider","results","templates_1","getTemplateAst","DiagnosticKind","expressionDiagnostics","language_services_3","getDeclarationDiagnostics","declarations","declarations_1","declaration","report","declarationSpan","templateUrl","getHover","hoverTextOf","language","container","createLanguageService","LanguageServiceImpl","removeMissing","uniqueBySpan","findSuitableDefaultModule","resultSize","module_1","moduleSize","createLanguageServiceFromTypescript","service","ngHost","TypeScriptServiceHost","ngServer","setSite","findTsConfig","dirname","existsSync","candidate","parentDir","spanOf$1","getStart","getEnd","shrink","spanAt","position_1","getPositionOfLineAndCharacter","findChild","SyntaxKind","LastToken","forEachChild","getExternalFiles","projectHostMap","getTemplateReferences","angularOnlyFilter","ls","cleanupSemanticCache","getSyntacticDiagnostics","getSemanticDiagnostics","getCompilerOptionsDiagnostics","getSyntacticClassifications","getSemanticClassifications","getEncodedSyntacticClassifications","getEncodedSemanticClassifications","getCompletionsAtPosition","getCompletionEntryDetails","entryName","getCompletionEntrySymbol","getQuickInfoAtPosition","getNameOrDottedNameSpan","startPos","endPos","getBreakpointStatementAtPosition","getSignatureHelpItems","getRenameInfo","findRenameLocations","findInStrings","findInComments","getDefinitionAtPosition","getTypeDefinitionAtPosition","getImplementationAtPosition","getReferencesAtPosition","findReferences","getDocumentHighlights","filesToSearch","getOccurrencesAtPosition","getNavigateToItems","searchValue","getNavigationBarItems","getNavigationTree","getOutliningSpans","getTodoComments","descriptors","getBraceMatchingAtPosition","getIndentationAtPosition","getFormattingEditsForRange","getFormattingEditsForDocument","getFormattingEditsAfterKeystroke","getDocCommentTemplateAtPosition","isValidBraceCompletionAtPosition","openingBrace","getCodeFixesAtPosition","errorCodes","getEmitOutput","getProgram","dispose","getApplicableRefactors","positionOrRaneg","getEditsForRefactor","formatOptions","positionOrRange","refactorName","actionName","tryCall","oldLS","getSourceFile","tryFilenameCall","tryFilenameOneCall","tryFilenameTwoCall","p1","p2","tryFilenameThreeCall","p3","tryFilenameFourCall","p4","completionToEntry","sortText","kindModifiers","diagnosticToDiagnostic","messageText","category","DiagnosticCategory","tryOperation","attempting","projectService","logger","proxy","languageService","angularOnlyResults","maxResultCount","excludeDtsFiles","serviceHost","languageServiceHost","isGlobalCompletion","isMemberCompletion","isNewIdentifierLocation","entries","getCompletionsAt","results_1","ours","getHoverAt","displayParts","tags","documentation","textSpan","getDiagnostics","file_1","getDefinitionAt","ours_1","loc","containerName","containerKind","fs__default","path__default","ts__default","setPrototypeOf","__proto__","createInject","createInjectionToken","desc","_desc","createAttribute","attributeName","createContentChildren","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","createNgModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createInjectable","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","CatQuery","Types","DepFlags","Value","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","RenderElement","TemplateRef","ViewContainerRef","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION$1","TextAst","BoundTextAst","AttrAst","BoundElementPropertyAst","BoundEventAst","calcFullName","ReferenceAst","VariableAst","variables","BoundDirectivePropertyAst","directiveName","DirectiveAst","hostProperties","hostEvents","Builtin","NullTemplateVisitor","jitDevMode","assertNoMembers","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileSummaryKind","Injectable","CompileStylesheetMetadata","styles","styleUrls","CompileTemplateMetadata","externalStylesheets","animations","ngContentSelectors","interpolation","toSummary","CompileDirectiveMetadata","isHost","hostListeners","componentViewType","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","childOf","Expansion","ExpansionCase","expSourceSpan","startSourceSpan","InterpolationConfig","fromArray","markers","style","RAW_TEXT","ESCAPABLE_RAW_TEXT","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","_dedupeBindings","names","reversedResult","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","isClosedByChild","_getParentElementSkippingContainers","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","stackIndex","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","_f","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","textDef","directiveDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","_SELECTOR_REGEXP","classNames","_addResult","cssSel","inNot","hasElementSelector","getMatchingElementTemplate","classAttr","klass","notSelector","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","isNgModule","getNgModuleSummary","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","oldModule","modulesByToken","modSummary","mod","addedTokens","tokenRef","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","hasUnknownDeps","dependenciesMetadata","isSelf","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassField","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","ProviderViewContext","ProviderElementContext","viewContext","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","foundLocal","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","emitSourceMaps","referenceFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","metas","ElementSchemaRegistry","BOOLEAN$1","NUMBER$1","STRING$1","OBJECT$1","SCHEMA$1","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","componentId","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","isHostComponent","refOutputVars","updates","actions","getOutputVar","targetStatements","viewStmts","preprocessUpdateExpression","nameResolver","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","_preprocessUpdateExpression","_visitElementOrTemplate","queryMatchesExpr","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","createUpdateStatements","allowEmptyExprs","updateBindingCount","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","GeneratedFile","srcFileUrl","sourceOrStmts","indexBySymbol","processedSummaryBySymbol","processedSummaries","getKnownModuleName","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","ngModuleSummary","summary_1","importAs","__symbol","toSummaryFileName","baseSymbol","visitStaticSymbol","loadSummary","isLibrary","ngModuleSymbols","serializeSummaryWithDeps","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","loadingPromises","loadFilesSync","emitFlags","ngModuleIndex","typeIndex","dirId","_createTypeCheckBlock","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","arity","getTypeArity","getImportAs","importModule","_fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","importedFilePath","containingFilePath","fileNameToModuleName","stylesheetMetadata","compiledStylesheet","entryRoute","visitLazyRoute","seenRoutes","lazyRoutes","lazyRoutes_2","lazyRoute","lazyRoutes_1","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","staticSymbol","findSymbolDeclaration","getResourcePath","containingFile","refSymbol","getSymbolByModule","declarationSymbol","recordModuleNameForFileName","recordImportAs","findDeclaration","tryFindDeclaration","ignoreErrorsFor","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","decorators","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","lcProperty","injectionToken","opaqueToken","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","PopulatedScope","ResolvedStaticSymbol","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","sourceSymbol","targetSymbol","invalidateFile","symbols_1","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","createResolvedSymbol","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor","VERSION","commonjsGlobal","window","compiler_1","expression_type","TypeDiagnostic","AstType","diagnostics","callable","reportWarning","normalize","Undefined","Null","Other","nullable","getNonNullableType","leftType","rightType","leftRawKind","getTypeKind","rightRawKind","leftKind","rightKind","operKind","errorAst","Boolean","anyType","getTypeUnion","selectSignature","public","signatures","indexed","argument","undefinedType","targetType","keyType","getArrayType","resolveMethodCall","expType","resolvePropertyRead","_anyType","_undefinedType","isAny","receiverInfo","expression_diagnostics","getTemplateExpressionDiagnostics","ExpressionDiagnosticsVisitor","includeEvent","getExpressionScope","getExpressionDiagnostics","analyzer","getReferences","processReferences","references_1","getDefinitionOf","templateOffset","getVarDeclarations","getTemplateContext","Unbound","refinedVariableType","templateElement","ngForDirective","ngForOfBinding","getElementType","getEventDeclaration","referenceTable","createSymbolTable","variableTable","eventsTable","mergeSymbolTable","diagnoseExpression","attributeValueLocation","directiveSummary","previousDirectiveSummary","typescript_symbols","getSymbolQuery","program","checker","fetchPipes","TypeScriptSymbolQuery","getClassMembers","getClassFromStaticSymbol","getTypeAtLocation","TypeWrapper","getClassMembersFromDeclaration","ClassDeclaration","classDeclaration","getPipesTable","PipesTable","typeCallable","getCallSignatures","signaturesOf","SignatureWrapper","toSymbols","symbolTable","table","own","findClassSymbolInContext","moduleSymbol","getExportsOfModule","isSymbolPrivate","valueDeclaration","isPrivate","getBuiltinTypeFromTs","setParents","AsExpression","TrueKeyword","AnyKeyword","NullKeyword","numeric","NumericLiteral","NoSubstitutionTemplateLiteral","VoidExpression","definitionFromTsSymbol","parentDeclarationOf","InterfaceDeclaration","SourceFile","getContainerOf","getFlags","SymbolFlags","ClassMember","getTypeParameterOf","typeArguments","typeKindOf","TypeFlags","StringLike","StringLiteral","NumberLike","Union","unionType","TypeParameter","getFromSymbolTable","toNumbers","compareNumbers","ModifierFlags","getCombinedModifierFlags","isReferenceType","ObjectFlags","objectFlags","Reference","typeCache","getTsTypeOf","elementType","tsType","nonNullableType","pipesCache","contextType","getTemplateRefContextType","SymbolWrapper","symbols$$2","MapSymbolTable","addAll","DeclaredSymbol","symbolTables","symbolTables_1","getSpanAt","getTypeOfSymbolAtLocation","constructorDeclaration","type_1","typeReference","getTypeWrapper","getSymbol","SymbolTableWrapper","getProperties","Alias","getAliasedSymbol","_members","Interface","getDeclaredTypeOfSymbol","typeWrapper","_tsType","getParameters","getReturnType","SignatureResultOverride","resultType","toSymbolTable","tsNumbers","symbols_2","symbols_3","_values","previous","symbols_4","PipeSymbol","EmptyTable","parameterType","findClassSymbol","findTransformMethodType","classType","getProperty","isModuleMetadata","isClassMetadata","isInterfaceMetadata","isMemberMetadata","isMethodMetadata","isConstructorMetadata","isFunctionMetadata","isMetadataSymbolicExpression","isMetadataSymbolicBinaryExpression","isMetadataSymbolicIndexExpression","isMetadataSymbolicCallExpression","isMetadataSymbolicPrefixExpression","isMetadataSymbolicIfExpression","isMetadataGlobalReferenceExpression","isMetadataSymbolicReferenceExpression","isMetadataModuleReferenceExpression","default","isMetadataImportedSymbolReferenceExpression","isMetadataImportDefaultReference","isMetadataSymbolicSelectExpression","isMetadataSymbolicSpreadExpression","isMetadataError","METADATA_VERSION","evaluator","isMethodCallOf","callExpression","PropertyAccessExpression","propertyAccessExpression","isCallOf","ident","everyNodeChild","getSourceFileOfNode","errorSymbol","getLineAndCharacterOfPosition","isPropertyAssignment","PropertyAssignment","arrayOrEmpty","spreadElementSyntaxKind","SpreadElement","SpreadElementExpression","Evaluator","nodeMap","recordExport","nameOf","evaluateNode","received","getText","isFoldable","isFoldableWorker","folding","ObjectLiteralExpression","propertyAssignment","initializer","ArrayLiteralExpression","CallExpression","arrayNode","arrayValue","FalseKeyword","TemplateHead","TemplateMiddle","TemplateTail","ParenthesizedExpression","parenthesizedExpression","BinaryExpression","binaryExpression","operatorToken","PlusToken","MinusToken","AsteriskToken","SlashToken","PercentToken","AmpersandAmpersandToken","BarBarToken","ElementAccessExpression","elementAccessExpression","argumentExpression","TemplateExpression","templateSpans","preferReference","recordEntry","substituteExpression","newEntry","isFoldableError","verboseInvalidExpression","resolveName","obj_1","quoted_1","ShorthandPropertyAssignment","assignment","propertyValue","quotedNames","arr_1","spreadValue","firstArgument","ArrowFunction","arrowFunction","NewExpression","newExpression","newArgs","newTarget","expression_1","expression_2","TypeReference","typeReferenceNode","typeNameNode_1","QualifiedName","qualifiedName","left_1","identifier_1","args_1","UnionType","UndefinedKeyword","StringKeyword","NumberKeyword","BooleanKeyword","arrayTypeNode","TypeAssertionExpression","typeAssertion","PrefixUnaryExpression","prefixUnaryExpression","TildeToken","ExclamationToken","operatorText","AmpersandToken","BarToken","CaretToken","EqualsEqualsToken","ExclamationEqualsToken","EqualsEqualsEqualsToken","ExclamationEqualsEqualsToken","LessThanToken","GreaterThanToken","LessThanEqualsToken","GreaterThanEqualsToken","LessThanLessThanToken","GreaterThanGreaterThanToken","GreaterThanGreaterThanGreaterThanToken","ConditionalExpression","conditionalExpression","thenExpression","whenTrue","elseExpression","whenFalse","FunctionExpression","TaggedTemplateExpression","templateExpression","head","asExpression","ClassExpression","createNodeArray","symbols$2","populateBuiltins","Symbols","defineReference","_symbols","buildImports","stripQuotes","ImportEqualsDeclaration","importEqualsDeclaration","moduleReference","ExternalModuleReference","externalReference","from_1","ImportDeclaration","importDecl","importClause","moduleSpecifier","namedBindings","NamedImports","NamespaceImport","validateMetadata","validateExpression","locals","validateFunction","indexExpression","prefixExpression","selectExpression","spreadExpression","ifExpression","validateMember","classData","parameterDecorators","validateClass","staticMember","functionDeclaration","oldLocals","shouldReportNode","nodeStart","lineInfo","namesOf","addNamesOf","bindingPattern","name_11","parameters_2","isStatic","Static","MetadataCollector","getMetadata","objFromDecorator","decoratorNode","evaluator$$1","errorSym","maybeGetSimpleFunction","nameNode","functionName","functionBody","statement","returnStatement","func","classMetadataOf","getDecorators","decorator","referenceFrom","recordMember","recordStaticMember","heritageClauses","hc","ExtendsKeyword","extends","typeParameters","isConstructor","Constructor","MethodDeclaration","maybeFunc","methodDecorators","parameterDecoratorData","parametersData","hasDecoratorData","hasParameterData","parameterData","PropertyDeclaration","GetAccessor","SetAccessor","propertyDecorators","composedSubstituter","evaluatorOptions","exportMap","ExportDeclaration","exportDeclaration","exportClause","exportedAs","isExport","isDeclarationFile","Export","isExportedIdentifier","isExported","exportedIdentifierName","exportedName","interfaceDeclaration","interfaceName","FunctionDeclaration","propNode","name_4","TypeAliasDeclaration","typeDeclaration","name_5","name_6","name_7","EnumDeclaration","enumDeclaration","enumValueHolder","enumName","nextDefaultValue","writtenMembers","enumValue","name_8","VariableStatement","variableStatement","declarationList","variableDeclaration","exported","name_9","report_1","name_10","BindingElement","ObjectBindingPattern","ArrayBindingPattern","bundler","importName","normalPath","getRootExport","reexportedAs","getSymbolDeclaration","PRIVATE_NAME_CHARS","MetadataBundler","symbolMap","rootModule","basename","getMetadataBundle","exportedSymbols","exportAll","canonicalizeSymbols","getEntries","privates","referenced","privateName","origins","getReExports","fullModuleName","exportedSymbol","symbolOf","exportFrom","exportItem","exportedSymbols_1","exportedSymbols_2","canonicalizeSymbol","rootExport","canonicalSymbol","newPrivateName","digits","exportedNames","convertSymbol","symbolsMap","declaredName","reference_1","exportAlls","exportedSymbols_3","module_2","module_3","convertEntry","convertClass","convertFunction","convertValue","convertExpression","convertMembers","convertStatics","convertMember","convertError","object","convertReference","convertExpressionNode","createReference","canonicalSymbolOf","referencedName","symbolKey","CompilerHostAdapter","ScriptTarget","Latest","index_writer","privateEntriesToIndex","INDEX_HEADER","privates_1","compareEntries","compare","compareModules","orderedExports","orderedExports_1","select","ak","bk","bundle_index_host","createSyntheticIndexHost","syntheticIndex","normalSyntheticIndexName","indexContent","indexMetadata","newHost","fileExists","readFile","languageVersion","createSourceFile","writeFile","writeByteOrderMark","sourceFiles","DTS","metadataName","writeFileSync","createBundleIndexHost","ngOptions","indexModule","bundler$$1","flatModuleId","metadataBundle","flatModuleOutFile","JS_EXT","libraryIndex","indexName","__export","api","isTsDiagnostic","diagnostic","isNgDiagnostic","DEFAULT_ERROR_CODE","UNKNOWN_ERROR_CODE","SOURCE","EmitFlags","util","tsStructureIsReused","structureIsReused","createMessageDiagnostic","isInRootDir","rootDir","pathStartsWithPrefix","relativeToRootDirs","rootDirs","rel","fullPath","relative","ngToTsDiagnostic","ng","GENERATED_FILES","metadata_reader","createMetadataReaderCache","readMetadata","metadatas","readMetadataFile","upgradeMetadataWithDtsData","getSourceFileMetadata","cacheMetadata","dtsFilePath","metadataPath","metadataOrMetadatas","maxMetadata","oldMetadata","newMetadata","dtsMetadata","language_services","language_services_10","language_services_11","language_services_12","language_services_13","language_services_14","language_services_15","__window$1","__self$1","WorkerGlobalScope","__global$1","_root","root_1","isFunction_2","isFunction_1","isArray_1","isObject_2","errorObject_1","tryCatch_2","tryCatch_1","__extends$2","UnsubscriptionError_2","Subscription","_parents","_subscriptions","_unsubscribe","hasErrors","trial","teardown","_addParent","tmp","subscriptions","subscriptionIndex","Subscription_2","Subscription_1","Symbol","$$rxSubscriber","__extends$1","destinationOrNext","syncErrorValue","syncErrorThrown","isStopped","SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","Subscriber_2","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","toSubscriber_2","toSubscriber_1","getSymbolObservable","$$observable","noop_2","pipe_2","pipeFromArray_1","pipe_1","_subscribe","observable$$1","sink","_trySubscribe","PromiseCtor","Rx","reject","operations","toPromise","Observable_2","__extends$4","ScalarObservable","dispatch","ScalarObservable_2","ScalarObservable_1","__extends$5","EmptyObservable","EmptyObservable_2","EmptyObservable_1","isScheduler_2","__extends$3","ArrayObservable_2","isArrayLike_1","isPromise_2","symbolIteratorPonyfill","root$$2","Set_1","Map_1","$$iterator","__extends$7","notifyNext","notifyError","notifyComplete","InnerSubscriber_2","subscribeToResult_2","subscribeToResult_1","__extends$8","OuterSubscriber","innerValue","innerIndex","innerSub","OuterSubscriber_2","OuterSubscriber_1","__extends$6","mergeMap_2","observer","MergeMapSubscriber","MergeMapOperator_1","hasCompleted","active","_tryNext","_innerSub","ish","_notifyResultSelector","shift","MergeMapSubscriber_1","identity_2","mergeAll_2","merge_2$2","mergeStatic_1","mergeStatic","merge_2$1","merge_4","merge_3","merge_2","__extends$11","ObjectUnsubscribedError","ObjectUnsubscribedError_2","ObjectUnsubscribedError_1","__extends$12","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscription_2","SubjectSubscription_1","__extends$10","SubjectSubscriber","SubjectSubscriber_1","hasError","thrownError","AnonymousSubject","asObservable","Subject_2","AnonymousSubject_1","__extends$13","refCount_2","RefCountOperator","_refCount","refCounter","RefCountSubscriber$1","connection","connect","RefCountSubscriber","sharedConnection","_connection","__extends$9","ConnectableObservable","_isComplete","getSubject","_subject","ConnectableSubscriber","ConnectableObservable_2","connectableProto","multicast_2","MulticastOperator_1","share_2$2","share_3","ChangeDetectionStrategy$1","Directive$1","NgModule$1","Version$1","VERSION$2","__window","__self","__global","_THROW_IF_NOT_FOUND","_NullInjector","StaticInjector","NULL","GET_PROPERTY_NAME","ɵ2","objWithPropertyToExtract","_records","tokenPath","_findOriginalError","_findContext","errorLogger","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","_ownAnnotations","ownAnnotations","_ownPropMetadata","propDecorators","propDecorators_1","propMetadata_1","ownPropMetadata","setter","importUri","resourceUri","resolveIdentifier","resolveEnum","enumIdentifier","Reflector","reflectionCapabilities","updateCapabilities","caps","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_constructionCounter","keyIds","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","APP_INITIALIZER","ApplicationInitStatus","appInits","donePromise","rej","runInitializers","asyncInitPromises","initResult","APP_ID","APP_ID_RANDOM_PROVIDER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","Console","log","Compiler","CompilerFactory","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryBoundToModule","wtfEnabled","wtf","wtfCreateScope","wtfLeave","EventEmitter","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","assertZonePatched","_outer","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZoneInjector","exceptionHandler","onDestroy","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","createCompiler","appRef","ApplicationRef","_bootstrapComponents","ngDoBootstrap","listener","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","stableSub","unstableSub","componentOrFactory","compRef","_unloadComponent","nativeElement","_loadComponent","_tickScope","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","Renderer2","_results","toArray","ViewRef","EventListener","EmbeddedViewRef","DebugNode","_debugContext","addChild","listeners","providerTokens","classes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","queryAllNodes","triggerEventHandler","eventObj","wrap","previousValue","currentValue","firstChange","isFirstChange","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","forEachOperation","nextIt","nextRemove","adjPreviousIndex","currentIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","factories","copied","extend","iterable","KeyValueDiffers","kv","keyValDiff","iterableDiff","_CORE_PLATFORM_PROVIDERS","parentPlatformFactory","ApplicationModule","WeakMap","EMPTY_CONTEXT","ComponentRef_","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","componentNodeIndex","_view","_viewRef","_component","_elDef","changeDetectorRef","_data","attachToViewContainerRef","templateRef","insert","ngModuleRef","contextInjector","viewRef_","viewData","move","detach","_viewContainerRef","_appRef","markForCheck","fs$$1","begin","reattach","vcRef","_parentView","namespaceAndName","createViewRoot","createTemplateAnchor","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","_moduleType","elView","elOrCompView","childDef","logViewDef","logNodeIndex","currRenderNodeIndex","nodeLogger","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","NgModuleFactory_","_ngModuleDefFactory","onclick","ondblclick","onmousedown","onmouseup","onmouseover","onmousemove","onmouseout","onkeypress","onkeydown","onkeyup","onload","onunload","href","alt","media","nohref","usemap","onfocus","onblur","charset","declare","classid","codebase","codetype","archive","standby","cite","datetime","accept","shape","coords","enctype","onsubmit","onreset","accept-charset","valuetype","longdesc","width","disabled","onselect","accesskey","multiple","onchange","label","selected","checked","maxlength","rows","cols","height","border","frame","rules","cellspacing","cellpadding","datapagesize","align","charoff","valign","abbr","axis","headers","rowspan","colspan","profile","http-equiv","scheme","hreflang","rev","ismap","defer","BIG","STRONG","DFN","CODE","SAMP","KBD","VAR","CITE","ABBR","ACRONYM","SPAN","BDO","BODY","ADDRESS","DIV","MAP","AREA","IMG","OBJECT","PARAM","PRE","BLOCKQUOTE","INS","DEL","DL","DT","DD","FORM","LABEL","INPUT","SELECT","OPTGROUP","OPTION","TEXTAREA","FIELDSET","LEGEND","BUTTON","TABLE","CAPTION","COLGROUP","COL","HEAD","TITLE","BASE","META","NOSCRIPT","SCHEMA","EVENT","BOOLEAN","NUMBER","STRING","typeParts","allKnownElements","typeOf","_instance","noscript","getExpressionScope$$1","key_1","selectorInfo","selector_1","templateBindingResult","valueRelativePosition_1","keyCompletions","equalLocation","directiveMetadata","contextTable","symbolsToCompletions","completions","attributeValuePosition","sym","kindOverride","getTemplates","getDeclarations","getAnalyzedModules","getPipesAt","getTemplateAstAtPosition","getTemplateAt","contextFile","resolvedMetadata","rawHtmlParser","parser","htmlResult","resolvedDirectives","ReflectorModuleModuleResolutionHost","metadataCollector","directoryExists","directoryName","getScriptSnapshot","snapshot","getLength","sf","ReflectorHost","metadataReaderCache","hostAdapter","moduleResolutionCache","createModuleResolutionCache","getCurrentDirectory","modulePath","resolveModuleName","resolvedFileName","DummyHtmlParser","DummyResourceLoader","tsService","_typeCache","modulesOutOfDate","fileVersions","validate","_resolver","moduleResolver","directiveResolver","pipeResolver","resourceLoader","directiveNormalizer","collectError","ensureTemplateMap","templateReferences","getSourceFromNode","getScriptVersion","fileToComponent","getSourceFromType","ensureAnalyzedModules","analyzeHost","programFiles","getSourceFiles","version_1","visit_1","templateSource","visit_2","getDeclarationFromNode","updateAnalyzedModules","_checker","getTypeChecker","_staticSymbolResolver","lastProgram","clearCaches","seen_1","version$$1","collectedErrors","templateReference","getSourceFromDeclaration","queryCache","pipes_1","getTemplateClassDeclFromNode","stringOf","getTemplateClassFromStaticSymbol","_reflectorHost","getScriptFileNames","tsConfigPath","genDir","getCompilationSettings","errorMap","sourceFilePath","reflectorHost","ssr","currentToken","missingTemplate","callTarget","Decorator","getCollectedErrors","defaultSpan","process","argv"],"mappings":"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,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC;iwUACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZrvF,yBAA4B,SAAUh8B,QAEtC,QAASg8B,4BACL,GAAIzD,OAAQv4B,OAAO6mC,KAAKtxC,OAASA,IAqCjC,OApCAgjC,OAAM+yF,WACNR,SAAS1uH,QAAQ,SAAUmvH,aACvB,GAAqB3vH,SACjB+S,GAAK48G,YAAYxsH,MAAM,KAAMysH,QAAU78G,GAAG,GAAI88G,cAAgB98G,GAAG,GAChD0kC,WAAao4E,cAAc1sH,MAAM,KAClD+P,GAAK08G,QAAQzsH,MAAM,KAAM2sH,UAAY58G,GAAG,GAAI68G,UAAY78G,GAAG,EAC/D48G,WAAU3sH,MAAM,KAAK3C,QAAQ,SAAU+Y,KAAO,MAAOojB,OAAM+yF,QAAQn2G,IAAInS,eAAiBpH,MACxF,IAAqBgwH,WAAYD,WAAapzF,MAAM+yF,QAAQK,UAAU3oH,cAClE4oH,YACAz2H,OAAOi3B,KAAKw/F,WAAWxvH,QAAQ,SAAUqoB,MAAQ7oB,KAAK6oB,MAAQmnG,UAAUnnG,QAE5E4uB,WAAWj3C,QAAQ,SAAUyvH,UACzB,GAAIA,SAASr0H,OAAS,EAClB,OAAQq0H,SAAS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CA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC,MAAQ,QACRC,QAAU,UACVC,OAAS,SACTC,OAAS,SACThC,OAAS,SACTn0H,kBAAqB,WACrB,QAASA,qBACL,GAAI19B,OAAQhjC,IACZA,MAAKy2H,UACLggE,OAAO5vL,QAAQ,SAAUmvH,aACrB,GAAIh+G,OAAQg+G,YAAYxsH,MAAM,KAC1Bs0C,WAAa9lC,MAAM,GAAGxO,MAAM,KAC5BstL,WAAa9+K,MAAM,GAAK,KAAKxO,MAAM,KACnCo6B,SAAWkzJ,UAAU,GACrBzwL,OACJu9B,UAASp6B,MAAM,KAAK3C,QAAQ,SAAU+Y,KAAO,MAAOojB,OAAMyzF,OAAO72G,IAAInS,eAAiBpH,MACtF,IAAI+vH,WAAY0gE,UAAU,GACtBzgE,UAAYD,WAAapzF,MAAMyzF,OAAOL,UAAU3oH,cACpD,IAAI4oH,UACA,IAAK,GAAIpiH,OAAOoiH,WACZhwH,KAAK4N,KAAOoiH,UAAUpiH,IAG9B6pC,YAAWj3C,QAAQ,SAAUyv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","file":"/home/travis/build/angular/angular/dist/packages-dist/language-service/bundles/language-service.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0-rc.8-85e95cc\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nvar $reflect = {defineMetadata: function() {}, getOwnMetadata: function(){}};\n((typeof global !== 'undefined' && global)||{})['Reflect'] = $reflect;\nvar $deferred, $resolved, $provided;\nfunction $getModule(name) { return $provided[name] || require(name); }\nfunction define(modules, cb) { $deferred = { modules: modules, cb: cb }; }\nmodule.exports = function(provided) {\n  if ($resolved) return $resolved;\n  var result = {};\n  $provided = Object.assign({'reflect-metadata': $reflect}, provided || {}, { exports: result });\n  $deferred.cb.apply(this, $deferred.modules.map($getModule));\n  $resolved = result;\n  return result;\n}\n\ndefine(['exports', 'fs', 'path', 'typescript'], function (exports, fs, path, ts) { 'use strict';\n\nvar fs__default = 'default' in fs ? fs['default'] : fs;\nvar path__default = 'default' in path ? path['default'] : path;\nvar ts__default = 'default' in ts ? ts['default'] : ts;\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.0.0-rc.8-85e95cc\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createInjectable = makeMetadataFactory('Injectable');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n/**\n * @record\n */\nfunction Route() { }\n\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateInjectable: createInjectable,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory,\n\tRoute: Route\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION$1 = new Version('5.0.0-rc.8-85e95cc');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CompilerConfig = (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten$1(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten$1(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten$1(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    function AstPath(path$$1, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path$$1;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf$1$1(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf$1$1(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path$$1 = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf$1$1(ast);\n            if (span.start <= position && position < span.end) {\n                path$$1.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path$$1, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar StyleWithImports = (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ParserError = (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar Message = (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return /** @type {?} */ ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path$$1, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path$$1.endsWith('.d.ts')) {\n        return [path$$1.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path$$1.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path$$1.substring(0, lastDot), path$$1.substring(lastDot)];\n    }\n    return [path$$1, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CORE = '@angular/core';\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN$1 = 'boolean';\nvar NUMBER$1 = 'number';\nvar STRING$1 = 'string';\nvar OBJECT$1 = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA$1 = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA$1.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN$1;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER$1;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT$1;\n                            break;\n                        default:\n                            type[property] = STRING$1;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX$1 = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX$1)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX$1.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector$1(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector$1(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return /** @type {?} */ ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector$1(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector$1(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (componentId, component, template, usedPipes, externalReferenceVars) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar ViewBuilder = (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (componentId, targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        var /** @type {?} */ viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE :\n            /** @type {?} */ ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @param {?} moduleMeta\n * @param {?} reflector\n * @return {?}\n */\nfunction listLazyRoutes(moduleMeta, reflector) {\n    var /** @type {?} */ allLazyRoutes = [];\n    for (var _i = 0, _a = moduleMeta.transitiveModule.providers; _i < _a.length; _i++) {\n        var _b = _a[_i], provider = _b.provider, module = _b.module;\n        if (tokenReference(provider.token) === reflector.ROUTES) {\n            var /** @type {?} */ loadChildren = _collectLoadChildren(provider.useValue);\n            for (var _c = 0, loadChildren_1 = loadChildren; _c < loadChildren_1.length; _c++) {\n                var route = loadChildren_1[_c];\n                allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n            }\n        }\n    }\n    return allLazyRoutes;\n}\n/**\n * @param {?} routes\n * @param {?=} target\n * @return {?}\n */\nfunction _collectLoadChildren(routes, target) {\n    if (target === void 0) { target = []; }\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            _collectLoadChildren(route, target);\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\n/**\n * @param {?} route\n * @param {?} reflector\n * @param {?=} module\n * @return {?}\n */\nfunction parseLazyRoute(route, reflector, module) {\n    var _a = route.split('#'), routePath = _a[0], routeName = _a[1];\n    var /** @type {?} */ referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                    if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                        importAs = symbol.name + \"_\" + index;\n                        exportAs.push({ symbol: symbol, exportAs: importAs });\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    function ForJitSerializer(outputCtx, symbolResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    function (exportAs) {\n        var _this = this;\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata, isLibrary = _a.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                modSummary.modules.forEach(function (mod) { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(_this.outputCtx, summary.type.reference, _this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        });\n        exportAs.forEach(function (entry) {\n            var /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                var /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(symbol)).toDeclStmt(null, [\n                    StmtModifier.Exported\n                ]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { moduleName: data.moduleName, summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(file.fileName, true)[1];\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        return Promise.all(loadingPromises).then(function (_) { return mergeAndValidateNgFiles(files); });\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        return mergeAndValidateNgFiles(files);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        var /** @type {?} */ componentId = 0;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }).concat(ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                if (_this._host.isSourceFile(ref.filePath)) {\n                    externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n                }\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten$1(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._fileNameToModuleName = /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    AotCompiler.prototype.listLazyRoutes = /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    function (entryRoute, analyzedModules) {\n        var /** @type {?} */ self = this;\n        if (entryRoute) {\n            var /** @type {?} */ symbol = parseLazyRoute(entryRoute, this._reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            var /** @type {?} */ allLazyRoutes = [];\n            for (var _i = 0, _a = analyzedModules.ngModules; _i < _a.length; _i++) {\n                var ngModule = _a[_i];\n                var /** @type {?} */ lazyRoutes = listLazyRoutes(ngModule, this._reflector);\n                for (var _b = 0, lazyRoutes_1 = lazyRoutes; _b < lazyRoutes_1.length; _b++) {\n                    var lazyRoute = lazyRoutes_1[_b];\n                    allLazyRoutes.push(lazyRoute);\n                }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(\"Either route or analyzedModules has to be specified!\");\n        }\n        /**\n         * @param {?} symbol\n         * @param {?=} seenRoutes\n         * @param {?=} allLazyRoutes\n         * @return {?}\n         */\n        function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n            if (seenRoutes === void 0) { seenRoutes = new Set(); }\n            if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            var /** @type {?} */ lazyRoutes = listLazyRoutes(/** @type {?} */ ((self._metadataResolver.getNgModuleMetadata(symbol, true))), self._reflector);\n            for (var _i = 0, lazyRoutes_2 = lazyRoutes; _i < lazyRoutes_2.length; _i++) {\n                var lazyRoute = lazyRoutes_2[_i];\n                allLazyRoutes.push(lazyRoute);\n                visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n            }\n            return allLazyRoutes;\n        }\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    injectables.push(symbol);\n                }\n                else {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (ref, containingFile) {\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)), containingFile);\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path$$1) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path$$1);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1, references);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyInContext(context, item.expression, depth, 0);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyInContext(context, expression['expression'], depth, 0);\n                                var /** @type {?} */ index = simplifyInContext(context, expression['index'], depth, 0);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1, references);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1, references);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name_1 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_1);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions\n                                            .map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyInContext(context, value, depth, references + 1);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value) {\n            try {\n                return simplifyInContext(context, value, 0, 0);\n            }\n            catch (/** @type {?} */ e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n            simplifyInContext(context, value, 0, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = syntaxError(message);\n    (/** @type {?} */ (result)).fileName = fileName;\n    (/** @type {?} */ (result)).line = line;\n    (/** @type {?} */ (result)).column = column;\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ResolvedStaticSymbol = (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name_1);\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path$$1) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path$$1);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                containingFile : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) {\n                _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n            });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @param {?=} errorCollector\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options, errorCollector) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @param {?} fn\n * @param {?=} out\n * @param {?=} seen\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out, seen) {\n    if (out === void 0) { out = []; }\n    if (seen === void 0) { seen = new Set(); }\n    if (seen.has(fn$$1)) {\n        return out;\n    }\n    seen.add(fn$$1);\n    var /** @type {?} */ summaries = fn$$1();\n    for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n        var /** @type {?} */ entry = summaries[i];\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out, seen);\n        }\n        else {\n            out.push(entry);\n        }\n    }\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path$$1 = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path$$1 = path$$1.replace(/^\\/+/, '');\n            return prefix + \"/\" + path$$1;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path$$1) {\n    if (path$$1 == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path$$1[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path$$1[path$$1.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path$$1.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path$$1 = parts[_ComponentIndex.Path];\n    path$$1 = path$$1 == null ? '' : _removeDotSegments(path$$1);\n    parts[_ComponentIndex.Path] = path$$1;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path$$1, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path$$1 = baseParts[_ComponentIndex.Path];\n    if (path$$1 == null)\n        path$$1 = '/';\n    var /** @type {?} */ index = path$$1.lastIndexOf('/');\n    path$$1 = path$$1.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path$$1;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\n\n\n\n\nvar compiler = Object.freeze({\n\tcore: core,\n\tCompilerConfig: CompilerConfig,\n\tpreserveWhitespacesDefault: preserveWhitespacesDefault,\n\tIdentifiers: Identifiers,\n\tJitCompiler: JitCompiler,\n\tDirectiveResolver: DirectiveResolver,\n\tPipeResolver: PipeResolver,\n\tNgModuleResolver: NgModuleResolver,\n\tDEFAULT_INTERPOLATION_CONFIG: DEFAULT_INTERPOLATION_CONFIG,\n\tInterpolationConfig: InterpolationConfig,\n\tNgModuleCompiler: NgModuleCompiler,\n\tAssertNotNull: AssertNotNull,\n\tBinaryOperator: BinaryOperator,\n\tBinaryOperatorExpr: BinaryOperatorExpr,\n\tBuiltinMethod: BuiltinMethod,\n\tBuiltinVar: BuiltinVar,\n\tCastExpr: CastExpr,\n\tClassStmt: ClassStmt,\n\tCommaExpr: CommaExpr,\n\tCommentStmt: CommentStmt,\n\tConditionalExpr: ConditionalExpr,\n\tDeclareFunctionStmt: DeclareFunctionStmt,\n\tDeclareVarStmt: DeclareVarStmt,\n\tExpressionStatement: ExpressionStatement,\n\tExternalExpr: ExternalExpr,\n\tExternalReference: ExternalReference,\n\tFunctionExpr: FunctionExpr,\n\tIfStmt: IfStmt,\n\tInstantiateExpr: InstantiateExpr,\n\tInvokeFunctionExpr: InvokeFunctionExpr,\n\tInvokeMethodExpr: InvokeMethodExpr,\n\tLiteralArrayExpr: LiteralArrayExpr,\n\tLiteralExpr: LiteralExpr,\n\tLiteralMapExpr: LiteralMapExpr,\n\tNotExpr: NotExpr,\n\tReadKeyExpr: ReadKeyExpr,\n\tReadPropExpr: ReadPropExpr,\n\tReadVarExpr: ReadVarExpr,\n\tReturnStatement: ReturnStatement,\n\tThrowStmt: ThrowStmt,\n\tTryCatchStmt: TryCatchStmt,\n\tWriteKeyExpr: WriteKeyExpr,\n\tWritePropExpr: WritePropExpr,\n\tWriteVarExpr: WriteVarExpr,\n\tStmtModifier: StmtModifier,\n\tStatement: Statement,\n\tcollectExternalReferences: collectExternalReferences,\n\tEmitterVisitorContext: EmitterVisitorContext,\n\tViewCompiler: ViewCompiler,\n\tgetParseErrors: getParseErrors,\n\tisSyntaxError: isSyntaxError,\n\tsyntaxError: syntaxError,\n\tVersion: Version,\n\tVERSION: VERSION$1,\n\tTextAst: TextAst,\n\tBoundTextAst: BoundTextAst,\n\tAttrAst: AttrAst,\n\tBoundElementPropertyAst: BoundElementPropertyAst,\n\tBoundEventAst: BoundEventAst,\n\tReferenceAst: ReferenceAst,\n\tVariableAst: VariableAst,\n\tElementAst: ElementAst,\n\tEmbeddedTemplateAst: EmbeddedTemplateAst,\n\tBoundDirectivePropertyAst: BoundDirectivePropertyAst,\n\tDirectiveAst: DirectiveAst,\n\tProviderAst: ProviderAst,\n\tProviderAstType: ProviderAstType,\n\tNgContentAst: NgContentAst,\n\tPropertyBindingType: PropertyBindingType,\n\tNullTemplateVisitor: NullTemplateVisitor,\n\tRecursiveTemplateAstVisitor: RecursiveTemplateAstVisitor,\n\ttemplateVisitAll: templateVisitAll,\n\tidentifierName: identifierName,\n\tidentifierModuleUrl: identifierModuleUrl,\n\tviewClassName: viewClassName,\n\trendererTypeName: rendererTypeName,\n\thostViewClassName: hostViewClassName,\n\tcomponentFactoryName: componentFactoryName,\n\tCompileSummaryKind: CompileSummaryKind,\n\ttokenName: tokenName,\n\ttokenReference: tokenReference,\n\tCompileStylesheetMetadata: CompileStylesheetMetadata,\n\tCompileTemplateMetadata: CompileTemplateMetadata,\n\tCompileDirectiveMetadata: CompileDirectiveMetadata,\n\tCompilePipeMetadata: CompilePipeMetadata,\n\tCompileNgModuleMetadata: CompileNgModuleMetadata,\n\tTransitiveCompileNgModuleMetadata: TransitiveCompileNgModuleMetadata,\n\tProviderMeta: ProviderMeta,\n\tflatten: flatten$1,\n\ttemplateSourceUrl: templateSourceUrl,\n\tsharedStylesheetJitUrl: sharedStylesheetJitUrl,\n\tngModuleJitUrl: ngModuleJitUrl,\n\ttemplateJitUrl: templateJitUrl,\n\tcreateAotUrlResolver: createAotUrlResolver,\n\tcreateAotCompiler: createAotCompiler,\n\tAotCompiler: AotCompiler,\n\tanalyzeNgModules: analyzeNgModules,\n\tanalyzeAndValidateNgModules: analyzeAndValidateNgModules,\n\tanalyzeFile: analyzeFile,\n\tmergeAnalyzedFiles: mergeAnalyzedFiles,\n\tGeneratedFile: GeneratedFile,\n\ttoTypeScript: toTypeScript,\n\tStaticReflector: StaticReflector,\n\tStaticSymbol: StaticSymbol,\n\tStaticSymbolCache: StaticSymbolCache,\n\tResolvedStaticSymbol: ResolvedStaticSymbol,\n\tStaticSymbolResolver: StaticSymbolResolver,\n\tunescapeIdentifier: unescapeIdentifier,\n\tAotSummaryResolver: AotSummaryResolver,\n\tAstPath: AstPath,\n\tSummaryResolver: SummaryResolver,\n\tJitSummaryResolver: JitSummaryResolver,\n\tCompileReflector: CompileReflector,\n\tcreateUrlResolverWithoutPackagePrefix: createUrlResolverWithoutPackagePrefix,\n\tcreateOfflineCompileUrlResolver: createOfflineCompileUrlResolver,\n\tUrlResolver: UrlResolver,\n\tgetUrlScheme: getUrlScheme,\n\tResourceLoader: ResourceLoader,\n\tElementSchemaRegistry: ElementSchemaRegistry,\n\tExtractor: Extractor,\n\tI18NHtmlParser: I18NHtmlParser,\n\tMessageBundle: MessageBundle,\n\tSerializer: Serializer,\n\tXliff: Xliff,\n\tXliff2: Xliff2,\n\tXmb: Xmb,\n\tXtb: Xtb,\n\tDirectiveNormalizer: DirectiveNormalizer,\n\tParserError: ParserError,\n\tParseSpan: ParseSpan,\n\tAST: AST,\n\tQuote: Quote,\n\tEmptyExpr: EmptyExpr,\n\tImplicitReceiver: ImplicitReceiver,\n\tChain: Chain,\n\tConditional: Conditional,\n\tPropertyRead: PropertyRead,\n\tPropertyWrite: PropertyWrite,\n\tSafePropertyRead: SafePropertyRead,\n\tKeyedRead: KeyedRead,\n\tKeyedWrite: KeyedWrite,\n\tBindingPipe: BindingPipe,\n\tLiteralPrimitive: LiteralPrimitive,\n\tLiteralArray: LiteralArray,\n\tLiteralMap: LiteralMap,\n\tInterpolation: Interpolation,\n\tBinary: Binary,\n\tPrefixNot: PrefixNot,\n\tNonNullAssert: NonNullAssert,\n\tMethodCall: MethodCall,\n\tSafeMethodCall: SafeMethodCall,\n\tFunctionCall: FunctionCall,\n\tASTWithSource: ASTWithSource,\n\tTemplateBinding: TemplateBinding,\n\tNullAstVisitor: NullAstVisitor,\n\tRecursiveAstVisitor: RecursiveAstVisitor,\n\tAstTransformer: AstTransformer,\n\tvisitAstChildren: visitAstChildren,\n\tTokenType: TokenType,\n\tLexer: Lexer,\n\tToken: Token,\n\tEOF: EOF,\n\tisIdentifier: isIdentifier,\n\tisQuote: isQuote,\n\tSplitInterpolation: SplitInterpolation,\n\tTemplateBindingParseResult: TemplateBindingParseResult,\n\tParser: Parser,\n\t_ParseAST: _ParseAST,\n\tERROR_COMPONENT_TYPE: ERROR_COMPONENT_TYPE,\n\tCompileMetadataResolver: CompileMetadataResolver,\n\tText: Text,\n\tExpansion: Expansion,\n\tExpansionCase: ExpansionCase,\n\tAttribute: Attribute$1,\n\tElement: Element,\n\tComment: Comment,\n\tvisitAll: visitAll,\n\tRecursiveVisitor: RecursiveVisitor,\n\tfindNode: findNode,\n\tParseTreeResult: ParseTreeResult,\n\tTreeError: TreeError,\n\tHtmlParser: HtmlParser,\n\tHtmlTagDefinition: HtmlTagDefinition,\n\tgetHtmlTagDefinition: getHtmlTagDefinition,\n\tTagContentType: TagContentType,\n\tsplitNsName: splitNsName,\n\tisNgContainer: isNgContainer,\n\tisNgContent: isNgContent,\n\tisNgTemplate: isNgTemplate,\n\tgetNsPrefix: getNsPrefix,\n\tmergeNsAndName: mergeNsAndName,\n\tNAMED_ENTITIES: NAMED_ENTITIES,\n\tNGSP_UNICODE: NGSP_UNICODE,\n\tdebugOutputAstAsTypeScript: debugOutputAstAsTypeScript,\n\tTypeScriptEmitter: TypeScriptEmitter,\n\tParseLocation: ParseLocation,\n\tParseSourceFile: ParseSourceFile,\n\tParseSourceSpan: ParseSourceSpan,\n\tParseErrorLevel: ParseErrorLevel,\n\tParseError: ParseError,\n\ttypeSourceSpan: typeSourceSpan,\n\tDomElementSchemaRegistry: DomElementSchemaRegistry,\n\tCssSelector: CssSelector,\n\tSelectorMatcher: SelectorMatcher,\n\tSelectorListContext: SelectorListContext,\n\tSelectorContext: SelectorContext,\n\tStylesCompileDependency: StylesCompileDependency,\n\tCompiledStylesheet: CompiledStylesheet,\n\tStyleCompiler: StyleCompiler,\n\tTemplateParseError: TemplateParseError,\n\tTemplateParseResult: TemplateParseResult,\n\tTemplateParser: TemplateParser,\n\tsplitClasses: splitClasses,\n\tcreateElementCssSelector: createElementCssSelector$1,\n\tremoveSummaryDuplicates: removeSummaryDuplicates\n});\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar symbols = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An enumeration of basic types.\n *\n * @experimental\n */\nvar BuiltinType;\n(function (BuiltinType) {\n    /**\n     * The type is a type that can hold any other type.\n     */\n    BuiltinType[BuiltinType[\"Any\"] = 0] = \"Any\";\n    /**\n     * The type of a string literal.\n     */\n    BuiltinType[BuiltinType[\"String\"] = 1] = \"String\";\n    /**\n     * The type of a numeric literal.\n     */\n    BuiltinType[BuiltinType[\"Number\"] = 2] = \"Number\";\n    /**\n     * The type of the `true` and `false` literals.\n     */\n    BuiltinType[BuiltinType[\"Boolean\"] = 3] = \"Boolean\";\n    /**\n     * The type of the `undefined` literal.\n     */\n    BuiltinType[BuiltinType[\"Undefined\"] = 4] = \"Undefined\";\n    /**\n     * the type of the `null` literal.\n     */\n    BuiltinType[BuiltinType[\"Null\"] = 5] = \"Null\";\n    /**\n     * the type is an unbound type parameter.\n     */\n    BuiltinType[BuiltinType[\"Unbound\"] = 6] = \"Unbound\";\n    /**\n     * Not a built-in type.\n     */\n    BuiltinType[BuiltinType[\"Other\"] = 7] = \"Other\";\n})(BuiltinType = exports.BuiltinType || (exports.BuiltinType = {}));\n\n});\n\nvar compiler_1 = ( compiler && undefined ) || compiler;\n\nvar expression_type = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\nvar DiagnosticKind;\n(function (DiagnosticKind) {\n    DiagnosticKind[DiagnosticKind[\"Error\"] = 0] = \"Error\";\n    DiagnosticKind[DiagnosticKind[\"Warning\"] = 1] = \"Warning\";\n})(DiagnosticKind = exports.DiagnosticKind || (exports.DiagnosticKind = {}));\nvar TypeDiagnostic = (function () {\n    function TypeDiagnostic(kind, message, ast) {\n        this.kind = kind;\n        this.message = message;\n        this.ast = ast;\n    }\n    return TypeDiagnostic;\n}());\nexports.TypeDiagnostic = TypeDiagnostic;\n// AstType calculatetype of the ast given AST element.\nvar AstType = (function () {\n    function AstType(scope, query, context) {\n        this.scope = scope;\n        this.query = query;\n        this.context = context;\n    }\n    AstType.prototype.getType = function (ast) { return ast.visit(this); };\n    AstType.prototype.getDiagnostics = function (ast) {\n        this.diagnostics = [];\n        var type = ast.visit(this);\n        if (this.context.event && type.callable) {\n            this.reportWarning('Unexpected callable expression. Expected a method call', ast);\n        }\n        return this.diagnostics;\n    };\n    AstType.prototype.visitBinary = function (ast) {\n        var _this = this;\n        // Treat undefined and null as other.\n        function normalize(kind, other) {\n            switch (kind) {\n                case symbols.BuiltinType.Undefined:\n                case symbols.BuiltinType.Null:\n                    return normalize(other, symbols.BuiltinType.Other);\n            }\n            return kind;\n        }\n        var getType = function (ast, operation) {\n            var type = _this.getType(ast);\n            if (type.nullable) {\n                switch (operation) {\n                    case '&&':\n                    case '||':\n                    case '==':\n                    case '!=':\n                    case '===':\n                    case '!==':\n                        // Nullable allowed.\n                        break;\n                    default:\n                        _this.reportError(\"The expression might be null\", ast);\n                        break;\n                }\n                return _this.query.getNonNullableType(type);\n            }\n            return type;\n        };\n        var leftType = getType(ast.left, ast.operation);\n        var rightType = getType(ast.right, ast.operation);\n        var leftRawKind = this.query.getTypeKind(leftType);\n        var rightRawKind = this.query.getTypeKind(rightType);\n        var leftKind = normalize(leftRawKind, rightRawKind);\n        var rightKind = normalize(rightRawKind, leftRawKind);\n        // The following swtich implements operator typing similar to the\n        // type production tables in the TypeScript specification.\n        // https://github.com/Microsoft/TypeScript/blob/v1.8.10/doc/spec.md#4.19\n        var operKind = leftKind << 8 | rightKind;\n        switch (ast.operation) {\n            case '*':\n            case '/':\n            case '%':\n            case '-':\n            case '<<':\n            case '>>':\n            case '>>>':\n            case '&':\n            case '^':\n            case '|':\n                switch (operKind) {\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Number:\n                        return this.query.getBuiltinType(symbols.BuiltinType.Number);\n                    default:\n                        var errorAst = ast.left;\n                        switch (leftKind) {\n                            case symbols.BuiltinType.Any:\n                            case symbols.BuiltinType.Number:\n                                errorAst = ast.right;\n                                break;\n                        }\n                        return this.reportError('Expected a numeric type', errorAst);\n                }\n            case '+':\n                switch (operKind) {\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Boolean:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Other:\n                    case symbols.BuiltinType.Boolean << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Other << 8 | symbols.BuiltinType.Any:\n                        return this.anyType;\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.Boolean << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.Boolean:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.Other:\n                    case symbols.BuiltinType.Other << 8 | symbols.BuiltinType.String:\n                        return this.query.getBuiltinType(symbols.BuiltinType.String);\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Number:\n                        return this.query.getBuiltinType(symbols.BuiltinType.Number);\n                    case symbols.BuiltinType.Boolean << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.Other << 8 | symbols.BuiltinType.Number:\n                        return this.reportError('Expected a number type', ast.left);\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Boolean:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Other:\n                        return this.reportError('Expected a number type', ast.right);\n                    default:\n                        return this.reportError('Expected operands to be a string or number type', ast);\n                }\n            case '>':\n            case '<':\n            case '<=':\n            case '>=':\n            case '==':\n            case '!=':\n            case '===':\n            case '!==':\n                switch (operKind) {\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Boolean:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Other:\n                    case symbols.BuiltinType.Boolean << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Boolean << 8 | symbols.BuiltinType.Boolean:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.Other << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Other << 8 | symbols.BuiltinType.Other:\n                        return this.query.getBuiltinType(symbols.BuiltinType.Boolean);\n                    default:\n                        return this.reportError('Expected the operants to be of similar type or any', ast);\n                }\n            case '&&':\n                return rightType;\n            case '||':\n                return this.query.getTypeUnion(leftType, rightType);\n        }\n        return this.reportError(\"Unrecognized operator \" + ast.operation, ast);\n    };\n    AstType.prototype.visitChain = function (ast) {\n        if (this.diagnostics) {\n            // If we are producing diagnostics, visit the children\n            compiler_1.visitAstChildren(ast, this);\n        }\n        // The type of a chain is always undefined.\n        return this.query.getBuiltinType(symbols.BuiltinType.Undefined);\n    };\n    AstType.prototype.visitConditional = function (ast) {\n        // The type of a conditional is the union of the true and false conditions.\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        return this.query.getTypeUnion(this.getType(ast.trueExp), this.getType(ast.falseExp));\n    };\n    AstType.prototype.visitFunctionCall = function (ast) {\n        var _this = this;\n        // The type of a function call is the return type of the selected signature.\n        // The signature is selected based on the types of the arguments. Angular doesn't\n        // support contextual typing of arguments so this is simpler than TypeScript's\n        // version.\n        var args = ast.args.map(function (arg) { return _this.getType(arg); });\n        var target = this.getType(ast.target);\n        if (!target || !target.callable)\n            return this.reportError('Call target is not callable', ast);\n        var signature = target.selectSignature(args);\n        if (signature)\n            return signature.result;\n        // TODO: Consider a better error message here.\n        return this.reportError('Unable no compatible signature found for call', ast);\n    };\n    AstType.prototype.visitImplicitReceiver = function (ast) {\n        var _this = this;\n        // Return a pseudo-symbol for the implicit receiver.\n        // The members of the implicit receiver are what is defined by the\n        // scope passed into this class.\n        return {\n            name: '$implict',\n            kind: 'component',\n            language: 'ng-template',\n            type: undefined,\n            container: undefined,\n            callable: false,\n            nullable: false,\n            public: true,\n            definition: undefined,\n            members: function () { return _this.scope; },\n            signatures: function () { return []; },\n            selectSignature: function (types) { return undefined; },\n            indexed: function (argument) { return undefined; }\n        };\n    };\n    AstType.prototype.visitInterpolation = function (ast) {\n        // If we are producing diagnostics, visit the children.\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        return this.undefinedType;\n    };\n    AstType.prototype.visitKeyedRead = function (ast) {\n        var targetType = this.getType(ast.obj);\n        var keyType = this.getType(ast.key);\n        var result = targetType.indexed(keyType);\n        return result || this.anyType;\n    };\n    AstType.prototype.visitKeyedWrite = function (ast) {\n        // The write of a type is the type of the value being written.\n        return this.getType(ast.value);\n    };\n    AstType.prototype.visitLiteralArray = function (ast) {\n        var _this = this;\n        // A type literal is an array type of the union of the elements\n        return this.query.getArrayType((_a = this.query).getTypeUnion.apply(_a, ast.expressions.map(function (element) { return _this.getType(element); })));\n        var _a;\n    };\n    AstType.prototype.visitLiteralMap = function (ast) {\n        // If we are producing diagnostics, visit the children\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        // TODO: Return a composite type.\n        return this.anyType;\n    };\n    AstType.prototype.visitLiteralPrimitive = function (ast) {\n        // The type of a literal primitive depends on the value of the literal.\n        switch (ast.value) {\n            case true:\n            case false:\n                return this.query.getBuiltinType(symbols.BuiltinType.Boolean);\n            case null:\n                return this.query.getBuiltinType(symbols.BuiltinType.Null);\n            case undefined:\n                return this.query.getBuiltinType(symbols.BuiltinType.Undefined);\n            default:\n                switch (typeof ast.value) {\n                    case 'string':\n                        return this.query.getBuiltinType(symbols.BuiltinType.String);\n                    case 'number':\n                        return this.query.getBuiltinType(symbols.BuiltinType.Number);\n                    default:\n                        return this.reportError('Unrecognized primitive', ast);\n                }\n        }\n    };\n    AstType.prototype.visitMethodCall = function (ast) {\n        return this.resolveMethodCall(this.getType(ast.receiver), ast);\n    };\n    AstType.prototype.visitPipe = function (ast) {\n        var _this = this;\n        // The type of a pipe node is the return type of the pipe's transform method. The table returned\n        // by getPipes() is expected to contain symbols with the corresponding transform method type.\n        var pipe = this.query.getPipes().get(ast.name);\n        if (!pipe)\n            return this.reportError(\"No pipe by the name \" + ast.name + \" found\", ast);\n        var expType = this.getType(ast.exp);\n        var signature = pipe.selectSignature([expType].concat(ast.args.map(function (arg) { return _this.getType(arg); })));\n        if (!signature)\n            return this.reportError('Unable to resolve signature for pipe invocation', ast);\n        return signature.result;\n    };\n    AstType.prototype.visitPrefixNot = function (ast) {\n        // The type of a prefix ! is always boolean.\n        return this.query.getBuiltinType(symbols.BuiltinType.Boolean);\n    };\n    AstType.prototype.visitNonNullAssert = function (ast) {\n        var expressionType = this.getType(ast.expression);\n        return this.query.getNonNullableType(expressionType);\n    };\n    AstType.prototype.visitPropertyRead = function (ast) {\n        return this.resolvePropertyRead(this.getType(ast.receiver), ast);\n    };\n    AstType.prototype.visitPropertyWrite = function (ast) {\n        // The type of a write is the type of the value being written.\n        return this.getType(ast.value);\n    };\n    AstType.prototype.visitQuote = function (ast) {\n        // The type of a quoted expression is any.\n        return this.query.getBuiltinType(symbols.BuiltinType.Any);\n    };\n    AstType.prototype.visitSafeMethodCall = function (ast) {\n        return this.resolveMethodCall(this.query.getNonNullableType(this.getType(ast.receiver)), ast);\n    };\n    AstType.prototype.visitSafePropertyRead = function (ast) {\n        return this.resolvePropertyRead(this.query.getNonNullableType(this.getType(ast.receiver)), ast);\n    };\n    Object.defineProperty(AstType.prototype, \"anyType\", {\n        get: function () {\n            var result = this._anyType;\n            if (!result) {\n                result = this._anyType = this.query.getBuiltinType(symbols.BuiltinType.Any);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstType.prototype, \"undefinedType\", {\n        get: function () {\n            var result = this._undefinedType;\n            if (!result) {\n                result = this._undefinedType = this.query.getBuiltinType(symbols.BuiltinType.Undefined);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AstType.prototype.resolveMethodCall = function (receiverType, ast) {\n        var _this = this;\n        if (this.isAny(receiverType)) {\n            return this.anyType;\n        }\n        // The type of a method is the selected methods result type.\n        var method = receiverType.members().get(ast.name);\n        if (!method)\n            return this.reportError(\"Unknown method '\" + ast.name + \"'\", ast);\n        if (!method.type)\n            return this.reportError(\"Could not find a type for '\" + ast.name + \"'\", ast);\n        if (!method.type.callable)\n            return this.reportError(\"Member '\" + ast.name + \"' is not callable\", ast);\n        var signature = method.type.selectSignature(ast.args.map(function (arg) { return _this.getType(arg); }));\n        if (!signature)\n            return this.reportError(\"Unable to resolve signature for call of method \" + ast.name, ast);\n        return signature.result;\n    };\n    AstType.prototype.resolvePropertyRead = function (receiverType, ast) {\n        if (this.isAny(receiverType)) {\n            return this.anyType;\n        }\n        // The type of a property read is the seelcted member's type.\n        var member = receiverType.members().get(ast.name);\n        if (!member) {\n            var receiverInfo = receiverType.name;\n            if (receiverInfo == '$implict') {\n                receiverInfo =\n                    'The component declaration, template variable declarations, and element references do';\n            }\n            else if (receiverType.nullable) {\n                return this.reportError(\"The expression might be null\", ast.receiver);\n            }\n            else {\n                receiverInfo = \"'\" + receiverInfo + \"' does\";\n            }\n            return this.reportError(\"Identifier '\" + ast.name + \"' is not defined. \" + receiverInfo + \" not contain such a member\", ast);\n        }\n        if (!member.public) {\n            var receiverInfo = receiverType.name;\n            if (receiverInfo == '$implict') {\n                receiverInfo = 'the component';\n            }\n            else {\n                receiverInfo = \"'\" + receiverInfo + \"'\";\n            }\n            this.reportWarning(\"Identifier '\" + ast.name + \"' refers to a private member of \" + receiverInfo, ast);\n        }\n        return member.type;\n    };\n    AstType.prototype.reportError = function (message, ast) {\n        if (this.diagnostics) {\n            this.diagnostics.push(new TypeDiagnostic(DiagnosticKind.Error, message, ast));\n        }\n        return this.anyType;\n    };\n    AstType.prototype.reportWarning = function (message, ast) {\n        if (this.diagnostics) {\n            this.diagnostics.push(new TypeDiagnostic(DiagnosticKind.Warning, message, ast));\n        }\n        return this.anyType;\n    };\n    AstType.prototype.isAny = function (symbol) {\n        return !symbol || this.query.getTypeKind(symbol) == symbols.BuiltinType.Any ||\n            (!!symbol.type && this.isAny(symbol.type));\n    };\n    return AstType;\n}());\nexports.AstType = AstType;\n\n});\n\nvar expression_diagnostics = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\nfunction getTemplateExpressionDiagnostics(info) {\n    var visitor = new ExpressionDiagnosticsVisitor(info, function (path$$1, includeEvent) {\n        return getExpressionScope(info, path$$1, includeEvent);\n    });\n    compiler_1.templateVisitAll(visitor, info.templateAst);\n    return visitor.diagnostics;\n}\nexports.getTemplateExpressionDiagnostics = getTemplateExpressionDiagnostics;\nfunction getExpressionDiagnostics(scope, ast, query, context) {\n    if (context === void 0) { context = {}; }\n    var analyzer = new expression_type.AstType(scope, query, context);\n    analyzer.getDiagnostics(ast);\n    return analyzer.diagnostics;\n}\nexports.getExpressionDiagnostics = getExpressionDiagnostics;\nfunction getReferences(info) {\n    var result = [];\n    function processReferences(references) {\n        var _loop_1 = function (reference) {\n            var type = undefined;\n            if (reference.value) {\n                type = info.query.getTypeSymbol(compiler_1.tokenReference(reference.value));\n            }\n            result.push({\n                name: reference.name,\n                kind: 'reference',\n                type: type || info.query.getBuiltinType(symbols.BuiltinType.Any),\n                get definition() { return getDefinitionOf(info, reference); }\n            });\n        };\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var reference = references_1[_i];\n            _loop_1(reference);\n        }\n    }\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visitEmbeddedTemplate = function (ast, context) {\n            _super.prototype.visitEmbeddedTemplate.call(this, ast, context);\n            processReferences(ast.references);\n        };\n        class_1.prototype.visitElement = function (ast, context) {\n            _super.prototype.visitElement.call(this, ast, context);\n            processReferences(ast.references);\n        };\n        return class_1;\n    }(compiler_1.RecursiveTemplateAstVisitor));\n    compiler_1.templateVisitAll(visitor, info.templateAst);\n    return result;\n}\nfunction getDefinitionOf(info, ast) {\n    if (info.fileName) {\n        var templateOffset = info.offset;\n        return [{\n                fileName: info.fileName,\n                span: {\n                    start: ast.sourceSpan.start.offset + templateOffset,\n                    end: ast.sourceSpan.end.offset + templateOffset\n                }\n            }];\n    }\n}\nfunction getVarDeclarations(info, path$$1) {\n    var result = [];\n    var current = path$$1.tail;\n    while (current) {\n        if (current instanceof compiler_1.EmbeddedTemplateAst) {\n            var _loop_2 = function (variable) {\n                var name_1 = variable.name;\n                // Find the first directive with a context.\n                var context = current.directives.map(function (d) { return info.query.getTemplateContext(d.directive.type.reference); })\n                    .find(function (c) { return !!c; });\n                // Determine the type of the context field referenced by variable.value.\n                var type = undefined;\n                if (context) {\n                    var value = context.get(variable.value);\n                    if (value) {\n                        type = value.type;\n                        var kind = info.query.getTypeKind(type);\n                        if (kind === symbols.BuiltinType.Any || kind == symbols.BuiltinType.Unbound) {\n                            // The any type is not very useful here. For special cases, such as ngFor, we can do\n                            // better.\n                            type = refinedVariableType(type, info, current);\n                        }\n                    }\n                }\n                if (!type) {\n                    type = info.query.getBuiltinType(symbols.BuiltinType.Any);\n                }\n                result.push({\n                    name: name_1,\n                    kind: 'variable', type: type, get definition() { return getDefinitionOf(info, variable); }\n                });\n            };\n            for (var _i = 0, _a = current.variables; _i < _a.length; _i++) {\n                var variable = _a[_i];\n                _loop_2(variable);\n            }\n        }\n        current = path$$1.parentOf(current);\n    }\n    return result;\n}\nfunction refinedVariableType(type, info, templateElement) {\n    // Special case the ngFor directive\n    var ngForDirective = templateElement.directives.find(function (d) {\n        var name = compiler_1.identifierName(d.directive.type);\n        return name == 'NgFor' || name == 'NgForOf';\n    });\n    if (ngForDirective) {\n        var ngForOfBinding = ngForDirective.inputs.find(function (i) { return i.directiveName == 'ngForOf'; });\n        if (ngForOfBinding) {\n            var bindingType = new expression_type.AstType(info.members, info.query, {}).getType(ngForOfBinding.value);\n            if (bindingType) {\n                var result = info.query.getElementType(bindingType);\n                if (result) {\n                    return result;\n                }\n            }\n        }\n    }\n    // We can't do better, return any\n    return info.query.getBuiltinType(symbols.BuiltinType.Any);\n}\nfunction getEventDeclaration(info, includeEvent) {\n    var result = [];\n    if (includeEvent) {\n        // TODO: Determine the type of the event parameter based on the Observable<T> or EventEmitter<T>\n        // of the event.\n        result = [{ name: '$event', kind: 'variable', type: info.query.getBuiltinType(symbols.BuiltinType.Any) }];\n    }\n    return result;\n}\nfunction getExpressionScope(info, path$$1, includeEvent) {\n    var result = info.members;\n    var references = getReferences(info);\n    var variables = getVarDeclarations(info, path$$1);\n    var events = getEventDeclaration(info, includeEvent);\n    if (references.length || variables.length || events.length) {\n        var referenceTable = info.query.createSymbolTable(references);\n        var variableTable = info.query.createSymbolTable(variables);\n        var eventsTable = info.query.createSymbolTable(events);\n        result = info.query.mergeSymbolTable([result, referenceTable, variableTable, eventsTable]);\n    }\n    return result;\n}\nexports.getExpressionScope = getExpressionScope;\nvar ExpressionDiagnosticsVisitor = (function (_super) {\n    __extends(ExpressionDiagnosticsVisitor, _super);\n    function ExpressionDiagnosticsVisitor(info, getExpressionScope) {\n        var _this = _super.call(this) || this;\n        _this.info = info;\n        _this.getExpressionScope = getExpressionScope;\n        _this.diagnostics = [];\n        _this.path = new compiler_1.AstPath([]);\n        return _this;\n    }\n    ExpressionDiagnosticsVisitor.prototype.visitDirective = function (ast, context) {\n        // Override the default child visitor to ignore the host properties of a directive.\n        if (ast.inputs && ast.inputs.length) {\n            compiler_1.templateVisitAll(this, ast.inputs, context);\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitBoundText = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, ast.sourceSpan.start.offset, false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitDirectiveProperty = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitElementProperty = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitEvent = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.handler, this.attributeValueLocation(ast), true);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitVariable = function (ast) {\n        var directive = this.directiveSummary;\n        if (directive && ast.value) {\n            var context = this.info.query.getTemplateContext(directive.type.reference);\n            if (context && !context.has(ast.value)) {\n                if (ast.value === '$implicit') {\n                    this.reportError('The template context does not have an implicit value', spanOf(ast.sourceSpan));\n                }\n                else {\n                    this.reportError(\"The template context does not defined a member called '\" + ast.value + \"'\", spanOf(ast.sourceSpan));\n                }\n            }\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitElement = function (ast, context) {\n        this.push(ast);\n        _super.prototype.visitElement.call(this, ast, context);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var previousDirectiveSummary = this.directiveSummary;\n        this.push(ast);\n        // Find directive that refernces this template\n        this.directiveSummary =\n            ast.directives.map(function (d) { return d.directive; }).find(function (d) { return hasTemplateReference(d.type); });\n        // Process children\n        _super.prototype.visitEmbeddedTemplate.call(this, ast, context);\n        this.pop();\n        this.directiveSummary = previousDirectiveSummary;\n    };\n    ExpressionDiagnosticsVisitor.prototype.attributeValueLocation = function (ast) {\n        var path$$1 = compiler_1.findNode(this.info.htmlAst, ast.sourceSpan.start.offset);\n        var last = path$$1.tail;\n        if (last instanceof compiler_1.Attribute && last.valueSpan) {\n            // Add 1 for the quote.\n            return last.valueSpan.start.offset + 1;\n        }\n        return ast.sourceSpan.start.offset;\n    };\n    ExpressionDiagnosticsVisitor.prototype.diagnoseExpression = function (ast, offset, includeEvent) {\n        var _this = this;\n        var scope = this.getExpressionScope(this.path, includeEvent);\n        (_a = this.diagnostics).push.apply(_a, getExpressionDiagnostics(scope, ast, this.info.query, {\n            event: includeEvent\n        }).map(function (d) { return ({\n            span: offsetSpan(d.ast.span, offset + _this.info.offset),\n            kind: d.kind,\n            message: d.message\n        }); }));\n        var _a;\n    };\n    ExpressionDiagnosticsVisitor.prototype.push = function (ast) { this.path.push(ast); };\n    ExpressionDiagnosticsVisitor.prototype.pop = function () { this.path.pop(); };\n    ExpressionDiagnosticsVisitor.prototype.reportError = function (message, span) {\n        if (span) {\n            this.diagnostics.push({ span: offsetSpan(span, this.info.offset), kind: expression_type.DiagnosticKind.Error, message: message });\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.reportWarning = function (message, span) {\n        this.diagnostics.push({ span: offsetSpan(span, this.info.offset), kind: expression_type.DiagnosticKind.Warning, message: message });\n    };\n    return ExpressionDiagnosticsVisitor;\n}(compiler_1.RecursiveTemplateAstVisitor));\nfunction hasTemplateReference(type) {\n    if (type.diDeps) {\n        for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n            var diDep = _a[_i];\n            if (diDep.token && diDep.token.identifier &&\n                compiler_1.identifierName(diDep.token.identifier) == 'TemplateRef')\n                return true;\n        }\n    }\n    return false;\n}\nfunction offsetSpan(span, amount) {\n    return { start: span.start + amount, end: span.end + amount };\n}\nfunction spanOf(sourceSpan) {\n    return { start: sourceSpan.start.offset, end: sourceSpan.end.offset };\n}\n\n});\n\nvar typescript_symbols = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\n// In TypeScript 2.1 these flags moved\n// These helpers work for both 2.0 and 2.1.\nvar isPrivate = ts__default.ModifierFlags ?\n    (function (node) {\n        return !!(ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Private);\n    }) :\n    (function (node) { return !!(node.flags & ts__default.NodeFlags.Private); });\nvar isReferenceType = ts__default.ObjectFlags ?\n    (function (type) {\n        return !!(type.flags & ts__default.TypeFlags.Object &&\n            type.objectFlags & ts__default.ObjectFlags.Reference);\n    }) :\n    (function (type) { return !!(type.flags & ts__default.TypeFlags.Reference); });\nfunction getSymbolQuery(program, checker, source, fetchPipes) {\n    return new TypeScriptSymbolQuery(program, checker, source, fetchPipes);\n}\nexports.getSymbolQuery = getSymbolQuery;\nfunction getClassMembers(program, checker, staticSymbol) {\n    var declaration = getClassFromStaticSymbol(program, staticSymbol);\n    if (declaration) {\n        var type = checker.getTypeAtLocation(declaration);\n        var node = program.getSourceFile(staticSymbol.filePath);\n        return new TypeWrapper(type, { node: node, program: program, checker: checker }).members();\n    }\n}\nexports.getClassMembers = getClassMembers;\nfunction getClassMembersFromDeclaration(program, checker, source, declaration) {\n    var type = checker.getTypeAtLocation(declaration);\n    return new TypeWrapper(type, { node: source, program: program, checker: checker }).members();\n}\nexports.getClassMembersFromDeclaration = getClassMembersFromDeclaration;\nfunction getClassFromStaticSymbol(program, type) {\n    var source = program.getSourceFile(type.filePath);\n    if (source) {\n        return ts__default.forEachChild(source, function (child) {\n            if (child.kind === ts__default.SyntaxKind.ClassDeclaration) {\n                var classDeclaration = child;\n                if (classDeclaration.name != null && classDeclaration.name.text === type.name) {\n                    return classDeclaration;\n                }\n            }\n        });\n    }\n    return undefined;\n}\nexports.getClassFromStaticSymbol = getClassFromStaticSymbol;\nfunction getPipesTable(source, program, checker, pipes) {\n    return new PipesTable(pipes, { program: program, checker: checker, node: source });\n}\nexports.getPipesTable = getPipesTable;\nvar TypeScriptSymbolQuery = (function () {\n    function TypeScriptSymbolQuery(program, checker, source, fetchPipes) {\n        this.program = program;\n        this.checker = checker;\n        this.source = source;\n        this.fetchPipes = fetchPipes;\n        this.typeCache = new Map();\n    }\n    TypeScriptSymbolQuery.prototype.getTypeKind = function (symbol) { return typeKindOf(this.getTsTypeOf(symbol)); };\n    TypeScriptSymbolQuery.prototype.getBuiltinType = function (kind) {\n        var result = this.typeCache.get(kind);\n        if (!result) {\n            var type = getBuiltinTypeFromTs(kind, { checker: this.checker, node: this.source, program: this.program });\n            result =\n                new TypeWrapper(type, { program: this.program, checker: this.checker, node: this.source });\n            this.typeCache.set(kind, result);\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getTypeUnion = function () {\n        var types = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            types[_i] = arguments[_i];\n        }\n        // No API exists so return any if the types are not all the same type.\n        var result = undefined;\n        if (types.length) {\n            result = types[0];\n            for (var i = 1; i < types.length; i++) {\n                if (types[i] != result) {\n                    result = undefined;\n                    break;\n                }\n            }\n        }\n        return result || this.getBuiltinType(symbols.BuiltinType.Any);\n    };\n    TypeScriptSymbolQuery.prototype.getArrayType = function (type) { return this.getBuiltinType(symbols.BuiltinType.Any); };\n    TypeScriptSymbolQuery.prototype.getElementType = function (type) {\n        if (type instanceof TypeWrapper) {\n            var elementType = getTypeParameterOf(type.tsType, 'Array');\n            if (elementType) {\n                return new TypeWrapper(elementType, type.context);\n            }\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getNonNullableType = function (symbol) {\n        if (symbol instanceof TypeWrapper && (typeof this.checker.getNonNullableType == 'function')) {\n            var tsType = symbol.tsType;\n            var nonNullableType = this.checker.getNonNullableType(tsType);\n            if (nonNullableType != tsType) {\n                return new TypeWrapper(nonNullableType, symbol.context);\n            }\n            else if (nonNullableType == tsType) {\n                return symbol;\n            }\n        }\n        return this.getBuiltinType(symbols.BuiltinType.Any);\n    };\n    TypeScriptSymbolQuery.prototype.getPipes = function () {\n        var result = this.pipesCache;\n        if (!result) {\n            result = this.pipesCache = this.fetchPipes();\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getTemplateContext = function (type) {\n        var context = { node: this.source, program: this.program, checker: this.checker };\n        var typeSymbol = findClassSymbolInContext(type, context);\n        if (typeSymbol) {\n            var contextType = this.getTemplateRefContextType(typeSymbol);\n            if (contextType)\n                return new SymbolWrapper(contextType, context).members();\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getTypeSymbol = function (type) {\n        var context = { node: this.source, program: this.program, checker: this.checker };\n        var typeSymbol = findClassSymbolInContext(type, context);\n        return typeSymbol && new SymbolWrapper(typeSymbol, context);\n    };\n    TypeScriptSymbolQuery.prototype.createSymbolTable = function (symbols$$2) {\n        var result = new MapSymbolTable();\n        result.addAll(symbols$$2.map(function (s) { return new DeclaredSymbol(s); }));\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.mergeSymbolTable = function (symbolTables) {\n        var result = new MapSymbolTable();\n        for (var _i = 0, symbolTables_1 = symbolTables; _i < symbolTables_1.length; _i++) {\n            var symbolTable = symbolTables_1[_i];\n            result.addAll(symbolTable.values());\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getSpanAt = function (line, column) {\n        return spanAt(this.source, line, column);\n    };\n    TypeScriptSymbolQuery.prototype.getTemplateRefContextType = function (typeSymbol) {\n        var type = this.checker.getTypeOfSymbolAtLocation(typeSymbol, this.source);\n        var constructor = type.symbol && type.symbol.members &&\n            getFromSymbolTable(type.symbol.members, '__constructor');\n        if (constructor) {\n            var constructorDeclaration = constructor.declarations[0];\n            for (var _i = 0, _a = constructorDeclaration.parameters; _i < _a.length; _i++) {\n                var parameter = _a[_i];\n                var type_1 = this.checker.getTypeAtLocation(parameter.type);\n                if (type_1.symbol.name == 'TemplateRef' && isReferenceType(type_1)) {\n                    var typeReference = type_1;\n                    if (typeReference.typeArguments && typeReference.typeArguments.length === 1) {\n                        return typeReference.typeArguments[0].symbol;\n                    }\n                }\n            }\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getTsTypeOf = function (symbol) {\n        var type = this.getTypeWrapper(symbol);\n        return type && type.tsType;\n    };\n    TypeScriptSymbolQuery.prototype.getTypeWrapper = function (symbol) {\n        var type = undefined;\n        if (symbol instanceof TypeWrapper) {\n            type = symbol;\n        }\n        else if (symbol.type instanceof TypeWrapper) {\n            type = symbol.type;\n        }\n        return type;\n    };\n    return TypeScriptSymbolQuery;\n}());\nfunction typeCallable(type) {\n    var signatures = type.getCallSignatures();\n    return signatures && signatures.length != 0;\n}\nfunction signaturesOf(type, context) {\n    return type.getCallSignatures().map(function (s) { return new SignatureWrapper(s, context); });\n}\nfunction selectSignature(type, context, types) {\n    // TODO: Do a better job of selecting the right signature.\n    var signatures = type.getCallSignatures();\n    return signatures.length ? new SignatureWrapper(signatures[0], context) : undefined;\n}\nvar TypeWrapper = (function () {\n    function TypeWrapper(tsType, context) {\n        this.tsType = tsType;\n        this.context = context;\n        this.kind = 'type';\n        this.language = 'typescript';\n        this.type = undefined;\n        this.container = undefined;\n        this.public = true;\n        if (!tsType) {\n            throw Error('Internal: null type');\n        }\n    }\n    Object.defineProperty(TypeWrapper.prototype, \"name\", {\n        get: function () {\n            var symbol = this.tsType.symbol;\n            return (symbol && symbol.name) || '<anonymous>';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"callable\", {\n        get: function () { return typeCallable(this.tsType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"nullable\", {\n        get: function () {\n            return this.context.checker.getNonNullableType(this.tsType) != this.tsType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"definition\", {\n        get: function () {\n            var symbol = this.tsType.getSymbol();\n            return symbol ? definitionFromTsSymbol(symbol) : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeWrapper.prototype.members = function () {\n        return new SymbolTableWrapper(this.tsType.getProperties(), this.context);\n    };\n    TypeWrapper.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    TypeWrapper.prototype.selectSignature = function (types) {\n        return selectSignature(this.tsType, this.context, types);\n    };\n    TypeWrapper.prototype.indexed = function (argument) { return undefined; };\n    return TypeWrapper;\n}());\nvar SymbolWrapper = (function () {\n    function SymbolWrapper(symbol, context) {\n        this.context = context;\n        this.nullable = false;\n        this.language = 'typescript';\n        this.symbol = symbol && context && (symbol.flags & ts__default.SymbolFlags.Alias) ?\n            context.checker.getAliasedSymbol(symbol) :\n            symbol;\n    }\n    Object.defineProperty(SymbolWrapper.prototype, \"name\", {\n        get: function () { return this.symbol.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"kind\", {\n        get: function () { return this.callable ? 'method' : 'property'; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"type\", {\n        get: function () { return new TypeWrapper(this.tsType, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"container\", {\n        get: function () { return getContainerOf(this.symbol, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"public\", {\n        get: function () {\n            // Symbols that are not explicitly made private are public.\n            return !isSymbolPrivate(this.symbol);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"callable\", {\n        get: function () { return typeCallable(this.tsType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"definition\", {\n        get: function () { return definitionFromTsSymbol(this.symbol); },\n        enumerable: true,\n        configurable: true\n    });\n    SymbolWrapper.prototype.members = function () {\n        if (!this._members) {\n            if ((this.symbol.flags & (ts__default.SymbolFlags.Class | ts__default.SymbolFlags.Interface)) != 0) {\n                var declaredType = this.context.checker.getDeclaredTypeOfSymbol(this.symbol);\n                var typeWrapper = new TypeWrapper(declaredType, this.context);\n                this._members = typeWrapper.members();\n            }\n            else {\n                this._members = new SymbolTableWrapper(this.symbol.members, this.context);\n            }\n        }\n        return this._members;\n    };\n    SymbolWrapper.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    SymbolWrapper.prototype.selectSignature = function (types) {\n        return selectSignature(this.tsType, this.context, types);\n    };\n    SymbolWrapper.prototype.indexed = function (argument) { return undefined; };\n    Object.defineProperty(SymbolWrapper.prototype, \"tsType\", {\n        get: function () {\n            var type = this._tsType;\n            if (!type) {\n                type = this._tsType =\n                    this.context.checker.getTypeOfSymbolAtLocation(this.symbol, this.context.node);\n            }\n            return type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SymbolWrapper;\n}());\nvar DeclaredSymbol = (function () {\n    function DeclaredSymbol(declaration) {\n        this.declaration = declaration;\n        this.language = 'ng-template';\n        this.nullable = false;\n        this.public = true;\n    }\n    Object.defineProperty(DeclaredSymbol.prototype, \"name\", {\n        get: function () { return this.declaration.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"kind\", {\n        get: function () { return this.declaration.kind; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"container\", {\n        get: function () { return undefined; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"type\", {\n        get: function () { return this.declaration.type; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"callable\", {\n        get: function () { return this.declaration.type.callable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"definition\", {\n        get: function () { return this.declaration.definition; },\n        enumerable: true,\n        configurable: true\n    });\n    DeclaredSymbol.prototype.members = function () { return this.declaration.type.members(); };\n    DeclaredSymbol.prototype.signatures = function () { return this.declaration.type.signatures(); };\n    DeclaredSymbol.prototype.selectSignature = function (types) {\n        return this.declaration.type.selectSignature(types);\n    };\n    DeclaredSymbol.prototype.indexed = function (argument) { return undefined; };\n    return DeclaredSymbol;\n}());\nvar SignatureWrapper = (function () {\n    function SignatureWrapper(signature, context) {\n        this.signature = signature;\n        this.context = context;\n    }\n    Object.defineProperty(SignatureWrapper.prototype, \"arguments\", {\n        get: function () {\n            return new SymbolTableWrapper(this.signature.getParameters(), this.context);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SignatureWrapper.prototype, \"result\", {\n        get: function () { return new TypeWrapper(this.signature.getReturnType(), this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    return SignatureWrapper;\n}());\nvar SignatureResultOverride = (function () {\n    function SignatureResultOverride(signature, resultType) {\n        this.signature = signature;\n        this.resultType = resultType;\n    }\n    Object.defineProperty(SignatureResultOverride.prototype, \"arguments\", {\n        get: function () { return this.signature.arguments; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SignatureResultOverride.prototype, \"result\", {\n        get: function () { return this.resultType; },\n        enumerable: true,\n        configurable: true\n    });\n    return SignatureResultOverride;\n}());\nvar toSymbolTable = isTypescriptVersion('2.2') ?\n    (function (symbols$$2) {\n        var result = new Map();\n        for (var _i = 0, symbols_2 = symbols$$2; _i < symbols_2.length; _i++) {\n            var symbol = symbols_2[_i];\n            result.set(symbol.name, symbol);\n        }\n        return result;\n    }) :\n    (function (symbols$$2) {\n        var result = {};\n        for (var _i = 0, symbols_3 = symbols$$2; _i < symbols_3.length; _i++) {\n            var symbol = symbols_3[_i];\n            result[symbol.name] = symbol;\n        }\n        return result;\n    });\nfunction toSymbols(symbolTable) {\n    if (!symbolTable)\n        return [];\n    var table = symbolTable;\n    if (typeof table.values === 'function') {\n        return Array.from(table.values());\n    }\n    var result = [];\n    var own = typeof table.hasOwnProperty === 'function' ?\n        function (name) { return table.hasOwnProperty(name); } :\n        function (name) { return !!table[name]; };\n    for (var name_1 in table) {\n        if (own(name_1)) {\n            result.push(table[name_1]);\n        }\n    }\n    return result;\n}\nvar SymbolTableWrapper = (function () {\n    function SymbolTableWrapper(symbols$$2, context) {\n        this.context = context;\n        symbols$$2 = symbols$$2 || [];\n        if (Array.isArray(symbols$$2)) {\n            this.symbols = symbols$$2;\n            this.symbolTable = toSymbolTable(symbols$$2);\n        }\n        else {\n            this.symbols = toSymbols(symbols$$2);\n            this.symbolTable = symbols$$2;\n        }\n    }\n    Object.defineProperty(SymbolTableWrapper.prototype, \"size\", {\n        get: function () { return this.symbols.length; },\n        enumerable: true,\n        configurable: true\n    });\n    SymbolTableWrapper.prototype.get = function (key) {\n        var symbol = getFromSymbolTable(this.symbolTable, key);\n        return symbol ? new SymbolWrapper(symbol, this.context) : undefined;\n    };\n    SymbolTableWrapper.prototype.has = function (key) {\n        var table = this.symbolTable;\n        return (typeof table.has === 'function') ? table.has(key) : table[key] != null;\n    };\n    SymbolTableWrapper.prototype.values = function () {\n        var _this = this;\n        return this.symbols.map(function (s) { return new SymbolWrapper(s, _this.context); });\n    };\n    return SymbolTableWrapper;\n}());\nvar MapSymbolTable = (function () {\n    function MapSymbolTable() {\n        this.map = new Map();\n        this._values = [];\n    }\n    Object.defineProperty(MapSymbolTable.prototype, \"size\", {\n        get: function () { return this.map.size; },\n        enumerable: true,\n        configurable: true\n    });\n    MapSymbolTable.prototype.get = function (key) { return this.map.get(key); };\n    MapSymbolTable.prototype.add = function (symbol) {\n        if (this.map.has(symbol.name)) {\n            var previous = this.map.get(symbol.name);\n            this._values[this._values.indexOf(previous)] = symbol;\n        }\n        this.map.set(symbol.name, symbol);\n        this._values.push(symbol);\n    };\n    MapSymbolTable.prototype.addAll = function (symbols$$2) {\n        for (var _i = 0, symbols_4 = symbols$$2; _i < symbols_4.length; _i++) {\n            var symbol = symbols_4[_i];\n            this.add(symbol);\n        }\n    };\n    MapSymbolTable.prototype.has = function (key) { return this.map.has(key); };\n    MapSymbolTable.prototype.values = function () {\n        // Switch to this.map.values once iterables are supported by the target language.\n        return this._values;\n    };\n    return MapSymbolTable;\n}());\nvar PipesTable = (function () {\n    function PipesTable(pipes, context) {\n        this.pipes = pipes;\n        this.context = context;\n    }\n    Object.defineProperty(PipesTable.prototype, \"size\", {\n        get: function () { return this.pipes.length; },\n        enumerable: true,\n        configurable: true\n    });\n    PipesTable.prototype.get = function (key) {\n        var pipe = this.pipes.find(function (pipe) { return pipe.name == key; });\n        if (pipe) {\n            return new PipeSymbol(pipe, this.context);\n        }\n    };\n    PipesTable.prototype.has = function (key) { return this.pipes.find(function (pipe) { return pipe.name == key; }) != null; };\n    PipesTable.prototype.values = function () {\n        var _this = this;\n        return this.pipes.map(function (pipe) { return new PipeSymbol(pipe, _this.context); });\n    };\n    return PipesTable;\n}());\nvar PipeSymbol = (function () {\n    function PipeSymbol(pipe, context) {\n        this.pipe = pipe;\n        this.context = context;\n        this.kind = 'pipe';\n        this.language = 'typescript';\n        this.container = undefined;\n        this.callable = true;\n        this.nullable = false;\n        this.public = true;\n    }\n    Object.defineProperty(PipeSymbol.prototype, \"name\", {\n        get: function () { return this.pipe.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PipeSymbol.prototype, \"type\", {\n        get: function () { return new TypeWrapper(this.tsType, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PipeSymbol.prototype, \"definition\", {\n        get: function () {\n            var symbol = this.tsType.getSymbol();\n            return symbol ? definitionFromTsSymbol(symbol) : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PipeSymbol.prototype.members = function () { return EmptyTable.instance; };\n    PipeSymbol.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    PipeSymbol.prototype.selectSignature = function (types) {\n        var signature = selectSignature(this.tsType, this.context, types);\n        if (types.length == 1) {\n            var parameterType = types[0];\n            if (parameterType instanceof TypeWrapper) {\n                var resultType = undefined;\n                switch (this.name) {\n                    case 'async':\n                        switch (parameterType.name) {\n                            case 'Observable':\n                            case 'Promise':\n                            case 'EventEmitter':\n                                resultType = getTypeParameterOf(parameterType.tsType, parameterType.name);\n                                break;\n                            default:\n                                resultType = getBuiltinTypeFromTs(symbols.BuiltinType.Any, this.context);\n                                break;\n                        }\n                        break;\n                    case 'slice':\n                        resultType = getTypeParameterOf(parameterType.tsType, 'Array');\n                        break;\n                }\n                if (resultType) {\n                    signature = new SignatureResultOverride(signature, new TypeWrapper(resultType, parameterType.context));\n                }\n            }\n        }\n        return signature;\n    };\n    PipeSymbol.prototype.indexed = function (argument) { return undefined; };\n    Object.defineProperty(PipeSymbol.prototype, \"tsType\", {\n        get: function () {\n            var type = this._tsType;\n            if (!type) {\n                var classSymbol = this.findClassSymbol(this.pipe.type.reference);\n                if (classSymbol) {\n                    type = this._tsType = this.findTransformMethodType(classSymbol);\n                }\n                if (!type) {\n                    type = this._tsType = getBuiltinTypeFromTs(symbols.BuiltinType.Any, this.context);\n                }\n            }\n            return type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PipeSymbol.prototype.findClassSymbol = function (type) {\n        return findClassSymbolInContext(type, this.context);\n    };\n    PipeSymbol.prototype.findTransformMethodType = function (classSymbol) {\n        var classType = this.context.checker.getDeclaredTypeOfSymbol(classSymbol);\n        if (classType) {\n            var transform = classType.getProperty('transform');\n            if (transform) {\n                return this.context.checker.getTypeOfSymbolAtLocation(transform, this.context.node);\n            }\n        }\n    };\n    return PipeSymbol;\n}());\nfunction findClassSymbolInContext(type, context) {\n    var sourceFile = context.program.getSourceFile(type.filePath);\n    if (sourceFile) {\n        var moduleSymbol = sourceFile.module || sourceFile.symbol;\n        var exports_1 = context.checker.getExportsOfModule(moduleSymbol);\n        return (exports_1 || []).find(function (symbol) { return symbol.name == type.name; });\n    }\n}\nvar EmptyTable = (function () {\n    function EmptyTable() {\n        this.size = 0;\n    }\n    EmptyTable.prototype.get = function (key) { return undefined; };\n    EmptyTable.prototype.has = function (key) { return false; };\n    EmptyTable.prototype.values = function () { return []; };\n    EmptyTable.instance = new EmptyTable();\n    return EmptyTable;\n}());\nfunction isSymbolPrivate(s) {\n    return !!s.valueDeclaration && isPrivate(s.valueDeclaration);\n}\nfunction getBuiltinTypeFromTs(kind, context) {\n    var type;\n    var checker = context.checker;\n    var node = context.node;\n    switch (kind) {\n        case symbols.BuiltinType.Any:\n            type = checker.getTypeAtLocation(setParents({\n                kind: ts__default.SyntaxKind.AsExpression,\n                expression: { kind: ts__default.SyntaxKind.TrueKeyword },\n                type: { kind: ts__default.SyntaxKind.AnyKeyword }\n            }, node));\n            break;\n        case symbols.BuiltinType.Boolean:\n            type =\n                checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.TrueKeyword }, node));\n            break;\n        case symbols.BuiltinType.Null:\n            type =\n                checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.NullKeyword }, node));\n            break;\n        case symbols.BuiltinType.Number:\n            var numeric = { kind: ts__default.SyntaxKind.NumericLiteral };\n            setParents({ kind: ts__default.SyntaxKind.ExpressionStatement, expression: numeric }, node);\n            type = checker.getTypeAtLocation(numeric);\n            break;\n        case symbols.BuiltinType.String:\n            type = checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.NoSubstitutionTemplateLiteral }, node));\n            break;\n        case symbols.BuiltinType.Undefined:\n            type = checker.getTypeAtLocation(setParents({\n                kind: ts__default.SyntaxKind.VoidExpression,\n                expression: { kind: ts__default.SyntaxKind.NumericLiteral }\n            }, node));\n            break;\n        default:\n            throw new Error(\"Internal error, unhandled literal kind \" + kind + \":\" + symbols.BuiltinType[kind]);\n    }\n    return type;\n}\nfunction setParents(node, parent) {\n    node.parent = parent;\n    ts__default.forEachChild(node, function (child) { return setParents(child, node); });\n    return node;\n}\nfunction spanAt(sourceFile, line, column) {\n    if (line != null && column != null) {\n        var position_1 = ts__default.getPositionOfLineAndCharacter(sourceFile, line, column);\n        var findChild = function findChild(node) {\n            if (node.kind > ts__default.SyntaxKind.LastToken && node.pos <= position_1 && node.end > position_1) {\n                var betterNode = ts__default.forEachChild(node, findChild);\n                return betterNode || node;\n            }\n        };\n        var node = ts__default.forEachChild(sourceFile, findChild);\n        if (node) {\n            return { start: node.getStart(), end: node.getEnd() };\n        }\n    }\n}\nfunction definitionFromTsSymbol(symbol) {\n    var declarations = symbol.declarations;\n    if (declarations) {\n        return declarations.map(function (declaration) {\n            var sourceFile = declaration.getSourceFile();\n            return {\n                fileName: sourceFile.fileName,\n                span: { start: declaration.getStart(), end: declaration.getEnd() }\n            };\n        });\n    }\n}\nfunction parentDeclarationOf(node) {\n    while (node) {\n        switch (node.kind) {\n            case ts__default.SyntaxKind.ClassDeclaration:\n            case ts__default.SyntaxKind.InterfaceDeclaration:\n                return node;\n            case ts__default.SyntaxKind.SourceFile:\n                return undefined;\n        }\n        node = node.parent;\n    }\n}\nfunction getContainerOf(symbol, context) {\n    if (symbol.getFlags() & ts__default.SymbolFlags.ClassMember && symbol.declarations) {\n        for (var _i = 0, _a = symbol.declarations; _i < _a.length; _i++) {\n            var declaration = _a[_i];\n            var parent_1 = parentDeclarationOf(declaration);\n            if (parent_1) {\n                var type = context.checker.getTypeAtLocation(parent_1);\n                if (type) {\n                    return new TypeWrapper(type, context);\n                }\n            }\n        }\n    }\n}\nfunction getTypeParameterOf(type, name) {\n    if (type && type.symbol && type.symbol.name == name) {\n        var typeArguments = type.typeArguments;\n        if (typeArguments && typeArguments.length <= 1) {\n            return typeArguments[0];\n        }\n    }\n}\nfunction typeKindOf(type) {\n    if (type) {\n        if (type.flags & ts__default.TypeFlags.Any) {\n            return symbols.BuiltinType.Any;\n        }\n        else if (type.flags & (ts__default.TypeFlags.String | ts__default.TypeFlags.StringLike | ts__default.TypeFlags.StringLiteral)) {\n            return symbols.BuiltinType.String;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Number | ts__default.TypeFlags.NumberLike)) {\n            return symbols.BuiltinType.Number;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Undefined)) {\n            return symbols.BuiltinType.Undefined;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Null)) {\n            return symbols.BuiltinType.Null;\n        }\n        else if (type.flags & ts__default.TypeFlags.Union) {\n            // If all the constituent types of a union are the same kind, it is also that kind.\n            var candidate = null;\n            var unionType = type;\n            if (unionType.types.length > 0) {\n                candidate = typeKindOf(unionType.types[0]);\n                for (var _i = 0, _a = unionType.types; _i < _a.length; _i++) {\n                    var subType = _a[_i];\n                    if (candidate != typeKindOf(subType)) {\n                        return symbols.BuiltinType.Other;\n                    }\n                }\n            }\n            if (candidate != null) {\n                return candidate;\n            }\n        }\n        else if (type.flags & ts__default.TypeFlags.TypeParameter) {\n            return symbols.BuiltinType.Unbound;\n        }\n    }\n    return symbols.BuiltinType.Other;\n}\nfunction getFromSymbolTable(symbolTable, key) {\n    var table = symbolTable;\n    var symbol;\n    if (typeof table.get === 'function') {\n        // TS 2.2 uses a Map\n        symbol = table.get(key);\n    }\n    else {\n        // TS pre-2.2 uses an object\n        symbol = table[key];\n    }\n    return symbol;\n}\nfunction toNumbers(value) {\n    return value ? value.split('.').map(function (v) { return +v; }) : [];\n}\nfunction compareNumbers(a, b) {\n    for (var i = 0; i < a.length && i < b.length; i++) {\n        if (a[i] > b[i])\n            return 1;\n        if (a[i] < b[i])\n            return -1;\n    }\n    return 0;\n}\nfunction isTypescriptVersion(low, high) {\n    var tsNumbers = toNumbers(ts__default.version);\n    return compareNumbers(toNumbers(low), tsNumbers) <= 0 &&\n        compareNumbers(toNumbers(high), tsNumbers) >= 0;\n}\n\n});\n\nvar schema = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Metadata Schema\n// If you make a backwards incompatible change to the schema, increment the METADTA_VERSION number.\n// If you make a backwards compatible change to the metadata (such as adding an option field) then\n// leave METADATA_VERSION the same. If possible, supply as many versions of the metadata that can\n// represent the semantics of the file in an array. For example, when generating a version 2 file,\n// if version 1 can accurately represent the metadata, generate both version 1 and version 2 in\n// an array.\nexports.METADATA_VERSION = 4;\nfunction isModuleMetadata(value) {\n    return value && value.__symbolic === 'module';\n}\nexports.isModuleMetadata = isModuleMetadata;\nfunction isClassMetadata(value) {\n    return value && value.__symbolic === 'class';\n}\nexports.isClassMetadata = isClassMetadata;\nfunction isInterfaceMetadata(value) {\n    return value && value.__symbolic === 'interface';\n}\nexports.isInterfaceMetadata = isInterfaceMetadata;\nfunction isMemberMetadata(value) {\n    if (value) {\n        switch (value.__symbolic) {\n            case 'constructor':\n            case 'method':\n            case 'property':\n                return true;\n        }\n    }\n    return false;\n}\nexports.isMemberMetadata = isMemberMetadata;\nfunction isMethodMetadata(value) {\n    return value && (value.__symbolic === 'constructor' || value.__symbolic === 'method');\n}\nexports.isMethodMetadata = isMethodMetadata;\nfunction isConstructorMetadata(value) {\n    return value && value.__symbolic === 'constructor';\n}\nexports.isConstructorMetadata = isConstructorMetadata;\nfunction isFunctionMetadata(value) {\n    return value && value.__symbolic === 'function';\n}\nexports.isFunctionMetadata = isFunctionMetadata;\nfunction isMetadataSymbolicExpression(value) {\n    if (value) {\n        switch (value.__symbolic) {\n            case 'binary':\n            case 'call':\n            case 'index':\n            case 'new':\n            case 'pre':\n            case 'reference':\n            case 'select':\n            case 'spread':\n            case 'if':\n                return true;\n        }\n    }\n    return false;\n}\nexports.isMetadataSymbolicExpression = isMetadataSymbolicExpression;\nfunction isMetadataSymbolicBinaryExpression(value) {\n    return value && value.__symbolic === 'binary';\n}\nexports.isMetadataSymbolicBinaryExpression = isMetadataSymbolicBinaryExpression;\nfunction isMetadataSymbolicIndexExpression(value) {\n    return value && value.__symbolic === 'index';\n}\nexports.isMetadataSymbolicIndexExpression = isMetadataSymbolicIndexExpression;\nfunction isMetadataSymbolicCallExpression(value) {\n    return value && (value.__symbolic === 'call' || value.__symbolic === 'new');\n}\nexports.isMetadataSymbolicCallExpression = isMetadataSymbolicCallExpression;\nfunction isMetadataSymbolicPrefixExpression(value) {\n    return value && value.__symbolic === 'pre';\n}\nexports.isMetadataSymbolicPrefixExpression = isMetadataSymbolicPrefixExpression;\nfunction isMetadataSymbolicIfExpression(value) {\n    return value && value.__symbolic === 'if';\n}\nexports.isMetadataSymbolicIfExpression = isMetadataSymbolicIfExpression;\nfunction isMetadataGlobalReferenceExpression(value) {\n    return value && value.name && !value.module && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataGlobalReferenceExpression = isMetadataGlobalReferenceExpression;\nfunction isMetadataModuleReferenceExpression(value) {\n    return value && value.module && !value.name && !value.default &&\n        isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataModuleReferenceExpression = isMetadataModuleReferenceExpression;\nfunction isMetadataImportedSymbolReferenceExpression(value) {\n    return value && value.module && !!value.name && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataImportedSymbolReferenceExpression = isMetadataImportedSymbolReferenceExpression;\nfunction isMetadataImportDefaultReference(value) {\n    return value.module && value.default && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataImportDefaultReference = isMetadataImportDefaultReference;\nfunction isMetadataSymbolicReferenceExpression(value) {\n    return value && value.__symbolic === 'reference';\n}\nexports.isMetadataSymbolicReferenceExpression = isMetadataSymbolicReferenceExpression;\nfunction isMetadataSymbolicSelectExpression(value) {\n    return value && value.__symbolic === 'select';\n}\nexports.isMetadataSymbolicSelectExpression = isMetadataSymbolicSelectExpression;\nfunction isMetadataSymbolicSpreadExpression(value) {\n    return value && value.__symbolic === 'spread';\n}\nexports.isMetadataSymbolicSpreadExpression = isMetadataSymbolicSpreadExpression;\nfunction isMetadataError(value) {\n    return value && value.__symbolic === 'error';\n}\nexports.isMetadataError = isMetadataError;\n\n});\n\nvar evaluator = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n// In TypeScript 2.1 the spread element kind was renamed.\nvar spreadElementSyntaxKind = ts__default.SyntaxKind.SpreadElement || ts__default.SyntaxKind.SpreadElementExpression;\nfunction isMethodCallOf(callExpression, memberName) {\n    var expression = callExpression.expression;\n    if (expression.kind === ts__default.SyntaxKind.PropertyAccessExpression) {\n        var propertyAccessExpression = expression;\n        var name_1 = propertyAccessExpression.name;\n        if (name_1.kind == ts__default.SyntaxKind.Identifier) {\n            return name_1.text === memberName;\n        }\n    }\n    return false;\n}\nfunction isCallOf(callExpression, ident) {\n    var expression = callExpression.expression;\n    if (expression.kind === ts__default.SyntaxKind.Identifier) {\n        var identifier = expression;\n        return identifier.text === ident;\n    }\n    return false;\n}\n/**\n * ts.forEachChild stops iterating children when the callback return a truthy value.\n * This method inverts this to implement an `every` style iterator. It will return\n * true if every call to `cb` returns `true`.\n */\nfunction everyNodeChild(node, cb) {\n    return !ts__default.forEachChild(node, function (node) { return !cb(node); });\n}\nfunction isPrimitive(value) {\n    return Object(value) !== value;\n}\nexports.isPrimitive = isPrimitive;\nfunction isDefined(obj) {\n    return obj !== undefined;\n}\nfunction getSourceFileOfNode(node) {\n    while (node && node.kind != ts__default.SyntaxKind.SourceFile) {\n        node = node.parent;\n    }\n    return node;\n}\n/* @internal */\nfunction errorSymbol(message, node, context, sourceFile) {\n    var result = undefined;\n    if (node) {\n        sourceFile = sourceFile || getSourceFileOfNode(node);\n        if (sourceFile) {\n            var _a = ts__default.getLineAndCharacterOfPosition(sourceFile, node.getStart(sourceFile)), line = _a.line, character = _a.character;\n            result = { __symbolic: 'error', message: message, line: line, character: character };\n        }\n    }\n    if (!result) {\n        result = { __symbolic: 'error', message: message };\n    }\n    if (context) {\n        result.context = context;\n    }\n    return result;\n}\nexports.errorSymbol = errorSymbol;\n/**\n * Produce a symbolic representation of an expression folding values into their final value when\n * possible.\n */\nvar Evaluator = (function () {\n    function Evaluator(symbols, nodeMap, options, recordExport) {\n        if (options === void 0) { options = {}; }\n        this.symbols = symbols;\n        this.nodeMap = nodeMap;\n        this.options = options;\n        this.recordExport = recordExport;\n    }\n    Evaluator.prototype.nameOf = function (node) {\n        if (node && node.kind == ts__default.SyntaxKind.Identifier) {\n            return node.text;\n        }\n        var result = node && this.evaluateNode(node);\n        if (schema.isMetadataError(result) || typeof result === 'string') {\n            return result;\n        }\n        else {\n            return errorSymbol('Name expected', node, { received: (node && node.getText()) || '<missing>' });\n        }\n    };\n    /**\n     * Returns true if the expression represented by `node` can be folded into a literal expression.\n     *\n     * For example, a literal is always foldable. This means that literal expressions such as `1.2`\n     * `\"Some value\"` `true` `false` are foldable.\n     *\n     * - An object literal is foldable if all the properties in the literal are foldable.\n     * - An array literal is foldable if all the elements are foldable.\n     * - A call is foldable if it is a call to a Array.prototype.concat or a call to CONST_EXPR.\n     * - A property access is foldable if the object is foldable.\n     * - A array index is foldable if index expression is foldable and the array is foldable.\n     * - Binary operator expressions are foldable if the left and right expressions are foldable and\n     *   it is one of '+', '-', '*', '/', '%', '||', and '&&'.\n     * - An identifier is foldable if a value can be found for its symbol in the evaluator symbol\n     *   table.\n     */\n    Evaluator.prototype.isFoldable = function (node) {\n        return this.isFoldableWorker(node, new Map());\n    };\n    Evaluator.prototype.isFoldableWorker = function (node, folding) {\n        var _this = this;\n        if (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ObjectLiteralExpression:\n                    return everyNodeChild(node, function (child) {\n                        if (child.kind === ts__default.SyntaxKind.PropertyAssignment) {\n                            var propertyAssignment = child;\n                            return _this.isFoldableWorker(propertyAssignment.initializer, folding);\n                        }\n                        return false;\n                    });\n                case ts__default.SyntaxKind.ArrayLiteralExpression:\n                    return everyNodeChild(node, function (child) { return _this.isFoldableWorker(child, folding); });\n                case ts__default.SyntaxKind.CallExpression:\n                    var callExpression = node;\n                    // We can fold a <array>.concat(<v>).\n                    if (isMethodCallOf(callExpression, 'concat') &&\n                        arrayOrEmpty(callExpression.arguments).length === 1) {\n                        var arrayNode = callExpression.expression.expression;\n                        if (this.isFoldableWorker(arrayNode, folding) &&\n                            this.isFoldableWorker(callExpression.arguments[0], folding)) {\n                            // It needs to be an array.\n                            var arrayValue = this.evaluateNode(arrayNode);\n                            if (arrayValue && Array.isArray(arrayValue)) {\n                                return true;\n                            }\n                        }\n                    }\n                    // We can fold a call to CONST_EXPR\n                    if (isCallOf(callExpression, 'CONST_EXPR') &&\n                        arrayOrEmpty(callExpression.arguments).length === 1)\n                        return this.isFoldableWorker(callExpression.arguments[0], folding);\n                    return false;\n                case ts__default.SyntaxKind.NoSubstitutionTemplateLiteral:\n                case ts__default.SyntaxKind.StringLiteral:\n                case ts__default.SyntaxKind.NumericLiteral:\n                case ts__default.SyntaxKind.NullKeyword:\n                case ts__default.SyntaxKind.TrueKeyword:\n                case ts__default.SyntaxKind.FalseKeyword:\n                case ts__default.SyntaxKind.TemplateHead:\n                case ts__default.SyntaxKind.TemplateMiddle:\n                case ts__default.SyntaxKind.TemplateTail:\n                    return true;\n                case ts__default.SyntaxKind.ParenthesizedExpression:\n                    var parenthesizedExpression = node;\n                    return this.isFoldableWorker(parenthesizedExpression.expression, folding);\n                case ts__default.SyntaxKind.BinaryExpression:\n                    var binaryExpression = node;\n                    switch (binaryExpression.operatorToken.kind) {\n                        case ts__default.SyntaxKind.PlusToken:\n                        case ts__default.SyntaxKind.MinusToken:\n                        case ts__default.SyntaxKind.AsteriskToken:\n                        case ts__default.SyntaxKind.SlashToken:\n                        case ts__default.SyntaxKind.PercentToken:\n                        case ts__default.SyntaxKind.AmpersandAmpersandToken:\n                        case ts__default.SyntaxKind.BarBarToken:\n                            return this.isFoldableWorker(binaryExpression.left, folding) &&\n                                this.isFoldableWorker(binaryExpression.right, folding);\n                        default:\n                            return false;\n                    }\n                case ts__default.SyntaxKind.PropertyAccessExpression:\n                    var propertyAccessExpression = node;\n                    return this.isFoldableWorker(propertyAccessExpression.expression, folding);\n                case ts__default.SyntaxKind.ElementAccessExpression:\n                    var elementAccessExpression = node;\n                    return this.isFoldableWorker(elementAccessExpression.expression, folding) &&\n                        this.isFoldableWorker(elementAccessExpression.argumentExpression, folding);\n                case ts__default.SyntaxKind.Identifier:\n                    var identifier = node;\n                    var reference = this.symbols.resolve(identifier.text);\n                    if (reference !== undefined && isPrimitive(reference)) {\n                        return true;\n                    }\n                    break;\n                case ts__default.SyntaxKind.TemplateExpression:\n                    var templateExpression = node;\n                    return templateExpression.templateSpans.every(function (span) { return _this.isFoldableWorker(span.expression, folding); });\n            }\n        }\n        return false;\n    };\n    /**\n     * Produce a JSON serialiable object representing `node`. The foldable values in the expression\n     * tree are folded. For example, a node representing `1 + 2` is folded into `3`.\n     */\n    Evaluator.prototype.evaluateNode = function (node, preferReference) {\n        var _this = this;\n        var t = this;\n        var error;\n        function recordEntry(entry, node) {\n            if (t.options.substituteExpression) {\n                var newEntry = t.options.substituteExpression(entry, node);\n                if (t.recordExport && newEntry != entry && schema.isMetadataGlobalReferenceExpression(newEntry)) {\n                    t.recordExport(newEntry.name, entry);\n                }\n                entry = newEntry;\n            }\n            t.nodeMap.set(entry, node);\n            return entry;\n        }\n        function isFoldableError(value) {\n            return !t.options.verboseInvalidExpression && schema.isMetadataError(value);\n        }\n        var resolveName = function (name, preferReference) {\n            var reference = _this.symbols.resolve(name, preferReference);\n            if (reference === undefined) {\n                // Encode as a global reference. StaticReflector will check the reference.\n                return recordEntry({ __symbolic: 'reference', name: name }, node);\n            }\n            return reference;\n        };\n        switch (node.kind) {\n            case ts__default.SyntaxKind.ObjectLiteralExpression:\n                var obj_1 = {};\n                var quoted_1 = [];\n                ts__default.forEachChild(node, function (child) {\n                    switch (child.kind) {\n                        case ts__default.SyntaxKind.ShorthandPropertyAssignment:\n                        case ts__default.SyntaxKind.PropertyAssignment:\n                            var assignment = child;\n                            if (assignment.name.kind == ts__default.SyntaxKind.StringLiteral) {\n                                var name_2 = assignment.name.text;\n                                quoted_1.push(name_2);\n                            }\n                            var propertyName = _this.nameOf(assignment.name);\n                            if (isFoldableError(propertyName)) {\n                                error = propertyName;\n                                return true;\n                            }\n                            var propertyValue = isPropertyAssignment(assignment) ?\n                                _this.evaluateNode(assignment.initializer, /* preferReference */ true) :\n                                resolveName(propertyName, /* preferReference */ true);\n                            if (isFoldableError(propertyValue)) {\n                                error = propertyValue;\n                                return true; // Stop the forEachChild.\n                            }\n                            else {\n                                obj_1[propertyName] = isPropertyAssignment(assignment) ?\n                                    recordEntry(propertyValue, assignment.initializer) :\n                                    propertyValue;\n                            }\n                    }\n                });\n                if (error)\n                    return error;\n                if (this.options.quotedNames && quoted_1.length) {\n                    obj_1['$quoted$'] = quoted_1;\n                }\n                return recordEntry(obj_1, node);\n            case ts__default.SyntaxKind.ArrayLiteralExpression:\n                var arr_1 = [];\n                ts__default.forEachChild(node, function (child) {\n                    var value = _this.evaluateNode(child, /* preferReference */ true);\n                    // Check for error\n                    if (isFoldableError(value)) {\n                        error = value;\n                        return true; // Stop the forEachChild.\n                    }\n                    // Handle spread expressions\n                    if (schema.isMetadataSymbolicSpreadExpression(value)) {\n                        if (Array.isArray(value.expression)) {\n                            for (var _i = 0, _a = value.expression; _i < _a.length; _i++) {\n                                var spreadValue = _a[_i];\n                                arr_1.push(spreadValue);\n                            }\n                            return;\n                        }\n                    }\n                    arr_1.push(value);\n                });\n                if (error)\n                    return error;\n                return recordEntry(arr_1, node);\n            case spreadElementSyntaxKind:\n                var spreadExpression = this.evaluateNode(node.expression);\n                return recordEntry({ __symbolic: 'spread', expression: spreadExpression }, node);\n            case ts__default.SyntaxKind.CallExpression:\n                var callExpression = node;\n                if (isCallOf(callExpression, 'forwardRef') &&\n                    arrayOrEmpty(callExpression.arguments).length === 1) {\n                    var firstArgument = callExpression.arguments[0];\n                    if (firstArgument.kind == ts__default.SyntaxKind.ArrowFunction) {\n                        var arrowFunction = firstArgument;\n                        return recordEntry(this.evaluateNode(arrowFunction.body), node);\n                    }\n                }\n                var args = arrayOrEmpty(callExpression.arguments).map(function (arg) { return _this.evaluateNode(arg); });\n                if (!this.options.verboseInvalidExpression && args.some(schema.isMetadataError)) {\n                    return args.find(schema.isMetadataError);\n                }\n                if (this.isFoldable(callExpression)) {\n                    if (isMethodCallOf(callExpression, 'concat')) {\n                        var arrayValue = this.evaluateNode(callExpression.expression.expression);\n                        if (isFoldableError(arrayValue))\n                            return arrayValue;\n                        return arrayValue.concat(args[0]);\n                    }\n                }\n                // Always fold a CONST_EXPR even if the argument is not foldable.\n                if (isCallOf(callExpression, 'CONST_EXPR') &&\n                    arrayOrEmpty(callExpression.arguments).length === 1) {\n                    return recordEntry(args[0], node);\n                }\n                var expression = this.evaluateNode(callExpression.expression);\n                if (isFoldableError(expression)) {\n                    return recordEntry(expression, node);\n                }\n                var result = { __symbolic: 'call', expression: expression };\n                if (args && args.length) {\n                    result.arguments = args;\n                }\n                return recordEntry(result, node);\n            case ts__default.SyntaxKind.NewExpression:\n                var newExpression = node;\n                var newArgs = arrayOrEmpty(newExpression.arguments).map(function (arg) { return _this.evaluateNode(arg); });\n                if (!this.options.verboseInvalidExpression && newArgs.some(schema.isMetadataError)) {\n                    return recordEntry(newArgs.find(schema.isMetadataError), node);\n                }\n                var newTarget = this.evaluateNode(newExpression.expression);\n                if (schema.isMetadataError(newTarget)) {\n                    return recordEntry(newTarget, node);\n                }\n                var call = { __symbolic: 'new', expression: newTarget };\n                if (newArgs.length) {\n                    call.arguments = newArgs;\n                }\n                return recordEntry(call, node);\n            case ts__default.SyntaxKind.PropertyAccessExpression: {\n                var propertyAccessExpression = node;\n                var expression_1 = this.evaluateNode(propertyAccessExpression.expression);\n                if (isFoldableError(expression_1)) {\n                    return recordEntry(expression_1, node);\n                }\n                var member = this.nameOf(propertyAccessExpression.name);\n                if (isFoldableError(member)) {\n                    return recordEntry(member, node);\n                }\n                if (expression_1 && this.isFoldable(propertyAccessExpression.expression))\n                    return expression_1[member];\n                if (schema.isMetadataModuleReferenceExpression(expression_1)) {\n                    // A select into a module reference and be converted into a reference to the symbol\n                    // in the module\n                    return recordEntry({ __symbolic: 'reference', module: expression_1.module, name: member }, node);\n                }\n                return recordEntry({ __symbolic: 'select', expression: expression_1, member: member }, node);\n            }\n            case ts__default.SyntaxKind.ElementAccessExpression: {\n                var elementAccessExpression = node;\n                var expression_2 = this.evaluateNode(elementAccessExpression.expression);\n                if (isFoldableError(expression_2)) {\n                    return recordEntry(expression_2, node);\n                }\n                if (!elementAccessExpression.argumentExpression) {\n                    return recordEntry(errorSymbol('Expression form not supported', node), node);\n                }\n                var index = this.evaluateNode(elementAccessExpression.argumentExpression);\n                if (isFoldableError(expression_2)) {\n                    return recordEntry(expression_2, node);\n                }\n                if (this.isFoldable(elementAccessExpression.expression) &&\n                    this.isFoldable(elementAccessExpression.argumentExpression))\n                    return expression_2[index];\n                return recordEntry({ __symbolic: 'index', expression: expression_2, index: index }, node);\n            }\n            case ts__default.SyntaxKind.Identifier:\n                var identifier = node;\n                var name_3 = identifier.text;\n                return resolveName(name_3, preferReference);\n            case ts__default.SyntaxKind.TypeReference:\n                var typeReferenceNode = node;\n                var typeNameNode_1 = typeReferenceNode.typeName;\n                var getReference = function (node) {\n                    if (typeNameNode_1.kind === ts__default.SyntaxKind.QualifiedName) {\n                        var qualifiedName = node;\n                        var left_1 = _this.evaluateNode(qualifiedName.left);\n                        if (schema.isMetadataModuleReferenceExpression(left_1)) {\n                            return recordEntry({\n                                __symbolic: 'reference',\n                                module: left_1.module,\n                                name: qualifiedName.right.text\n                            }, node);\n                        }\n                        // Record a type reference to a declared type as a select.\n                        return { __symbolic: 'select', expression: left_1, member: qualifiedName.right.text };\n                    }\n                    else {\n                        var identifier_1 = typeNameNode_1;\n                        var symbol = _this.symbols.resolve(identifier_1.text);\n                        if (isFoldableError(symbol) || schema.isMetadataSymbolicReferenceExpression(symbol)) {\n                            return recordEntry(symbol, node);\n                        }\n                        return recordEntry(errorSymbol('Could not resolve type', node, { typeName: identifier_1.text }), node);\n                    }\n                };\n                var typeReference = getReference(typeNameNode_1);\n                if (isFoldableError(typeReference)) {\n                    return recordEntry(typeReference, node);\n                }\n                if (!schema.isMetadataModuleReferenceExpression(typeReference) &&\n                    typeReferenceNode.typeArguments && typeReferenceNode.typeArguments.length) {\n                    var args_1 = typeReferenceNode.typeArguments.map(function (element) { return _this.evaluateNode(element); });\n                    // TODO: Remove typecast when upgraded to 2.0 as it will be corretly inferred.\n                    // Some versions of 1.9 do not infer this correctly.\n                    typeReference.arguments = args_1;\n                }\n                return recordEntry(typeReference, node);\n            case ts__default.SyntaxKind.UnionType:\n                var unionType = node;\n                // Remove null and undefined from the list of unions.\n                var references = unionType.types\n                    .filter(function (n) { return n.kind != ts__default.SyntaxKind.NullKeyword &&\n                    n.kind != ts__default.SyntaxKind.UndefinedKeyword; })\n                    .map(function (n) { return _this.evaluateNode(n); });\n                // The remmaining reference must be the same. If two have type arguments consider them\n                // different even if the type arguments are the same.\n                var candidate = null;\n                for (var i = 0; i < references.length; i++) {\n                    var reference = references[i];\n                    if (schema.isMetadataSymbolicReferenceExpression(reference)) {\n                        if (candidate) {\n                            if (reference.name == candidate.name &&\n                                reference.module == candidate.module && !reference.arguments) {\n                                candidate = reference;\n                            }\n                        }\n                        else {\n                            candidate = reference;\n                        }\n                    }\n                    else {\n                        return reference;\n                    }\n                }\n                if (candidate)\n                    return candidate;\n                break;\n            case ts__default.SyntaxKind.NoSubstitutionTemplateLiteral:\n            case ts__default.SyntaxKind.StringLiteral:\n            case ts__default.SyntaxKind.TemplateHead:\n            case ts__default.SyntaxKind.TemplateTail:\n            case ts__default.SyntaxKind.TemplateMiddle:\n                return node.text;\n            case ts__default.SyntaxKind.NumericLiteral:\n                return parseFloat(node.text);\n            case ts__default.SyntaxKind.AnyKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'any' }, node);\n            case ts__default.SyntaxKind.StringKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'string' }, node);\n            case ts__default.SyntaxKind.NumberKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'number' }, node);\n            case ts__default.SyntaxKind.BooleanKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'boolean' }, node);\n            case ts__default.SyntaxKind.ArrayType:\n                var arrayTypeNode = node;\n                return recordEntry({\n                    __symbolic: 'reference',\n                    name: 'Array',\n                    arguments: [this.evaluateNode(arrayTypeNode.elementType)]\n                }, node);\n            case ts__default.SyntaxKind.NullKeyword:\n                return null;\n            case ts__default.SyntaxKind.TrueKeyword:\n                return true;\n            case ts__default.SyntaxKind.FalseKeyword:\n                return false;\n            case ts__default.SyntaxKind.ParenthesizedExpression:\n                var parenthesizedExpression = node;\n                return this.evaluateNode(parenthesizedExpression.expression);\n            case ts__default.SyntaxKind.TypeAssertionExpression:\n                var typeAssertion = node;\n                return this.evaluateNode(typeAssertion.expression);\n            case ts__default.SyntaxKind.PrefixUnaryExpression:\n                var prefixUnaryExpression = node;\n                var operand = this.evaluateNode(prefixUnaryExpression.operand);\n                if (isDefined(operand) && isPrimitive(operand)) {\n                    switch (prefixUnaryExpression.operator) {\n                        case ts__default.SyntaxKind.PlusToken:\n                            return +operand;\n                        case ts__default.SyntaxKind.MinusToken:\n                            return -operand;\n                        case ts__default.SyntaxKind.TildeToken:\n                            return ~operand;\n                        case ts__default.SyntaxKind.ExclamationToken:\n                            return !operand;\n                    }\n                }\n                var operatorText = void 0;\n                switch (prefixUnaryExpression.operator) {\n                    case ts__default.SyntaxKind.PlusToken:\n                        operatorText = '+';\n                        break;\n                    case ts__default.SyntaxKind.MinusToken:\n                        operatorText = '-';\n                        break;\n                    case ts__default.SyntaxKind.TildeToken:\n                        operatorText = '~';\n                        break;\n                    case ts__default.SyntaxKind.ExclamationToken:\n                        operatorText = '!';\n                        break;\n                    default:\n                        return undefined;\n                }\n                return recordEntry({ __symbolic: 'pre', operator: operatorText, operand: operand }, node);\n            case ts__default.SyntaxKind.BinaryExpression:\n                var binaryExpression = node;\n                var left = this.evaluateNode(binaryExpression.left);\n                var right = this.evaluateNode(binaryExpression.right);\n                if (isDefined(left) && isDefined(right)) {\n                    if (isPrimitive(left) && isPrimitive(right))\n                        switch (binaryExpression.operatorToken.kind) {\n                            case ts__default.SyntaxKind.BarBarToken:\n                                return left || right;\n                            case ts__default.SyntaxKind.AmpersandAmpersandToken:\n                                return left && right;\n                            case ts__default.SyntaxKind.AmpersandToken:\n                                return left & right;\n                            case ts__default.SyntaxKind.BarToken:\n                                return left | right;\n                            case ts__default.SyntaxKind.CaretToken:\n                                return left ^ right;\n                            case ts__default.SyntaxKind.EqualsEqualsToken:\n                                return left == right;\n                            case ts__default.SyntaxKind.ExclamationEqualsToken:\n                                return left != right;\n                            case ts__default.SyntaxKind.EqualsEqualsEqualsToken:\n                                return left === right;\n                            case ts__default.SyntaxKind.ExclamationEqualsEqualsToken:\n                                return left !== right;\n                            case ts__default.SyntaxKind.LessThanToken:\n                                return left < right;\n                            case ts__default.SyntaxKind.GreaterThanToken:\n                                return left > right;\n                            case ts__default.SyntaxKind.LessThanEqualsToken:\n                                return left <= right;\n                            case ts__default.SyntaxKind.GreaterThanEqualsToken:\n                                return left >= right;\n                            case ts__default.SyntaxKind.LessThanLessThanToken:\n                                return left << right;\n                            case ts__default.SyntaxKind.GreaterThanGreaterThanToken:\n                                return left >> right;\n                            case ts__default.SyntaxKind.GreaterThanGreaterThanGreaterThanToken:\n                                return left >>> right;\n                            case ts__default.SyntaxKind.PlusToken:\n                                return left + right;\n                            case ts__default.SyntaxKind.MinusToken:\n                                return left - right;\n                            case ts__default.SyntaxKind.AsteriskToken:\n                                return left * right;\n                            case ts__default.SyntaxKind.SlashToken:\n                                return left / right;\n                            case ts__default.SyntaxKind.PercentToken:\n                                return left % right;\n                        }\n                    return recordEntry({\n                        __symbolic: 'binop',\n                        operator: binaryExpression.operatorToken.getText(),\n                        left: left,\n                        right: right\n                    }, node);\n                }\n                break;\n            case ts__default.SyntaxKind.ConditionalExpression:\n                var conditionalExpression = node;\n                var condition = this.evaluateNode(conditionalExpression.condition);\n                var thenExpression = this.evaluateNode(conditionalExpression.whenTrue);\n                var elseExpression = this.evaluateNode(conditionalExpression.whenFalse);\n                if (isPrimitive(condition)) {\n                    return condition ? thenExpression : elseExpression;\n                }\n                return recordEntry({ __symbolic: 'if', condition: condition, thenExpression: thenExpression, elseExpression: elseExpression }, node);\n            case ts__default.SyntaxKind.FunctionExpression:\n            case ts__default.SyntaxKind.ArrowFunction:\n                return recordEntry(errorSymbol('Function call not supported', node), node);\n            case ts__default.SyntaxKind.TaggedTemplateExpression:\n                return recordEntry(errorSymbol('Tagged template expressions are not supported in metadata', node), node);\n            case ts__default.SyntaxKind.TemplateExpression:\n                var templateExpression = node;\n                if (this.isFoldable(node)) {\n                    return templateExpression.templateSpans.reduce(function (previous, current) { return previous + _this.evaluateNode(current.expression) +\n                        _this.evaluateNode(current.literal); }, this.evaluateNode(templateExpression.head));\n                }\n                else {\n                    return templateExpression.templateSpans.reduce(function (previous, current) {\n                        var expr = _this.evaluateNode(current.expression);\n                        var literal = _this.evaluateNode(current.literal);\n                        if (isFoldableError(expr))\n                            return expr;\n                        if (isFoldableError(literal))\n                            return literal;\n                        if (typeof previous === 'string' && typeof expr === 'string' &&\n                            typeof literal === 'string') {\n                            return previous + expr + literal;\n                        }\n                        var result = expr;\n                        if (previous !== '') {\n                            result = { __symbolic: 'binop', operator: '+', left: previous, right: expr };\n                        }\n                        if (literal != '') {\n                            result = { __symbolic: 'binop', operator: '+', left: result, right: literal };\n                        }\n                        return result;\n                    }, this.evaluateNode(templateExpression.head));\n                }\n            case ts__default.SyntaxKind.AsExpression:\n                var asExpression = node;\n                return this.evaluateNode(asExpression.expression);\n            case ts__default.SyntaxKind.ClassExpression:\n                return { __symbolic: 'class' };\n        }\n        return recordEntry(errorSymbol('Expression form not supported', node), node);\n    };\n    return Evaluator;\n}());\nexports.Evaluator = Evaluator;\nfunction isPropertyAssignment(node) {\n    return node.kind == ts__default.SyntaxKind.PropertyAssignment;\n}\nvar empty = ts__default.createNodeArray();\nfunction arrayOrEmpty(v) {\n    return v || empty;\n}\n\n});\n\nvar symbols$2 = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar Symbols = (function () {\n    function Symbols(sourceFile) {\n        this.sourceFile = sourceFile;\n        this.references = new Map();\n    }\n    Symbols.prototype.resolve = function (name, preferReference) {\n        return (preferReference && this.references.get(name)) || this.symbols.get(name);\n    };\n    Symbols.prototype.define = function (name, value) { this.symbols.set(name, value); };\n    Symbols.prototype.defineReference = function (name, value) {\n        this.references.set(name, value);\n    };\n    Symbols.prototype.has = function (name) { return this.symbols.has(name); };\n    Object.defineProperty(Symbols.prototype, \"symbols\", {\n        get: function () {\n            var result = this._symbols;\n            if (!result) {\n                result = this._symbols = new Map();\n                populateBuiltins(result);\n                this.buildImports();\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Symbols.prototype.buildImports = function () {\n        var _this = this;\n        var symbols = this._symbols;\n        // Collect the imported symbols into this.symbols\n        var stripQuotes = function (s) { return s.replace(/^['\"]|['\"]$/g, ''); };\n        var visit = function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ImportEqualsDeclaration:\n                    var importEqualsDeclaration = node;\n                    if (importEqualsDeclaration.moduleReference.kind ===\n                        ts__default.SyntaxKind.ExternalModuleReference) {\n                        var externalReference = importEqualsDeclaration.moduleReference;\n                        if (externalReference.expression) {\n                            // An `import <identifier> = require(<module-specifier>);\n                            if (!externalReference.expression.parent) {\n                                // The `parent` field of a node is set by the TypeScript binder (run as\n                                // part of the type checker). Setting it here allows us to call `getText()`\n                                // even if the `SourceFile` was not type checked (which looks for `SourceFile`\n                                // in the parent chain). This doesn't damage the node as the binder unconditionally\n                                // sets the parent.\n                                externalReference.expression.parent = externalReference;\n                                externalReference.parent = _this.sourceFile;\n                            }\n                            var from_1 = stripQuotes(externalReference.expression.getText());\n                            symbols.set(importEqualsDeclaration.name.text, { __symbolic: 'reference', module: from_1 });\n                            break;\n                        }\n                    }\n                    symbols.set(importEqualsDeclaration.name.text, { __symbolic: 'error', message: \"Unsupported import syntax\" });\n                    break;\n                case ts__default.SyntaxKind.ImportDeclaration:\n                    var importDecl = node;\n                    if (!importDecl.importClause) {\n                        // An `import <module-specifier>` clause which does not bring symbols into scope.\n                        break;\n                    }\n                    if (!importDecl.moduleSpecifier.parent) {\n                        // See note above in the `ImportEqualDeclaration` case.\n                        importDecl.moduleSpecifier.parent = importDecl;\n                        importDecl.parent = _this.sourceFile;\n                    }\n                    var from = stripQuotes(importDecl.moduleSpecifier.getText());\n                    if (importDecl.importClause.name) {\n                        // An `import <identifier> form <module-specifier>` clause. Record the defualt symbol.\n                        symbols.set(importDecl.importClause.name.text, { __symbolic: 'reference', module: from, default: true });\n                    }\n                    var bindings = importDecl.importClause.namedBindings;\n                    if (bindings) {\n                        switch (bindings.kind) {\n                            case ts__default.SyntaxKind.NamedImports:\n                                // An `import { [<identifier> [, <identifier>] } from <module-specifier>` clause\n                                for (var _i = 0, _a = bindings.elements; _i < _a.length; _i++) {\n                                    var binding = _a[_i];\n                                    symbols.set(binding.name.text, {\n                                        __symbolic: 'reference',\n                                        module: from,\n                                        name: binding.propertyName ? binding.propertyName.text : binding.name.text\n                                    });\n                                }\n                                break;\n                            case ts__default.SyntaxKind.NamespaceImport:\n                                // An `input * as <identifier> from <module-specifier>` clause.\n                                symbols.set(bindings.name.text, { __symbolic: 'reference', module: from });\n                                break;\n                        }\n                    }\n                    break;\n            }\n            ts__default.forEachChild(node, visit);\n        };\n        if (this.sourceFile) {\n            ts__default.forEachChild(this.sourceFile, visit);\n        }\n    };\n    return Symbols;\n}());\nexports.Symbols = Symbols;\nfunction populateBuiltins(symbols) {\n    // From lib.core.d.ts (all \"define const\")\n    ['Object', 'Function', 'String', 'Number', 'Array', 'Boolean', 'Map', 'NaN', 'Infinity', 'Math',\n        'Date', 'RegExp', 'Error', 'Error', 'EvalError', 'RangeError', 'ReferenceError', 'SyntaxError',\n        'TypeError', 'URIError', 'JSON', 'ArrayBuffer', 'DataView', 'Int8Array', 'Uint8Array',\n        'Uint8ClampedArray', 'Uint16Array', 'Int16Array', 'Int32Array', 'Uint32Array', 'Float32Array',\n        'Float64Array']\n        .forEach(function (name) { return symbols.set(name, { __symbolic: 'reference', name: name }); });\n}\n\n});\n\nvar collector = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign = (commonjsGlobal && commonjsGlobal.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\nvar isStatic = function (node) { return ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Static; };\n/**\n * Collect decorator metadata from a TypeScript module.\n */\nvar MetadataCollector = (function () {\n    function MetadataCollector(options) {\n        if (options === void 0) { options = {}; }\n        this.options = options;\n    }\n    /**\n     * Returns a JSON.stringify friendly form describing the decorators of the exported classes from\n     * the source file that is expected to correspond to a module.\n     */\n    MetadataCollector.prototype.getMetadata = function (sourceFile, strict, substituteExpression) {\n        var _this = this;\n        if (strict === void 0) { strict = false; }\n        var locals = new symbols$2.Symbols(sourceFile);\n        var nodeMap = new Map();\n        var composedSubstituter = substituteExpression && this.options.substituteExpression ?\n            function (value, node) {\n                return _this.options.substituteExpression(substituteExpression(value, node), node);\n            } :\n            substituteExpression;\n        var evaluatorOptions = substituteExpression ? __assign({}, this.options, { substituteExpression: composedSubstituter }) :\n            this.options;\n        var metadata;\n        var evaluator$$1 = new evaluator.Evaluator(locals, nodeMap, evaluatorOptions, function (name, value) {\n            if (!metadata)\n                metadata = {};\n            metadata[name] = value;\n        });\n        var exports = undefined;\n        function objFromDecorator(decoratorNode) {\n            return evaluator$$1.evaluateNode(decoratorNode.expression);\n        }\n        function recordEntry(entry, node) {\n            nodeMap.set(entry, node);\n            return entry;\n        }\n        function errorSym(message, node, context) {\n            return evaluator.errorSymbol(message, node, context, sourceFile);\n        }\n        function maybeGetSimpleFunction(functionDeclaration) {\n            if (functionDeclaration.name && functionDeclaration.name.kind == ts__default.SyntaxKind.Identifier) {\n                var nameNode = functionDeclaration.name;\n                var functionName = nameNode.text;\n                var functionBody = functionDeclaration.body;\n                if (functionBody && functionBody.statements.length == 1) {\n                    var statement = functionBody.statements[0];\n                    if (statement.kind === ts__default.SyntaxKind.ReturnStatement) {\n                        var returnStatement = statement;\n                        if (returnStatement.expression) {\n                            var func = {\n                                __symbolic: 'function',\n                                parameters: namesOf(functionDeclaration.parameters),\n                                value: evaluator$$1.evaluateNode(returnStatement.expression)\n                            };\n                            if (functionDeclaration.parameters.some(function (p) { return p.initializer != null; })) {\n                                func.defaults = functionDeclaration.parameters.map(function (p) { return p.initializer && evaluator$$1.evaluateNode(p.initializer); });\n                            }\n                            return recordEntry({ func: func, name: functionName }, functionDeclaration);\n                        }\n                    }\n                }\n            }\n        }\n        function classMetadataOf(classDeclaration) {\n            var result = { __symbolic: 'class' };\n            function getDecorators(decorators) {\n                if (decorators && decorators.length)\n                    return decorators.map(function (decorator) { return objFromDecorator(decorator); });\n                return undefined;\n            }\n            function referenceFrom(node) {\n                var result = evaluator$$1.evaluateNode(node);\n                if (schema.isMetadataError(result) || schema.isMetadataSymbolicReferenceExpression(result) ||\n                    schema.isMetadataSymbolicSelectExpression(result)) {\n                    return result;\n                }\n                else {\n                    return errorSym('Symbol reference expected', node);\n                }\n            }\n            // Add class parents\n            if (classDeclaration.heritageClauses) {\n                classDeclaration.heritageClauses.forEach(function (hc) {\n                    if (hc.token === ts__default.SyntaxKind.ExtendsKeyword && hc.types) {\n                        hc.types.forEach(function (type) { return result.extends = referenceFrom(type.expression); });\n                    }\n                });\n            }\n            // Add arity if the type is generic\n            var typeParameters = classDeclaration.typeParameters;\n            if (typeParameters && typeParameters.length) {\n                result.arity = typeParameters.length;\n            }\n            // Add class decorators\n            if (classDeclaration.decorators) {\n                result.decorators = getDecorators(classDeclaration.decorators);\n            }\n            // member decorators\n            var members = null;\n            function recordMember(name, metadata) {\n                if (!members)\n                    members = {};\n                var data = members.hasOwnProperty(name) ? members[name] : [];\n                data.push(metadata);\n                members[name] = data;\n            }\n            // static member\n            var statics = null;\n            function recordStaticMember(name, value) {\n                if (!statics)\n                    statics = {};\n                statics[name] = value;\n            }\n            for (var _i = 0, _a = classDeclaration.members; _i < _a.length; _i++) {\n                var member = _a[_i];\n                var isConstructor = false;\n                switch (member.kind) {\n                    case ts__default.SyntaxKind.Constructor:\n                    case ts__default.SyntaxKind.MethodDeclaration:\n                        isConstructor = member.kind === ts__default.SyntaxKind.Constructor;\n                        var method = member;\n                        if (isStatic(method)) {\n                            var maybeFunc = maybeGetSimpleFunction(method);\n                            if (maybeFunc) {\n                                recordStaticMember(maybeFunc.name, maybeFunc.func);\n                            }\n                            continue;\n                        }\n                        var methodDecorators = getDecorators(method.decorators);\n                        var parameters = method.parameters;\n                        var parameterDecoratorData = [];\n                        var parametersData = [];\n                        var hasDecoratorData = false;\n                        var hasParameterData = false;\n                        for (var _b = 0, parameters_1 = parameters; _b < parameters_1.length; _b++) {\n                            var parameter = parameters_1[_b];\n                            var parameterData = getDecorators(parameter.decorators);\n                            parameterDecoratorData.push(parameterData);\n                            hasDecoratorData = hasDecoratorData || !!parameterData;\n                            if (isConstructor) {\n                                if (parameter.type) {\n                                    parametersData.push(referenceFrom(parameter.type));\n                                }\n                                else {\n                                    parametersData.push(null);\n                                }\n                                hasParameterData = true;\n                            }\n                        }\n                        var data = { __symbolic: isConstructor ? 'constructor' : 'method' };\n                        var name_1 = isConstructor ? '__ctor__' : evaluator$$1.nameOf(member.name);\n                        if (methodDecorators) {\n                            data.decorators = methodDecorators;\n                        }\n                        if (hasDecoratorData) {\n                            data.parameterDecorators = parameterDecoratorData;\n                        }\n                        if (hasParameterData) {\n                            data.parameters = parametersData;\n                        }\n                        if (!schema.isMetadataError(name_1)) {\n                            recordMember(name_1, data);\n                        }\n                        break;\n                    case ts__default.SyntaxKind.PropertyDeclaration:\n                    case ts__default.SyntaxKind.GetAccessor:\n                    case ts__default.SyntaxKind.SetAccessor:\n                        var property = member;\n                        if (isStatic(property)) {\n                            var name_2 = evaluator$$1.nameOf(property.name);\n                            if (!schema.isMetadataError(name_2)) {\n                                if (property.initializer) {\n                                    var value = evaluator$$1.evaluateNode(property.initializer);\n                                    recordStaticMember(name_2, value);\n                                }\n                                else {\n                                    recordStaticMember(name_2, errorSym('Variable not initialized', property.name));\n                                }\n                            }\n                        }\n                        var propertyDecorators = getDecorators(property.decorators);\n                        if (propertyDecorators) {\n                            var name_3 = evaluator$$1.nameOf(property.name);\n                            if (!schema.isMetadataError(name_3)) {\n                                recordMember(name_3, { __symbolic: 'property', decorators: propertyDecorators });\n                            }\n                        }\n                        break;\n                }\n            }\n            if (members) {\n                result.members = members;\n            }\n            if (statics) {\n                result.statics = statics;\n            }\n            return recordEntry(result, classDeclaration);\n        }\n        // Collect all exported symbols from an exports clause.\n        var exportMap = new Map();\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ExportDeclaration:\n                    var exportDeclaration = node;\n                    var moduleSpecifier = exportDeclaration.moduleSpecifier, exportClause = exportDeclaration.exportClause;\n                    if (!moduleSpecifier) {\n                        // If there is a module specifier there is also an exportClause\n                        exportClause.elements.forEach(function (spec) {\n                            var exportedAs = spec.name.text;\n                            var name = (spec.propertyName || spec.name).text;\n                            exportMap.set(name, exportedAs);\n                        });\n                    }\n            }\n        });\n        var isExport = function (node) {\n            return sourceFile.isDeclarationFile || ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Export;\n        };\n        var isExportedIdentifier = function (identifier) {\n            return identifier && exportMap.has(identifier.text);\n        };\n        var isExported = function (node) {\n            return isExport(node) || isExportedIdentifier(node.name);\n        };\n        var exportedIdentifierName = function (identifier) {\n            return identifier && (exportMap.get(identifier.text) || identifier.text);\n        };\n        var exportedName = function (node) { return exportedIdentifierName(node.name); };\n        // Predeclare classes and functions\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ClassDeclaration:\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        var className = classDeclaration.name.text;\n                        if (isExported(classDeclaration)) {\n                            locals.define(className, { __symbolic: 'reference', name: exportedName(classDeclaration) });\n                        }\n                        else {\n                            locals.define(className, errorSym('Reference to non-exported class', node, { className: className }));\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.InterfaceDeclaration:\n                    var interfaceDeclaration = node;\n                    if (interfaceDeclaration.name) {\n                        var interfaceName = interfaceDeclaration.name.text;\n                        // All references to interfaces should be converted to references to `any`.\n                        locals.define(interfaceName, { __symbolic: 'reference', name: 'any' });\n                    }\n                    break;\n                case ts__default.SyntaxKind.FunctionDeclaration:\n                    var functionDeclaration = node;\n                    if (!isExported(functionDeclaration)) {\n                        // Report references to this function as an error.\n                        var nameNode = functionDeclaration.name;\n                        if (nameNode && nameNode.text) {\n                            locals.define(nameNode.text, errorSym('Reference to a non-exported function', nameNode, { name: nameNode.text }));\n                        }\n                    }\n                    break;\n            }\n        });\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ExportDeclaration:\n                    // Record export declarations\n                    var exportDeclaration = node;\n                    var moduleSpecifier = exportDeclaration.moduleSpecifier, exportClause = exportDeclaration.exportClause;\n                    if (!moduleSpecifier) {\n                        // no module specifier -> export {propName as name};\n                        if (exportClause) {\n                            exportClause.elements.forEach(function (spec) {\n                                var name = spec.name.text;\n                                // If the symbol was not already exported, export a reference since it is a\n                                // reference to an import\n                                if (!metadata || !metadata[name]) {\n                                    var propNode = spec.propertyName || spec.name;\n                                    var value = evaluator$$1.evaluateNode(propNode);\n                                    if (!metadata)\n                                        metadata = {};\n                                    metadata[name] = recordEntry(value, node);\n                                }\n                            });\n                        }\n                    }\n                    if (moduleSpecifier && moduleSpecifier.kind == ts__default.SyntaxKind.StringLiteral) {\n                        // Ignore exports that don't have string literals as exports.\n                        // This is allowed by the syntax but will be flagged as an error by the type checker.\n                        var from = moduleSpecifier.text;\n                        var moduleExport = { from: from };\n                        if (exportClause) {\n                            moduleExport.export = exportClause.elements.map(function (spec) { return spec.propertyName ? { name: spec.propertyName.text, as: spec.name.text } :\n                                spec.name.text; });\n                        }\n                        if (!exports)\n                            exports = [];\n                        exports.push(moduleExport);\n                    }\n                    break;\n                case ts__default.SyntaxKind.ClassDeclaration:\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        if (isExported(classDeclaration)) {\n                            var name_4 = exportedName(classDeclaration);\n                            if (name_4) {\n                                if (!metadata)\n                                    metadata = {};\n                                metadata[name_4] = classMetadataOf(classDeclaration);\n                            }\n                        }\n                    }\n                    // Otherwise don't record metadata for the class.\n                    break;\n                case ts__default.SyntaxKind.TypeAliasDeclaration:\n                    var typeDeclaration = node;\n                    if (typeDeclaration.name && isExported(typeDeclaration)) {\n                        var name_5 = exportedName(typeDeclaration);\n                        if (name_5) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_5] = { __symbolic: 'interface' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.InterfaceDeclaration:\n                    var interfaceDeclaration = node;\n                    if (interfaceDeclaration.name && isExported(interfaceDeclaration)) {\n                        var name_6 = exportedName(interfaceDeclaration);\n                        if (name_6) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_6] = { __symbolic: 'interface' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.FunctionDeclaration:\n                    // Record functions that return a single value. Record the parameter\n                    // names substitution will be performed by the StaticReflector.\n                    var functionDeclaration = node;\n                    if (isExported(functionDeclaration) && functionDeclaration.name) {\n                        var name_7 = exportedName(functionDeclaration);\n                        var maybeFunc = maybeGetSimpleFunction(functionDeclaration);\n                        if (name_7) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_7] =\n                                maybeFunc ? recordEntry(maybeFunc.func, node) : { __symbolic: 'function' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.EnumDeclaration:\n                    var enumDeclaration = node;\n                    if (isExported(enumDeclaration)) {\n                        var enumValueHolder = {};\n                        var enumName = exportedName(enumDeclaration);\n                        var nextDefaultValue = 0;\n                        var writtenMembers = 0;\n                        for (var _i = 0, _a = enumDeclaration.members; _i < _a.length; _i++) {\n                            var member = _a[_i];\n                            var enumValue = void 0;\n                            if (!member.initializer) {\n                                enumValue = nextDefaultValue;\n                            }\n                            else {\n                                enumValue = evaluator$$1.evaluateNode(member.initializer);\n                            }\n                            var name_8 = undefined;\n                            if (member.name.kind == ts__default.SyntaxKind.Identifier) {\n                                var identifier = member.name;\n                                name_8 = identifier.text;\n                                enumValueHolder[name_8] = enumValue;\n                                writtenMembers++;\n                            }\n                            if (typeof enumValue === 'number') {\n                                nextDefaultValue = enumValue + 1;\n                            }\n                            else if (name_8) {\n                                nextDefaultValue = {\n                                    __symbolic: 'binary',\n                                    operator: '+',\n                                    left: {\n                                        __symbolic: 'select',\n                                        expression: recordEntry({ __symbolic: 'reference', name: enumName }, node), name: name_8\n                                    }\n                                };\n                            }\n                            else {\n                                nextDefaultValue =\n                                    recordEntry(errorSym('Unsuppported enum member name', member.name), node);\n                            }\n                        }\n                        if (writtenMembers) {\n                            if (enumName) {\n                                if (!metadata)\n                                    metadata = {};\n                                metadata[enumName] = recordEntry(enumValueHolder, node);\n                            }\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.VariableStatement:\n                    var variableStatement = node;\n                    var _loop_1 = function (variableDeclaration) {\n                        if (variableDeclaration.name.kind == ts__default.SyntaxKind.Identifier) {\n                            var nameNode = variableDeclaration.name;\n                            var varValue = void 0;\n                            if (variableDeclaration.initializer) {\n                                varValue = evaluator$$1.evaluateNode(variableDeclaration.initializer);\n                            }\n                            else {\n                                varValue = recordEntry(errorSym('Variable not initialized', nameNode), nameNode);\n                            }\n                            var exported = false;\n                            if (isExport(variableStatement) || isExport(variableDeclaration) ||\n                                isExportedIdentifier(nameNode)) {\n                                var name_9 = exportedIdentifierName(nameNode);\n                                if (name_9) {\n                                    if (!metadata)\n                                        metadata = {};\n                                    metadata[name_9] = recordEntry(varValue, node);\n                                }\n                                exported = true;\n                            }\n                            if (typeof varValue == 'string' || typeof varValue == 'number' ||\n                                typeof varValue == 'boolean') {\n                                locals.define(nameNode.text, varValue);\n                                if (exported) {\n                                    locals.defineReference(nameNode.text, { __symbolic: 'reference', name: nameNode.text });\n                                }\n                            }\n                            else if (!exported) {\n                                if (varValue && !schema.isMetadataError(varValue)) {\n                                    locals.define(nameNode.text, recordEntry(varValue, node));\n                                }\n                                else {\n                                    locals.define(nameNode.text, recordEntry(errorSym('Reference to a local symbol', nameNode, { name: nameNode.text }), node));\n                                }\n                            }\n                        }\n                        else {\n                            // Destructuring (or binding) declarations are not supported,\n                            // var {<identifier>[, <identifier>]+} = <expression>;\n                            //   or\n                            // var [<identifier>[, <identifier}+] = <expression>;\n                            // are not supported.\n                            var report_1 = function (nameNode) {\n                                switch (nameNode.kind) {\n                                    case ts__default.SyntaxKind.Identifier:\n                                        var name_10 = nameNode;\n                                        var varValue = errorSym('Destructuring not supported', name_10);\n                                        locals.define(name_10.text, varValue);\n                                        if (isExport(node)) {\n                                            if (!metadata)\n                                                metadata = {};\n                                            metadata[name_10.text] = varValue;\n                                        }\n                                        break;\n                                    case ts__default.SyntaxKind.BindingElement:\n                                        var bindingElement = nameNode;\n                                        report_1(bindingElement.name);\n                                        break;\n                                    case ts__default.SyntaxKind.ObjectBindingPattern:\n                                    case ts__default.SyntaxKind.ArrayBindingPattern:\n                                        var bindings = nameNode;\n                                        bindings.elements.forEach(report_1);\n                                        break;\n                                }\n                            };\n                            report_1(variableDeclaration.name);\n                        }\n                    };\n                    for (var _b = 0, _c = variableStatement.declarationList.declarations; _b < _c.length; _b++) {\n                        var variableDeclaration = _c[_b];\n                        _loop_1(variableDeclaration);\n                    }\n                    break;\n            }\n        });\n        if (metadata || exports) {\n            if (!metadata)\n                metadata = {};\n            else if (strict) {\n                validateMetadata(sourceFile, nodeMap, metadata);\n            }\n            var result = {\n                __symbolic: 'module',\n                version: this.options.version || schema.METADATA_VERSION, metadata: metadata\n            };\n            if (exports)\n                result.exports = exports;\n            return result;\n        }\n    };\n    return MetadataCollector;\n}());\nexports.MetadataCollector = MetadataCollector;\n// This will throw if the metadata entry given contains an error node.\nfunction validateMetadata(sourceFile, nodeMap, metadata) {\n    var locals = new Set(['Array', 'Object', 'Set', 'Map', 'string', 'number', 'any']);\n    function validateExpression(expression) {\n        if (!expression) {\n            return;\n        }\n        else if (Array.isArray(expression)) {\n            expression.forEach(validateExpression);\n        }\n        else if (typeof expression === 'object' && !expression.hasOwnProperty('__symbolic')) {\n            Object.getOwnPropertyNames(expression).forEach(function (v) { return validateExpression(expression[v]); });\n        }\n        else if (schema.isMetadataError(expression)) {\n            reportError(expression);\n        }\n        else if (schema.isMetadataGlobalReferenceExpression(expression)) {\n            if (!locals.has(expression.name)) {\n                var reference = metadata[expression.name];\n                if (reference) {\n                    validateExpression(reference);\n                }\n            }\n        }\n        else if (schema.isFunctionMetadata(expression)) {\n            validateFunction(expression);\n        }\n        else if (schema.isMetadataSymbolicExpression(expression)) {\n            switch (expression.__symbolic) {\n                case 'binary':\n                    var binaryExpression = expression;\n                    validateExpression(binaryExpression.left);\n                    validateExpression(binaryExpression.right);\n                    break;\n                case 'call':\n                case 'new':\n                    var callExpression = expression;\n                    validateExpression(callExpression.expression);\n                    if (callExpression.arguments)\n                        callExpression.arguments.forEach(validateExpression);\n                    break;\n                case 'index':\n                    var indexExpression = expression;\n                    validateExpression(indexExpression.expression);\n                    validateExpression(indexExpression.index);\n                    break;\n                case 'pre':\n                    var prefixExpression = expression;\n                    validateExpression(prefixExpression.operand);\n                    break;\n                case 'select':\n                    var selectExpression = expression;\n                    validateExpression(selectExpression.expression);\n                    break;\n                case 'spread':\n                    var spreadExpression = expression;\n                    validateExpression(spreadExpression.expression);\n                    break;\n                case 'if':\n                    var ifExpression = expression;\n                    validateExpression(ifExpression.condition);\n                    validateExpression(ifExpression.elseExpression);\n                    validateExpression(ifExpression.thenExpression);\n                    break;\n            }\n        }\n    }\n    function validateMember(classData, member) {\n        if (member.decorators) {\n            member.decorators.forEach(validateExpression);\n        }\n        if (schema.isMethodMetadata(member) && member.parameterDecorators) {\n            member.parameterDecorators.forEach(validateExpression);\n        }\n        // Only validate parameters of classes for which we know that are used with our DI\n        if (classData.decorators && schema.isConstructorMetadata(member) && member.parameters) {\n            member.parameters.forEach(validateExpression);\n        }\n    }\n    function validateClass(classData) {\n        if (classData.decorators) {\n            classData.decorators.forEach(validateExpression);\n        }\n        if (classData.members) {\n            Object.getOwnPropertyNames(classData.members)\n                .forEach(function (name) { return classData.members[name].forEach(function (m) { return validateMember(classData, m); }); });\n        }\n        if (classData.statics) {\n            Object.getOwnPropertyNames(classData.statics).forEach(function (name) {\n                var staticMember = classData.statics[name];\n                if (schema.isFunctionMetadata(staticMember)) {\n                    validateExpression(staticMember.value);\n                }\n                else {\n                    validateExpression(staticMember);\n                }\n            });\n        }\n    }\n    function validateFunction(functionDeclaration) {\n        if (functionDeclaration.value) {\n            var oldLocals = locals;\n            if (functionDeclaration.parameters) {\n                locals = new Set(oldLocals.values());\n                if (functionDeclaration.parameters)\n                    functionDeclaration.parameters.forEach(function (n) { return locals.add(n); });\n            }\n            validateExpression(functionDeclaration.value);\n            locals = oldLocals;\n        }\n    }\n    function shouldReportNode(node) {\n        if (node) {\n            var nodeStart = node.getStart();\n            return !(node.pos != nodeStart &&\n                sourceFile.text.substring(node.pos, nodeStart).indexOf('@dynamic') >= 0);\n        }\n        return true;\n    }\n    function reportError(error) {\n        var node = nodeMap.get(error);\n        if (shouldReportNode(node)) {\n            var lineInfo = error.line != undefined ?\n                error.character != undefined ? \":\" + (error.line + 1) + \":\" + (error.character + 1) :\n                    \":\" + (error.line + 1) :\n                '';\n            throw new Error(\"\" + sourceFile.fileName + lineInfo + \": Metadata collected contains an error that will be reported at runtime: \" + expandedMessage(error) + \".\\n  \" + JSON.stringify(error));\n        }\n    }\n    Object.getOwnPropertyNames(metadata).forEach(function (name) {\n        var entry = metadata[name];\n        try {\n            if (schema.isClassMetadata(entry)) {\n                validateClass(entry);\n            }\n        }\n        catch (e) {\n            var node = nodeMap.get(entry);\n            if (shouldReportNode(node)) {\n                if (node) {\n                    var _a = sourceFile.getLineAndCharacterOfPosition(node.getStart()), line = _a.line, character = _a.character;\n                    throw new Error(sourceFile.fileName + \":\" + (line + 1) + \":\" + (character + 1) + \": Error encountered in metadata generated for exported symbol '\" + name + \"': \\n \" + e.message);\n                }\n                throw new Error(\"Error encountered in metadata generated for exported symbol \" + name + \": \\n \" + e.message);\n            }\n        }\n    });\n}\n// Collect parameter names from a function.\nfunction namesOf(parameters) {\n    var result = [];\n    function addNamesOf(name) {\n        if (name.kind == ts__default.SyntaxKind.Identifier) {\n            var identifier = name;\n            result.push(identifier.text);\n        }\n        else {\n            var bindingPattern = name;\n            for (var _i = 0, _a = bindingPattern.elements; _i < _a.length; _i++) {\n                var element = _a[_i];\n                var name_11 = element.name;\n                if (name_11) {\n                    addNamesOf(name_11);\n                }\n            }\n        }\n    }\n    for (var _i = 0, parameters_2 = parameters; _i < parameters_2.length; _i++) {\n        var parameter = parameters_2[_i];\n        addNamesOf(parameter.name);\n    }\n    return result;\n}\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n    }\n    return error.message;\n}\n\n});\n\nvar bundler = createCommonjsModule(function (module, exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\n\n// The character set used to produce private names.\nvar PRIVATE_NAME_CHARS = 'abcdefghijklmnopqrstuvwxyz';\nvar MetadataBundler = (function () {\n    function MetadataBundler(root, importAs, host) {\n        this.root = root;\n        this.importAs = importAs;\n        this.host = host;\n        this.symbolMap = new Map();\n        this.metadataCache = new Map();\n        this.exports = new Map();\n        this.rootModule = \"./\" + path__default.basename(root);\n    }\n    MetadataBundler.prototype.getMetadataBundle = function () {\n        // Export the root module. This also collects the transitive closure of all values referenced by\n        // the exports.\n        var exportedSymbols = this.exportAll(this.rootModule);\n        this.canonicalizeSymbols(exportedSymbols);\n        // TODO: exports? e.g. a module re-exports a symbol from another bundle\n        var metadata = this.getEntries(exportedSymbols);\n        var privates = Array.from(this.symbolMap.values())\n            .filter(function (s) { return s.referenced && s.isPrivate; })\n            .map(function (s) { return ({\n            privateName: s.privateName,\n            name: s.declaration.name,\n            module: s.declaration.module\n        }); });\n        var origins = Array.from(this.symbolMap.values())\n            .filter(function (s) { return s.referenced && !s.reexport; })\n            .reduce(function (p, s) {\n            p[s.isPrivate ? s.privateName : s.name] = s.declaration.module;\n            return p;\n        }, {});\n        var exports = this.getReExports(exportedSymbols);\n        return {\n            metadata: {\n                __symbolic: 'module',\n                version: schema.METADATA_VERSION,\n                exports: exports.length ? exports : undefined, metadata: metadata, origins: origins,\n                importAs: this.importAs\n            },\n            privates: privates\n        };\n    };\n    MetadataBundler.resolveModule = function (importName, from) {\n        return resolveModule(importName, from);\n    };\n    MetadataBundler.prototype.getMetadata = function (moduleName) {\n        var result = this.metadataCache.get(moduleName);\n        if (!result) {\n            if (moduleName.startsWith('.')) {\n                var fullModuleName = resolveModule(moduleName, this.root);\n                result = this.host.getMetadataFor(fullModuleName);\n            }\n            this.metadataCache.set(moduleName, result);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.exportAll = function (moduleName) {\n        var _this = this;\n        var module = this.getMetadata(moduleName);\n        var result = this.exports.get(moduleName);\n        if (result) {\n            return result;\n        }\n        result = [];\n        var exportSymbol = function (exportedSymbol, exportAs) {\n            var symbol = _this.symbolOf(moduleName, exportAs);\n            result.push(symbol);\n            exportedSymbol.reexportedAs = symbol;\n            symbol.exports = exportedSymbol;\n        };\n        // Export all the symbols defined in this module.\n        if (module && module.metadata) {\n            for (var key in module.metadata) {\n                var data = module.metadata[key];\n                if (schema.isMetadataImportedSymbolReferenceExpression(data)) {\n                    // This is a re-export of an imported symbol. Record this as a re-export.\n                    var exportFrom = resolveModule(data.module, moduleName);\n                    this.exportAll(exportFrom);\n                    var symbol = this.symbolOf(exportFrom, data.name);\n                    exportSymbol(symbol, key);\n                }\n                else {\n                    // Record that this symbol is exported by this module.\n                    result.push(this.symbolOf(moduleName, key));\n                }\n            }\n        }\n        // Export all the re-exports from this module\n        if (module && module.exports) {\n            for (var _i = 0, _a = module.exports; _i < _a.length; _i++) {\n                var exportDeclaration = _a[_i];\n                var exportFrom = resolveModule(exportDeclaration.from, moduleName);\n                // Record all the exports from the module even if we don't use it directly.\n                var exportedSymbols = this.exportAll(exportFrom);\n                if (exportDeclaration.export) {\n                    // Re-export all the named exports from a module.\n                    for (var _b = 0, _c = exportDeclaration.export; _b < _c.length; _b++) {\n                        var exportItem = _c[_b];\n                        var name_1 = typeof exportItem == 'string' ? exportItem : exportItem.name;\n                        var exportAs = typeof exportItem == 'string' ? exportItem : exportItem.as;\n                        var symbol = this.symbolOf(exportFrom, name_1);\n                        if (exportedSymbols && exportedSymbols.length == 1 && exportedSymbols[0].reexport &&\n                            exportedSymbols[0].name == '*') {\n                            // This is a named export from a module we have no metadata about. Record the named\n                            // export as a re-export.\n                            symbol.reexport = true;\n                        }\n                        exportSymbol(this.symbolOf(exportFrom, name_1), exportAs);\n                    }\n                }\n                else {\n                    // Re-export all the symbols from the module\n                    var exportedSymbols_1 = this.exportAll(exportFrom);\n                    for (var _d = 0, exportedSymbols_2 = exportedSymbols_1; _d < exportedSymbols_2.length; _d++) {\n                        var exportedSymbol = exportedSymbols_2[_d];\n                        var name_2 = exportedSymbol.name;\n                        exportSymbol(exportedSymbol, name_2);\n                    }\n                }\n            }\n        }\n        if (!module) {\n            // If no metadata is found for this import then it is considered external to the\n            // library and should be recorded as a re-export in the final metadata if it is\n            // eventually re-exported.\n            var symbol = this.symbolOf(moduleName, '*');\n            symbol.reexport = true;\n            result.push(symbol);\n        }\n        this.exports.set(moduleName, result);\n        return result;\n    };\n    /**\n     * Fill in the canonicalSymbol which is the symbol that should be imported by factories.\n     * The canonical symbol is the one exported by the index file for the bundle or definition\n     * symbol for private symbols that are not exported by bundle index.\n     */\n    MetadataBundler.prototype.canonicalizeSymbols = function (exportedSymbols) {\n        var symbols = Array.from(this.symbolMap.values());\n        this.exported = new Set(exportedSymbols);\n        symbols.forEach(this.canonicalizeSymbol, this);\n    };\n    MetadataBundler.prototype.canonicalizeSymbol = function (symbol) {\n        var rootExport = getRootExport(symbol);\n        var declaration = getSymbolDeclaration(symbol);\n        var isPrivate = !this.exported.has(rootExport);\n        var canonicalSymbol = isPrivate ? declaration : rootExport;\n        symbol.isPrivate = isPrivate;\n        symbol.declaration = declaration;\n        symbol.canonicalSymbol = canonicalSymbol;\n        symbol.reexport = declaration.reexport;\n    };\n    MetadataBundler.prototype.getEntries = function (exportedSymbols) {\n        var _this = this;\n        var result = {};\n        var exportedNames = new Set(exportedSymbols.map(function (s) { return s.name; }));\n        var privateName = 0;\n        function newPrivateName() {\n            while (true) {\n                var digits = [];\n                var index = privateName++;\n                var base = PRIVATE_NAME_CHARS;\n                while (!digits.length || index > 0) {\n                    digits.unshift(base[index % base.length]);\n                    index = Math.floor(index / base.length);\n                }\n                digits.unshift('\\u0275');\n                var result_1 = digits.join('');\n                if (!exportedNames.has(result_1))\n                    return result_1;\n            }\n        }\n        exportedSymbols.forEach(function (symbol) { return _this.convertSymbol(symbol); });\n        var symbolsMap = new Map();\n        Array.from(this.symbolMap.values()).forEach(function (symbol) {\n            if (symbol.referenced && !symbol.reexport) {\n                var name_3 = symbol.name;\n                var identifier = symbol.declaration.module + \":\" + symbol.declaration.name;\n                if (symbol.isPrivate && !symbol.privateName) {\n                    name_3 = newPrivateName();\n                    symbol.privateName = name_3;\n                }\n                if (symbolsMap.has(identifier)) {\n                    var names = symbolsMap.get(identifier);\n                    names.push(name_3);\n                }\n                else {\n                    symbolsMap.set(identifier, [name_3]);\n                }\n                result[name_3] = symbol.value;\n            }\n        });\n        // check for duplicated entries\n        symbolsMap.forEach(function (names, identifier) {\n            if (names.length > 1) {\n                var _a = identifier.split(':'), module_1 = _a[0], declaredName = _a[1];\n                // prefer the export that uses the declared name (if any)\n                var reference_1 = names.indexOf(declaredName);\n                if (reference_1 === -1) {\n                    reference_1 = 0;\n                }\n                // keep one entry and replace the others by references\n                names.forEach(function (name, i) {\n                    if (i !== reference_1) {\n                        result[name] = { __symbolic: 'reference', name: names[reference_1] };\n                    }\n                });\n            }\n        });\n        return result;\n    };\n    MetadataBundler.prototype.getReExports = function (exportedSymbols) {\n        var modules = new Map();\n        var exportAlls = new Set();\n        for (var _i = 0, exportedSymbols_3 = exportedSymbols; _i < exportedSymbols_3.length; _i++) {\n            var symbol = exportedSymbols_3[_i];\n            if (symbol.reexport) {\n                // symbol.declaration is guarenteed to be defined during the phase this method is called.\n                var declaration = symbol.declaration;\n                var module_2 = declaration.module;\n                if (declaration.name == '*') {\n                    // Reexport all the symbols.\n                    exportAlls.add(declaration.module);\n                }\n                else {\n                    // Re-export the symbol as the exported name.\n                    var entry = modules.get(module_2);\n                    if (!entry) {\n                        entry = [];\n                        modules.set(module_2, entry);\n                    }\n                    var as = symbol.name;\n                    var name_4 = declaration.name;\n                    entry.push({ name: name_4, as: as });\n                }\n            }\n        }\n        return Array.from(exportAlls.values()).map(function (from) { return ({ from: from }); }).concat(Array.from(modules.entries()).map(function (_a) {\n            var from = _a[0], exports = _a[1];\n            return ({ export: exports, from: from });\n        }));\n    };\n    MetadataBundler.prototype.convertSymbol = function (symbol) {\n        // canonicalSymbol is ensured to be defined before this is called.\n        var canonicalSymbol = symbol.canonicalSymbol;\n        if (!canonicalSymbol.referenced) {\n            canonicalSymbol.referenced = true;\n            // declaration is ensured to be definded before this method is called.\n            var declaration = canonicalSymbol.declaration;\n            var module_3 = this.getMetadata(declaration.module);\n            if (module_3) {\n                var value = module_3.metadata[declaration.name];\n                if (value && !declaration.name.startsWith('___')) {\n                    canonicalSymbol.value = this.convertEntry(declaration.module, value);\n                }\n            }\n        }\n    };\n    MetadataBundler.prototype.convertEntry = function (moduleName, value) {\n        if (schema.isClassMetadata(value)) {\n            return this.convertClass(moduleName, value);\n        }\n        if (schema.isFunctionMetadata(value)) {\n            return this.convertFunction(moduleName, value);\n        }\n        if (schema.isInterfaceMetadata(value)) {\n            return value;\n        }\n        return this.convertValue(moduleName, value);\n    };\n    MetadataBundler.prototype.convertClass = function (moduleName, value) {\n        var _this = this;\n        return {\n            __symbolic: 'class',\n            arity: value.arity,\n            extends: this.convertExpression(moduleName, value.extends),\n            decorators: value.decorators && value.decorators.map(function (d) { return _this.convertExpression(moduleName, d); }),\n            members: this.convertMembers(moduleName, value.members),\n            statics: value.statics && this.convertStatics(moduleName, value.statics)\n        };\n    };\n    MetadataBundler.prototype.convertMembers = function (moduleName, members) {\n        var _this = this;\n        var result = {};\n        for (var name_5 in members) {\n            var value = members[name_5];\n            result[name_5] = value.map(function (v) { return _this.convertMember(moduleName, v); });\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertMember = function (moduleName, member) {\n        var _this = this;\n        var result = { __symbolic: member.__symbolic };\n        result.decorators =\n            member.decorators && member.decorators.map(function (d) { return _this.convertExpression(moduleName, d); });\n        if (schema.isMethodMetadata(member)) {\n            result.parameterDecorators = member.parameterDecorators &&\n                member.parameterDecorators.map(function (d) { return d && d.map(function (p) { return _this.convertExpression(moduleName, p); }); });\n            if (schema.isConstructorMetadata(member)) {\n                if (member.parameters) {\n                    result.parameters =\n                        member.parameters.map(function (p) { return _this.convertExpression(moduleName, p); });\n                }\n            }\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertStatics = function (moduleName, statics) {\n        var result = {};\n        for (var key in statics) {\n            var value = statics[key];\n            result[key] = schema.isFunctionMetadata(value) ? this.convertFunction(moduleName, value) : value;\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertFunction = function (moduleName, value) {\n        var _this = this;\n        return {\n            __symbolic: 'function',\n            parameters: value.parameters,\n            defaults: value.defaults && value.defaults.map(function (v) { return _this.convertValue(moduleName, v); }),\n            value: this.convertValue(moduleName, value.value)\n        };\n    };\n    MetadataBundler.prototype.convertValue = function (moduleName, value) {\n        var _this = this;\n        if (isPrimitive(value)) {\n            return value;\n        }\n        if (schema.isMetadataError(value)) {\n            return this.convertError(moduleName, value);\n        }\n        if (schema.isMetadataSymbolicExpression(value)) {\n            return this.convertExpression(moduleName, value);\n        }\n        if (Array.isArray(value)) {\n            return value.map(function (v) { return _this.convertValue(moduleName, v); });\n        }\n        // Otherwise it is a metadata object.\n        var object = value;\n        var result = {};\n        for (var key in object) {\n            result[key] = this.convertValue(moduleName, object[key]);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertExpression = function (moduleName, value) {\n        if (value) {\n            switch (value.__symbolic) {\n                case 'error':\n                    return this.convertError(moduleName, value);\n                case 'reference':\n                    return this.convertReference(moduleName, value);\n                default:\n                    return this.convertExpressionNode(moduleName, value);\n            }\n        }\n        return value;\n    };\n    MetadataBundler.prototype.convertError = function (module, value) {\n        return {\n            __symbolic: 'error',\n            message: value.message,\n            line: value.line,\n            character: value.character,\n            context: value.context, module: module\n        };\n    };\n    MetadataBundler.prototype.convertReference = function (moduleName, value) {\n        var _this = this;\n        var createReference = function (symbol) {\n            var declaration = symbol.declaration;\n            if (declaration.module.startsWith('.')) {\n                // Reference to a symbol defined in the module. Ensure it is converted then return a\n                // references to the final symbol.\n                _this.convertSymbol(symbol);\n                return {\n                    __symbolic: 'reference',\n                    get name() {\n                        // Resolved lazily because private names are assigned late.\n                        var canonicalSymbol = symbol.canonicalSymbol;\n                        if (canonicalSymbol.isPrivate == null) {\n                            throw Error('Invalid state: isPrivate was not initialized');\n                        }\n                        return canonicalSymbol.isPrivate ? canonicalSymbol.privateName : canonicalSymbol.name;\n                    }\n                };\n            }\n            else {\n                // The symbol was a re-exported symbol from another module. Return a reference to the\n                // original imported symbol.\n                return { __symbolic: 'reference', name: declaration.name, module: declaration.module };\n            }\n        };\n        if (schema.isMetadataGlobalReferenceExpression(value)) {\n            var metadata = this.getMetadata(moduleName);\n            if (metadata && metadata.metadata && metadata.metadata[value.name]) {\n                // Reference to a symbol defined in the module\n                return createReference(this.canonicalSymbolOf(moduleName, value.name));\n            }\n            // If a reference has arguments, the arguments need to be converted.\n            if (value.arguments) {\n                return {\n                    __symbolic: 'reference',\n                    name: value.name,\n                    arguments: value.arguments.map(function (a) { return _this.convertValue(moduleName, a); })\n                };\n            }\n            // Global references without arguments (such as to Math or JSON) are unmodified.\n            return value;\n        }\n        if (schema.isMetadataImportedSymbolReferenceExpression(value)) {\n            // References to imported symbols are separated into two, references to bundled modules and\n            // references to modules external to the bundle. If the module reference is relative it is\n            // assumed to be in the bundle. If it is Global it is assumed to be outside the bundle.\n            // References to symbols outside the bundle are left unmodified. References to symbol inside\n            // the bundle need to be converted to a bundle import reference reachable from the bundle\n            // index.\n            if (value.module.startsWith('.')) {\n                // Reference is to a symbol defined inside the module. Convert the reference to a reference\n                // to the canonical symbol.\n                var referencedModule = resolveModule(value.module, moduleName);\n                var referencedName = value.name;\n                return createReference(this.canonicalSymbolOf(referencedModule, referencedName));\n            }\n            // Value is a reference to a symbol defined outside the module.\n            if (value.arguments) {\n                // If a reference has arguments the arguments need to be converted.\n                return {\n                    __symbolic: 'reference',\n                    name: value.name,\n                    module: value.module,\n                    arguments: value.arguments.map(function (a) { return _this.convertValue(moduleName, a); })\n                };\n            }\n            return value;\n        }\n        if (schema.isMetadataModuleReferenceExpression(value)) {\n            // Cannot support references to bundled modules as the internal modules of a bundle are erased\n            // by the bundler.\n            if (value.module.startsWith('.')) {\n                return {\n                    __symbolic: 'error',\n                    message: 'Unsupported bundled module reference',\n                    context: { module: value.module }\n                };\n            }\n            // References to unbundled modules are unmodified.\n            return value;\n        }\n    };\n    MetadataBundler.prototype.convertExpressionNode = function (moduleName, value) {\n        var result = { __symbolic: value.__symbolic };\n        for (var key in value) {\n            result[key] = this.convertValue(moduleName, value[key]);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.symbolOf = function (module, name) {\n        var symbolKey = module + \":\" + name;\n        var symbol = this.symbolMap.get(symbolKey);\n        if (!symbol) {\n            symbol = { module: module, name: name };\n            this.symbolMap.set(symbolKey, symbol);\n        }\n        return symbol;\n    };\n    MetadataBundler.prototype.canonicalSymbolOf = function (module, name) {\n        // Ensure the module has been seen.\n        this.exportAll(module);\n        var symbol = this.symbolOf(module, name);\n        if (!symbol.canonicalSymbol) {\n            this.canonicalizeSymbol(symbol);\n        }\n        return symbol;\n    };\n    return MetadataBundler;\n}());\nexports.MetadataBundler = MetadataBundler;\nvar CompilerHostAdapter = (function () {\n    function CompilerHostAdapter(host) {\n        this.host = host;\n        this.collector = new collector.MetadataCollector();\n    }\n    CompilerHostAdapter.prototype.getMetadataFor = function (fileName) {\n        var sourceFile = this.host.getSourceFile(fileName + '.ts', ts__default.ScriptTarget.Latest);\n        return this.collector.getMetadata(sourceFile);\n    };\n    return CompilerHostAdapter;\n}());\nexports.CompilerHostAdapter = CompilerHostAdapter;\nfunction resolveModule(importName, from) {\n    if (importName.startsWith('.') && from) {\n        var normalPath = path__default.normalize(path__default.join(path__default.dirname(from), importName));\n        if (!normalPath.startsWith('.') && from.startsWith('.')) {\n            // path.normalize() preserves leading '../' but not './'. This adds it back.\n            normalPath = \".\" + path__default.sep + normalPath;\n        }\n        // Replace windows path delimiters with forward-slashes. Otherwise the paths are not\n        // TypeScript compatible when building the bundle.\n        return normalPath.replace(/\\\\/g, '/');\n    }\n    return importName;\n}\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\nfunction getRootExport(symbol) {\n    return symbol.reexportedAs ? getRootExport(symbol.reexportedAs) : symbol;\n}\nfunction getSymbolDeclaration(symbol) {\n    return symbol.exports ? getSymbolDeclaration(symbol.exports) : symbol;\n}\n\n});\n\nvar index_writer = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar INDEX_HEADER = \"/**\\n * Generated bundle index. Do not edit.\\n */\\n\";\nfunction privateEntriesToIndex(index, privates) {\n    var results = [INDEX_HEADER];\n    // Export all of the index symbols.\n    results.push(\"export * from '\" + index + \"';\", '');\n    // Simplify the exports\n    var exports = new Map();\n    for (var _i = 0, privates_1 = privates; _i < privates_1.length; _i++) {\n        var entry = privates_1[_i];\n        var entries = exports.get(entry.module);\n        if (!entries) {\n            entries = [];\n            exports.set(entry.module, entries);\n        }\n        entries.push(entry);\n    }\n    var compareEntries = compare(function (e) { return e.name; });\n    var compareModules = compare(function (e) { return e[0]; });\n    var orderedExports = Array.from(exports)\n        .map(function (_a) {\n        var module = _a[0], entries = _a[1];\n        return [module, entries.sort(compareEntries)];\n    })\n        .sort(compareModules);\n    for (var _a = 0, orderedExports_1 = orderedExports; _a < orderedExports_1.length; _a++) {\n        var _b = orderedExports_1[_a], module_1 = _b[0], entries = _b[1];\n        var symbols = entries.map(function (e) { return e.name + \" as \" + e.privateName; });\n        results.push(\"export {\" + symbols + \"} from '\" + module_1 + \"';\");\n    }\n    return results.join('\\n');\n}\nexports.privateEntriesToIndex = privateEntriesToIndex;\nfunction compare(select) {\n    return function (a, b) {\n        var ak = select(a);\n        var bk = select(b);\n        return ak > bk ? 1 : ak < bk ? -1 : 0;\n    };\n}\n\n});\n\nvar bundle_index_host = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\n\nvar DTS = /\\.d\\.ts$/;\nvar JS_EXT = /(\\.js|)$/;\nfunction createSyntheticIndexHost(delegate, syntheticIndex) {\n    var normalSyntheticIndexName = path__default.normalize(syntheticIndex.name);\n    var indexContent = syntheticIndex.content;\n    var indexMetadata = syntheticIndex.metadata;\n    var newHost = Object.create(delegate);\n    newHost.fileExists = function (fileName) {\n        return path__default.normalize(fileName) == normalSyntheticIndexName || delegate.fileExists(fileName);\n    };\n    newHost.readFile = function (fileName) {\n        return path__default.normalize(fileName) == normalSyntheticIndexName ? indexContent :\n            delegate.readFile(fileName);\n    };\n    newHost.getSourceFile =\n        function (fileName, languageVersion, onError) {\n            if (path__default.normalize(fileName) == normalSyntheticIndexName) {\n                return ts__default.createSourceFile(fileName, indexContent, languageVersion, true);\n            }\n            return delegate.getSourceFile(fileName, languageVersion, onError);\n        };\n    newHost.writeFile =\n        function (fileName, data, writeByteOrderMark, onError, sourceFiles) {\n            delegate.writeFile(fileName, data, writeByteOrderMark, onError, sourceFiles);\n            if (fileName.match(DTS) && sourceFiles && sourceFiles.length == 1 &&\n                path__default.normalize(sourceFiles[0].fileName) == normalSyntheticIndexName) {\n                // If we are writing the synthetic index, write the metadata along side.\n                var metadataName = fileName.replace(DTS, '.metadata.json');\n                fs__default.writeFileSync(metadataName, indexMetadata, { encoding: 'utf8' });\n            }\n        };\n    return newHost;\n}\nfunction createBundleIndexHost(ngOptions, rootFiles, host) {\n    var files = rootFiles.filter(function (f) { return !DTS.test(f); });\n    if (files.length != 1) {\n        return {\n            host: host,\n            errors: [{\n                    file: null,\n                    start: null,\n                    length: null,\n                    messageText: 'Angular compiler option \"flatModuleIndex\" requires one and only one .ts file in the \"files\" field.',\n                    category: ts__default.DiagnosticCategory.Error,\n                    code: 0\n                }]\n        };\n    }\n    var file = files[0];\n    var indexModule = file.replace(/\\.ts$/, '');\n    var bundler$$1 = new bundler.MetadataBundler(indexModule, ngOptions.flatModuleId, new bundler.CompilerHostAdapter(host));\n    var metadataBundle = bundler$$1.getMetadataBundle();\n    var metadata = JSON.stringify(metadataBundle.metadata);\n    var name = path__default.join(path__default.dirname(indexModule), ngOptions.flatModuleOutFile.replace(JS_EXT, '.ts'));\n    var libraryIndex = \"./\" + path__default.basename(indexModule);\n    var content = index_writer.privateEntriesToIndex(libraryIndex, metadataBundle.privates);\n    host = createSyntheticIndexHost(host, { name: name, content: content, metadata: metadata });\n    return { host: host, indexName: name };\n}\nexports.createBundleIndexHost = createBundleIndexHost;\n\n});\n\nvar index = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(collector);\n__export(schema);\n__export(bundle_index_host);\n\n});\n\nvar api = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR_CODE = 100;\nexports.UNKNOWN_ERROR_CODE = 500;\nexports.SOURCE = 'angular';\nfunction isTsDiagnostic(diagnostic) {\n    return diagnostic != null && diagnostic.source !== 'angular';\n}\nexports.isTsDiagnostic = isTsDiagnostic;\nfunction isNgDiagnostic(diagnostic) {\n    return diagnostic != null && diagnostic.source === 'angular';\n}\nexports.isNgDiagnostic = isNgDiagnostic;\nvar EmitFlags;\n(function (EmitFlags) {\n    EmitFlags[EmitFlags[\"DTS\"] = 1] = \"DTS\";\n    EmitFlags[EmitFlags[\"JS\"] = 2] = \"JS\";\n    EmitFlags[EmitFlags[\"Metadata\"] = 4] = \"Metadata\";\n    EmitFlags[EmitFlags[\"I18nBundle\"] = 8] = \"I18nBundle\";\n    EmitFlags[EmitFlags[\"Codegen\"] = 16] = \"Codegen\";\n    EmitFlags[EmitFlags[\"Default\"] = 19] = \"Default\";\n    EmitFlags[EmitFlags[\"All\"] = 31] = \"All\";\n})(EmitFlags = exports.EmitFlags || (exports.EmitFlags = {}));\n\n});\n\nvar util = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\nexports.GENERATED_FILES = /(.*?)\\.(ngfactory|shim\\.ngstyle|ngstyle|ngsummary)\\.(js|d\\.ts|ts)$/;\nexports.DTS = /\\.d\\.ts$/;\n// Note: This is an internal property in TypeScript. Use it only for assertions and tests.\nfunction tsStructureIsReused(program) {\n    return program.structureIsReused;\n}\nexports.tsStructureIsReused = tsStructureIsReused;\nfunction createMessageDiagnostic(messageText) {\n    return {\n        file: undefined,\n        start: undefined,\n        length: undefined,\n        category: ts__default.DiagnosticCategory.Message, messageText: messageText,\n        code: api.DEFAULT_ERROR_CODE,\n        source: api.SOURCE,\n    };\n}\nexports.createMessageDiagnostic = createMessageDiagnostic;\nfunction isInRootDir(fileName, options) {\n    return !options.rootDir || pathStartsWithPrefix(options.rootDir, fileName);\n}\nexports.isInRootDir = isInRootDir;\nfunction relativeToRootDirs(filePath, rootDirs) {\n    if (!filePath)\n        return filePath;\n    for (var _i = 0, _a = rootDirs || []; _i < _a.length; _i++) {\n        var dir = _a[_i];\n        var rel = pathStartsWithPrefix(dir, filePath);\n        if (rel) {\n            return rel;\n        }\n    }\n    return filePath;\n}\nexports.relativeToRootDirs = relativeToRootDirs;\nfunction pathStartsWithPrefix(prefix, fullPath) {\n    var rel = path__default.relative(prefix, fullPath);\n    return rel.startsWith('..') ? null : rel;\n}\n/**\n * Converts a ng.Diagnostic into a ts.Diagnostic.\n * This looses some information, and also uses an incomplete object as `file`.\n *\n * I.e. only use this where the API allows only a ts.Diagnostic.\n */\nfunction ngToTsDiagnostic(ng) {\n    var file;\n    var start;\n    var length;\n    if (ng.span) {\n        // Note: We can't use a real ts.SourceFile,\n        // but we can at least mirror the properties `fileName` and `text`, which\n        // are mostly used for error reporting.\n        file = { fileName: ng.span.start.file.url, text: ng.span.start.file.content };\n        start = ng.span.start.offset;\n        length = ng.span.end.offset - start;\n    }\n    return {\n        file: file,\n        messageText: ng.messageText,\n        category: ng.category,\n        code: ng.code, start: start, length: length,\n    };\n}\nexports.ngToTsDiagnostic = ngToTsDiagnostic;\n\n});\n\nvar metadata_reader = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign = (commonjsGlobal && commonjsGlobal.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\nfunction createMetadataReaderCache() {\n    var data = new Map();\n    return { data: data };\n}\nexports.createMetadataReaderCache = createMetadataReaderCache;\nfunction readMetadata(filePath, host, cache) {\n    var metadatas = cache && cache.data.get(filePath);\n    if (metadatas) {\n        return metadatas;\n    }\n    if (host.fileExists(filePath)) {\n        // If the file doesn't exists then we cannot return metadata for the file.\n        // This will occur if the user referenced a declared module for which no file\n        // exists for the module (i.e. jQuery or angularjs).\n        if (util.DTS.test(filePath)) {\n            metadatas = readMetadataFile(host, filePath);\n            if (!metadatas) {\n                // If there is a .d.ts file but no metadata file we need to produce a\n                // metadata from the .d.ts file as metadata files capture reexports\n                // (starting with v3).\n                metadatas = [upgradeMetadataWithDtsData(host, { '__symbolic': 'module', 'version': 1, 'metadata': {} }, filePath)];\n            }\n        }\n        else {\n            var metadata = host.getSourceFileMetadata(filePath);\n            metadatas = metadata ? [metadata] : [];\n        }\n    }\n    if (cache && (!host.cacheMetadata || host.cacheMetadata(filePath))) {\n        cache.data.set(filePath, metadatas);\n    }\n    return metadatas;\n}\nexports.readMetadata = readMetadata;\nfunction readMetadataFile(host, dtsFilePath) {\n    var metadataPath = dtsFilePath.replace(util.DTS, '.metadata.json');\n    if (!host.fileExists(metadataPath)) {\n        return undefined;\n    }\n    try {\n        var metadataOrMetadatas = JSON.parse(host.readFile(metadataPath));\n        var metadatas = metadataOrMetadatas ?\n            (Array.isArray(metadataOrMetadatas) ? metadataOrMetadatas : [metadataOrMetadatas]) :\n            [];\n        if (metadatas.length) {\n            var maxMetadata = metadatas.reduce(function (p, c) { return p.version > c.version ? p : c; });\n            if (maxMetadata.version < index.METADATA_VERSION) {\n                metadatas.push(upgradeMetadataWithDtsData(host, maxMetadata, dtsFilePath));\n            }\n        }\n        return metadatas;\n    }\n    catch (e) {\n        console.error(\"Failed to read JSON file \" + metadataPath);\n        throw e;\n    }\n}\nfunction upgradeMetadataWithDtsData(host, oldMetadata, dtsFilePath) {\n    // patch v1 to v3 by adding exports and the `extends` clause.\n    // patch v3 to v4 by adding `interface` symbols for TypeAlias\n    var newMetadata = {\n        '__symbolic': 'module',\n        'version': index.METADATA_VERSION,\n        'metadata': __assign({}, oldMetadata.metadata),\n    };\n    if (oldMetadata.exports) {\n        newMetadata.exports = oldMetadata.exports;\n    }\n    if (oldMetadata.importAs) {\n        newMetadata.importAs = oldMetadata.importAs;\n    }\n    if (oldMetadata.origins) {\n        newMetadata.origins = oldMetadata.origins;\n    }\n    var dtsMetadata = host.getSourceFileMetadata(dtsFilePath);\n    if (dtsMetadata) {\n        for (var prop in dtsMetadata.metadata) {\n            if (!newMetadata.metadata[prop]) {\n                newMetadata.metadata[prop] = dtsMetadata.metadata[prop];\n            }\n        }\n        // Only copy exports from exports from metadata prior to version 3.\n        // Starting with version 3 the collector began collecting exports and\n        // this should be redundant. Also, with bundler will rewrite the exports\n        // which will hoist the exports from modules referenced indirectly causing\n        // the imports to be different than the .d.ts files and using the .d.ts file\n        // exports would cause the StaticSymbolResolver to redirect symbols to the\n        // incorrect location.\n        if ((!oldMetadata.version || oldMetadata.version < 3) && dtsMetadata.exports) {\n            newMetadata.exports = dtsMetadata.exports;\n        }\n    }\n    return newMetadata;\n}\n\n});\n\nvar language_services = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n\nThe API from compiler-cli that language-service can see.\nIt is important that none the exported modules require anything other than\nAngular modules and Typescript as this will indirectly add a dependency\nto the language service.\n\n*/\n\nexports.getExpressionDiagnostics = expression_diagnostics.getExpressionDiagnostics;\nexports.getExpressionScope = expression_diagnostics.getExpressionScope;\nexports.getTemplateExpressionDiagnostics = expression_diagnostics.getTemplateExpressionDiagnostics;\n\nexports.AstType = expression_type.AstType;\nexports.DiagnosticKind = expression_type.DiagnosticKind;\nexports.TypeDiagnostic = expression_type.TypeDiagnostic;\n\nexports.BuiltinType = symbols.BuiltinType;\n\nexports.getClassFromStaticSymbol = typescript_symbols.getClassFromStaticSymbol;\nexports.getClassMembers = typescript_symbols.getClassMembers;\nexports.getClassMembersFromDeclaration = typescript_symbols.getClassMembersFromDeclaration;\nexports.getPipesTable = typescript_symbols.getPipesTable;\nexports.getSymbolQuery = typescript_symbols.getSymbolQuery;\n\nexports.MetadataCollector = index.MetadataCollector;\n\nexports.createMetadataReaderCache = metadata_reader.createMetadataReaderCache;\nexports.readMetadata = metadata_reader.readMetadata;\n\n});\n\nvar language_services_2 = language_services.getExpressionScope;\nvar language_services_3 = language_services.getTemplateExpressionDiagnostics;\nvar language_services_4 = language_services.AstType;\nvar language_services_7 = language_services.BuiltinType;\nvar language_services_10 = language_services.getClassMembersFromDeclaration;\nvar language_services_11 = language_services.getPipesTable;\nvar language_services_12 = language_services.getSymbolQuery;\nvar language_services_13 = language_services.MetadataCollector;\nvar language_services_14 = language_services.createMetadataReaderCache;\nvar language_services_15 = language_services.readMetadata;\n\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window$1 = typeof window !== 'undefined' && window;\nvar __self$1 = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global$1 = typeof commonjsGlobal !== 'undefined' && commonjsGlobal;\nvar _root = __window$1 || __global$1 || __self$1;\nvar root_1 = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n\n\nvar root = {\n\troot: root_1\n};\n\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nvar isFunction_2 = isFunction;\n\n\nvar isFunction_1 = {\n\tisFunction: isFunction_2\n};\n\nvar isArray_1 = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n\n\nvar isArray = {\n\tisArray: isArray_1\n};\n\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nvar isObject_2 = isObject;\n\n\nvar isObject_1 = {\n\tisObject: isObject_2\n};\n\n// typeof any so that it we don't have to cast when comparing a result to the error object\nvar errorObject_1 = { e: {} };\n\n\nvar errorObject = {\n\terrorObject: errorObject_1\n};\n\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.errorObject.e = e;\n        return errorObject.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nvar tryCatch_2 = tryCatch;\n\n\n\nvar tryCatch_1 = {\n\ttryCatch: tryCatch_2\n};\n\nvar __extends$2 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends$2(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nvar UnsubscriptionError_2 = UnsubscriptionError;\n\n\nvar UnsubscriptionError_1 = {\n\tUnsubscriptionError: UnsubscriptionError_2\n};\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.errorObject.e.errors) : [errorObject.errorObject.e]);\n            }\n        }\n        if (isArray.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nvar Subscription_2 = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n\n\nvar Subscription_1 = {\n\tSubscription: Subscription_2\n};\n\nvar empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n\n\nvar Observer = {\n\tempty: empty\n};\n\nvar rxSubscriber = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nvar Symbol = root.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n\n});\n\nvar __extends$1 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends$1(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nvar Subscriber_2 = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends$1(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n\n\nvar Subscriber_1 = {\n\tSubscriber: Subscriber_2\n};\n\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nvar toSubscriber_2 = toSubscriber;\n\n\nvar toSubscriber_1 = {\n\ttoSubscriber: toSubscriber_2\n};\n\nvar observable = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n\n});\n\n/* tslint:disable:no-empty */\nfunction noop$1() { }\nvar noop_2 = noop$1;\n\n\nvar noop_1 = {\n\tnoop: noop_2\n};\n\n/* tslint:enable:max-line-length */\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nvar pipe_2 = pipe;\n/* @internal */\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop_1.noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nvar pipeFromArray_1 = pipeFromArray;\n\n\nvar pipe_1 = {\n\tpipe: pipe_2,\n\tpipeFromArray: pipeFromArray_1\n};\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable$$1 = new Observable();\n        observable$$1.source = this;\n        observable$$1.operator = operator;\n        return observable$$1;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.root.Rx && root.root.Rx.config && root.root.Rx.config.Promise) {\n                PromiseCtor = root.root.Rx.config.Promise;\n            }\n            else if (root.root.Promise) {\n                PromiseCtor = root.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable.observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.root.Rx && root.root.Rx.config && root.root.Rx.config.Promise) {\n                PromiseCtor = root.root.Rx.config.Promise;\n            }\n            else if (root.root.Promise) {\n                PromiseCtor = root.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nvar Observable_2 = Observable;\n\n\nvar Observable_1 = {\n\tObservable: Observable_2\n};\n\nvar __extends$4 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends$4(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nvar ScalarObservable_2 = ScalarObservable;\n\n\nvar ScalarObservable_1 = {\n\tScalarObservable: ScalarObservable_2\n};\n\nvar __extends$5 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends$5(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nvar EmptyObservable_2 = EmptyObservable;\n\n\nvar EmptyObservable_1 = {\n\tEmptyObservable: EmptyObservable_2\n};\n\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nvar isScheduler_2 = isScheduler;\n\n\nvar isScheduler_1 = {\n\tisScheduler: isScheduler_2\n};\n\nvar __extends$3 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends$3(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nvar ArrayObservable_2 = ArrayObservable;\n\n\nvar ArrayObservable_1 = {\n\tArrayObservable: ArrayObservable_2\n};\n\nvar isArrayLike_1 = (function (x) { return x && typeof x.length === 'number'; });\n\n\nvar isArrayLike = {\n\tisArrayLike: isArrayLike_1\n};\n\nfunction isPromise$2(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nvar isPromise_2 = isPromise$2;\n\n\nvar isPromise_1 = {\n\tisPromise: isPromise_2\n};\n\nvar iterator = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nfunction symbolIteratorPonyfill(root$$2) {\n    var Symbol = root$$2.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root$$2.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root$$2.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.iterator = symbolIteratorPonyfill(root.root);\n/**\n * @deprecated use iterator instead\n */\nexports.$$iterator = exports.iterator;\n\n});\n\nvar __extends$7 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends$7(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nvar InnerSubscriber_2 = InnerSubscriber;\n\n\nvar InnerSubscriber_1 = {\n\tInnerSubscriber: InnerSubscriber_2\n};\n\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            destination.syncErrorThrowable = true;\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike.isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[iterator.iterator] === 'function') {\n        var iterator$$1 = result[iterator.iterator]();\n        do {\n            var item = iterator$$1.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[observable.observable] === 'function') {\n        var obs = result[observable.observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = (\"You provided \" + value + \" where a stream was expected.\")\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\nvar subscribeToResult_2 = subscribeToResult;\n\n\nvar subscribeToResult_1 = {\n\tsubscribeToResult: subscribeToResult_2\n};\n\nvar __extends$8 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends$8(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nvar OuterSubscriber_2 = OuterSubscriber;\n\n\nvar OuterSubscriber_1 = {\n\tOuterSubscriber: OuterSubscriber_2\n};\n\nvar __extends$6 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return function mergeMapOperatorFunction(source) {\n        if (typeof resultSelector === 'number') {\n            concurrent = resultSelector;\n            resultSelector = null;\n        }\n        return source.lift(new MergeMapOperator(project, resultSelector, concurrent));\n    };\n}\nvar mergeMap_2 = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nvar MergeMapOperator_1 = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends$6(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nvar MergeMapSubscriber_1 = MergeMapSubscriber;\n\n\nvar mergeMap_1 = {\n\tmergeMap: mergeMap_2,\n\tMergeMapOperator: MergeMapOperator_1,\n\tMergeMapSubscriber: MergeMapSubscriber_1\n};\n\nfunction identity(x) {\n    return x;\n}\nvar identity_2 = identity;\n\n\nvar identity_1 = {\n\tidentity: identity_2\n};\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeMap_1.mergeMap(identity_1.identity, null, concurrent);\n}\nvar mergeAll_2 = mergeAll;\n\n\nvar mergeAll_1 = {\n\tmergeAll: mergeAll_2\n};\n\n/* tslint:enable:max-line-length */\nfunction merge$3() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(mergeStatic$1.apply(void 0, [source].concat(observables))); };\n}\nvar merge_2$2 = merge$3;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction mergeStatic$1() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler_1.isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n        return observables[0];\n    }\n    return mergeAll_1.mergeAll(concurrent)(new ArrayObservable_1.ArrayObservable(observables, scheduler));\n}\nvar mergeStatic_1 = mergeStatic$1;\n\n\nvar merge_1 = {\n\tmerge: merge_2$2,\n\tmergeStatic: mergeStatic_1\n};\n\nvar merge_2$1 = merge_1;\nvar mergeStatic = merge_2$1.mergeStatic;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge$2() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return merge_1.merge.apply(void 0, observables)(this);\n}\nvar merge_4 = merge$2;\n\n\nvar merge_3 = {\n\tmergeStatic: mergeStatic,\n\tmerge: merge_4\n};\n\nvar merge_2 = merge_3.mergeStatic;\n\nvar __extends$11 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends$11(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nvar ObjectUnsubscribedError_2 = ObjectUnsubscribedError;\n\n\nvar ObjectUnsubscribedError_1 = {\n\tObjectUnsubscribedError: ObjectUnsubscribedError_2\n};\n\nvar __extends$12 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends$12(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nvar SubjectSubscription_2 = SubjectSubscription;\n\n\nvar SubjectSubscription_1 = {\n\tSubjectSubscription: SubjectSubscription_2\n};\n\nvar __extends$10 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends$10(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nvar SubjectSubscriber_1 = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends$10(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nvar Subject_2 = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends$10(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nvar AnonymousSubject_1 = AnonymousSubject;\n\n\nvar Subject_1 = {\n\tSubjectSubscriber: SubjectSubscriber_1,\n\tSubject: Subject_2,\n\tAnonymousSubject: AnonymousSubject_1\n};\n\nvar __extends$13 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nfunction refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator$1(source));\n    };\n}\nvar refCount_2 = refCount;\nvar RefCountOperator$1 = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber$1(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber$1 = (function (_super) {\n    __extends$13(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar refCount_1 = {\n\trefCount: refCount_2\n};\n\nvar __extends$9 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = (function (_super) {\n    __extends$9(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n        this._isComplete = false;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription_1.Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_1.Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return refCount_1.refCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nvar ConnectableObservable_2 = ConnectableObservable;\nvar connectableProto = ConnectableObservable.prototype;\nvar connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = (function (_super) {\n    __extends$9(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber));\nvar RefCountSubscriber = (function (_super) {\n    __extends$9(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar ConnectableObservable_1 = {\n\tConnectableObservable: ConnectableObservable_2,\n\tconnectableObservableDescriptor: connectableObservableDescriptor\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, ConnectableObservable_1.connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nvar multicast_2 = multicast;\nvar MulticastOperator = (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nvar MulticastOperator_1 = MulticastOperator;\n\n\nvar multicast_1 = {\n\tmulticast: multicast_2,\n\tMulticastOperator: MulticastOperator_1\n};\n\nfunction shareSubjectFactory() {\n    return new Subject_1.Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share$1() {\n    return function (source) { return refCount_1.refCount()(multicast_1.multicast(shareSubjectFactory)(source)); };\n}\nvar share_2$2 = share$1;\n\n\n\nvar share_1 = {\n\tshare: share_2$2\n};\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return share_1.share()(this);\n}\nvar share_3 = share;\n\n/**\n * @license Angular v5.0.0-rc.8-85e95cc\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar InjectionToken = (function () {\n    function InjectionToken(_desc) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\n\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__paramaters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {?} objOrType\n     * @return {?}\n     */\n    function DecoratorFactory(objOrType) {\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, objOrType);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new (/** @type {?} */ (DecoratorFactory))(objOrType);\n        var /** @type {?} */ TypeDecorator = /** @type {?} */ (function TypeDecorator(cls) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var /** @type {?} */ values = props.apply(void 0, args);\n            for (var /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = (/** @type {?} */ (ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Attribute$1$1 = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy$1 = {\n    /**\n       * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n       */\n    OnPush: 0,\n    /**\n       * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n       */\n    Default: 1,\n};\nChangeDetectionStrategy$1[ChangeDetectionStrategy$1.OnPush] = \"OnPush\";\nChangeDetectionStrategy$1[ChangeDetectionStrategy$1.Default] = \"Default\";\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Directive$1 = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Type of the Component decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Component$1 = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy$1.Default }, c));\n}, Directive$1);\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Pipe$1 = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar NgModule$1 = makeDecorator('NgModule', function (ngModule) { return ngModule; });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ViewEncapsulation$1 = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via\n       * {@link Component#styles} or {@link Component#styleUrls}, and adding the new Host Element\n       * attribute to all selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n};\nViewEncapsulation$1[ViewEncapsulation$1.Emulated] = \"Emulated\";\nViewEncapsulation$1[ViewEncapsulation$1.Native] = \"Native\";\nViewEncapsulation$1[ViewEncapsulation$1.None] = \"None\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar Version$1 = (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * \\@stable\n */\nvar VERSION$2 = new Version$1('5.0.0-rc.8-85e95cc');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Inject$1 = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Injectable = makeDecorator('Injectable');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify$1(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify$1).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify$1(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef$1(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify$1(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new StaticInjector(providers, parent);\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new _NullInjector();\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = /** @type {?} */ ([]);\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = /** @type {?} */ ({});\nvar ɵ2 = GET_PROPERTY_NAME;\nvar USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ2 });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = (function () {\n    function StaticInjector(providers, parent) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        this.parent = parent;\n        var /** @type {?} */ records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    StaticInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        var /** @type {?} */ record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ tokenPath = e[NG_TEMP_TOKEN_PATH];\n            e.message = formatError('\\n' + e.message, tokenPath);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokens = /** @type {?} */ ([]), /** @type {?} */ records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify$1(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    var /** @type {?} */ deps = computeDeps(provider);\n    var /** @type {?} */ fn = IDENT;\n    var /** @type {?} */ value = EMPTY;\n    var /** @type {?} */ useNew = false;\n    var /** @type {?} */ provide = resolveForwardRef$1(provider.provide);\n    if (USE_VALUE$1 in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef$1((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef$1(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var /** @type {?} */ i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var /** @type {?} */ token = resolveForwardRef$1(provider.provide);\n            var /** @type {?} */ resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var /** @type {?} */ multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var /** @type {?} */ record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue);\n    }\n    catch (/** @type {?} */ e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var /** @type {?} */ path$$1 = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path$$1.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue) {\n    var /** @type {?} */ value;\n    if (record) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var /** @type {?} */ obj = undefined;\n            var /** @type {?} */ useNew = record.useNew;\n            var /** @type {?} */ fn = record.fn;\n            var /** @type {?} */ depRecords = record.deps;\n            var /** @type {?} */ deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var /** @type {?} */ i = 0; i < depRecords.length; i++) {\n                    var /** @type {?} */ depRecord = depRecords[i];\n                    var /** @type {?} */ options = depRecord.options;\n                    var /** @type {?} */ childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND));\n                }\n            }\n            record.value = value = useNew ? new ((_a = (/** @type {?} */ (fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else {\n        value = parent.get(token, notFoundValue);\n    }\n    return value;\n    var _a;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    var /** @type {?} */ deps = EMPTY;\n    var /** @type {?} */ providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n            var /** @type {?} */ options = 6;\n            var /** @type {?} */ token = resolveForwardRef$1(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n                    var /** @type {?} */ annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject$1) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef$1(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        var /** @type {?} */ token = resolveForwardRef$1((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE$1 in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction formatError(text, obj) {\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var /** @type {?} */ context = stringify$1(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify$1).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var /** @type {?} */ parts = /** @type {?} */ ([]);\n        for (var /** @type {?} */ key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var /** @type {?} */ value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify$1(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar ErrorHandler = (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify$1(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\n\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ keys = [key];\n    var /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    var /** @type {?} */ error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify$1(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify$1(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify$1).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify$1(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify$1(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify$1(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef$1(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n         * @return {?} the number of keys registered in the system.\n         */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\n/**\n * \\@internal\n */\nvar KeyRegistry = (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nvar Type$1$1 = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar ReflectionCapabilities = (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (type, parentCtor) {\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(type.toString())) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        var /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = /** @type {?} */ ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return type instanceof Type$1$1 && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify$1(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return \"./\" + stringify$1(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = /**\n     * @param {?} caps\n     * @return {?}\n     */\n    function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\n\nvar ResolvedReflectiveProvider_ = (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n    }\n    Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.resolvedFactories[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar ResolvedReflectiveFactory = (function () {\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef$1(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type$1$1) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject$1) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type$1$1) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject$1) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef$1(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar ReflectiveInjector = (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders} for more info.\n     */\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve} and {@link ReflectiveInjector#fromResolvedProviders}.\n     */\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var /** @type {?} */ len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = /**\n     * @return {?}\n     */\n    function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (/** @type {?} */ e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (/** @type {?} */ e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = /** @type {?} */ (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise$1(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var /** @type {?} */ asyncInitPromises = [];\n        var /** @type {?} */ complete = function () {\n            (/** @type {?} */ (_this)).done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                var /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise$1(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject$1, args: [APP_INITIALIZER,] }, { type: Optional },] },\n    ]; };\n    return ApplicationInitStatus;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nvar APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Console.ctorParameters = function () { return []; };\n    return Console;\n}());\n\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = /**\n     * Clears all caches.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { };\n    Compiler.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Compiler.ctorParameters = function () { return []; };\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar CompilerFactory = (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar ComponentRef = (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactory = (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify$1(component) + \". Did you add it to @NgModule.entryComponents?\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nvar _NullComponentFactoryResolver = (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"selector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.selector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.componentType; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"ngContentSelectors\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.ngContentSelectors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.inputs; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.outputs; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar NgModuleRef = (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar NgModuleFactory = (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar trace;\nvar events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    var /** @type {?} */ wtf = (/** @type {?} */ (_global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar EventEmitter = (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(Subject_2));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar NgZone = (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error('Angular requires Zone.js prolyfill.');\n        }\n        Zone.assertZonePatched();\n        var /** @type {?} */ self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = /**\n     * @return {?}\n     */\n    function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs, name) {\n        var /** @type {?} */ zone = (/** @type {?} */ ((this)))._inner;\n        var /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * @return {?}\n */\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n *\n * \\@internal\n */\nvar NoopNgZone = (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.run = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runGuarded = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runOutsideAngular = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runTask = /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = (function () {\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     */\n    /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     */\n    /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    Testability.prototype.isStable = /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (/** @type {?} */ ((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * Run callback when the application is stable\n     * @param callback function to be called after the application is stable\n     */\n    /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    Testability.prototype.whenStable = /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     */\n    /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone, },\n    ]; };\n    return Testability;\n}());\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\n\nvar _NoopGetTestability = (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ marker = new InjectionToken(\"Platform: \" + name);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                createPlatform(Injector.create(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * Provides additional options to the bootstraping process.\n *\n * \\@stable\n * @record\n */\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n */\nvar PlatformRef = (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var /** @type {?} */ ngZoneOption = options ? options.ngZone : undefined;\n        var /** @type {?} */ ngZone = getNgZone(ngZoneOption);\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = Injector.create([{ provide: NgZone, useValue: ngZone }], _this.injector);\n            var /** @type {?} */ moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { return /** @type {?} */ ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * @stable\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModule = /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ options = optionsReducer({}, compilerOptions);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef.prototype._moduleDoBootstrap = /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    function (moduleRef) {\n        var /** @type {?} */ appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify$1(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef.prototype.onDestroy = /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @return {?}\n         */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    PlatformRef.prototype.destroy = /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector, },\n    ]; };\n    return PlatformRef;\n}());\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    var /** @type {?} */ ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise$1(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n */\nvar ApplicationRef = (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var /** @type {?} */ isCurrentlyStable = new Observable_2(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var /** @type {?} */ isStable = new Observable_2(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var /** @type {?} */ stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var /** @type {?} */ unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            merge_2(isCurrentlyStable, share_3.call(isStable));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef.prototype.bootstrap = /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    ApplicationRef.prototype.tick = /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (/** @type {?} */ e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.attachView = /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.detachView = /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._loadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._unloadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationRef.prototype.ngOnDestroy = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: /**\n         * Returns the number of attached views.\n         * @return {?}\n         */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Console, },\n        { type: Injector, },\n        { type: ErrorHandler, },\n        { type: ComponentFactoryResolver, },\n        { type: ApplicationInitStatus, },\n    ]; };\n    return ApplicationRef;\n}());\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar Renderer = (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * \\@experimental\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar RendererFactory2 = (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * \\@experimental\n * @abstract\n */\nvar Renderer2 = (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n */\nvar ElementRef = (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar QueryList = (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n    }\n    Object.defineProperty(QueryList.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[this.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._results = flatten$2(res);\n        (/** @type {?} */ (this)).dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = /**\n     * internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = /**\n     * internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten$2(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten$2(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use\n * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n * View Container.\n * \\@stable\n * @abstract\n */\nvar TemplateRef = (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar ViewContainerRef = (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ChangeDetectorRef = (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ViewRef = (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar EmbeddedViewRef = (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EventListener = (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugNode = (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugElement = (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar WrappedValue = (function () {\n    function WrappedValue(wrapped) {\n        this.wrapped = wrapped;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new WrappedValue(value); };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar SimpleChange = (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) &&\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                /** @type {?} */ ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify$1(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * \\@stable\n */\nvar IterableChangeRecord_ = (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\nvar _DuplicateItemRecordList = (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = /**\n     * @template K, V\n     * @return {?}\n     */\n    function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = /**\n     * @param {?=} map\n     * @return {?}\n     */\n    function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify$1(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * \\@stable\n */\nvar KeyValueChangeRecord_ = (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\n\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar IterableDiffers = (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n            return new IterableDiffers(factories);\n        }\n        else {\n            return new IterableDiffers(factories);\n        }\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar KeyValueDiffers = (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = /**\n     * @param {?} kv\n     * @return {?}\n     */\n    function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule$1, args: [{\n                    providers: [\n                        ApplicationRef,\n                        ApplicationInitStatus,\n                        Compiler,\n                        APP_ID_RANDOM_PROVIDER,\n                        { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                        {\n                            provide: LOCALE_ID,\n                            useFactory: _localeFactory,\n                            deps: [[new Inject$1(LOCALE_ID), new Optional(), new SkipSelf()]]\n                        },\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n    ]; };\n    return ApplicationModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar SecurityContext$1 = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext$1[SecurityContext$1.NONE] = \"NONE\";\nSecurityContext$1[SecurityContext$1.HTML] = \"HTML\";\nSecurityContext$1[SecurityContext$1.STYLE] = \"STYLE\";\nSecurityContext$1[SecurityContext$1.SCRIPT] = \"SCRIPT\";\nSecurityContext$1[SecurityContext$1.URL] = \"URL\";\nSecurityContext$1[SecurityContext$1.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar Sanitizer = (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @record\n */\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    clearProviderOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify$1(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), oldValue, value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (/** @type {?} */ e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName$1(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nfunction splitDepsDsl(deps) {\n    return deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation$1.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    var /** @type {?} */ value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = /** @type {?} */ ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = /** @type {?} */ ((hostElDef)).nodeIndex + 1;\n    var /** @type {?} */ endIndex = /** @type {?} */ ((hostElDef)).nodeIndex + /** @type {?} */ ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = /** @type {?} */ ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName$1(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n    var /** @type {?} */ renderNode$$1 = elData.renderElement;\n    var /** @type {?} */ name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var /** @type {?} */ bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext$1.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    var /** @type {?} */ def = data._def;\n    var /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            providers[i] = _createProviderInstance$1(data, provDef);\n        }\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var /** @type {?} */ providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        var /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === undefined) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var /** @type {?} */ injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var /** @type {?} */ def = ngModule._def;\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EMPTY_CONTEXT = new Object();\nvar ComponentFactory_ = (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ inputsArr = [];\n            var /** @type {?} */ inputs = /** @type {?} */ ((this._inputs));\n            for (var /** @type {?} */ propName in inputs) {\n                var /** @type {?} */ templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION$2.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = /** @type {?} */ ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ viewRef_ = /** @type {?} */ (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ fs$$1 = this._view.root.rendererFactory;\n        if (fs$$1.begin) {\n            fs$$1.begin();\n        }\n        Services.checkAndUpdateView(this._view);\n        if (fs$$1.end) {\n            fs$$1.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = /**\n     * @return {?}\n     */\n    function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: 0 /* None */ }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify$1(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[/** @type {?} */ ((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return /** @type {?} */ ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    while (view) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(view, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(view, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(view, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(view, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(view, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(view, providerDef_1) };\n                            view.nodes[providerDef_1.nodeIndex] = /** @type {?} */ (providerData);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(view);\n        elDef = /** @type {?} */ ((viewParentEl(view)));\n        view = /** @type {?} */ ((view.parent));\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                callElementProvidersLifecycles(view, parent_1, lifecycles);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles) {\n    for (var /** @type {?} */ i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles) {\n    var /** @type {?} */ providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var /** @type {?} */ provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.nodeIndex + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var /** @type {?} */ elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var /** @type {?} */ elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode$$1;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    var /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var /** @type {?} */ el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var /** @type {?} */ projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" not dirty\", \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.clearProviderOverrides = services.clearProviderOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        clearProviderOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) {\n            return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n        updateRenderer: function (view, checkType) {\n            return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        clearProviderOverrides: debugClearProviderOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n    providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    for (var /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        var /** @type {?} */ lastElementDef = null;\n        for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var /** @type {?} */ i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var /** @type {?} */ provider = /** @type {?} */ ((nodeDef.provider));\n                var /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function calcHasOverrides(def) {\n        var /** @type {?} */ hasOverrides = false;\n        var /** @type {?} */ hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var /** @type {?} */ override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            var /** @type {?} */ provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = (/** @type {?} */ (checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = /** @type {?} */ ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (/** @type {?} */ e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ elDef = this.nodeDef;\n        var /** @type {?} */ elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n    }\n    Object.defineProperty(DebugRenderer2.prototype, \"data\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\nvar NgModuleFactory_ = (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        initServicesIfNeeded();\n        var /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @license Angular v5.0.0-rc.8-85e95cc\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The kind of diagnostic message.\n *\n * @experimental\n */\nvar DiagnosticKind;\n(function (DiagnosticKind) {\n    DiagnosticKind[DiagnosticKind[\"Error\"] = 0] = \"Error\";\n    DiagnosticKind[DiagnosticKind[\"Warning\"] = 1] = \"Warning\";\n})(DiagnosticKind || (DiagnosticKind = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isParseSourceSpan(value) {\n    return value && !!value.start;\n}\nfunction spanOf(span) {\n    if (!span)\n        return undefined;\n    if (isParseSourceSpan(span)) {\n        return { start: span.start.offset, end: span.end.offset };\n    }\n    else {\n        if (span.endSourceSpan) {\n            return { start: span.sourceSpan.start.offset, end: span.endSourceSpan.end.offset };\n        }\n        else if (span.children && span.children.length) {\n            return {\n                start: span.sourceSpan.start.offset,\n                end: spanOf(span.children[span.children.length - 1]).end\n            };\n        }\n        return { start: span.sourceSpan.start.offset, end: span.sourceSpan.end.offset };\n    }\n}\nfunction inSpan(position, span, exclusive) {\n    return span != null && (exclusive ? position >= span.start && position < span.end :\n        position >= span.start && position <= span.end);\n}\nfunction offsetSpan(span, amount) {\n    return { start: span.start + amount, end: span.end + amount };\n}\nfunction isNarrower(spanA, spanB) {\n    return spanA.start >= spanB.start && spanA.end <= spanB.end;\n}\nfunction hasTemplateReference(type) {\n    if (type.diDeps) {\n        for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n            var diDep = _a[_i];\n            if (diDep.token && diDep.token.identifier &&\n                identifierName(diDep.token.identifier) == 'TemplateRef')\n                return true;\n        }\n    }\n    return false;\n}\nfunction getSelectors(info) {\n    var map = new Map();\n    var selectors = flatten(info.directives.map(function (directive) {\n        var selectors = CssSelector.parse(directive.selector);\n        selectors.forEach(function (selector) { return map.set(selector, directive); });\n        return selectors;\n    }));\n    return { selectors: selectors, map: map };\n}\nfunction flatten(a) {\n    return (_a = []).concat.apply(_a, a);\n    var _a;\n}\nfunction removeSuffix(value, suffix) {\n    if (value.endsWith(suffix))\n        return value.substring(0, value.length - suffix.length);\n    return value;\n}\nfunction uniqueByName(elements) {\n    if (elements) {\n        var result = [];\n        var set = new Set();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            if (!set.has(element.name)) {\n                set.add(element.name);\n                result.push(element);\n            }\n        }\n        return result;\n    }\n}\n\nfunction diagnosticInfoFromTemplateInfo(info) {\n    return {\n        fileName: info.fileName,\n        offset: info.template.span.start,\n        query: info.template.query,\n        members: info.template.members,\n        htmlAst: info.htmlAst,\n        templateAst: info.templateAst\n    };\n}\nfunction findTemplateAstAt(ast, position, allowWidening) {\n    if (allowWidening === void 0) { allowWidening = false; }\n    var path$$1 = [];\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visit = function (ast, context) {\n            var span = spanOf(ast);\n            if (inSpan(position, span)) {\n                var len = path$$1.length;\n                if (!len || allowWidening || isNarrower(span, spanOf(path$$1[len - 1]))) {\n                    path$$1.push(ast);\n                }\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        class_1.prototype.visitEmbeddedTemplate = function (ast, context) {\n            return this.visitChildren(context, function (visit) {\n                // Ignore reference, variable and providers\n                visit(ast.attrs);\n                visit(ast.directives);\n                visit(ast.children);\n            });\n        };\n        class_1.prototype.visitElement = function (ast, context) {\n            return this.visitChildren(context, function (visit) {\n                // Ingnore providers\n                visit(ast.attrs);\n                visit(ast.inputs);\n                visit(ast.outputs);\n                visit(ast.references);\n                visit(ast.directives);\n                visit(ast.children);\n            });\n        };\n        class_1.prototype.visitDirective = function (ast, context) {\n            // Ignore the host properties of a directive\n            var result = this.visitChildren(context, function (visit) { visit(ast.inputs); });\n            // We never care about the diretive itself, just its inputs.\n            if (path$$1[path$$1.length - 1] == ast) {\n                path$$1.pop();\n            }\n            return result;\n        };\n        return class_1;\n    }(RecursiveTemplateAstVisitor));\n    templateVisitAll(visitor, ast);\n    return new AstPath(path$$1, position);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findAstAt(ast, position, excludeEmpty) {\n    if (excludeEmpty === void 0) { excludeEmpty = false; }\n    var path$$1 = [];\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visit = function (ast) {\n            if ((!excludeEmpty || ast.span.start < ast.span.end) && inSpan(position, ast.span)) {\n                path$$1.push(ast);\n                visitAstChildren(ast, this);\n            }\n        };\n        return class_1;\n    }(NullAstVisitor));\n    // We never care about the ASTWithSource node and its visit() method calls its ast's visit so\n    // the visit() method above would never see it.\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    visitor.visit(ast);\n    return new AstPath(path$$1, position);\n}\nfunction getExpressionCompletions(scope, ast, position, query) {\n    var path$$1 = findAstAt(ast, position);\n    if (path$$1.empty)\n        return undefined;\n    var tail = path$$1.tail;\n    var result = scope;\n    function getType(ast) { return new language_services_4(scope, query, {}).getType(ast); }\n    // If the completion request is in a not in a pipe or property access then the global scope\n    // (that is the scope of the implicit receiver) is the right scope as the user is typing the\n    // beginning of an expression.\n    tail.visit({\n        visitBinary: function (ast) { },\n        visitChain: function (ast) { },\n        visitConditional: function (ast) { },\n        visitFunctionCall: function (ast) { },\n        visitImplicitReceiver: function (ast) { },\n        visitInterpolation: function (ast) { result = undefined; },\n        visitKeyedRead: function (ast) { },\n        visitKeyedWrite: function (ast) { },\n        visitLiteralArray: function (ast) { },\n        visitLiteralMap: function (ast) { },\n        visitLiteralPrimitive: function (ast) { },\n        visitMethodCall: function (ast) { },\n        visitPipe: function (ast) {\n            if (position >= ast.exp.span.end &&\n                (!ast.args || !ast.args.length || position < ast.args[0].span.start)) {\n                // We are in a position a pipe name is expected.\n                result = query.getPipes();\n            }\n        },\n        visitPrefixNot: function (ast) { },\n        visitNonNullAssert: function (ast) { },\n        visitPropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitPropertyWrite: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitQuote: function (ast) {\n            // For a quote, return the members of any (if there are any).\n            result = query.getBuiltinType(language_services_7.Any).members();\n        },\n        visitSafeMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitSafePropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n    });\n    return result && result.values();\n}\nfunction getExpressionSymbol(scope, ast, position, query) {\n    var path$$1 = findAstAt(ast, position, /* excludeEmpty */ true);\n    if (path$$1.empty)\n        return undefined;\n    var tail = path$$1.tail;\n    function getType(ast) { return new language_services_4(scope, query, {}).getType(ast); }\n    var symbol = undefined;\n    var span = undefined;\n    // If the completion request is in a not in a pipe or property access then the global scope\n    // (that is the scope of the implicit receiver) is the right scope as the user is typing the\n    // beginning of an expression.\n    tail.visit({\n        visitBinary: function (ast) { },\n        visitChain: function (ast) { },\n        visitConditional: function (ast) { },\n        visitFunctionCall: function (ast) { },\n        visitImplicitReceiver: function (ast) { },\n        visitInterpolation: function (ast) { },\n        visitKeyedRead: function (ast) { },\n        visitKeyedWrite: function (ast) { },\n        visitLiteralArray: function (ast) { },\n        visitLiteralMap: function (ast) { },\n        visitLiteralPrimitive: function (ast) { },\n        visitMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitPipe: function (ast) {\n            if (position >= ast.exp.span.end &&\n                (!ast.args || !ast.args.length || position < ast.args[0].span.start)) {\n                // We are in a position a pipe name is expected.\n                var pipes = query.getPipes();\n                if (pipes) {\n                    symbol = pipes.get(ast.name);\n                    span = ast.span;\n                }\n            }\n        },\n        visitPrefixNot: function (ast) { },\n        visitNonNullAssert: function (ast) { },\n        visitPropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitPropertyWrite: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitQuote: function (ast) { },\n        visitSafeMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitSafePropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n    });\n    if (symbol && span) {\n        return { symbol: symbol, span: span };\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar values = [\n    'ID',\n    'CDATA',\n    'NAME',\n    ['ltr', 'rtl'],\n    ['rect', 'circle', 'poly', 'default'],\n    'NUMBER',\n    ['nohref'],\n    ['ismap'],\n    ['declare'],\n    ['DATA', 'REF', 'OBJECT'],\n    ['GET', 'POST'],\n    'IDREF',\n    ['TEXT', 'PASSWORD', 'CHECKBOX', 'RADIO', 'SUBMIT', 'RESET', 'FILE', 'HIDDEN', 'IMAGE', 'BUTTON'],\n    ['checked'],\n    ['disabled'],\n    ['readonly'],\n    ['multiple'],\n    ['selected'],\n    ['button', 'submit', 'reset'],\n    ['void', 'above', 'below', 'hsides', 'lhs', 'rhs', 'vsides', 'box', 'border'],\n    ['none', 'groups', 'rows', 'cols', 'all'],\n    ['left', 'center', 'right', 'justify', 'char'],\n    ['top', 'middle', 'bottom', 'baseline'],\n    'IDREFS',\n    ['row', 'col', 'rowgroup', 'colgroup'],\n    ['defer']\n];\nvar groups = [\n    { id: 0 },\n    {\n        onclick: 1,\n        ondblclick: 1,\n        onmousedown: 1,\n        onmouseup: 1,\n        onmouseover: 1,\n        onmousemove: 1,\n        onmouseout: 1,\n        onkeypress: 1,\n        onkeydown: 1,\n        onkeyup: 1\n    },\n    { lang: 2, dir: 3 },\n    { onload: 1, onunload: 1 },\n    { name: 1 },\n    { href: 1 },\n    { type: 1 },\n    { alt: 1 },\n    { tabindex: 5 },\n    { media: 1 },\n    { nohref: 6 },\n    { usemap: 1 },\n    { src: 1 },\n    { onfocus: 1, onblur: 1 },\n    { charset: 1 },\n    { declare: 8, classid: 1, codebase: 1, data: 1, codetype: 1, archive: 1, standby: 1 },\n    { title: 1 },\n    { value: 1 },\n    { cite: 1 },\n    { datetime: 1 },\n    { accept: 1 },\n    { shape: 4, coords: 1 },\n    { for: 11\n    },\n    { action: 1, method: 10, enctype: 1, onsubmit: 1, onreset: 1, 'accept-charset': 1 },\n    { valuetype: 9 },\n    { longdesc: 1 },\n    { width: 1 },\n    { disabled: 14 },\n    { readonly: 15, onselect: 1 },\n    { accesskey: 1 },\n    { size: 5, multiple: 16 },\n    { onchange: 1 },\n    { label: 1 },\n    { selected: 17 },\n    { type: 12, checked: 13, size: 1, maxlength: 5 },\n    { rows: 5, cols: 5 },\n    { type: 18 },\n    { height: 1 },\n    { summary: 1, border: 1, frame: 19, rules: 20, cellspacing: 1, cellpadding: 1, datapagesize: 1 },\n    { align: 21, char: 1, charoff: 1, valign: 22 },\n    { span: 5 },\n    { abbr: 1, axis: 1, headers: 23, scope: 24, rowspan: 5, colspan: 5 },\n    { profile: 1 },\n    { 'http-equiv': 2, name: 2, content: 1, scheme: 1 },\n    { class: 1, style: 1 },\n    { hreflang: 2, rel: 1, rev: 1 },\n    { ismap: 7 },\n    { defer: 25, event: 1, for: 1 }\n];\nvar elements = {\n    TT: [0, 1, 2, 16, 44],\n    I: [0, 1, 2, 16, 44],\n    B: [0, 1, 2, 16, 44],\n    BIG: [0, 1, 2, 16, 44],\n    SMALL: [0, 1, 2, 16, 44],\n    EM: [0, 1, 2, 16, 44],\n    STRONG: [0, 1, 2, 16, 44],\n    DFN: [0, 1, 2, 16, 44],\n    CODE: [0, 1, 2, 16, 44],\n    SAMP: [0, 1, 2, 16, 44],\n    KBD: [0, 1, 2, 16, 44],\n    VAR: [0, 1, 2, 16, 44],\n    CITE: [0, 1, 2, 16, 44],\n    ABBR: [0, 1, 2, 16, 44],\n    ACRONYM: [0, 1, 2, 16, 44],\n    SUB: [0, 1, 2, 16, 44],\n    SUP: [0, 1, 2, 16, 44],\n    SPAN: [0, 1, 2, 16, 44],\n    BDO: [0, 2, 16, 44],\n    BR: [0, 16, 44],\n    BODY: [0, 1, 2, 3, 16, 44],\n    ADDRESS: [0, 1, 2, 16, 44],\n    DIV: [0, 1, 2, 16, 44],\n    A: [0, 1, 2, 4, 5, 6, 8, 13, 14, 16, 21, 29, 44, 45],\n    MAP: [0, 1, 2, 4, 16, 44],\n    AREA: [0, 1, 2, 5, 7, 8, 10, 13, 16, 21, 29, 44],\n    LINK: [0, 1, 2, 5, 6, 9, 14, 16, 44, 45],\n    IMG: [0, 1, 2, 4, 7, 11, 12, 16, 25, 26, 37, 44, 46],\n    OBJECT: [0, 1, 2, 4, 6, 8, 11, 15, 16, 26, 37, 44],\n    PARAM: [0, 4, 6, 17, 24],\n    HR: [0, 1, 2, 16, 44],\n    P: [0, 1, 2, 16, 44],\n    H1: [0, 1, 2, 16, 44],\n    H2: [0, 1, 2, 16, 44],\n    H3: [0, 1, 2, 16, 44],\n    H4: [0, 1, 2, 16, 44],\n    H5: [0, 1, 2, 16, 44],\n    H6: [0, 1, 2, 16, 44],\n    PRE: [0, 1, 2, 16, 44],\n    Q: [0, 1, 2, 16, 18, 44],\n    BLOCKQUOTE: [0, 1, 2, 16, 18, 44],\n    INS: [0, 1, 2, 16, 18, 19, 44],\n    DEL: [0, 1, 2, 16, 18, 19, 44],\n    DL: [0, 1, 2, 16, 44],\n    DT: [0, 1, 2, 16, 44],\n    DD: [0, 1, 2, 16, 44],\n    OL: [0, 1, 2, 16, 44],\n    UL: [0, 1, 2, 16, 44],\n    LI: [0, 1, 2, 16, 44],\n    FORM: [0, 1, 2, 4, 16, 20, 23, 44],\n    LABEL: [0, 1, 2, 13, 16, 22, 29, 44],\n    INPUT: [0, 1, 2, 4, 7, 8, 11, 12, 13, 16, 17, 20, 27, 28, 29, 31, 34, 44, 46],\n    SELECT: [0, 1, 2, 4, 8, 13, 16, 27, 30, 31, 44],\n    OPTGROUP: [0, 1, 2, 16, 27, 32, 44],\n    OPTION: [0, 1, 2, 16, 17, 27, 32, 33, 44],\n    TEXTAREA: [0, 1, 2, 4, 8, 13, 16, 27, 28, 29, 31, 35, 44],\n    FIELDSET: [0, 1, 2, 16, 44],\n    LEGEND: [0, 1, 2, 16, 29, 44],\n    BUTTON: [0, 1, 2, 4, 8, 13, 16, 17, 27, 29, 36, 44],\n    TABLE: [0, 1, 2, 16, 26, 38, 44],\n    CAPTION: [0, 1, 2, 16, 44],\n    COLGROUP: [0, 1, 2, 16, 26, 39, 40, 44],\n    COL: [0, 1, 2, 16, 26, 39, 40, 44],\n    THEAD: [0, 1, 2, 16, 39, 44],\n    TBODY: [0, 1, 2, 16, 39, 44],\n    TFOOT: [0, 1, 2, 16, 39, 44],\n    TR: [0, 1, 2, 16, 39, 44],\n    TH: [0, 1, 2, 16, 39, 41, 44],\n    TD: [0, 1, 2, 16, 39, 41, 44],\n    HEAD: [2, 42],\n    TITLE: [2],\n    BASE: [5],\n    META: [2, 43],\n    STYLE: [2, 6, 9, 16],\n    SCRIPT: [6, 12, 14, 47],\n    NOSCRIPT: [0, 1, 2, 16, 44],\n    HTML: [2]\n};\nvar defaultAttributes = [0, 1, 2, 4];\nfunction elementNames() {\n    return Object.keys(elements).sort().map(function (v) { return v.toLowerCase(); });\n}\nfunction compose(indexes) {\n    var result = {};\n    if (indexes) {\n        for (var _i = 0, indexes_1 = indexes; _i < indexes_1.length; _i++) {\n            var index = indexes_1[_i];\n            var group = groups[index];\n            for (var name_1 in group)\n                if (group.hasOwnProperty(name_1))\n                    result[name_1] = values[group[name_1]];\n        }\n    }\n    return result;\n}\nfunction attributeNames(element) {\n    return Object.keys(compose(elements[element.toUpperCase()] || defaultAttributes)).sort();\n}\n\n// This section is describes the DOM property surface of a DOM element and is derivgulp formated\n// from\n// from the SCHEMA strings from the security context information. SCHEMA is copied here because\n// it would be an unnecessary risk to allow this array to be imported from the security context\n// schema registry.\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        /* added manually to avoid breaking changes */\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar EVENT = 'event';\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\nvar SchemaInformation = (function () {\n    function SchemaInformation() {\n        var _this = this;\n        this.schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var parts = encodedType.split('|');\n            var properties = parts[1].split(',');\n            var typeParts = (parts[0] + '^').split('^');\n            var typeName = typeParts[0];\n            var type = {};\n            typeName.split(',').forEach(function (tag) { return _this.schema[tag.toLowerCase()] = type; });\n            var superName = typeParts[1];\n            var superType = superName && _this.schema[superName.toLowerCase()];\n            if (superType) {\n                for (var key in superType) {\n                    type[key] = superType[key];\n                }\n            }\n            properties.forEach(function (property) {\n                if (property == '') {\n                }\n                else if (property.startsWith('*')) {\n                    type[property.substring(1)] = EVENT;\n                }\n                else if (property.startsWith('!')) {\n                    type[property.substring(1)] = BOOLEAN;\n                }\n                else if (property.startsWith('#')) {\n                    type[property.substring(1)] = NUMBER;\n                }\n                else if (property.startsWith('%')) {\n                    type[property.substring(1)] = OBJECT;\n                }\n                else {\n                    type[property] = STRING;\n                }\n            });\n        });\n    }\n    SchemaInformation.prototype.allKnownElements = function () { return Object.keys(this.schema); };\n    SchemaInformation.prototype.eventsOf = function (elementName) {\n        var elementType = this.schema[elementName.toLowerCase()] || {};\n        return Object.keys(elementType).filter(function (property) { return elementType[property] === EVENT; });\n    };\n    SchemaInformation.prototype.propertiesOf = function (elementName) {\n        var elementType = this.schema[elementName.toLowerCase()] || {};\n        return Object.keys(elementType).filter(function (property) { return elementType[property] !== EVENT; });\n    };\n    SchemaInformation.prototype.typeOf = function (elementName, property) {\n        return (this.schema[elementName.toLowerCase()] || {})[property];\n    };\n    Object.defineProperty(SchemaInformation, \"instance\", {\n        get: function () {\n            var result = SchemaInformation._instance;\n            if (!result) {\n                result = SchemaInformation._instance = new SchemaInformation();\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SchemaInformation;\n}());\nfunction eventNames(elementName) {\n    return SchemaInformation.instance.eventsOf(elementName);\n}\nfunction propertyNames(elementName) {\n    return SchemaInformation.instance.propertiesOf(elementName);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar hiddenHtmlElements = {\n    html: true,\n    script: true,\n    noscript: true,\n    base: true,\n    body: true,\n    title: true,\n    head: true,\n    link: true,\n};\nfunction getTemplateCompletions(templateInfo) {\n    var result = undefined;\n    var htmlAst = templateInfo.htmlAst, templateAst = templateInfo.templateAst, template = templateInfo.template;\n    // The templateNode starts at the delimiter character so we add 1 to skip it.\n    if (templateInfo.position != null) {\n        var templatePosition_1 = templateInfo.position - template.span.start;\n        var path_1 = findNode(htmlAst, templatePosition_1);\n        var mostSpecific = path_1.tail;\n        if (path_1.empty || !mostSpecific) {\n            result = elementCompletions(templateInfo, path_1);\n        }\n        else {\n            var astPosition_1 = templatePosition_1 - mostSpecific.sourceSpan.start.offset;\n            mostSpecific.visit({\n                visitElement: function (ast) {\n                    var startTagSpan = spanOf(ast.sourceSpan);\n                    var tagLen = ast.name.length;\n                    if (templatePosition_1 <=\n                        startTagSpan.start + tagLen + 1 /* 1 for the opening angle bracked */) {\n                        // If we are in the tag then return the element completions.\n                        result = elementCompletions(templateInfo, path_1);\n                    }\n                    else if (templatePosition_1 < startTagSpan.end) {\n                        // We are in the attribute section of the element (but not in an attribute).\n                        // Return the attribute completions.\n                        result = attributeCompletions(templateInfo, path_1);\n                    }\n                },\n                visitAttribute: function (ast) {\n                    if (!ast.valueSpan || !inSpan(templatePosition_1, spanOf(ast.valueSpan))) {\n                        // We are in the name of an attribute. Show attribute completions.\n                        result = attributeCompletions(templateInfo, path_1);\n                    }\n                    else if (ast.valueSpan && inSpan(templatePosition_1, spanOf(ast.valueSpan))) {\n                        result = attributeValueCompletions(templateInfo, templatePosition_1, ast);\n                    }\n                },\n                visitText: function (ast) {\n                    // Check if we are in a entity.\n                    result = entityCompletions(getSourceText(template, spanOf(ast)), astPosition_1);\n                    if (result)\n                        return result;\n                    result = interpolationCompletions(templateInfo, templatePosition_1);\n                    if (result)\n                        return result;\n                    var element = path_1.first(Element);\n                    if (element) {\n                        var definition = getHtmlTagDefinition(element.name);\n                        if (definition.contentType === TagContentType.PARSABLE_DATA) {\n                            result = voidElementAttributeCompletions(templateInfo, path_1);\n                            if (!result) {\n                                // If the element can hold content Show element completions.\n                                result = elementCompletions(templateInfo, path_1);\n                            }\n                        }\n                    }\n                    else {\n                        // If no element container, implies parsable data so show elements.\n                        result = voidElementAttributeCompletions(templateInfo, path_1);\n                        if (!result) {\n                            result = elementCompletions(templateInfo, path_1);\n                        }\n                    }\n                },\n                visitComment: function (ast) { },\n                visitExpansion: function (ast) { },\n                visitExpansionCase: function (ast) { }\n            }, null);\n        }\n    }\n    return result;\n}\nfunction attributeCompletions(info, path$$1) {\n    var item = path$$1.tail instanceof Element ? path$$1.tail : path$$1.parentOf(path$$1.tail);\n    if (item instanceof Element) {\n        return attributeCompletionsForElement(info, item.name, item);\n    }\n    return undefined;\n}\nfunction attributeCompletionsForElement(info, elementName, element) {\n    var attributes = getAttributeInfosForElement(info, elementName, element);\n    // Map all the attributes to a completion\n    return attributes.map(function (attr) { return ({\n        kind: attr.fromHtml ? 'html attribute' : 'attribute',\n        name: nameOfAttr(attr),\n        sort: attr.name\n    }); });\n}\nfunction getAttributeInfosForElement(info, elementName, element) {\n    var attributes = [];\n    // Add html attributes\n    var htmlAttributes = attributeNames(elementName) || [];\n    if (htmlAttributes) {\n        attributes.push.apply(attributes, htmlAttributes.map(function (name) { return ({ name: name, fromHtml: true }); }));\n    }\n    // Add html properties\n    var htmlProperties = propertyNames(elementName);\n    if (htmlProperties) {\n        attributes.push.apply(attributes, htmlProperties.map(function (name) { return ({ name: name, input: true }); }));\n    }\n    // Add html events\n    var htmlEvents = eventNames(elementName);\n    if (htmlEvents) {\n        attributes.push.apply(attributes, htmlEvents.map(function (name) { return ({ name: name, output: true }); }));\n    }\n    var _a = getSelectors(info), selectors = _a.selectors, selectorMap = _a.map;\n    if (selectors && selectors.length) {\n        // All the attributes that are selectable should be shown.\n        var applicableSelectors = selectors.filter(function (selector) { return !selector.element || selector.element == elementName; });\n        var selectorAndAttributeNames = applicableSelectors.map(function (selector) { return ({ selector: selector, attrs: selector.attrs.filter(function (a) { return !!a; }) }); });\n        var attrs_1 = flatten(selectorAndAttributeNames.map(function (selectorAndAttr) {\n            var directive = selectorMap.get(selectorAndAttr.selector);\n            var result = selectorAndAttr.attrs.map(function (name) { return ({ name: name, input: name in directive.inputs, output: name in directive.outputs }); });\n            return result;\n        }));\n        // Add template attribute if a directive contains a template reference\n        selectorAndAttributeNames.forEach(function (selectorAndAttr) {\n            var selector = selectorAndAttr.selector;\n            var directive = selectorMap.get(selector);\n            if (directive && hasTemplateReference(directive.type) && selector.attrs.length &&\n                selector.attrs[0]) {\n                attrs_1.push({ name: selector.attrs[0], template: true });\n            }\n        });\n        // All input and output properties of the matching directives should be added.\n        var elementSelector = element ?\n            createElementCssSelector(element) :\n            createElementCssSelector(new Element(elementName, [], [], null, null, null));\n        var matcher = new SelectorMatcher();\n        matcher.addSelectables(selectors);\n        matcher.match(elementSelector, function (selector) {\n            var directive = selectorMap.get(selector);\n            if (directive) {\n                attrs_1.push.apply(attrs_1, Object.keys(directive.inputs).map(function (name) { return ({ name: name, input: true }); }));\n                attrs_1.push.apply(attrs_1, Object.keys(directive.outputs).map(function (name) { return ({ name: name, output: true }); }));\n            }\n        });\n        // If a name shows up twice, fold it into a single value.\n        attrs_1 = foldAttrs(attrs_1);\n        // Now expand them back out to ensure that input/output shows up as well as input and\n        // output.\n        attributes.push.apply(attributes, flatten(attrs_1.map(expandedAttr)));\n    }\n    return attributes;\n}\nfunction attributeValueCompletions(info, position, attr) {\n    var path$$1 = findTemplateAstAt(info.templateAst, position);\n    var mostSpecific = path$$1.tail;\n    var dinfo = diagnosticInfoFromTemplateInfo(info);\n    if (mostSpecific) {\n        var visitor = new ExpressionVisitor(info, position, attr, function () { return language_services_2(dinfo, path$$1, false); });\n        mostSpecific.visit(visitor, null);\n        if (!visitor.result || !visitor.result.length) {\n            // Try allwoing widening the path\n            var widerPath_1 = findTemplateAstAt(info.templateAst, position, /* allowWidening */ true);\n            if (widerPath_1.tail) {\n                var widerVisitor = new ExpressionVisitor(info, position, attr, function () { return language_services_2(dinfo, widerPath_1, false); });\n                widerPath_1.tail.visit(widerVisitor, null);\n                return widerVisitor.result;\n            }\n        }\n        return visitor.result;\n    }\n}\nfunction elementCompletions(info, path$$1) {\n    var htmlNames = elementNames().filter(function (name) { return !(name in hiddenHtmlElements); });\n    // Collect the elements referenced by the selectors\n    var directiveElements = getSelectors(info)\n        .selectors.map(function (selector) { return selector.element; })\n        .filter(function (name) { return !!name; });\n    var components = directiveElements.map(function (name) { return ({ kind: 'component', name: name, sort: name }); });\n    var htmlElements = htmlNames.map(function (name) { return ({ kind: 'element', name: name, sort: name }); });\n    // Return components and html elements\n    return uniqueByName(htmlElements.concat(components));\n}\nfunction entityCompletions(value, position) {\n    // Look for entity completions\n    var re = /&[A-Za-z]*;?(?!\\d)/g;\n    var found;\n    var result = undefined;\n    while (found = re.exec(value)) {\n        var len = found[0].length;\n        if (position >= found.index && position < (found.index + len)) {\n            result = Object.keys(NAMED_ENTITIES)\n                .map(function (name) { return ({ kind: 'entity', name: \"&\" + name + \";\", sort: name }); });\n            break;\n        }\n    }\n    return result;\n}\nfunction interpolationCompletions(info, position) {\n    // Look for an interpolation in at the position.\n    var templatePath = findTemplateAstAt(info.templateAst, position);\n    var mostSpecific = templatePath.tail;\n    if (mostSpecific) {\n        var visitor = new ExpressionVisitor(info, position, undefined, function () { return language_services_2(diagnosticInfoFromTemplateInfo(info), templatePath, false); });\n        mostSpecific.visit(visitor, null);\n        return uniqueByName(visitor.result);\n    }\n}\n// There is a special case of HTML where text that contains a unclosed tag is treated as\n// text. For exaple '<h1> Some <a text </h1>' produces a text nodes inside of the H1\n// element \"Some <a text\". We, however, want to treat this as if the user was requesting\n// the attributes of an \"a\" element, not requesting completion in the a text element. This\n// code checks for this case and returns element completions if it is detected or undefined\n// if it is not.\nfunction voidElementAttributeCompletions(info, path$$1) {\n    var tail = path$$1.tail;\n    if (tail instanceof Text) {\n        var match = tail.value.match(/<(\\w(\\w|\\d|-)*:)?(\\w(\\w|\\d|-)*)\\s/);\n        // The position must be after the match, otherwise we are still in a place where elements\n        // are expected (such as `<|a` or `<a|`; we only want attributes for `<a |` or after).\n        if (match &&\n            path$$1.position >= (match.index || 0) + match[0].length + tail.sourceSpan.start.offset) {\n            return attributeCompletionsForElement(info, match[3]);\n        }\n    }\n}\nvar ExpressionVisitor = (function (_super) {\n    __extends(ExpressionVisitor, _super);\n    function ExpressionVisitor(info, position, attr, getExpressionScope$$1) {\n        var _this = _super.call(this) || this;\n        _this.info = info;\n        _this.position = position;\n        _this.attr = attr;\n        _this.getExpressionScope = getExpressionScope$$1 || (function () { return info.template.members; });\n        return _this;\n    }\n    ExpressionVisitor.prototype.visitDirectiveProperty = function (ast) {\n        this.attributeValueCompletions(ast.value);\n    };\n    ExpressionVisitor.prototype.visitElementProperty = function (ast) {\n        this.attributeValueCompletions(ast.value);\n    };\n    ExpressionVisitor.prototype.visitEvent = function (ast) { this.attributeValueCompletions(ast.handler); };\n    ExpressionVisitor.prototype.visitElement = function (ast) {\n        var _this = this;\n        if (this.attr && getSelectors(this.info) && this.attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\n            // The value is a template expression but the expression AST was not produced when the\n            // TemplateAst was produce so\n            // do that now.\n            var key_1 = this.attr.name.substr(TEMPLATE_ATTR_PREFIX.length);\n            // Find the selector\n            var selectorInfo = getSelectors(this.info);\n            var selectors = selectorInfo.selectors;\n            var selector_1 = selectors.filter(function (s) { return s.attrs.some(function (attr, i) { return i % 2 == 0 && attr == key_1; }); })[0];\n            var templateBindingResult = this.info.expressionParser.parseTemplateBindings(key_1, this.attr.value, null);\n            // find the template binding that contains the position\n            if (!this.attr.valueSpan)\n                return;\n            var valueRelativePosition_1 = this.position - this.attr.valueSpan.start.offset - 1;\n            var bindings = templateBindingResult.templateBindings;\n            var binding = bindings.find(function (binding) { return inSpan(valueRelativePosition_1, binding.span, /* exclusive */ true); }) ||\n                bindings.find(function (binding) { return inSpan(valueRelativePosition_1, binding.span); });\n            var keyCompletions = function () {\n                var keys = [];\n                if (selector_1) {\n                    var attrNames = selector_1.attrs.filter(function (_, i) { return i % 2 == 0; });\n                    keys = attrNames.filter(function (name) { return name.startsWith(key_1) && name != key_1; })\n                        .map(function (name) { return lowerName(name.substr(key_1.length)); });\n                }\n                keys.push('let');\n                _this.result = keys.map(function (key) { return ({ kind: 'key', name: key, sort: key }); });\n            };\n            if (!binding || (binding.key == key_1 && !binding.expression)) {\n                // We are in the root binding. We should return `let` and keys that are left in the\n                // selector.\n                keyCompletions();\n            }\n            else if (binding.keyIsVar) {\n                var equalLocation = this.attr.value.indexOf('=');\n                this.result = [];\n                if (equalLocation >= 0 && valueRelativePosition_1 >= equalLocation) {\n                    // We are after the '=' in a let clause. The valid values here are the members of the\n                    // template reference's type parameter.\n                    var directiveMetadata = selectorInfo.map.get(selector_1);\n                    if (directiveMetadata) {\n                        var contextTable = this.info.template.query.getTemplateContext(directiveMetadata.type.reference);\n                        if (contextTable) {\n                            this.result = this.symbolsToCompletions(contextTable.values());\n                        }\n                    }\n                }\n                else if (binding.key && valueRelativePosition_1 <= (binding.key.length - key_1.length)) {\n                    keyCompletions();\n                }\n            }\n            else {\n                // If the position is in the expression or after the key or there is no key, return the\n                // expression completions\n                if ((binding.expression && inSpan(valueRelativePosition_1, binding.expression.ast.span)) ||\n                    (binding.key &&\n                        valueRelativePosition_1 > binding.span.start + (binding.key.length - key_1.length)) ||\n                    !binding.key) {\n                    var span = new ParseSpan(0, this.attr.value.length);\n                    this.attributeValueCompletions(binding.expression ? binding.expression.ast :\n                        new PropertyRead(span, new ImplicitReceiver(span), ''), valueRelativePosition_1);\n                }\n                else {\n                    keyCompletions();\n                }\n            }\n        }\n    };\n    ExpressionVisitor.prototype.visitBoundText = function (ast) {\n        var expressionPosition = this.position - ast.sourceSpan.start.offset;\n        if (inSpan(expressionPosition, ast.value.span)) {\n            var completions = getExpressionCompletions(this.getExpressionScope(), ast.value, expressionPosition, this.info.template.query);\n            if (completions) {\n                this.result = this.symbolsToCompletions(completions);\n            }\n        }\n    };\n    ExpressionVisitor.prototype.attributeValueCompletions = function (value, position) {\n        var symbols = getExpressionCompletions(this.getExpressionScope(), value, position == null ? this.attributeValuePosition : position, this.info.template.query);\n        if (symbols) {\n            this.result = this.symbolsToCompletions(symbols);\n        }\n    };\n    ExpressionVisitor.prototype.symbolsToCompletions = function (symbols) {\n        return symbols.filter(function (s) { return !s.name.startsWith('__') && s.public; })\n            .map(function (symbol) { return ({ kind: symbol.kind, name: symbol.name, sort: symbol.name }); });\n    };\n    Object.defineProperty(ExpressionVisitor.prototype, \"attributeValuePosition\", {\n        get: function () {\n            if (this.attr && this.attr.valueSpan) {\n                return this.position - this.attr.valueSpan.start.offset - 1;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ExpressionVisitor;\n}(NullTemplateVisitor));\nfunction getSourceText(template, span) {\n    return template.source.substring(span.start, span.end);\n}\nfunction nameOfAttr(attr) {\n    var name = attr.name;\n    if (attr.output) {\n        name = removeSuffix(name, 'Events');\n        name = removeSuffix(name, 'Changed');\n    }\n    var result = [name];\n    if (attr.input) {\n        result.unshift('[');\n        result.push(']');\n    }\n    if (attr.output) {\n        result.unshift('(');\n        result.push(')');\n    }\n    if (attr.template) {\n        result.unshift('*');\n    }\n    return result.join('');\n}\nvar templateAttr = /^(\\w+:)?(template$|^\\*)/;\nfunction createElementCssSelector(element) {\n    var cssSelector = new CssSelector();\n    var elNameNoNs = splitNsName(element.name)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var _i = 0, _a = element.attrs; _i < _a.length; _i++) {\n        var attr = _a[_i];\n        if (!attr.name.match(templateAttr)) {\n            var _b = splitNsName(attr.name), _ = _b[0], attrNameNoNs = _b[1];\n            cssSelector.addAttribute(attrNameNoNs, attr.value);\n            if (attr.name.toLowerCase() == 'class') {\n                var classes = attr.value.split(/s+/g);\n                classes.forEach(function (className) { return cssSelector.addClassName(className); });\n            }\n        }\n    }\n    return cssSelector;\n}\nfunction foldAttrs(attrs) {\n    var inputOutput = new Map();\n    var templates = new Map();\n    var result = [];\n    attrs.forEach(function (attr) {\n        if (attr.fromHtml) {\n            return attr;\n        }\n        if (attr.template) {\n            var duplicate = templates.get(attr.name);\n            if (!duplicate) {\n                result.push({ name: attr.name, template: true });\n                templates.set(attr.name, attr);\n            }\n        }\n        if (attr.input || attr.output) {\n            var duplicate = inputOutput.get(attr.name);\n            if (duplicate) {\n                duplicate.input = duplicate.input || attr.input;\n                duplicate.output = duplicate.output || attr.output;\n            }\n            else {\n                var cloneAttr = { name: attr.name };\n                if (attr.input)\n                    cloneAttr.input = true;\n                if (attr.output)\n                    cloneAttr.output = true;\n                result.push(cloneAttr);\n                inputOutput.set(attr.name, cloneAttr);\n            }\n        }\n    });\n    return result;\n}\nfunction expandedAttr(attr) {\n    if (attr.input && attr.output) {\n        return [\n            attr, { name: attr.name, input: true, output: false },\n            { name: attr.name, input: false, output: true }\n        ];\n    }\n    return [attr];\n}\nfunction lowerName(name) {\n    return name && (name[0].toLowerCase() + name.substr(1));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction locateSymbol(info) {\n    if (!info.position)\n        return undefined;\n    var templatePosition = info.position - info.template.span.start;\n    var path$$1 = findTemplateAstAt(info.templateAst, templatePosition);\n    if (path$$1.tail) {\n        var symbol_1 = undefined;\n        var span_1 = undefined;\n        var attributeValueSymbol_1 = function (ast, inEvent) {\n            if (inEvent === void 0) { inEvent = false; }\n            var attribute = findAttribute(info);\n            if (attribute) {\n                if (inSpan(templatePosition, spanOf(attribute.valueSpan))) {\n                    var dinfo = diagnosticInfoFromTemplateInfo(info);\n                    var scope = language_services_2(dinfo, path$$1, inEvent);\n                    if (attribute.valueSpan) {\n                        var expressionOffset = attribute.valueSpan.start.offset + 1;\n                        var result = getExpressionSymbol(scope, ast, templatePosition - expressionOffset, info.template.query);\n                        if (result) {\n                            symbol_1 = result.symbol;\n                            span_1 = offsetSpan(result.span, expressionOffset);\n                        }\n                    }\n                    return true;\n                }\n            }\n            return false;\n        };\n        path$$1.tail.visit({\n            visitNgContent: function (ast) { },\n            visitEmbeddedTemplate: function (ast) { },\n            visitElement: function (ast) {\n                var component = ast.directives.find(function (d) { return d.directive.isComponent; });\n                if (component) {\n                    symbol_1 = info.template.query.getTypeSymbol(component.directive.type.reference);\n                    symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'component');\n                    span_1 = spanOf(ast);\n                }\n                else {\n                    // Find a directive that matches the element name\n                    var directive = ast.directives.find(function (d) { return d.directive.selector != null && d.directive.selector.indexOf(ast.name) >= 0; });\n                    if (directive) {\n                        symbol_1 = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                        symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'directive');\n                        span_1 = spanOf(ast);\n                    }\n                }\n            },\n            visitReference: function (ast) {\n                symbol_1 = ast.value && info.template.query.getTypeSymbol(tokenReference(ast.value));\n                span_1 = spanOf(ast);\n            },\n            visitVariable: function (ast) { },\n            visitEvent: function (ast) {\n                if (!attributeValueSymbol_1(ast.handler, /* inEvent */ true)) {\n                    symbol_1 = findOutputBinding(info, path$$1, ast);\n                    symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'event');\n                    span_1 = spanOf(ast);\n                }\n            },\n            visitElementProperty: function (ast) { attributeValueSymbol_1(ast.value); },\n            visitAttr: function (ast) { },\n            visitBoundText: function (ast) {\n                var expressionPosition = templatePosition - ast.sourceSpan.start.offset;\n                if (inSpan(expressionPosition, ast.value.span)) {\n                    var dinfo = diagnosticInfoFromTemplateInfo(info);\n                    var scope = language_services_2(dinfo, path$$1, /* includeEvent */ false);\n                    var result = getExpressionSymbol(scope, ast.value, expressionPosition, info.template.query);\n                    if (result) {\n                        symbol_1 = result.symbol;\n                        span_1 = offsetSpan(result.span, ast.sourceSpan.start.offset);\n                    }\n                }\n            },\n            visitText: function (ast) { },\n            visitDirective: function (ast) {\n                symbol_1 = info.template.query.getTypeSymbol(ast.directive.type.reference);\n                span_1 = spanOf(ast);\n            },\n            visitDirectiveProperty: function (ast) {\n                if (!attributeValueSymbol_1(ast.value)) {\n                    symbol_1 = findInputBinding(info, path$$1, ast);\n                    span_1 = spanOf(ast);\n                }\n            }\n        }, null);\n        if (symbol_1 && span_1) {\n            return { symbol: symbol_1, span: offsetSpan(span_1, info.template.span.start) };\n        }\n    }\n}\nfunction findAttribute(info) {\n    if (info.position) {\n        var templatePosition = info.position - info.template.span.start;\n        var path$$1 = findNode(info.htmlAst, templatePosition);\n        return path$$1.first(Attribute$1);\n    }\n}\nfunction findInputBinding(info, path$$1, binding) {\n    var element = path$$1.first(ElementAst);\n    if (element) {\n        for (var _i = 0, _a = element.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            var invertedInput = invertMap(directive.directive.inputs);\n            var fieldName = invertedInput[binding.templateName];\n            if (fieldName) {\n                var classSymbol = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                if (classSymbol) {\n                    return classSymbol.members().get(fieldName);\n                }\n            }\n        }\n    }\n}\nfunction findOutputBinding(info, path$$1, binding) {\n    var element = path$$1.first(ElementAst);\n    if (element) {\n        for (var _i = 0, _a = element.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            var invertedOutputs = invertMap(directive.directive.outputs);\n            var fieldName = invertedOutputs[binding.name];\n            if (fieldName) {\n                var classSymbol = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                if (classSymbol) {\n                    return classSymbol.members().get(fieldName);\n                }\n            }\n        }\n    }\n}\nfunction invertMap(obj) {\n    var result = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var name_1 = _a[_i];\n        var v = obj[name_1];\n        result[v] = name_1;\n    }\n    return result;\n}\n/**\n * Wrap a symbol and change its kind to component.\n */\nvar OverrideKindSymbol = (function () {\n    function OverrideKindSymbol(sym, kindOverride) {\n        this.sym = sym;\n        this.kind = kindOverride;\n    }\n    Object.defineProperty(OverrideKindSymbol.prototype, \"name\", {\n        get: function () { return this.sym.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"language\", {\n        get: function () { return this.sym.language; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"type\", {\n        get: function () { return this.sym.type; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"container\", {\n        get: function () { return this.sym.container; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"public\", {\n        get: function () { return this.sym.public; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"callable\", {\n        get: function () { return this.sym.callable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"nullable\", {\n        get: function () { return this.sym.nullable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"definition\", {\n        get: function () { return this.sym.definition; },\n        enumerable: true,\n        configurable: true\n    });\n    OverrideKindSymbol.prototype.members = function () { return this.sym.members(); };\n    OverrideKindSymbol.prototype.signatures = function () { return this.sym.signatures(); };\n    OverrideKindSymbol.prototype.selectSignature = function (types) { return this.sym.selectSignature(types); };\n    OverrideKindSymbol.prototype.indexed = function (argument) { return this.sym.indexed(argument); };\n    return OverrideKindSymbol;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getDefinition(info) {\n    var result = locateSymbol(info);\n    return result && result.symbol.definition;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getTemplateDiagnostics(fileName, astProvider, templates) {\n    var results = [];\n    var _loop_1 = function (template) {\n        var ast = astProvider.getTemplateAst(template, fileName);\n        if (ast) {\n            if (ast.parseErrors && ast.parseErrors.length) {\n                results.push.apply(results, ast.parseErrors.map(function (e) { return ({\n                    kind: DiagnosticKind.Error,\n                    span: offsetSpan(spanOf(e.span), template.span.start),\n                    message: e.msg\n                }); }));\n            }\n            else if (ast.templateAst && ast.htmlAst) {\n                var info = {\n                    templateAst: ast.templateAst,\n                    htmlAst: ast.htmlAst,\n                    offset: template.span.start,\n                    query: template.query,\n                    members: template.members\n                };\n                var expressionDiagnostics = language_services_3(info);\n                results.push.apply(results, expressionDiagnostics);\n            }\n            if (ast.errors) {\n                results.push.apply(results, ast.errors.map(function (e) { return ({ kind: e.kind, span: e.span || template.span, message: e.message }); }));\n            }\n        }\n    };\n    for (var _i = 0, templates_1 = templates; _i < templates_1.length; _i++) {\n        var template = templates_1[_i];\n        _loop_1(template);\n    }\n    return results;\n}\nfunction getDeclarationDiagnostics(declarations, modules) {\n    var results = [];\n    var directives = undefined;\n    var _loop_2 = function (declaration) {\n        var report = function (message, span) {\n            results.push({\n                kind: DiagnosticKind.Error,\n                span: span || declaration.declarationSpan, message: message\n            });\n        };\n        for (var _i = 0, _a = declaration.errors; _i < _a.length; _i++) {\n            var error = _a[_i];\n            report(error.message, error.span);\n        }\n        if (declaration.metadata) {\n            if (declaration.metadata.isComponent) {\n                if (!modules.ngModuleByPipeOrDirective.has(declaration.type)) {\n                    report(\"Component '\" + declaration.type.name + \"' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration\");\n                }\n                if (!declaration.metadata.template.template &&\n                    !declaration.metadata.template.templateUrl) {\n                    report(\"Component \" + declaration.type.name + \" must have a template or templateUrl\");\n                }\n            }\n            else {\n                if (!directives) {\n                    directives = new Set();\n                    modules.ngModules.forEach(function (module) {\n                        module.declaredDirectives.forEach(function (directive) { directives.add(directive.reference); });\n                    });\n                }\n                if (!directives.has(declaration.type)) {\n                    report(\"Directive '\" + declaration.type.name + \"' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration\");\n                }\n            }\n        }\n    };\n    for (var _i = 0, declarations_1 = declarations; _i < declarations_1.length; _i++) {\n        var declaration = declarations_1[_i];\n        _loop_2(declaration);\n    }\n    return results;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getHover(info) {\n    var result = locateSymbol(info);\n    if (result) {\n        return { text: hoverTextOf(result.symbol), span: result.span };\n    }\n}\nfunction hoverTextOf(symbol) {\n    var result = [{ text: symbol.kind }, { text: ' ' }, { text: symbol.name, language: symbol.language }];\n    var container = symbol.container;\n    if (container) {\n        result.push({ text: ' of ' }, { text: container.name, language: container.language });\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create an instance of an Angular `LanguageService`.\n *\n * @experimental\n */\nfunction createLanguageService(host) {\n    return new LanguageServiceImpl(host);\n}\nvar LanguageServiceImpl = (function () {\n    function LanguageServiceImpl(host) {\n        this.host = host;\n    }\n    Object.defineProperty(LanguageServiceImpl.prototype, \"metadataResolver\", {\n        get: function () { return this.host.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    LanguageServiceImpl.prototype.getTemplateReferences = function () { return this.host.getTemplateReferences(); };\n    LanguageServiceImpl.prototype.getDiagnostics = function (fileName) {\n        var results = [];\n        var templates = this.host.getTemplates(fileName);\n        if (templates && templates.length) {\n            results.push.apply(results, getTemplateDiagnostics(fileName, this, templates));\n        }\n        var declarations = this.host.getDeclarations(fileName);\n        if (declarations && declarations.length) {\n            var summary = this.host.getAnalyzedModules();\n            results.push.apply(results, getDeclarationDiagnostics(declarations, summary));\n        }\n        return uniqueBySpan(results);\n    };\n    LanguageServiceImpl.prototype.getPipesAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return templateInfo.pipes;\n        }\n        return [];\n    };\n    LanguageServiceImpl.prototype.getCompletionsAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getTemplateCompletions(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getDefinitionAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getDefinition(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getHoverAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getHover(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getTemplateAstAtPosition = function (fileName, position) {\n        var template = this.host.getTemplateAt(fileName, position);\n        if (template) {\n            var astResult = this.getTemplateAst(template, fileName);\n            if (astResult && astResult.htmlAst && astResult.templateAst && astResult.directive &&\n                astResult.directives && astResult.pipes && astResult.expressionParser)\n                return {\n                    position: position,\n                    fileName: fileName,\n                    template: template,\n                    htmlAst: astResult.htmlAst,\n                    directive: astResult.directive,\n                    directives: astResult.directives,\n                    pipes: astResult.pipes,\n                    templateAst: astResult.templateAst,\n                    expressionParser: astResult.expressionParser\n                };\n        }\n        return undefined;\n    };\n    LanguageServiceImpl.prototype.getTemplateAst = function (template, contextFile) {\n        var _this = this;\n        var result = undefined;\n        try {\n            var resolvedMetadata = this.metadataResolver.getNonNormalizedDirectiveMetadata(template.type);\n            var metadata = resolvedMetadata && resolvedMetadata.metadata;\n            if (metadata) {\n                var rawHtmlParser = new HtmlParser();\n                var htmlParser = new I18NHtmlParser(rawHtmlParser);\n                var expressionParser = new Parser(new Lexer());\n                var config = new CompilerConfig();\n                var parser = new TemplateParser(config, this.host.resolver.getReflector(), expressionParser, new DomElementSchemaRegistry(), htmlParser, null, []);\n                var htmlResult = htmlParser.parse(template.source, '', true);\n                var analyzedModules = this.host.getAnalyzedModules();\n                var errors = undefined;\n                var ngModule = analyzedModules.ngModuleByPipeOrDirective.get(template.type);\n                if (!ngModule) {\n                    // Reported by the the declaration diagnostics.\n                    ngModule = findSuitableDefaultModule(analyzedModules);\n                }\n                if (ngModule) {\n                    var resolvedDirectives = ngModule.transitiveModule.directives.map(function (d) { return _this.host.resolver.getNonNormalizedDirectiveMetadata(d.reference); });\n                    var directives = removeMissing(resolvedDirectives).map(function (d) { return d.metadata.toSummary(); });\n                    var pipes = ngModule.transitiveModule.pipes.map(function (p) { return _this.host.resolver.getOrLoadPipeMetadata(p.reference).toSummary(); });\n                    var schemas = ngModule.schemas;\n                    var parseResult = parser.tryParseHtml(htmlResult, metadata, directives, pipes, schemas);\n                    result = {\n                        htmlAst: htmlResult.rootNodes,\n                        templateAst: parseResult.templateAst,\n                        directive: metadata, directives: directives, pipes: pipes,\n                        parseErrors: parseResult.errors, expressionParser: expressionParser, errors: errors\n                    };\n                }\n            }\n        }\n        catch (e) {\n            var span = template.span;\n            if (e.fileName == contextFile) {\n                span = template.query.getSpanAt(e.line, e.column) || span;\n            }\n            result = { errors: [{ kind: DiagnosticKind.Error, message: e.message, span: span }] };\n        }\n        return result || {};\n    };\n    return LanguageServiceImpl;\n}());\nfunction removeMissing(values) {\n    return values.filter(function (e) { return !!e; });\n}\nfunction uniqueBySpan(elements) {\n    if (elements) {\n        var result = [];\n        var map = new Map();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            var span = element.span;\n            var set = map.get(span.start);\n            if (!set) {\n                set = new Set();\n                map.set(span.start, set);\n            }\n            if (!set.has(span.end)) {\n                set.add(span.end);\n                result.push(element);\n            }\n        }\n        return result;\n    }\n}\nfunction findSuitableDefaultModule(modules) {\n    var result = undefined;\n    var resultSize = 0;\n    for (var _i = 0, _a = modules.ngModules; _i < _a.length; _i++) {\n        var module_1 = _a[_i];\n        var moduleSize = module_1.transitiveModule.directives.length;\n        if (moduleSize > resultSize) {\n            result = module_1;\n            resultSize = moduleSize;\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ReflectorModuleModuleResolutionHost = (function () {\n    function ReflectorModuleModuleResolutionHost(host, getProgram) {\n        var _this = this;\n        this.host = host;\n        this.getProgram = getProgram;\n        // Note: verboseInvalidExpressions is important so that\n        // the collector will collect errors instead of throwing\n        this.metadataCollector = new language_services_13({ verboseInvalidExpression: true });\n        if (host.directoryExists)\n            this.directoryExists = function (directoryName) { return _this.host.directoryExists(directoryName); };\n    }\n    ReflectorModuleModuleResolutionHost.prototype.fileExists = function (fileName) { return !!this.host.getScriptSnapshot(fileName); };\n    ReflectorModuleModuleResolutionHost.prototype.readFile = function (fileName) {\n        var snapshot = this.host.getScriptSnapshot(fileName);\n        if (snapshot) {\n            return snapshot.getText(0, snapshot.getLength());\n        }\n        // Typescript readFile() declaration should be `readFile(fileName: string): string | undefined\n        return undefined;\n    };\n    ReflectorModuleModuleResolutionHost.prototype.getSourceFileMetadata = function (fileName) {\n        var sf = this.getProgram().getSourceFile(fileName);\n        return sf ? this.metadataCollector.getMetadata(sf) : undefined;\n    };\n    ReflectorModuleModuleResolutionHost.prototype.cacheMetadata = function (fileName) {\n        // Don't cache the metadata for .ts files as they might change in the editor!\n        return fileName.endsWith('.d.ts');\n    };\n    return ReflectorModuleModuleResolutionHost;\n}());\nvar ReflectorHost = (function () {\n    function ReflectorHost(getProgram, serviceHost, options) {\n        this.options = options;\n        this.metadataReaderCache = language_services_14();\n        this.hostAdapter = new ReflectorModuleModuleResolutionHost(serviceHost, getProgram);\n        this.moduleResolutionCache =\n            ts.createModuleResolutionCache(serviceHost.getCurrentDirectory(), function (s) { return s; });\n    }\n    ReflectorHost.prototype.getMetadataFor = function (modulePath) {\n        return language_services_15(modulePath, this.hostAdapter, this.metadataReaderCache);\n    };\n    ReflectorHost.prototype.moduleNameToFileName = function (moduleName, containingFile) {\n        if (!containingFile) {\n            if (moduleName.indexOf('.') === 0) {\n                throw new Error('Resolution of relative paths requires a containing file.');\n            }\n            // Any containing file gives the same result for absolute imports\n            containingFile = path.join(this.options.basePath, 'index.ts');\n        }\n        var resolved = ts.resolveModuleName(moduleName, containingFile, this.options, this.hostAdapter)\n            .resolvedModule;\n        return resolved ? resolved.resolvedFileName : null;\n    };\n    return ReflectorHost;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a `LanguageServiceHost`\n */\nfunction createLanguageServiceFromTypescript(host, service) {\n    var ngHost = new TypeScriptServiceHost(host, service);\n    var ngServer = createLanguageService(ngHost);\n    ngHost.setSite(ngServer);\n    return ngServer;\n}\n/**\n * The language service never needs the normalized versions of the metadata. To avoid parsing\n * the content and resolving references, return an empty file. This also allows normalizing\n * template that are syntatically incorrect which is required to provide completions in\n * syntactically incorrect templates.\n */\nvar DummyHtmlParser = (function (_super) {\n    __extends(DummyHtmlParser, _super);\n    function DummyHtmlParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DummyHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return new ParseTreeResult([], []);\n    };\n    return DummyHtmlParser;\n}(HtmlParser));\n/**\n * Avoid loading resources in the language servcie by using a dummy loader.\n */\nvar DummyResourceLoader = (function (_super) {\n    __extends(DummyResourceLoader, _super);\n    function DummyResourceLoader() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DummyResourceLoader.prototype.get = function (url) { return Promise.resolve(''); };\n    return DummyResourceLoader;\n}(ResourceLoader));\n/**\n * An implemntation of a `LanguageServiceHost` for a TypeScript project.\n *\n * The `TypeScriptServiceHost` implements the Angular `LanguageServiceHost` using\n * the TypeScript language services.\n *\n * @experimental\n */\nvar TypeScriptServiceHost = (function () {\n    function TypeScriptServiceHost(host, tsService) {\n        this.host = host;\n        this.tsService = tsService;\n        this._staticSymbolCache = new StaticSymbolCache();\n        this._typeCache = [];\n        this.modulesOutOfDate = true;\n        this.fileVersions = new Map();\n    }\n    TypeScriptServiceHost.prototype.setSite = function (service) { this.service = service; };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"resolver\", {\n        /**\n         * Angular LanguageServiceHost implementation\n         */\n        get: function () {\n            var _this = this;\n            this.validate();\n            var result = this._resolver;\n            if (!result) {\n                var moduleResolver = new NgModuleResolver(this.reflector);\n                var directiveResolver = new DirectiveResolver(this.reflector);\n                var pipeResolver = new PipeResolver(this.reflector);\n                var elementSchemaRegistry = new DomElementSchemaRegistry();\n                var resourceLoader = new DummyResourceLoader();\n                var urlResolver = createOfflineCompileUrlResolver();\n                var htmlParser = new DummyHtmlParser();\n                // This tracks the CompileConfig in codegen.ts. Currently these options\n                // are hard-coded.\n                var config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation$1.Emulated, useJit: false });\n                var directiveNormalizer = new DirectiveNormalizer(resourceLoader, urlResolver, htmlParser, config);\n                result = this._resolver = new CompileMetadataResolver(config, htmlParser, moduleResolver, directiveResolver, pipeResolver, new JitSummaryResolver(), elementSchemaRegistry, directiveNormalizer, new Console(), this._staticSymbolCache, this.reflector, function (error, type) { return _this.collectError(error, type && type.filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.getTemplateReferences = function () {\n        this.ensureTemplateMap();\n        return this.templateReferences || [];\n    };\n    TypeScriptServiceHost.prototype.getTemplateAt = function (fileName, position) {\n        var sourceFile = this.getSourceFile(fileName);\n        if (sourceFile) {\n            this.context = sourceFile.fileName;\n            var node = this.findNode(sourceFile, position);\n            if (node) {\n                return this.getSourceFromNode(fileName, this.host.getScriptVersion(sourceFile.fileName), node);\n            }\n        }\n        else {\n            this.ensureTemplateMap();\n            // TODO: Cannocalize the file?\n            var componentType = this.fileToComponent.get(fileName);\n            if (componentType) {\n                return this.getSourceFromType(fileName, this.host.getScriptVersion(fileName), componentType);\n            }\n        }\n        return undefined;\n    };\n    TypeScriptServiceHost.prototype.getAnalyzedModules = function () {\n        this.validate();\n        return this.ensureAnalyzedModules();\n    };\n    TypeScriptServiceHost.prototype.ensureAnalyzedModules = function () {\n        var analyzedModules = this.analyzedModules;\n        if (!analyzedModules) {\n            var analyzeHost = { isSourceFile: function (filePath) { return true; } };\n            var programFiles = this.program.getSourceFiles().map(function (sf) { return sf.fileName; });\n            analyzedModules = this.analyzedModules =\n                analyzeNgModules(programFiles, analyzeHost, this.staticSymbolResolver, this.resolver);\n        }\n        return analyzedModules;\n    };\n    TypeScriptServiceHost.prototype.getTemplates = function (fileName) {\n        var _this = this;\n        this.ensureTemplateMap();\n        var componentType = this.fileToComponent.get(fileName);\n        if (componentType) {\n            var templateSource = this.getTemplateAt(fileName, 0);\n            if (templateSource) {\n                return [templateSource];\n            }\n        }\n        else {\n            var version_1 = this.host.getScriptVersion(fileName);\n            var result_1 = [];\n            // Find each template string in the file\n            var visit_1 = function (child) {\n                var templateSource = _this.getSourceFromNode(fileName, version_1, child);\n                if (templateSource) {\n                    result_1.push(templateSource);\n                }\n                else {\n                    ts.forEachChild(child, visit_1);\n                }\n            };\n            var sourceFile = this.getSourceFile(fileName);\n            if (sourceFile) {\n                this.context = sourceFile.path || sourceFile.fileName;\n                ts.forEachChild(sourceFile, visit_1);\n            }\n            return result_1.length ? result_1 : undefined;\n        }\n    };\n    TypeScriptServiceHost.prototype.getDeclarations = function (fileName) {\n        var _this = this;\n        var result = [];\n        var sourceFile = this.getSourceFile(fileName);\n        if (sourceFile) {\n            var visit_2 = function (child) {\n                var declaration = _this.getDeclarationFromNode(sourceFile, child);\n                if (declaration) {\n                    result.push(declaration);\n                }\n                else {\n                    ts.forEachChild(child, visit_2);\n                }\n            };\n            ts.forEachChild(sourceFile, visit_2);\n        }\n        return result;\n    };\n    TypeScriptServiceHost.prototype.getSourceFile = function (fileName) {\n        return this.tsService.getProgram().getSourceFile(fileName);\n    };\n    TypeScriptServiceHost.prototype.updateAnalyzedModules = function () {\n        this.validate();\n        if (this.modulesOutOfDate) {\n            this.analyzedModules = null;\n            this._reflector = null;\n            this.templateReferences = null;\n            this.fileToComponent = null;\n            this.ensureAnalyzedModules();\n            this.modulesOutOfDate = false;\n        }\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"program\", {\n        get: function () { return this.tsService.getProgram(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"checker\", {\n        get: function () {\n            var checker = this._checker;\n            if (!checker) {\n                checker = this._checker = this.program.getTypeChecker();\n            }\n            return checker;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.validate = function () {\n        var _this = this;\n        var program = this.program;\n        if (this._staticSymbolResolver && this.lastProgram != program) {\n            // Invalidate file that have changed in the static symbol resolver\n            var invalidateFile = function (fileName) {\n                return _this._staticSymbolResolver.invalidateFile(fileName);\n            };\n            this.clearCaches();\n            var seen_1 = new Set();\n            for (var _i = 0, _a = this.program.getSourceFiles(); _i < _a.length; _i++) {\n                var sourceFile = _a[_i];\n                var fileName = sourceFile.fileName;\n                seen_1.add(fileName);\n                var version$$1 = this.host.getScriptVersion(fileName);\n                var lastVersion = this.fileVersions.get(fileName);\n                if (version$$1 != lastVersion) {\n                    this.fileVersions.set(fileName, version$$1);\n                    invalidateFile(fileName);\n                }\n            }\n            // Remove file versions that are no longer in the file and invalidate them.\n            var missing = Array.from(this.fileVersions.keys()).filter(function (f) { return !seen_1.has(f); });\n            missing.forEach(function (f) { return _this.fileVersions.delete(f); });\n            missing.forEach(invalidateFile);\n            this.lastProgram = program;\n        }\n    };\n    TypeScriptServiceHost.prototype.clearCaches = function () {\n        this._checker = null;\n        this._typeCache = [];\n        this._resolver = null;\n        this.collectedErrors = null;\n        this.modulesOutOfDate = true;\n    };\n    TypeScriptServiceHost.prototype.ensureTemplateMap = function () {\n        if (!this.fileToComponent || !this.templateReferences) {\n            var fileToComponent = new Map();\n            var templateReference = [];\n            var ngModuleSummary = this.getAnalyzedModules();\n            var urlResolver = createOfflineCompileUrlResolver();\n            for (var _i = 0, _a = ngModuleSummary.ngModules; _i < _a.length; _i++) {\n                var module_1 = _a[_i];\n                for (var _b = 0, _c = module_1.declaredDirectives; _b < _c.length; _b++) {\n                    var directive = _c[_b];\n                    var metadata = this.resolver.getNonNormalizedDirectiveMetadata(directive.reference).metadata;\n                    if (metadata.isComponent && metadata.template && metadata.template.templateUrl) {\n                        var templateName = urlResolver.resolve(this.reflector.componentModuleUrl(directive.reference), metadata.template.templateUrl);\n                        fileToComponent.set(templateName, directive.reference);\n                        templateReference.push(templateName);\n                    }\n                }\n            }\n            this.fileToComponent = fileToComponent;\n            this.templateReferences = templateReference;\n        }\n    };\n    TypeScriptServiceHost.prototype.getSourceFromDeclaration = function (fileName, version$$1, source, span, type, declaration, node, sourceFile) {\n        var queryCache = undefined;\n        var t = this;\n        if (declaration) {\n            return {\n                version: version$$1,\n                source: source,\n                span: span,\n                type: type,\n                get members() {\n                    return language_services_10(t.program, t.checker, sourceFile, declaration);\n                },\n                get query() {\n                    if (!queryCache) {\n                        var pipes_1 = t.service.getPipesAt(fileName, node.getStart());\n                        queryCache = language_services_12(t.program, t.checker, sourceFile, function () { return language_services_11(sourceFile, t.program, t.checker, pipes_1); });\n                    }\n                    return queryCache;\n                }\n            };\n        }\n    };\n    TypeScriptServiceHost.prototype.getSourceFromNode = function (fileName, version$$1, node) {\n        var result = undefined;\n        var t = this;\n        switch (node.kind) {\n            case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n            case ts.SyntaxKind.StringLiteral:\n                var _a = this.getTemplateClassDeclFromNode(node), declaration = _a[0], decorator = _a[1];\n                if (declaration && declaration.name) {\n                    var sourceFile = this.getSourceFile(fileName);\n                    return this.getSourceFromDeclaration(fileName, version$$1, this.stringOf(node) || '', shrink(spanOf$1(node)), this.reflector.getStaticSymbol(sourceFile.fileName, declaration.name.text), declaration, node, sourceFile);\n                }\n                break;\n        }\n        return result;\n    };\n    TypeScriptServiceHost.prototype.getSourceFromType = function (fileName, version$$1, type) {\n        var result = undefined;\n        var declaration = this.getTemplateClassFromStaticSymbol(type);\n        if (declaration) {\n            var snapshot = this.host.getScriptSnapshot(fileName);\n            if (snapshot) {\n                var source = snapshot.getText(0, snapshot.getLength());\n                result = this.getSourceFromDeclaration(fileName, version$$1, source, { start: 0, end: source.length }, type, declaration, declaration, declaration.getSourceFile());\n            }\n        }\n        return result;\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"reflectorHost\", {\n        get: function () {\n            var _this = this;\n            var result = this._reflectorHost;\n            if (!result) {\n                if (!this.context) {\n                    // Make up a context by finding the first script and using that as the base dir.\n                    this.context = this.host.getScriptFileNames()[0];\n                }\n                // Use the file context's directory as the base directory.\n                // The host's getCurrentDirectory() is not reliable as it is always \"\" in\n                // tsserver. We don't need the exact base directory, just one that contains\n                // a source file.\n                var source = this.tsService.getProgram().getSourceFile(this.context);\n                if (!source) {\n                    throw new Error('Internal error: no context could be determined');\n                }\n                var tsConfigPath = findTsConfig(source.fileName);\n                var basePath = path.dirname(tsConfigPath || this.context);\n                var options = { basePath: basePath, genDir: basePath };\n                var compilerOptions = this.host.getCompilationSettings();\n                if (compilerOptions && compilerOptions.baseUrl) {\n                    options.baseUrl = compilerOptions.baseUrl;\n                }\n                result = this._reflectorHost =\n                    new ReflectorHost(function () { return _this.tsService.getProgram(); }, this.host, options);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.collectError = function (error, filePath) {\n        if (filePath) {\n            var errorMap = this.collectedErrors;\n            if (!errorMap || !this.collectedErrors) {\n                errorMap = this.collectedErrors = new Map();\n            }\n            var errors = errorMap.get(filePath);\n            if (!errors) {\n                errors = [];\n                this.collectedErrors.set(filePath, errors);\n            }\n            errors.push(error);\n        }\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"staticSymbolResolver\", {\n        get: function () {\n            var _this = this;\n            var result = this._staticSymbolResolver;\n            if (!result) {\n                this._summaryResolver = new AotSummaryResolver({\n                    loadSummary: function (filePath) { return null; },\n                    isSourceFile: function (sourceFilePath) { return true; },\n                    toSummaryFileName: function (sourceFilePath) { return sourceFilePath; },\n                    fromSummaryFileName: function (filePath) { return filePath; },\n                }, this._staticSymbolCache);\n                result = this._staticSymbolResolver = new StaticSymbolResolver(this.reflectorHost, this._staticSymbolCache, this._summaryResolver, function (e, filePath) { return _this.collectError(e, filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"reflector\", {\n        get: function () {\n            var _this = this;\n            var result = this._reflector;\n            if (!result) {\n                var ssr = this.staticSymbolResolver;\n                result = this._reflector = new StaticReflector(this._summaryResolver, ssr, [], [], function (e, filePath) { return _this.collectError(e, filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.getTemplateClassFromStaticSymbol = function (type) {\n        var source = this.getSourceFile(type.filePath);\n        if (source) {\n            var declarationNode = ts.forEachChild(source, function (child) {\n                if (child.kind === ts.SyntaxKind.ClassDeclaration) {\n                    var classDeclaration = child;\n                    if (classDeclaration.name != null && classDeclaration.name.text === type.name) {\n                        return classDeclaration;\n                    }\n                }\n            });\n            return declarationNode;\n        }\n        return undefined;\n    };\n    /**\n     * Given a template string node, see if it is an Angular template string, and if so return the\n     * containing class.\n     */\n    TypeScriptServiceHost.prototype.getTemplateClassDeclFromNode = function (currentToken) {\n        // Verify we are in a 'template' property assignment, in an object literal, which is an call\n        // arg, in a decorator\n        var parentNode = currentToken.parent; // PropertyAssignment\n        if (!parentNode) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        if (parentNode.kind !== ts.SyntaxKind.PropertyAssignment) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        else {\n            // TODO: Is this different for a literal, i.e. a quoted property name like \"template\"?\n            if (parentNode.name.text !== 'template') {\n                return TypeScriptServiceHost.missingTemplate;\n            }\n        }\n        parentNode = parentNode.parent; // ObjectLiteralExpression\n        if (!parentNode || parentNode.kind !== ts.SyntaxKind.ObjectLiteralExpression) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        parentNode = parentNode.parent; // CallExpression\n        if (!parentNode || parentNode.kind !== ts.SyntaxKind.CallExpression) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        var callTarget = parentNode.expression;\n        var decorator = parentNode.parent; // Decorator\n        if (!decorator || decorator.kind !== ts.SyntaxKind.Decorator) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        var declaration = decorator.parent; // ClassDeclaration\n        if (!declaration || declaration.kind !== ts.SyntaxKind.ClassDeclaration) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        return [declaration, callTarget];\n    };\n    TypeScriptServiceHost.prototype.getCollectedErrors = function (defaultSpan, sourceFile) {\n        var errors = (this.collectedErrors && this.collectedErrors.get(sourceFile.fileName));\n        return (errors && errors.map(function (e) {\n            return { message: e.message, span: spanAt(sourceFile, e.line, e.column) || defaultSpan };\n        })) ||\n            [];\n    };\n    TypeScriptServiceHost.prototype.getDeclarationFromNode = function (sourceFile, node) {\n        if (node.kind == ts.SyntaxKind.ClassDeclaration && node.decorators &&\n            node.name) {\n            for (var _i = 0, _a = node.decorators; _i < _a.length; _i++) {\n                var decorator = _a[_i];\n                if (decorator.expression && decorator.expression.kind == ts.SyntaxKind.CallExpression) {\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        var call = decorator.expression;\n                        var target = call.expression;\n                        var type = this.checker.getTypeAtLocation(target);\n                        if (type) {\n                            var staticSymbol = this.reflector.getStaticSymbol(sourceFile.fileName, classDeclaration.name.text);\n                            try {\n                                if (this.resolver.isDirective(staticSymbol)) {\n                                    var metadata = this.resolver.getNonNormalizedDirectiveMetadata(staticSymbol).metadata;\n                                    var declarationSpan = spanOf$1(target);\n                                    return {\n                                        type: staticSymbol,\n                                        declarationSpan: declarationSpan,\n                                        metadata: metadata,\n                                        errors: this.getCollectedErrors(declarationSpan, sourceFile)\n                                    };\n                                }\n                            }\n                            catch (e) {\n                                if (e.message) {\n                                    this.collectError(e, sourceFile.fileName);\n                                    var declarationSpan = spanOf$1(target);\n                                    return {\n                                        type: staticSymbol,\n                                        declarationSpan: declarationSpan,\n                                        errors: this.getCollectedErrors(declarationSpan, sourceFile)\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TypeScriptServiceHost.prototype.stringOf = function (node) {\n        switch (node.kind) {\n            case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n                return node.text;\n            case ts.SyntaxKind.StringLiteral:\n                return node.text;\n        }\n    };\n    TypeScriptServiceHost.prototype.findNode = function (sourceFile, position) {\n        function find(node) {\n            if (position >= node.getStart() && position < node.getEnd()) {\n                return ts.forEachChild(node, find) || node;\n            }\n        }\n        return find(sourceFile);\n    };\n    TypeScriptServiceHost.missingTemplate = [undefined, undefined];\n    return TypeScriptServiceHost;\n}());\nfunction findTsConfig(fileName) {\n    var dir = path.dirname(fileName);\n    while (fs.existsSync(dir)) {\n        var candidate = path.join(dir, 'tsconfig.json');\n        if (fs.existsSync(candidate))\n            return candidate;\n        var parentDir = path.dirname(dir);\n        if (parentDir === dir)\n            break;\n        dir = parentDir;\n    }\n}\nfunction spanOf$1(node) {\n    return { start: node.getStart(), end: node.getEnd() };\n}\nfunction shrink(span, offset) {\n    if (offset == null)\n        offset = 1;\n    return { start: span.start + offset, end: span.end - offset };\n}\nfunction spanAt(sourceFile, line, column) {\n    if (line != null && column != null) {\n        var position_1 = ts.getPositionOfLineAndCharacter(sourceFile, line, column);\n        var findChild = function findChild(node) {\n            if (node.kind > ts.SyntaxKind.LastToken && node.pos <= position_1 && node.end > position_1) {\n                var betterNode = ts.forEachChild(node, findChild);\n                return betterNode || node;\n            }\n        };\n        var node = ts.forEachChild(sourceFile, findChild);\n        if (node) {\n            return { start: node.getStart(), end: node.getEnd() };\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar projectHostMap = new WeakMap();\nfunction getExternalFiles(project) {\n    var host = projectHostMap.get(project);\n    if (host) {\n        return host.getTemplateReferences();\n    }\n}\nvar angularOnlyResults = process.argv.indexOf('--angularOnlyResults') >= 0;\nfunction angularOnlyFilter(ls) {\n    return {\n        cleanupSemanticCache: function () { return ls.cleanupSemanticCache(); },\n        getSyntacticDiagnostics: function (fileName) { return []; },\n        getSemanticDiagnostics: function (fileName) { return []; },\n        getCompilerOptionsDiagnostics: function () { return []; },\n        getSyntacticClassifications: function (fileName, span) { return []; },\n        getSemanticClassifications: function (fileName, span) { return []; },\n        getEncodedSyntacticClassifications: function (fileName, span) { return ({ undefined: undefined }); },\n        getEncodedSemanticClassifications: function (fileName, span) { return undefined; },\n        getCompletionsAtPosition: function (fileName, position) { return undefined; },\n        getCompletionEntryDetails: function (fileName, position, entryName) {\n            return undefined;\n        },\n        getCompletionEntrySymbol: function (fileName, position, entryName) { return undefined; },\n        getQuickInfoAtPosition: function (fileName, position) { return undefined; },\n        getNameOrDottedNameSpan: function (fileName, startPos, endPos) { return undefined; },\n        getBreakpointStatementAtPosition: function (fileName, position) { return undefined; },\n        getSignatureHelpItems: function (fileName, position) { return undefined; },\n        getRenameInfo: function (fileName, position) { return undefined; },\n        findRenameLocations: function (fileName, position, findInStrings, findInComments) {\n            return [];\n        },\n        getDefinitionAtPosition: function (fileName, position) { return []; },\n        getTypeDefinitionAtPosition: function (fileName, position) { return []; },\n        getImplementationAtPosition: function (fileName, position) { return []; },\n        getReferencesAtPosition: function (fileName, position) { return []; },\n        findReferences: function (fileName, position) { return []; },\n        getDocumentHighlights: function (fileName, position, filesToSearch) { return []; },\n        /** @deprecated */\n        getOccurrencesAtPosition: function (fileName, position) { return []; },\n        getNavigateToItems: function (searchValue) { return []; },\n        getNavigationBarItems: function (fileName) { return []; },\n        getNavigationTree: function (fileName) { return undefined; },\n        getOutliningSpans: function (fileName) { return []; },\n        getTodoComments: function (fileName, descriptors) { return []; },\n        getBraceMatchingAtPosition: function (fileName, position) { return []; },\n        getIndentationAtPosition: function (fileName, position, options) { return undefined; },\n        getFormattingEditsForRange: function (fileName, start, end, options) { return []; },\n        getFormattingEditsForDocument: function (fileName, options) { return []; },\n        getFormattingEditsAfterKeystroke: function (fileName, position, key, options) { return []; },\n        getDocCommentTemplateAtPosition: function (fileName, position) { return undefined; },\n        isValidBraceCompletionAtPosition: function (fileName, position, openingBrace) { return undefined; },\n        getCodeFixesAtPosition: function (fileName, start, end, errorCodes) { return []; },\n        getEmitOutput: function (fileName) { return undefined; },\n        getProgram: function () { return ls.getProgram(); },\n        dispose: function () { return ls.dispose(); },\n        getApplicableRefactors: function (fileName, positionOrRaneg) { return []; },\n        getEditsForRefactor: function (fileName, formatOptions, positionOrRange, refactorName, actionName) {\n            return undefined;\n        },\n    };\n}\nfunction create(info /* ts.server.PluginCreateInfo */) {\n    // Create the proxy\n    var proxy = Object.create(null);\n    var oldLS = info.languageService;\n    if (angularOnlyResults) {\n        oldLS = angularOnlyFilter(oldLS);\n    }\n    function tryCall(fileName, callback) {\n        if (fileName && !oldLS.getProgram().getSourceFile(fileName)) {\n            return undefined;\n        }\n        try {\n            return callback();\n        }\n        catch (e) {\n            return undefined;\n        }\n    }\n    function tryFilenameCall(m) {\n        return function (fileName) { return tryCall(fileName, function () { return (m.call(ls, fileName)); }); };\n    }\n    function tryFilenameOneCall(m) {\n        return function (fileName, p) { return tryCall(fileName, function () { return (m.call(ls, fileName, p)); }); };\n    }\n    function tryFilenameTwoCall(m) {\n        return function (fileName, p1, p2) { return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2)); }); };\n    }\n    function tryFilenameThreeCall(m) {\n        return function (fileName, p1, p2, p3) { return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2, p3)); }); };\n    }\n    function tryFilenameFourCall(m) {\n        return function (fileName, p1, p2, p3, p4) {\n            return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2, p3, p4)); });\n        };\n    }\n    function typescriptOnly(ls) {\n        return {\n            cleanupSemanticCache: function () { return ls.cleanupSemanticCache(); },\n            getSyntacticDiagnostics: tryFilenameCall(ls.getSyntacticDiagnostics),\n            getSemanticDiagnostics: tryFilenameCall(ls.getSemanticDiagnostics),\n            getCompilerOptionsDiagnostics: function () { return ls.getCompilerOptionsDiagnostics(); },\n            getSyntacticClassifications: tryFilenameOneCall(ls.getSemanticClassifications),\n            getSemanticClassifications: tryFilenameOneCall(ls.getSemanticClassifications),\n            getEncodedSyntacticClassifications: tryFilenameOneCall(ls.getEncodedSyntacticClassifications),\n            getEncodedSemanticClassifications: tryFilenameOneCall(ls.getEncodedSemanticClassifications),\n            getCompletionsAtPosition: tryFilenameOneCall(ls.getCompletionsAtPosition),\n            getCompletionEntryDetails: tryFilenameTwoCall(ls.getCompletionEntryDetails),\n            getCompletionEntrySymbol: tryFilenameTwoCall(ls.getCompletionEntrySymbol),\n            getQuickInfoAtPosition: tryFilenameOneCall(ls.getQuickInfoAtPosition),\n            getNameOrDottedNameSpan: tryFilenameTwoCall(ls.getNameOrDottedNameSpan),\n            getBreakpointStatementAtPosition: tryFilenameOneCall(ls.getBreakpointStatementAtPosition),\n            getSignatureHelpItems: tryFilenameOneCall(ls.getSignatureHelpItems),\n            getRenameInfo: tryFilenameOneCall(ls.getRenameInfo),\n            findRenameLocations: tryFilenameThreeCall(ls.findRenameLocations),\n            getDefinitionAtPosition: tryFilenameOneCall(ls.getDefinitionAtPosition),\n            getTypeDefinitionAtPosition: tryFilenameOneCall(ls.getTypeDefinitionAtPosition),\n            getImplementationAtPosition: tryFilenameOneCall(ls.getImplementationAtPosition),\n            getReferencesAtPosition: tryFilenameOneCall(ls.getReferencesAtPosition),\n            findReferences: tryFilenameOneCall(ls.findReferences),\n            getDocumentHighlights: tryFilenameTwoCall(ls.getDocumentHighlights),\n            /** @deprecated */\n            getOccurrencesAtPosition: tryFilenameOneCall(ls.getOccurrencesAtPosition),\n            getNavigateToItems: function (searchValue, maxResultCount, fileName, excludeDtsFiles) { return tryCall(fileName, function () { return ls.getNavigateToItems(searchValue, maxResultCount, fileName, excludeDtsFiles); }); },\n            getNavigationBarItems: tryFilenameCall(ls.getNavigationBarItems),\n            getNavigationTree: tryFilenameCall(ls.getNavigationTree),\n            getOutliningSpans: tryFilenameCall(ls.getOutliningSpans),\n            getTodoComments: tryFilenameOneCall(ls.getTodoComments),\n            getBraceMatchingAtPosition: tryFilenameOneCall(ls.getBraceMatchingAtPosition),\n            getIndentationAtPosition: tryFilenameTwoCall(ls.getIndentationAtPosition),\n            getFormattingEditsForRange: tryFilenameThreeCall(ls.getFormattingEditsForRange),\n            getFormattingEditsForDocument: tryFilenameOneCall(ls.getFormattingEditsForDocument),\n            getFormattingEditsAfterKeystroke: tryFilenameThreeCall(ls.getFormattingEditsAfterKeystroke),\n            getDocCommentTemplateAtPosition: tryFilenameOneCall(ls.getDocCommentTemplateAtPosition),\n            isValidBraceCompletionAtPosition: tryFilenameTwoCall(ls.isValidBraceCompletionAtPosition),\n            getCodeFixesAtPosition: tryFilenameFourCall(ls.getCodeFixesAtPosition),\n            getEmitOutput: tryFilenameCall(ls.getEmitOutput),\n            getProgram: function () { return ls.getProgram(); },\n            dispose: function () { return ls.dispose(); },\n            getApplicableRefactors: function (fileName, positionOrRaneg) { return []; },\n            getEditsForRefactor: function (fileName, formatOptions, positionOrRange, refactorName, actionName) {\n                return undefined;\n            },\n        };\n    }\n    oldLS = typescriptOnly(oldLS);\n    var _loop_1 = function (k) {\n        proxy[k] = function () { return oldLS[k].apply(oldLS, arguments); };\n    };\n    for (var k in oldLS) {\n        _loop_1(k);\n    }\n    function completionToEntry(c) {\n        return { kind: c.kind, name: c.name, sortText: c.sort, kindModifiers: '' };\n    }\n    function diagnosticToDiagnostic(d, file) {\n        var result = {\n            file: file,\n            start: d.span.start,\n            length: d.span.end - d.span.start,\n            messageText: d.message,\n            category: ts.DiagnosticCategory.Error,\n            code: 0,\n            source: 'ng'\n        };\n        return result;\n    }\n    function tryOperation(attempting, callback) {\n        try {\n            return callback();\n        }\n        catch (e) {\n            info.project.projectService.logger.info(\"Failed to \" + attempting + \": \" + e.toString());\n            info.project.projectService.logger.info(\"Stack trace: \" + e.stack);\n            return null;\n        }\n    }\n    var serviceHost = new TypeScriptServiceHost(info.languageServiceHost, info.languageService);\n    var ls = createLanguageService(serviceHost);\n    serviceHost.setSite(ls);\n    projectHostMap.set(info.project, serviceHost);\n    proxy.getCompletionsAtPosition = function (fileName, position) {\n        var base = oldLS.getCompletionsAtPosition(fileName, position) || {\n            isGlobalCompletion: false,\n            isMemberCompletion: false,\n            isNewIdentifierLocation: false,\n            entries: []\n        };\n        tryOperation('get completions', function () {\n            var results = ls.getCompletionsAt(fileName, position);\n            if (results && results.length) {\n                if (base === undefined) {\n                    base = {\n                        isGlobalCompletion: false,\n                        isMemberCompletion: false,\n                        isNewIdentifierLocation: false,\n                        entries: []\n                    };\n                }\n                for (var _i = 0, results_1 = results; _i < results_1.length; _i++) {\n                    var entry = results_1[_i];\n                    base.entries.push(completionToEntry(entry));\n                }\n            }\n        });\n        return base;\n    };\n    proxy.getQuickInfoAtPosition = function (fileName, position) {\n        var base = oldLS.getQuickInfoAtPosition(fileName, position);\n        // TODO(vicb): the tags property has been removed in TS 2.2\n        tryOperation('get quick info', function () {\n            var ours = ls.getHoverAt(fileName, position);\n            if (ours) {\n                var displayParts = [];\n                for (var _i = 0, _a = ours.text; _i < _a.length; _i++) {\n                    var part = _a[_i];\n                    displayParts.push({ kind: part.language || 'angular', text: part.text });\n                }\n                var tags = base && base.tags;\n                base = {\n                    displayParts: displayParts,\n                    documentation: [],\n                    kind: 'angular',\n                    kindModifiers: 'what does this do?',\n                    textSpan: { start: ours.span.start, length: ours.span.end - ours.span.start },\n                };\n                if (tags) {\n                    base.tags = tags;\n                }\n            }\n        });\n        return base;\n    };\n    proxy.getSemanticDiagnostics = function (fileName) {\n        var result = oldLS.getSemanticDiagnostics(fileName);\n        var base = result || [];\n        tryOperation('get diagnostics', function () {\n            info.project.projectService.logger.info(\"Computing Angular semantic diagnostics...\");\n            var ours = ls.getDiagnostics(fileName);\n            if (ours && ours.length) {\n                var file_1 = oldLS.getProgram().getSourceFile(fileName);\n                base.push.apply(base, ours.map(function (d) { return diagnosticToDiagnostic(d, file_1); }));\n            }\n        });\n        return base;\n    };\n    proxy.getDefinitionAtPosition = function (fileName, position) {\n        var base = oldLS.getDefinitionAtPosition(fileName, position);\n        if (base && base.length) {\n            return base;\n        }\n        return tryOperation('get definition', function () {\n            var ours = ls.getDefinitionAt(fileName, position);\n            if (ours && ours.length) {\n                base = base || [];\n                for (var _i = 0, ours_1 = ours; _i < ours_1.length; _i++) {\n                    var loc = ours_1[_i];\n                    base.push({\n                        fileName: loc.fileName,\n                        textSpan: { start: loc.span.start, length: loc.span.end - loc.span.start },\n                        name: '',\n                        kind: 'definition',\n                        containerName: loc.fileName,\n                        containerKind: 'file'\n                    });\n                }\n            }\n            return base;\n        }) || [];\n    };\n    return proxy;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * @stable\n */\nvar VERSION = new Version$1('5.0.0-rc.8-85e95cc');\n\nexports.createLanguageService = createLanguageService;\nexports.TypeScriptServiceHost = TypeScriptServiceHost;\nexports.createLanguageServiceFromTypescript = createLanguageServiceFromTypescript;\nexports.VERSION = VERSION;\nexports.getExternalFiles = getExternalFiles;\nexports.create = create;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n});\n//# sourceMappingURL=language-service.umd.js.map\n"]}