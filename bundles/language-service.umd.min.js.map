{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/language-service/bundles/language-service.umd.js"],"names":["$getModule","name","$provided","require","define","modules","cb","$deferred","$reflect","defineMetadata","getOwnMetadata","global","$resolved","module","exports","provided","result","Object","assign","reflect-metadata","apply","this","map","fs","path","ts","__extends","d","b","__","constructor","extendStatics","prototype","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","SchemaMetadata","MetadataFactory","makeMetadataFactory","props","factory","args","_i","arguments","length","values","__assign","ngMetadataName","isTypeOf","obj","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","Error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten$1","list","reduce","flat","item","flatItem","concat","jitSourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf$1$1","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path$$1","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ERROR_COMPONENT_TYPE","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector$1","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","symbol","metadata","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","transitiveModule","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","__symbolic","isNgSymbol","isDirective","isPipe","isInjectable","getNgModuleMetadata","isValueExportingNonSourceFile","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","compiler","AotCompiler","StyleCompiler","NgModuleCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","seen","summaries","createOutputContext","genFilePath","moduleName","runtime","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","createCommonjsModule","isFunction","isObject","tryCatcher","tryCatchTarget","errorObject","tryCatch","flattenUnsubscriptionErrors","errs","err","UnsubscriptionError_1","UnsubscriptionError","toSubscriber","nextOrObserver","complete","Subscriber_1","Subscriber","rxSubscriber","Observer","empty","noop$1","pipe","fns","pipeFromArray","prev","noop_1","noop","isScheduler","schedule","isPromise$2","subscribe","subscribeToResult","outerSubscriber","outerValue","outerIndex","destination","InnerSubscriber_1","InnerSubscriber","closed","Observable_1","Observable","_isScalar","next","syncErrorThrowable","isArrayLike","isPromise_1","root","setTimeout","iterator","iterator$$1","done","observable","obs","TypeError","isObject_1","mergeMap","project","resultSelector","concurrent","POSITIVE_INFINITY","lift","MergeMapOperator","identity","mergeAll","mergeMap_1","identity_1","merge$3","observables","call","mergeStatic$1","scheduler","last","isScheduler_1","mergeAll_1","ArrayObservable_1","ArrayObservable","merge$2","merge_1","refCount","RefCountOperator$1","multicast","subjectOrSubjectFactory","subjectFactory","MulticastOperator","connectable","ConnectableObservable_1","connectableObservableDescriptor","shareSubjectFactory","Subject_1","Subject","share$1","refCount_1","multicast_1","share","share_1","makeDecorator","parentClass","chainFn","DecoratorFactory","objOrType","metaCtor","annotationInstance","TypeDecorator","cls","ANNOTATIONS","makeMetadataCtor","annotationCls","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","parameters","PARAMETERS","annotation","getSymbolIterator","_symbolIterator","Symbol_1","_global","getOwnPropertyNames","scheduleMicroTask","Zone","current","looseIdentical","stringify$1","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef$1","resolveProvider","computeDeps","IDENT","EMPTY","useNew","provide","USE_VALUE$1","staticError","multiProviderMixError","recursivelyProcessProviders","records","MULTI_PROVIDER_FN","record","tryResolveToken","notFoundValue","resolveToken","NG_TEMP_TOKEN_PATH","CIRCULAR","NO_NEW_LINE","depRecords","depRecord","childRecord","NULL_INJECTOR","Injector","THROW_IF_NOT_FOUND","providerDeps","annotations","Optional","SkipSelf","Self","Inject$1","formatError","charAt","JSON","NEW_LINE","getDebugContext","ERROR_DEBUG_CONTEXT","getOriginalError","ERROR_ORIGINAL_ERROR","getErrorLogger","ERROR_LOGGER","defaultErrorLogger","wrappedError","originalError","findFirstClosedCycle","constructResolvingPath","injectionError","injector","constructResolvingMessage","errMsg","addKey","injectors","noProviderError","cyclicDependencyError","instantiationError","originalException","originalStack","first","invalidProviderError","noAnnotationError","typeOrFunc","signature","ii","parameter","outOfBoundsError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","isType","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","getParentCtor","parentProto","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","constructDependencies","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","resolveReflectiveProviders","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","resolvedFactories","Type$1$1","params_1","t","_extractToken","optional","_createDependency","visibility","paramMetadata","InjectionToken","_mapProviders","_providers","getProviderAtIndex","isPromise$1","_appIdRandomProviderFactory","_randomChar","floor","random","_throwError","noComponentFactoryError","ERROR_COMPONENT","createScope","events","leave","scope","returnValue","trace","leaveScope","noopScope","arg0","arg1","checkStable","zone","_nesting","hasPendingMicrotasks","isStable","onMicrotaskEmpty","emit","runOutsideAngular","onStable","forkInnerZoneWithAngularBehavior","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","hasPendingMacrotasks","macroTask","onHandleError","handleError","onError","onUnstable","isDevMode","_runModeLocked","_devMode","createPlatform","_platform","destroyed","ALLOW_MULTIPLE_PLATFORMS","PlatformRef","inits","PLATFORM_INITIALIZER","init","assertPlatform","requiredToken","platform","getPlatform","getNgZone","ngZoneOption","NoopNgZone","NgZone","enableLongStackTrace","_callAndReportToErrorHandler","errorHandler","ngZone","catch","optionsReducer","dst","objs","remove","splice","flatten$2","_queryElementChildren","predicate","matches","childNodes","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","isJsObject","comparator","iterator1","iterator2","item1","item2","iterateListLike","getPreviousIndex","addRemoveOffset","moveOffsets","previousIndex","moveOffset","getTypeNameForDebugging","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","_localeFactory","locale","asTextData","view","asElementData","asProviderData","asPureExpressionData","asQueryList","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","viewWrappedDebugError","_addDebugContext","logError","isViewDebugError","viewDestroyedError","tokenKey","_tokenKeyCache","size","checkBinding","def","oldValues","state","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","Services","createDebugContext","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","eventName","event","componentView","handleEvent","declaredViewContainer","viewParentEl","renderNode","renderElement","renderText","elementEventFullName$1","isComponentView","isEmbeddedView","splitDepsDsl","getParentRenderElement","renderHost","renderParent","componentRendererType","encapsulation","ViewEncapsulation$1","Native","resolveDefinition","DEFINITION_CACHE","NOOP","rootRenderNodes","renderNodes","visitRootRenderNodes","nextSibling","renderer","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","appendChild","insertBefore","removeChild","splitNamespace","NS_PREFIX_RE","createElement","elDef","rootSelectorOrNode","selectorOrNode","ns","createComment","parentEl","selectRootElement","name_2","setAttribute","listenToElementOutputs","outputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","outputIndex","checkAndUpdateElementInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","bindings","changed","checkAndUpdateElementValue","checkAndUpdateElementDynamic","binding","elData","renderNode$$1","setElementAttribute","setElementClass","setElementStyle","setElementProperty","renderValue","sanitizer","sanitize","removeAttribute","addClass","removeClass","SecurityContext$1","setStyle","removeStyle","setProperty","initNgModule","data","_def","provDef","_createProviderInstance$1","resolveNgModuleDep","_parent","tokenKey$$1","InjectorRefTokenKey$1","NgModuleRefTokenKey","providersByKey","providerInstance","UNDEFINED_VALUE","injectable","_createClass","_callFactory","depValues","callNgModuleLifecycle","lifecycles","instance","ngOnDestroy","attachEmbeddedView","parentView","elementData","viewIndex","addToArray","attachProjectedView","dirtyParentQueries","renderAttachEmbeddedView","vcElementData","dvcElementData","projectedViews","template","_projectedViews","markNodeAsProjectedTemplate","viewDef","nodeFlags","parentNodeDef","childFlags","detachEmbeddedView","removeFromArray","renderDetachView","detachProjectedView","moveEmbeddedView","oldViewIndex","newViewIndex","prevView","prevRenderNode","createViewContainerData","ViewContainerRef_","createChangeDetectorRef","ViewRef_","createTemplateData","TemplateRef_","createInjector","Injector_","createRendererV1","RendererAdapter","createNgModuleRef","moduleType","bootstrapComponents","NgModuleRef_","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","allowPrivateServices","subscription","eventHandlerClosure","unsubscribe","checkAndUpdateDirectiveInline","providerData","changes","updateProp","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveDynamic","callFactory","resolveDep","startView","ChangeDetectorRefTokenKey","RendererV1TokenKey","findCompView","Renderer2TokenKey","ElementRefTokenKey","ElementRef","ViewContainerRefTokenKey","viewContainer","TemplateRefTokenKey","InjectorRefTokenKey","providerDef_1","allProviders","publicProviders","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","WrappedValue","wrapped","SimpleChange","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","directChildFlags","callElementProvidersLifecycles","setCurrentNode","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","createQuery","QueryList","nodeMatchedQueries","tplDef","filterId","setDirty","checkAndUpdateQuery","queryList","dirty","directiveInstance","newValues","elementDef","calcQueryValues","reset","notify","boundValue","bindingType","notifyOnChanges","queryDef","valueType","matchedQueries","getQueryValue","childMatchedQueries","embeddedView","dvc","projectedView","queryValueType","appendNgContent","createPureExpression","checkAndUpdatePureExpressionInline","checkAndUpdatePureExpressionDynamic","createText","checkAndUpdateTextInline","_addInterpolationPart","checkAndUpdateTextDynamic","createEmbeddedView","anchorDef$$1","createView","initView","createViewNodes","createRootView","createComponentView","hostElement","compRenderer","rendererType","rendererFactory","createRenderer","componentProvider","disposables","outputCount","bindingCount","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","checkNoChangesView","markProjectedViewsForCheck","updateDirectives","execEmbeddedViewsAction","CheckNoChanges","updateRenderer","checkAndUpdateView","CheckAndUpdate","checkAndUpdateNode","argStyle","checkAndUpdateNodeInline","checkAndUpdateNodeDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","destroyView","Destroy","destroyNode","destroyViewNodes","destroy","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","nodeCount","initServicesIfNeeded","initialized","services","createDebugServices","createProdServices","overrideProvider","clearProviderOverrides","createProdRootView","DebugContext_","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugClearProviderOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","elInjector","createRootData","RendererFactory2","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","Sanitizer","ErrorHandler","anchorDef","viewDef$$1","parentInjector","applyProviderOverridesToNgModule","override","providerOverrides","clear","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","elIndex","hasOverrides","hasDeprecatedOverrides","deprecatedBehavior","checkIndex","detectChanges","checkNoChanges","_currentView","_currentNodeIndex","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","_currentAction","debugCheckRenderNodeFn","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","camelCaseToDashCase","CAMEL_CASE_REGEXP","getRenderNodeIndex","renderNodeIndex","findHostElement","collectReferences","references","refName","self","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","isParseSourceSpan","spanOf","inSpan","exclusive","offsetSpan","amount","isNarrower","spanA","spanB","hasTemplateReference","diDep","getSelectors","info","flatten","removeSuffix","uniqueByName","elements","elements_1","diagnosticInfoFromTemplateInfo","members","htmlAst","templateAst","findTemplateAstAt","allowWidening","visitEmbeddedTemplate","visitChildren","visitElement","inputs","visitDirective","RecursiveTemplateAstVisitor","findAstAt","excludeEmpty","NullAstVisitor","getExpressionCompletions","getType","language_services_7","tail","getPipes","receiverType","getBuiltinType","language_services_10","Any","getExpressionSymbol","compose","indexes","indexes_1","group","groups","name_1","attributeNames","defaultAttributes","eventNames","SchemaInformation","eventsOf","propertyNames","propertiesOf","getTemplateCompletions","templateInfo","templatePosition_1","path_1","mostSpecific","elementCompletions","astPosition_1","startTagSpan","tagLen","attributeCompletions","visitAttribute","valueSpan","attributeValueCompletions","visitText","entityCompletions","getSourceText","interpolationCompletions","contentType","TagContentType","PARSABLE_DATA","voidElementAttributeCompletions","visitComment","visitExpansion","visitExpansionCase","parentOf","attributeCompletionsForElement","getAttributeInfosForElement","fromHtml","nameOfAttr","htmlAttributes","htmlProperties","htmlEvents","selectorMap","applicableSelectors","selectorAndAttributeNames","attrs_1","selectorAndAttr","elementSelector","createElementCssSelector","SelectorMatcher","addSelectables","foldAttrs","expandedAttr","dinfo","ExpressionVisitor","language_services_5","widerPath_1","widerVisitor","htmlNames","hiddenHtmlElements","directiveElements","components","found","re","exec","NAMED_ENTITIES","templatePath","templateAttr","inputOutput","templates","duplicate","cloneAttr","lowerName","locateSymbol","templatePosition","symbol_1","span_1","attributeValueSymbol_1","inEvent","attribute","findAttribute","expressionOffset","visitNgContent","getTypeSymbol","OverrideKindSymbol","visitReference","visitVariable","visitEvent","handler","findOutputBinding","visitElementProperty","visitAttr","visitBoundText","expressionPosition","visitDirectiveProperty","findInputBinding","invertedInput","invertMap","fieldName","templateName","classSymbol","invertedOutputs","getDefinition","definition","getTemplateDiagnostics","astProvider","results","templates_1","getTemplateAst","DiagnosticKind","expressionDiagnostics","language_services_6","getDeclarationDiagnostics","declarations","declarations_1","declaration","report","declarationSpan","templateUrl","getHover","hoverTextOf","language","container","createLanguageService","LanguageServiceImpl","removeMissing","uniqueBySpan","findSuitableDefaultModule","resultSize","module_1","moduleSize","createLanguageServiceFromTypescript","service","ngHost","TypeScriptServiceHost","ngServer","setSite","findTsConfig","dirname","existsSync","candidate","parentDir","spanOf$1","getStart","getEnd","shrink","spanAt","position_1","getPositionOfLineAndCharacter","findChild","SyntaxKind","LastToken","forEachChild","getExternalFiles","projectHostMap","getTemplateReferences","angularOnlyFilter","ls","cleanupSemanticCache","getSyntacticDiagnostics","getSemanticDiagnostics","getCompilerOptionsDiagnostics","getSyntacticClassifications","getSemanticClassifications","getEncodedSyntacticClassifications","getEncodedSemanticClassifications","getCompletionsAtPosition","getCompletionEntryDetails","entryName","getCompletionEntrySymbol","getQuickInfoAtPosition","getNameOrDottedNameSpan","startPos","endPos","getBreakpointStatementAtPosition","getSignatureHelpItems","getRenameInfo","findRenameLocations","findInStrings","findInComments","getDefinitionAtPosition","getTypeDefinitionAtPosition","getImplementationAtPosition","getReferencesAtPosition","findReferences","getDocumentHighlights","filesToSearch","getOccurrencesAtPosition","getNavigateToItems","searchValue","getNavigationBarItems","getNavigationTree","getOutliningSpans","getTodoComments","descriptors","getBraceMatchingAtPosition","getIndentationAtPosition","getFormattingEditsForRange","getFormattingEditsForDocument","getFormattingEditsAfterKeystroke","getDocCommentTemplateAtPosition","isValidBraceCompletionAtPosition","openingBrace","getCodeFixesAtPosition","errorCodes","getEmitOutput","getProgram","dispose","getApplicableRefactors","positionOrRaneg","getEditsForRefactor","formatOptions","positionOrRange","refactorName","actionName","tryCall","oldLS","getSourceFile","tryFilenameCall","tryFilenameOneCall","tryFilenameTwoCall","p1","p2","tryFilenameThreeCall","p3","tryFilenameFourCall","p4","completionToEntry","sortText","kindModifiers","diagnosticToDiagnostic","messageText","category","DiagnosticCategory","tryOperation","attempting","projectService","logger","proxy","languageService","angularOnlyResults","maxResultCount","excludeDtsFiles","serviceHost","languageServiceHost","isGlobalCompletion","isMemberCompletion","isNewIdentifierLocation","entries","getCompletionsAt","results_1","ours","getHoverAt","displayParts","tags","documentation","textSpan","getDiagnostics","file_1","getDefinitionAt","ours_1","loc","containerName","containerKind","fs__default","path__default","ts__default","setPrototypeOf","__proto__","createInject","createInjectionToken","desc","_desc","createAttribute","attributeName","createContentChildren","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","createNgModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createInjectable","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","CatQuery","Types","DepFlags","Value","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","RenderElement","TemplateRef","ViewContainerRef","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION$1","TextAst","BoundTextAst","AttrAst","BoundElementPropertyAst","BoundEventAst","calcFullName","ReferenceAst","VariableAst","variables","BoundDirectivePropertyAst","directiveName","DirectiveAst","hostProperties","hostEvents","Builtin","NullTemplateVisitor","jitDevMode","assertNoMembers","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileSummaryKind","Injectable","CompileStylesheetMetadata","styles","styleUrls","CompileTemplateMetadata","externalStylesheets","animations","ngContentSelectors","interpolation","toSummary","CompileDirectiveMetadata","isHost","hostListeners","componentViewType","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","childOf","Expansion","ExpansionCase","expSourceSpan","startSourceSpan","InterpolationConfig","fromArray","markers","style","RAW_TEXT","ESCAPABLE_RAW_TEXT","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","_dedupeBindings","names","reversedResult","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","isClosedByChild","_getParentElementSkippingContainers","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","stackIndex","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","_f","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","textDef","directiveDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","_SELECTOR_REGEXP","classNames","_addResult","cssSel","inNot","hasElementSelector","getMatchingElementTemplate","classAttr","klass","notSelector","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","isNgModule","getNgModuleSummary","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","oldModule","modulesByToken","modSummary","mod","addedTokens","tokenRef","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","hasUnknownDeps","dependenciesMetadata","isSelf","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassField","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","ProviderViewContext","ProviderElementContext","viewContext","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","foundLocal","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","emitSourceMaps","referenceFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","metas","ElementSchemaRegistry","BOOLEAN$1","NUMBER$1","STRING$1","OBJECT$1","SCHEMA$1","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","isHostComponent","refOutputVars","updates","actions","getOutputVar","targetStatements","viewStmts","preprocessUpdateExpression","nameResolver","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","_preprocessUpdateExpression","_visitElementOrTemplate","queryMatchesExpr","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","createUpdateStatements","allowEmptyExprs","updateBindingCount","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","GeneratedFile","srcFileUrl","sourceOrStmts","indexBySymbol","processedSummaryBySymbol","processedSummaries","getKnownModuleName","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","ngModuleSummary","summary_1","importAs","__symbol","toSummaryFileName","baseSymbol","visitStaticSymbol","loadSummary","isLibrary","ngModuleSymbols","serializeSummaryWithDeps","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","loadingPromises","loadFilesSync","emitFlags","ngModuleIndex","typeIndex","dirId","_createTypeCheckBlock","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","arity","getTypeArity","getImportAs","importModule","fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","stylesheetMetadata","compiledStylesheet","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","staticSymbol","findSymbolDeclaration","getResourcePath","refSymbol","getSymbolByModule","declarationSymbol","recordModuleNameForFileName","recordImportAs","findDeclaration","containingFile","tryFindDeclaration","ignoreErrorsFor","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","decorators","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","lcProperty","injectionToken","opaqueToken","ROUTES","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","PopulatedScope","ResolvedStaticSymbol","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","importedFilePath","containingFilePath","sourceSymbol","targetSymbol","invalidateFile","symbols_1","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","createResolvedSymbol","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor","VERSION","commonjsGlobal","window","isModuleMetadata","isClassMetadata","isInterfaceMetadata","isMemberMetadata","isMethodMetadata","isConstructorMetadata","isFunctionMetadata","isMetadataSymbolicExpression","isMetadataSymbolicBinaryExpression","isMetadataSymbolicIndexExpression","isMetadataSymbolicCallExpression","isMetadataSymbolicPrefixExpression","isMetadataSymbolicIfExpression","isMetadataGlobalReferenceExpression","isMetadataSymbolicReferenceExpression","isMetadataModuleReferenceExpression","default","isMetadataImportedSymbolReferenceExpression","isMetadataImportDefaultReference","isMetadataSymbolicSelectExpression","isMetadataSymbolicSpreadExpression","isMetadataError","METADATA_VERSION","evaluator","isMethodCallOf","callExpression","PropertyAccessExpression","propertyAccessExpression","isCallOf","ident","everyNodeChild","getSourceFileOfNode","SourceFile","errorSymbol","getLineAndCharacterOfPosition","isPropertyAssignment","PropertyAssignment","arrayOrEmpty","spreadElementSyntaxKind","SpreadElement","SpreadElementExpression","Evaluator","nodeMap","recordExport","nameOf","evaluateNode","received","getText","isFoldable","isFoldableWorker","folding","ObjectLiteralExpression","propertyAssignment","initializer","ArrayLiteralExpression","CallExpression","arrayNode","arrayValue","NoSubstitutionTemplateLiteral","StringLiteral","NumericLiteral","NullKeyword","TrueKeyword","FalseKeyword","TemplateHead","TemplateMiddle","TemplateTail","ParenthesizedExpression","parenthesizedExpression","BinaryExpression","binaryExpression","operatorToken","PlusToken","MinusToken","AsteriskToken","SlashToken","PercentToken","AmpersandAmpersandToken","BarBarToken","ElementAccessExpression","elementAccessExpression","argumentExpression","TemplateExpression","templateSpans","preferReference","recordEntry","substituteExpression","newEntry","isFoldableError","verboseInvalidExpression","resolveName","obj_1","quoted_1","ShorthandPropertyAssignment","assignment","propertyValue","quotedNames","arr_1","spreadValue","firstArgument","ArrowFunction","arrowFunction","NewExpression","newExpression","newArgs","newTarget","expression_1","expression_2","TypeReference","typeReferenceNode","typeNameNode_1","typeReference","QualifiedName","qualifiedName","left_1","identifier_1","typeArguments","args_1","UnionType","unionType","UndefinedKeyword","AnyKeyword","StringKeyword","NumberKeyword","BooleanKeyword","arrayTypeNode","elementType","TypeAssertionExpression","typeAssertion","PrefixUnaryExpression","prefixUnaryExpression","TildeToken","ExclamationToken","operatorText","AmpersandToken","BarToken","CaretToken","EqualsEqualsToken","ExclamationEqualsToken","EqualsEqualsEqualsToken","ExclamationEqualsEqualsToken","LessThanToken","GreaterThanToken","LessThanEqualsToken","GreaterThanEqualsToken","LessThanLessThanToken","GreaterThanGreaterThanToken","GreaterThanGreaterThanGreaterThanToken","ConditionalExpression","conditionalExpression","thenExpression","whenTrue","elseExpression","whenFalse","FunctionExpression","TaggedTemplateExpression","templateExpression","previous","head","AsExpression","asExpression","ClassExpression","createNodeArray","populateBuiltins","Symbols","defineReference","_symbols","buildImports","stripQuotes","ImportEqualsDeclaration","importEqualsDeclaration","moduleReference","ExternalModuleReference","externalReference","from_1","ImportDeclaration","importDecl","importClause","moduleSpecifier","namedBindings","NamedImports","NamespaceImport","validateMetadata","validateExpression","locals","validateFunction","indexExpression","prefixExpression","selectExpression","spreadExpression","ifExpression","validateMember","classData","parameterDecorators","validateClass","staticMember","functionDeclaration","oldLocals","shouldReportNode","nodeStart","lineInfo","namesOf","addNamesOf","bindingPattern","name_11","parameters_2","isStatic","getCombinedModifierFlags","ModifierFlags","Static","MetadataCollector","getMetadata","objFromDecorator","decoratorNode","evaluator$$1","errorSym","maybeGetSimpleFunction","nameNode","functionName","functionBody","statement","returnStatement","func","classMetadataOf","classDeclaration","getDecorators","decorator","referenceFrom","recordMember","recordStaticMember","heritageClauses","hc","ExtendsKeyword","extends","typeParameters","isConstructor","Constructor","MethodDeclaration","maybeFunc","methodDecorators","parameterDecoratorData","parametersData","hasDecoratorData","hasParameterData","parameterData","PropertyDeclaration","GetAccessor","SetAccessor","propertyDecorators","composedSubstituter","evaluatorOptions","exportMap","ExportDeclaration","exportDeclaration","exportClause","exportedAs","isExport","isDeclarationFile","Export","isExportedIdentifier","isExported","exportedIdentifierName","exportedName","ClassDeclaration","InterfaceDeclaration","interfaceDeclaration","interfaceName","FunctionDeclaration","propNode","name_4","TypeAliasDeclaration","typeDeclaration","name_5","name_6","name_7","EnumDeclaration","enumDeclaration","enumValueHolder","enumName","nextDefaultValue","writtenMembers","enumValue","name_8","VariableStatement","variableStatement","declarationList","variableDeclaration","exported","name_9","report_1","name_10","BindingElement","ObjectBindingPattern","ArrayBindingPattern","bundler","importName","normalPath","normalize","getRootExport","reexportedAs","getSymbolDeclaration","PRIVATE_NAME_CHARS","MetadataBundler","symbolMap","rootModule","basename","getMetadataBundle","exportedSymbols","exportAll","canonicalizeSymbols","getEntries","privates","referenced","isPrivate","privateName","origins","getReExports","fullModuleName","exportedSymbol","symbolOf","exportFrom","exportItem","exportedSymbols_1","exportedSymbols_2","canonicalizeSymbol","rootExport","canonicalSymbol","newPrivateName","digits","exportedNames","convertSymbol","symbolsMap","declaredName","reference_1","exportAlls","exportedSymbols_3","module_2","module_3","convertEntry","convertClass","convertFunction","convertValue","convertExpression","convertMembers","convertStatics","convertMember","convertError","object","convertReference","convertExpressionNode","createReference","canonicalSymbolOf","referencedModule","referencedName","symbolKey","CompilerHostAdapter","ScriptTarget","Latest","index_writer","privateEntriesToIndex","INDEX_HEADER","privates_1","compareEntries","compare","compareModules","orderedExports","orderedExports_1","select","ak","bk","bundle_index_host","createSyntheticIndexHost","syntheticIndex","normalSyntheticIndexName","indexContent","indexMetadata","newHost","fileExists","readFile","languageVersion","createSourceFile","writeFile","writeByteOrderMark","sourceFiles","DTS","metadataName","writeFileSync","createBundleIndexHost","ngOptions","indexModule","bundler$$1","flatModuleId","metadataBundle","flatModuleOutFile","JS_EXT","libraryIndex","indexName","__export","compiler_1","compiler_host","EXT","IS_GENERATED","GENERATED_FILES","GENERATED_OR_DTS_FILES","SHALLOW_IMPORT","BaseAotCompilerHost","resolverCache","flatModuleIndexCache","flatModuleIndexNames","flatModuleIndexRedirectNames","metadatas","readMetadata","upgradeMetadataWithDtsData","getMetadataForSourceFile","dtsFilePath","metadataPath","metadataOrMetadatas","metadatas_1","maxMetadata","oldMetadata","newMetadata","dtsMetadata","readResource","generateCodeForLibraries","hasBundleIndex","normalFilePath","checkBundleIndex","directory","packageFile","packageContent","typings","metadataFile","flatModuleIndexRedirect","CompilerHost","program","collectorOptions","moduleFileNames","metadataProvider","genDir","genPath","relative","isGenDirChildOfRootDir","resolveModuleNameHost","sf","calculateEmitPath","rootDirs","eachRootDir","relativePath","getCanonicalFileName","resolveModuleName","resolvedFileName","importedFile","assumeFileExists","rewriteGenDirPath","containingDir","nodeModulesIndex","dotRelative","filepath","to","rPath","CompilerHostContextAdapter","assumedExists","ModuleResolutionHostAdapter","directoryExists","directoryName","NodeCompilerHostContext","statSync","isDirectory","readFileSync","symbols$2","expression_type","TypeDiagnostic","AstType","diagnostics","callable","reportWarning","Undefined","Null","Other","nullable","getNonNullableType","leftType","rightType","leftRawKind","getTypeKind","rightRawKind","leftKind","rightKind","operKind","errorAst","Boolean","anyType","getTypeUnion","selectSignature","public","signatures","indexed","argument","undefinedType","targetType","keyType","getArrayType","resolveMethodCall","expType","resolvePropertyRead","_anyType","_undefinedType","isAny","receiverInfo","expression_diagnostics","getTemplateExpressionDiagnostics","ExpressionDiagnosticsVisitor","includeEvent","getExpressionScope","getExpressionDiagnostics","analyzer","getReferences","processReferences","references_1","getDefinitionOf","templateOffset","getVarDeclarations","getTemplateContext","Unbound","refinedVariableType","templateElement","ngForDirective","ngForOfBinding","getElementType","getEventDeclaration","referenceTable","createSymbolTable","variableTable","eventsTable","mergeSymbolTable","diagnoseExpression","attributeValueLocation","directiveSummary","previousDirectiveSummary","typescript_symbols","getSymbolQuery","checker","fetchPipes","TypeScriptSymbolQuery","getClassMembers","getClassFromStaticSymbol","getTypeAtLocation","TypeWrapper","getClassMembersFromDeclaration","getPipesTable","PipesTable","typeCallable","getCallSignatures","signaturesOf","SignatureWrapper","toSymbols","symbolTable","table","own","findClassSymbolInContext","moduleSymbol","getExportsOfModule","isSymbolPrivate","valueDeclaration","getBuiltinTypeFromTs","setParents","numeric","VoidExpression","definitionFromTsSymbol","parentDeclarationOf","getContainerOf","getFlags","SymbolFlags","ClassMember","getTypeParameterOf","typeKindOf","TypeFlags","StringLike","NumberLike","Union","TypeParameter","getFromSymbolTable","toNumbers","compareNumbers","isReferenceType","ObjectFlags","objectFlags","Reference","typeCache","getTsTypeOf","tsType","nonNullableType","pipesCache","contextType","getTemplateRefContextType","SymbolWrapper","MapSymbolTable","addAll","DeclaredSymbol","symbolTables","symbolTables_1","getSpanAt","getTypeOfSymbolAtLocation","constructorDeclaration","type_1","getTypeWrapper","getSymbol","SymbolTableWrapper","getProperties","Alias","getAliasedSymbol","_members","Interface","getDeclaredTypeOfSymbol","typeWrapper","_tsType","getParameters","getReturnType","SignatureResultOverride","resultType","toSymbolTable","tsNumbers","symbols_2","symbols_3","_values","symbols_4","PipeSymbol","EmptyTable","parameterType","findClassSymbol","findTransformMethodType","classType","getProperty","language_services","language_services_1","language_services_2","language_services_13","language_services_14","language_services_15","__window$1","__self$1","WorkerGlobalScope","__global$1","_root","root_1","isFunction_2","isFunction_1","isArray_1","isObject_2","errorObject_1","tryCatch_2","tryCatch_1","__extends$2","UnsubscriptionError_2","Subscription","_parents","_subscriptions","_unsubscribe","hasErrors","trial","teardown","_addParent","tmp","subscriptions","subscriptionIndex","Subscription_2","Subscription_1","Symbol","$$rxSubscriber","__extends$1","destinationOrNext","syncErrorValue","syncErrorThrown","isStopped","SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","Subscriber_2","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","toSubscriber_2","toSubscriber_1","getSymbolObservable","$$observable","noop_2","pipe_2","pipeFromArray_1","pipe_1","_subscribe","observable$$1","sink","_trySubscribe","PromiseCtor","Rx","reject","operations","toPromise","Observable_2","__extends$4","ScalarObservable","dispatch","ScalarObservable_2","ScalarObservable_1","__extends$5","EmptyObservable","EmptyObservable_2","EmptyObservable_1","isScheduler_2","__extends$3","ArrayObservable_2","isArrayLike_1","isPromise_2","symbolIteratorPonyfill","root$$2","Set_1","Map_1","$$iterator","__extends$7","notifyNext","notifyError","notifyComplete","InnerSubscriber_2","subscribeToResult_2","subscribeToResult_1","__extends$8","OuterSubscriber","innerValue","innerIndex","innerSub","OuterSubscriber_2","OuterSubscriber_1","__extends$6","mergeMap_2","observer","MergeMapSubscriber","MergeMapOperator_1","hasCompleted","active","_tryNext","_innerSub","ish","_notifyResultSelector","shift","MergeMapSubscriber_1","identity_2","mergeAll_2","merge_2$2","mergeStatic_1","mergeStatic","merge_2$1","merge_4","merge_3","merge_2","__extends$11","ObjectUnsubscribedError","ObjectUnsubscribedError_2","ObjectUnsubscribedError_1","__extends$12","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscription_2","SubjectSubscription_1","__extends$10","SubjectSubscriber","SubjectSubscriber_1","hasError","thrownError","AnonymousSubject","asObservable","Subject_2","AnonymousSubject_1","__extends$13","refCount_2","RefCountOperator","_refCount","refCounter","RefCountSubscriber$1","connection","connect","RefCountSubscriber","sharedConnection","_connection","__extends$9","ConnectableObservable","_isComplete","getSubject","_subject","ConnectableSubscriber","ConnectableObservable_2","connectableProto","multicast_2","MulticastOperator_1","share_2$2","share_3","ChangeDetectionStrategy$1","Directive$1","NgModule$1","Version$1","VERSION$2","__window","__self","__global","_THROW_IF_NOT_FOUND","_NullInjector","StaticInjector","NULL","GET_PROPERTY_NAME","ɵ2","objWithPropertyToExtract","_records","tokenPath","_findOriginalError","_findContext","errorLogger","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","_ownAnnotations","ownAnnotations","_ownPropMetadata","propDecorators","propDecorators_1","propMetadata_1","ownPropMetadata","setter","importUri","resourceUri","resolveIdentifier","resolveEnum","enumIdentifier","Reflector","reflectionCapabilities","updateCapabilities","caps","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_constructionCounter","keyIds","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","APP_INITIALIZER","ApplicationInitStatus","appInits","donePromise","rej","runInitializers","asyncInitPromises","initResult","APP_ID","APP_ID_RANDOM_PROVIDER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","Console","log","Compiler","CompilerFactory","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryBoundToModule","wtfEnabled","wtf","wtfCreateScope","wtfLeave","EventEmitter","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","assertZonePatched","_outer","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZoneInjector","exceptionHandler","onDestroy","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","createCompiler","appRef","ApplicationRef","_bootstrapComponents","ngDoBootstrap","listener","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","stableSub","unstableSub","componentOrFactory","compRef","_unloadComponent","nativeElement","_loadComponent","_tickScope","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","Renderer2","_results","toArray","ViewRef","EventListener","EmbeddedViewRef","DebugNode","_debugContext","addChild","listeners","providerTokens","classes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","queryAllNodes","triggerEventHandler","eventObj","wrap","previousValue","currentValue","firstChange","isFirstChange","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","forEachOperation","nextIt","nextRemove","adjPreviousIndex","currentIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","factories","copied","extend","iterable","KeyValueDiffers","kv","keyValDiff","iterableDiff","_CORE_PLATFORM_PROVIDERS","parentPlatformFactory","ApplicationModule","WeakMap","EMPTY_CONTEXT","ComponentRef_","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","componentNodeIndex","_view","_viewRef","_component","_elDef","changeDetectorRef","_data","attachToViewContainerRef","templateRef","insert","ngModuleRef","contextInjector","viewRef_","viewData","move","detach","_viewContainerRef","_appRef","markForCheck","fs$$1","begin","reattach","vcRef","_parentView","namespaceAndName","createViewRoot","createTemplateAnchor","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","_moduleType","elView","elOrCompView","childDef","logViewDef","logNodeIndex","currRenderNodeIndex","nodeLogger","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","NgModuleFactory_","_ngModuleDefFactory","onclick","ondblclick","onmousedown","onmouseup","onmouseover","onmousemove","onmouseout","onkeypress","onkeydown","onkeyup","onload","onunload","href","alt","media","nohref","usemap","onfocus","onblur","charset","declare","classid","codebase","codetype","archive","standby","cite","datetime","accept","shape","coords","enctype","onsubmit","onreset","accept-charset","valuetype","longdesc","width","disabled","onselect","accesskey","multiple","onchange","label","selected","checked","maxlength","rows","cols","height","border","frame","rules","cellspacing","cellpadding","datapagesize","align","charoff","valign","abbr","axis","headers","rowspan","colspan","profile","http-equiv","scheme","hreflang","rel","rev","ismap","defer","BIG","STRONG","DFN","CODE","SAMP","KBD","VAR","CITE","ABBR","ACRONYM","SPAN","BDO","BODY","ADDRESS","DIV","MAP","AREA","IMG","OBJECT","PARAM","PRE","BLOCKQUOTE","INS","DEL","DL","DT","DD","FORM","LABEL","INPUT","SELECT","OPTGROUP","OPTION","TEXTAREA","FIELDSET","LEGEND","BUTTON","TABLE","CAPTION","COLGROUP","COL","HEAD","TITLE","BASE","META","NOSCRIPT","SCHEMA","EVENT","BOOLEAN","NUMBER","STRING","typeParts","allKnownElements","typeOf","_instance","noscript","getExpressionScope$$1","key_1","selectorInfo","selector_1","templateBindingResult","valueRelativePosition_1","keyCompletions","equalLocation","directiveMetadata","contextTable","symbolsToCompletions","completions","attributeValuePosition","sym","kindOverride","getTemplates","getDeclarations","getAnalyzedModules","getPipesAt","getTemplateAstAtPosition","getTemplateAt","contextFile","resolvedMetadata","rawHtmlParser","parser","htmlResult","resolvedDirectives","ReflectorModuleModuleResolutionHost","getScriptSnapshot","snapshot","getLength","ReflectorHost","DummyHtmlParser","DummyResourceLoader","tsService","_typeCache","modulesOutOfDate","fileVersions","validate","_resolver","moduleResolver","directiveResolver","pipeResolver","resourceLoader","directiveNormalizer","collectError","ensureTemplateMap","templateReferences","getSourceFromNode","getScriptVersion","fileToComponent","getSourceFromType","ensureAnalyzedModules","analyzeHost","programFiles","getSourceFiles","version_1","visit_1","templateSource","visit_2","getDeclarationFromNode","updateAnalyzedModules","_checker","getTypeChecker","_staticSymbolResolver","lastProgram","clearCaches","seen_1","version$$1","collectedErrors","templateReference","getSourceFromDeclaration","queryCache","pipes_1","getTemplateClassDeclFromNode","stringOf","getTemplateClassFromStaticSymbol","_reflectorHost","getScriptFileNames","tsConfigPath","getCompilationSettings","errorMap","sourceFilePath","reflectorHost","ssr","currentToken","missingTemplate","callTarget","Decorator","getCollectedErrors","defaultSpan","process","argv"],"mappings":"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2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC;iwUACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZtvF,yBAA4B,SAAUj7B,QAEtC,QAASi7B,4BACL,GAAIxD,OAAQz3B,OAAO+lC,KAAKvwC,OAASA,IAqCjC,OApCAiiC,OAAM+yF,WACNR,SAAS5tH,QAAQ,SAAUquH,aACvB,GAAqB7uH,SACjB+S,GAAK87G,YAAY1rH,MAAM,KAAM2rH,QAAU/7G,GAAG,GAAIg8G,cAAgBh8G,GAAG,GAChD4jC,WAAao4E,cAAc5rH,MAAM,KAClD+P,GAAK47G,QAAQ3rH,MAAM,KAAM6rH,UAAY97G,GAAG,GAAI+7G,UAAY/7G,GAAG,EAC/D87G,WAAU7rH,MAAM,KAAK3C,QAAQ,SAAU+Y,KAAO,MAAOsiB,OAAM+yF,QAAQr1G,IAAInS,eAAiBpH,MACxF,IAAqBkvH,WAAYD,WAAapzF,MAAM+yF,QAAQK,UAAU7nH,cAClE8nH,YACA11H,OAAOg3B,KAAK0+F,WAAW1uH,QAAQ,SAAUqoB,MAAQ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,KAAM,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAC/B5uF,OAAQ,EAAG,EAAG,EAAG,GAAI,GAAI,IACzBJ,OAAQ,EAAG,EAAG,EAAG,GAAI,GAAI,IACzBE,OAAQ,EAAG,EAAG,EAAG,GAAI,GAAI,IACzBG,IAAK,EAAG,EAAG,EAAG,GAAI,GAAI,IACtBF,IAAK,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAC1BF,IAAK,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAC1BgvF,MAAO,EAAG,IACVC,OAAQ,GACRC,MAAO,GACPC,MAAO,EAAG,IACV3oL,OAAQ,EAAG,EAAG,EAAG,IACjBE,QAAS,EAAG,GAAI,GAAI,IACpB0oL,UAAW,EAAG,EAAG,EAAG,GAAI,IACxB7kH,MAAO,IAEP1S,mBAAqB,EAAG,EAAG,EAAG,GA0B9Bw3H,QACA,iYAGA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA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","file":"/home/travis/build/angular/angular/dist/packages-dist/language-service/bundles/language-service.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0-rc.3-fc86352\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nvar $reflect = {defineMetadata: function() {}, getOwnMetadata: function(){}};\n((typeof global !== 'undefined' && global)||{})['Reflect'] = $reflect;\nvar $deferred, $resolved, $provided;\nfunction $getModule(name) { return $provided[name] || require(name); }\nfunction define(modules, cb) { $deferred = { modules: modules, cb: cb }; }\nmodule.exports = function(provided) {\n  if ($resolved) return $resolved;\n  var result = {};\n  $provided = Object.assign({'reflect-metadata': $reflect}, provided || {}, { exports: result });\n  $deferred.cb.apply(this, $deferred.modules.map($getModule));\n  $resolved = result;\n  return result;\n}\n\ndefine(['exports', 'fs', 'path', 'typescript'], function (exports, fs, path, ts) { 'use strict';\n\nvar fs__default = 'default' in fs ? fs['default'] : fs;\nvar path__default = 'default' in path ? path['default'] : path;\nvar ts__default = 'default' in ts ? ts['default'] : ts;\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.0.0-rc.3-fc86352\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createInjectable = makeMetadataFactory('Injectable');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateInjectable: createInjectable,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION$1 = new Version('5.0.0-rc.3-fc86352');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CompilerConfig = (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten$1(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten$1(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten$1(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    function AstPath(path$$1, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path$$1;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf$1$1(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf$1$1(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path$$1 = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf$1$1(ast);\n            if (span.start <= position && position < span.end) {\n                path$$1.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path$$1, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar StyleWithImports = (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ParserError = (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar Message = (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return /** @type {?} */ ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path$$1, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path$$1.endsWith('.d.ts')) {\n        return [path$$1.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path$$1.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path$$1.substring(0, lastDot), path$$1.substring(lastDot)];\n    }\n    return [path$$1, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CORE = '@angular/core';\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN$1 = 'boolean';\nvar NUMBER$1 = 'number';\nvar STRING$1 = 'string';\nvar OBJECT$1 = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA$1 = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA$1.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN$1;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER$1;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT$1;\n                            break;\n                        default:\n                            type[property] = STRING$1;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX$1 = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX$1)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX$1.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector$1(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector$1(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return /** @type {?} */ ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector$1(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector$1(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (component, template, usedPipes, externalReferenceVars) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        return visitor.build();\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar ViewBuilder = (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        var /** @type {?} */ viewName = \"_View_\" + this.component.name + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE :\n            /** @type {?} */ ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                    if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                        importAs = symbol.name + \"_\" + index;\n                        exportAs.push({ symbol: symbol, exportAs: importAs });\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    function ForJitSerializer(outputCtx, symbolResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    function (exportAs) {\n        var _this = this;\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata, isLibrary = _a.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                modSummary.modules.forEach(function (mod) { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(_this.outputCtx, summary.type.reference, _this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        });\n        exportAs.forEach(function (entry) {\n            var /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                var /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(symbol)).toDeclStmt(null, [\n                    StmtModifier.Exported\n                ]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { moduleName: data.moduleName, summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(file.fileName, true)[1];\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        return Promise.all(loadingPromises).then(function (_) { return mergeAndValidateNgFiles(files); });\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        return mergeAndValidateNgFiles(files);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }).concat(ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                if (_this._host.isSourceFile(ref.filePath)) {\n                    externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n                }\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    _this._createTypeCheckBlock(outputCtx, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(compMeta, parsedTemplate, usedPipes, externalReferenceVars));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten$1(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._symbolResolver.fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._symbolResolver.fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    injectables.push(symbol);\n                }\n                else {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) {\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n        this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path$$1) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path$$1);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1, references);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyInContext(context, item.expression, depth, 0);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyInContext(context, expression['expression'], depth, 0);\n                                var /** @type {?} */ index = simplifyInContext(context, expression['index'], depth, 0);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1, references);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1, references);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name_1 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_1);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions\n                                            .map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyInContext(context, value, depth, references + 1);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value) {\n            try {\n                return simplifyInContext(context, value, 0, 0);\n            }\n            catch (/** @type {?} */ e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n            simplifyInContext(context, value, 0, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = new Error(message);\n    (/** @type {?} */ (result)).fileName = fileName;\n    (/** @type {?} */ (result)).line = line;\n    (/** @type {?} */ (result)).column = column;\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ResolvedStaticSymbol = (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.fileNameToModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this.summaryResolver.getKnownModuleName(importedFilePath) ||\n            this.knownFileNameToModuleNames.get(importedFilePath) ||\n            this.host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name_1);\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path$$1) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path$$1);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? \" relative to $ {\\n            containingFile\\n          } \" : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) {\n                _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n            });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @param {?} fn\n * @param {?=} out\n * @param {?=} seen\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out, seen) {\n    if (out === void 0) { out = []; }\n    if (seen === void 0) { seen = new Set(); }\n    if (seen.has(fn$$1)) {\n        return out;\n    }\n    seen.add(fn$$1);\n    var /** @type {?} */ summaries = fn$$1();\n    for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n        var /** @type {?} */ entry = summaries[i];\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out, seen);\n        }\n        else {\n            out.push(entry);\n        }\n    }\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path$$1 = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path$$1 = path$$1.replace(/^\\/+/, '');\n            return prefix + \"/\" + path$$1;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path$$1) {\n    if (path$$1 == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path$$1[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path$$1[path$$1.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path$$1.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path$$1 = parts[_ComponentIndex.Path];\n    path$$1 = path$$1 == null ? '' : _removeDotSegments(path$$1);\n    parts[_ComponentIndex.Path] = path$$1;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path$$1, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path$$1 = baseParts[_ComponentIndex.Path];\n    if (path$$1 == null)\n        path$$1 = '/';\n    var /** @type {?} */ index = path$$1.lastIndexOf('/');\n    path$$1 = path$$1.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path$$1;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\n\n\n\n\nvar compiler = Object.freeze({\n\tcore: core,\n\tCompilerConfig: CompilerConfig,\n\tpreserveWhitespacesDefault: preserveWhitespacesDefault,\n\tIdentifiers: Identifiers,\n\tJitCompiler: JitCompiler,\n\tDirectiveResolver: DirectiveResolver,\n\tPipeResolver: PipeResolver,\n\tNgModuleResolver: NgModuleResolver,\n\tDEFAULT_INTERPOLATION_CONFIG: DEFAULT_INTERPOLATION_CONFIG,\n\tInterpolationConfig: InterpolationConfig,\n\tNgModuleCompiler: NgModuleCompiler,\n\tAssertNotNull: AssertNotNull,\n\tBinaryOperator: BinaryOperator,\n\tBinaryOperatorExpr: BinaryOperatorExpr,\n\tBuiltinMethod: BuiltinMethod,\n\tBuiltinVar: BuiltinVar,\n\tCastExpr: CastExpr,\n\tClassStmt: ClassStmt,\n\tCommaExpr: CommaExpr,\n\tCommentStmt: CommentStmt,\n\tConditionalExpr: ConditionalExpr,\n\tDeclareFunctionStmt: DeclareFunctionStmt,\n\tDeclareVarStmt: DeclareVarStmt,\n\tExpressionStatement: ExpressionStatement,\n\tExternalExpr: ExternalExpr,\n\tExternalReference: ExternalReference,\n\tFunctionExpr: FunctionExpr,\n\tIfStmt: IfStmt,\n\tInstantiateExpr: InstantiateExpr,\n\tInvokeFunctionExpr: InvokeFunctionExpr,\n\tInvokeMethodExpr: InvokeMethodExpr,\n\tLiteralArrayExpr: LiteralArrayExpr,\n\tLiteralExpr: LiteralExpr,\n\tLiteralMapExpr: LiteralMapExpr,\n\tNotExpr: NotExpr,\n\tReadKeyExpr: ReadKeyExpr,\n\tReadPropExpr: ReadPropExpr,\n\tReadVarExpr: ReadVarExpr,\n\tReturnStatement: ReturnStatement,\n\tThrowStmt: ThrowStmt,\n\tTryCatchStmt: TryCatchStmt,\n\tWriteKeyExpr: WriteKeyExpr,\n\tWritePropExpr: WritePropExpr,\n\tWriteVarExpr: WriteVarExpr,\n\tStmtModifier: StmtModifier,\n\tStatement: Statement,\n\tcollectExternalReferences: collectExternalReferences,\n\tEmitterVisitorContext: EmitterVisitorContext,\n\tViewCompiler: ViewCompiler,\n\tgetParseErrors: getParseErrors,\n\tisSyntaxError: isSyntaxError,\n\tsyntaxError: syntaxError,\n\tVersion: Version,\n\tVERSION: VERSION$1,\n\tTextAst: TextAst,\n\tBoundTextAst: BoundTextAst,\n\tAttrAst: AttrAst,\n\tBoundElementPropertyAst: BoundElementPropertyAst,\n\tBoundEventAst: BoundEventAst,\n\tReferenceAst: ReferenceAst,\n\tVariableAst: VariableAst,\n\tElementAst: ElementAst,\n\tEmbeddedTemplateAst: EmbeddedTemplateAst,\n\tBoundDirectivePropertyAst: BoundDirectivePropertyAst,\n\tDirectiveAst: DirectiveAst,\n\tProviderAst: ProviderAst,\n\tProviderAstType: ProviderAstType,\n\tNgContentAst: NgContentAst,\n\tPropertyBindingType: PropertyBindingType,\n\tNullTemplateVisitor: NullTemplateVisitor,\n\tRecursiveTemplateAstVisitor: RecursiveTemplateAstVisitor,\n\ttemplateVisitAll: templateVisitAll,\n\tidentifierName: identifierName,\n\tidentifierModuleUrl: identifierModuleUrl,\n\tviewClassName: viewClassName,\n\trendererTypeName: rendererTypeName,\n\thostViewClassName: hostViewClassName,\n\tcomponentFactoryName: componentFactoryName,\n\tCompileSummaryKind: CompileSummaryKind,\n\ttokenName: tokenName,\n\ttokenReference: tokenReference,\n\tCompileStylesheetMetadata: CompileStylesheetMetadata,\n\tCompileTemplateMetadata: CompileTemplateMetadata,\n\tCompileDirectiveMetadata: CompileDirectiveMetadata,\n\tCompilePipeMetadata: CompilePipeMetadata,\n\tCompileNgModuleMetadata: CompileNgModuleMetadata,\n\tTransitiveCompileNgModuleMetadata: TransitiveCompileNgModuleMetadata,\n\tProviderMeta: ProviderMeta,\n\tflatten: flatten$1,\n\ttemplateSourceUrl: templateSourceUrl,\n\tsharedStylesheetJitUrl: sharedStylesheetJitUrl,\n\tngModuleJitUrl: ngModuleJitUrl,\n\ttemplateJitUrl: templateJitUrl,\n\tcreateAotUrlResolver: createAotUrlResolver,\n\tcreateAotCompiler: createAotCompiler,\n\tAotCompiler: AotCompiler,\n\tanalyzeNgModules: analyzeNgModules,\n\tanalyzeAndValidateNgModules: analyzeAndValidateNgModules,\n\tanalyzeFile: analyzeFile,\n\tmergeAnalyzedFiles: mergeAnalyzedFiles,\n\tGeneratedFile: GeneratedFile,\n\ttoTypeScript: toTypeScript,\n\tStaticReflector: StaticReflector,\n\tStaticSymbol: StaticSymbol,\n\tStaticSymbolCache: StaticSymbolCache,\n\tResolvedStaticSymbol: ResolvedStaticSymbol,\n\tStaticSymbolResolver: StaticSymbolResolver,\n\tunescapeIdentifier: unescapeIdentifier,\n\tAotSummaryResolver: AotSummaryResolver,\n\tAstPath: AstPath,\n\tSummaryResolver: SummaryResolver,\n\tJitSummaryResolver: JitSummaryResolver,\n\tCompileReflector: CompileReflector,\n\tcreateUrlResolverWithoutPackagePrefix: createUrlResolverWithoutPackagePrefix,\n\tcreateOfflineCompileUrlResolver: createOfflineCompileUrlResolver,\n\tUrlResolver: UrlResolver,\n\tgetUrlScheme: getUrlScheme,\n\tResourceLoader: ResourceLoader,\n\tElementSchemaRegistry: ElementSchemaRegistry,\n\tExtractor: Extractor,\n\tI18NHtmlParser: I18NHtmlParser,\n\tMessageBundle: MessageBundle,\n\tSerializer: Serializer,\n\tXliff: Xliff,\n\tXliff2: Xliff2,\n\tXmb: Xmb,\n\tXtb: Xtb,\n\tDirectiveNormalizer: DirectiveNormalizer,\n\tParserError: ParserError,\n\tParseSpan: ParseSpan,\n\tAST: AST,\n\tQuote: Quote,\n\tEmptyExpr: EmptyExpr,\n\tImplicitReceiver: ImplicitReceiver,\n\tChain: Chain,\n\tConditional: Conditional,\n\tPropertyRead: PropertyRead,\n\tPropertyWrite: PropertyWrite,\n\tSafePropertyRead: SafePropertyRead,\n\tKeyedRead: KeyedRead,\n\tKeyedWrite: KeyedWrite,\n\tBindingPipe: BindingPipe,\n\tLiteralPrimitive: LiteralPrimitive,\n\tLiteralArray: LiteralArray,\n\tLiteralMap: LiteralMap,\n\tInterpolation: Interpolation,\n\tBinary: Binary,\n\tPrefixNot: PrefixNot,\n\tNonNullAssert: NonNullAssert,\n\tMethodCall: MethodCall,\n\tSafeMethodCall: SafeMethodCall,\n\tFunctionCall: FunctionCall,\n\tASTWithSource: ASTWithSource,\n\tTemplateBinding: TemplateBinding,\n\tNullAstVisitor: NullAstVisitor,\n\tRecursiveAstVisitor: RecursiveAstVisitor,\n\tAstTransformer: AstTransformer,\n\tvisitAstChildren: visitAstChildren,\n\tTokenType: TokenType,\n\tLexer: Lexer,\n\tToken: Token,\n\tEOF: EOF,\n\tisIdentifier: isIdentifier,\n\tisQuote: isQuote,\n\tSplitInterpolation: SplitInterpolation,\n\tTemplateBindingParseResult: TemplateBindingParseResult,\n\tParser: Parser,\n\t_ParseAST: _ParseAST,\n\tERROR_COMPONENT_TYPE: ERROR_COMPONENT_TYPE,\n\tCompileMetadataResolver: CompileMetadataResolver,\n\tText: Text,\n\tExpansion: Expansion,\n\tExpansionCase: ExpansionCase,\n\tAttribute: Attribute$1,\n\tElement: Element,\n\tComment: Comment,\n\tvisitAll: visitAll,\n\tRecursiveVisitor: RecursiveVisitor,\n\tfindNode: findNode,\n\tParseTreeResult: ParseTreeResult,\n\tTreeError: TreeError,\n\tHtmlParser: HtmlParser,\n\tHtmlTagDefinition: HtmlTagDefinition,\n\tgetHtmlTagDefinition: getHtmlTagDefinition,\n\tTagContentType: TagContentType,\n\tsplitNsName: splitNsName,\n\tisNgContainer: isNgContainer,\n\tisNgContent: isNgContent,\n\tisNgTemplate: isNgTemplate,\n\tgetNsPrefix: getNsPrefix,\n\tmergeNsAndName: mergeNsAndName,\n\tNAMED_ENTITIES: NAMED_ENTITIES,\n\tNGSP_UNICODE: NGSP_UNICODE,\n\tdebugOutputAstAsTypeScript: debugOutputAstAsTypeScript,\n\tTypeScriptEmitter: TypeScriptEmitter,\n\tParseLocation: ParseLocation,\n\tParseSourceFile: ParseSourceFile,\n\tParseSourceSpan: ParseSourceSpan,\n\tParseErrorLevel: ParseErrorLevel,\n\tParseError: ParseError,\n\ttypeSourceSpan: typeSourceSpan,\n\tDomElementSchemaRegistry: DomElementSchemaRegistry,\n\tCssSelector: CssSelector,\n\tSelectorMatcher: SelectorMatcher,\n\tSelectorListContext: SelectorListContext,\n\tSelectorContext: SelectorContext,\n\tStylesCompileDependency: StylesCompileDependency,\n\tCompiledStylesheet: CompiledStylesheet,\n\tStyleCompiler: StyleCompiler,\n\tTemplateParseError: TemplateParseError,\n\tTemplateParseResult: TemplateParseResult,\n\tTemplateParser: TemplateParser,\n\tsplitClasses: splitClasses,\n\tcreateElementCssSelector: createElementCssSelector$1,\n\tremoveSummaryDuplicates: removeSummaryDuplicates\n});\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar schema = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Metadata Schema\n// If you make a backwards incompatible change to the schema, increment the METADTA_VERSION number.\n// If you make a backwards compatible change to the metadata (such as adding an option field) then\n// leave METADATA_VERSION the same. If possible, supply as many versions of the metadata that can\n// represent the semantics of the file in an array. For example, when generating a version 2 file,\n// if version 1 can accurately represent the metadata, generate both version 1 and version 2 in\n// an array.\nexports.METADATA_VERSION = 4;\nfunction isModuleMetadata(value) {\n    return value && value.__symbolic === 'module';\n}\nexports.isModuleMetadata = isModuleMetadata;\nfunction isClassMetadata(value) {\n    return value && value.__symbolic === 'class';\n}\nexports.isClassMetadata = isClassMetadata;\nfunction isInterfaceMetadata(value) {\n    return value && value.__symbolic === 'interface';\n}\nexports.isInterfaceMetadata = isInterfaceMetadata;\nfunction isMemberMetadata(value) {\n    if (value) {\n        switch (value.__symbolic) {\n            case 'constructor':\n            case 'method':\n            case 'property':\n                return true;\n        }\n    }\n    return false;\n}\nexports.isMemberMetadata = isMemberMetadata;\nfunction isMethodMetadata(value) {\n    return value && (value.__symbolic === 'constructor' || value.__symbolic === 'method');\n}\nexports.isMethodMetadata = isMethodMetadata;\nfunction isConstructorMetadata(value) {\n    return value && value.__symbolic === 'constructor';\n}\nexports.isConstructorMetadata = isConstructorMetadata;\nfunction isFunctionMetadata(value) {\n    return value && value.__symbolic === 'function';\n}\nexports.isFunctionMetadata = isFunctionMetadata;\nfunction isMetadataSymbolicExpression(value) {\n    if (value) {\n        switch (value.__symbolic) {\n            case 'binary':\n            case 'call':\n            case 'index':\n            case 'new':\n            case 'pre':\n            case 'reference':\n            case 'select':\n            case 'spread':\n            case 'if':\n                return true;\n        }\n    }\n    return false;\n}\nexports.isMetadataSymbolicExpression = isMetadataSymbolicExpression;\nfunction isMetadataSymbolicBinaryExpression(value) {\n    return value && value.__symbolic === 'binary';\n}\nexports.isMetadataSymbolicBinaryExpression = isMetadataSymbolicBinaryExpression;\nfunction isMetadataSymbolicIndexExpression(value) {\n    return value && value.__symbolic === 'index';\n}\nexports.isMetadataSymbolicIndexExpression = isMetadataSymbolicIndexExpression;\nfunction isMetadataSymbolicCallExpression(value) {\n    return value && (value.__symbolic === 'call' || value.__symbolic === 'new');\n}\nexports.isMetadataSymbolicCallExpression = isMetadataSymbolicCallExpression;\nfunction isMetadataSymbolicPrefixExpression(value) {\n    return value && value.__symbolic === 'pre';\n}\nexports.isMetadataSymbolicPrefixExpression = isMetadataSymbolicPrefixExpression;\nfunction isMetadataSymbolicIfExpression(value) {\n    return value && value.__symbolic === 'if';\n}\nexports.isMetadataSymbolicIfExpression = isMetadataSymbolicIfExpression;\nfunction isMetadataGlobalReferenceExpression(value) {\n    return value && value.name && !value.module && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataGlobalReferenceExpression = isMetadataGlobalReferenceExpression;\nfunction isMetadataModuleReferenceExpression(value) {\n    return value && value.module && !value.name && !value.default &&\n        isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataModuleReferenceExpression = isMetadataModuleReferenceExpression;\nfunction isMetadataImportedSymbolReferenceExpression(value) {\n    return value && value.module && !!value.name && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataImportedSymbolReferenceExpression = isMetadataImportedSymbolReferenceExpression;\nfunction isMetadataImportDefaultReference(value) {\n    return value.module && value.default && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataImportDefaultReference = isMetadataImportDefaultReference;\nfunction isMetadataSymbolicReferenceExpression(value) {\n    return value && value.__symbolic === 'reference';\n}\nexports.isMetadataSymbolicReferenceExpression = isMetadataSymbolicReferenceExpression;\nfunction isMetadataSymbolicSelectExpression(value) {\n    return value && value.__symbolic === 'select';\n}\nexports.isMetadataSymbolicSelectExpression = isMetadataSymbolicSelectExpression;\nfunction isMetadataSymbolicSpreadExpression(value) {\n    return value && value.__symbolic === 'spread';\n}\nexports.isMetadataSymbolicSpreadExpression = isMetadataSymbolicSpreadExpression;\nfunction isMetadataError(value) {\n    return value && value.__symbolic === 'error';\n}\nexports.isMetadataError = isMetadataError;\n\n});\n\nvar evaluator = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n// In TypeScript 2.1 the spread element kind was renamed.\nvar spreadElementSyntaxKind = ts__default.SyntaxKind.SpreadElement || ts__default.SyntaxKind.SpreadElementExpression;\nfunction isMethodCallOf(callExpression, memberName) {\n    var expression = callExpression.expression;\n    if (expression.kind === ts__default.SyntaxKind.PropertyAccessExpression) {\n        var propertyAccessExpression = expression;\n        var name_1 = propertyAccessExpression.name;\n        if (name_1.kind == ts__default.SyntaxKind.Identifier) {\n            return name_1.text === memberName;\n        }\n    }\n    return false;\n}\nfunction isCallOf(callExpression, ident) {\n    var expression = callExpression.expression;\n    if (expression.kind === ts__default.SyntaxKind.Identifier) {\n        var identifier = expression;\n        return identifier.text === ident;\n    }\n    return false;\n}\n/**\n * ts.forEachChild stops iterating children when the callback return a truthy value.\n * This method inverts this to implement an `every` style iterator. It will return\n * true if every call to `cb` returns `true`.\n */\nfunction everyNodeChild(node, cb) {\n    return !ts__default.forEachChild(node, function (node) { return !cb(node); });\n}\nfunction isPrimitive(value) {\n    return Object(value) !== value;\n}\nexports.isPrimitive = isPrimitive;\nfunction isDefined(obj) {\n    return obj !== undefined;\n}\nfunction getSourceFileOfNode(node) {\n    while (node && node.kind != ts__default.SyntaxKind.SourceFile) {\n        node = node.parent;\n    }\n    return node;\n}\n/* @internal */\nfunction errorSymbol(message, node, context, sourceFile) {\n    var result = undefined;\n    if (node) {\n        sourceFile = sourceFile || getSourceFileOfNode(node);\n        if (sourceFile) {\n            var _a = ts__default.getLineAndCharacterOfPosition(sourceFile, node.getStart(sourceFile)), line = _a.line, character = _a.character;\n            result = { __symbolic: 'error', message: message, line: line, character: character };\n        }\n    }\n    if (!result) {\n        result = { __symbolic: 'error', message: message };\n    }\n    if (context) {\n        result.context = context;\n    }\n    return result;\n}\nexports.errorSymbol = errorSymbol;\n/**\n * Produce a symbolic representation of an expression folding values into their final value when\n * possible.\n */\nvar Evaluator = (function () {\n    function Evaluator(symbols, nodeMap, options, recordExport) {\n        if (options === void 0) { options = {}; }\n        this.symbols = symbols;\n        this.nodeMap = nodeMap;\n        this.options = options;\n        this.recordExport = recordExport;\n    }\n    Evaluator.prototype.nameOf = function (node) {\n        if (node && node.kind == ts__default.SyntaxKind.Identifier) {\n            return node.text;\n        }\n        var result = node && this.evaluateNode(node);\n        if (schema.isMetadataError(result) || typeof result === 'string') {\n            return result;\n        }\n        else {\n            return errorSymbol('Name expected', node, { received: (node && node.getText()) || '<missing>' });\n        }\n    };\n    /**\n     * Returns true if the expression represented by `node` can be folded into a literal expression.\n     *\n     * For example, a literal is always foldable. This means that literal expressions such as `1.2`\n     * `\"Some value\"` `true` `false` are foldable.\n     *\n     * - An object literal is foldable if all the properties in the literal are foldable.\n     * - An array literal is foldable if all the elements are foldable.\n     * - A call is foldable if it is a call to a Array.prototype.concat or a call to CONST_EXPR.\n     * - A property access is foldable if the object is foldable.\n     * - A array index is foldable if index expression is foldable and the array is foldable.\n     * - Binary operator expressions are foldable if the left and right expressions are foldable and\n     *   it is one of '+', '-', '*', '/', '%', '||', and '&&'.\n     * - An identifier is foldable if a value can be found for its symbol in the evaluator symbol\n     *   table.\n     */\n    Evaluator.prototype.isFoldable = function (node) {\n        return this.isFoldableWorker(node, new Map());\n    };\n    Evaluator.prototype.isFoldableWorker = function (node, folding) {\n        var _this = this;\n        if (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ObjectLiteralExpression:\n                    return everyNodeChild(node, function (child) {\n                        if (child.kind === ts__default.SyntaxKind.PropertyAssignment) {\n                            var propertyAssignment = child;\n                            return _this.isFoldableWorker(propertyAssignment.initializer, folding);\n                        }\n                        return false;\n                    });\n                case ts__default.SyntaxKind.ArrayLiteralExpression:\n                    return everyNodeChild(node, function (child) { return _this.isFoldableWorker(child, folding); });\n                case ts__default.SyntaxKind.CallExpression:\n                    var callExpression = node;\n                    // We can fold a <array>.concat(<v>).\n                    if (isMethodCallOf(callExpression, 'concat') &&\n                        arrayOrEmpty(callExpression.arguments).length === 1) {\n                        var arrayNode = callExpression.expression.expression;\n                        if (this.isFoldableWorker(arrayNode, folding) &&\n                            this.isFoldableWorker(callExpression.arguments[0], folding)) {\n                            // It needs to be an array.\n                            var arrayValue = this.evaluateNode(arrayNode);\n                            if (arrayValue && Array.isArray(arrayValue)) {\n                                return true;\n                            }\n                        }\n                    }\n                    // We can fold a call to CONST_EXPR\n                    if (isCallOf(callExpression, 'CONST_EXPR') &&\n                        arrayOrEmpty(callExpression.arguments).length === 1)\n                        return this.isFoldableWorker(callExpression.arguments[0], folding);\n                    return false;\n                case ts__default.SyntaxKind.NoSubstitutionTemplateLiteral:\n                case ts__default.SyntaxKind.StringLiteral:\n                case ts__default.SyntaxKind.NumericLiteral:\n                case ts__default.SyntaxKind.NullKeyword:\n                case ts__default.SyntaxKind.TrueKeyword:\n                case ts__default.SyntaxKind.FalseKeyword:\n                case ts__default.SyntaxKind.TemplateHead:\n                case ts__default.SyntaxKind.TemplateMiddle:\n                case ts__default.SyntaxKind.TemplateTail:\n                    return true;\n                case ts__default.SyntaxKind.ParenthesizedExpression:\n                    var parenthesizedExpression = node;\n                    return this.isFoldableWorker(parenthesizedExpression.expression, folding);\n                case ts__default.SyntaxKind.BinaryExpression:\n                    var binaryExpression = node;\n                    switch (binaryExpression.operatorToken.kind) {\n                        case ts__default.SyntaxKind.PlusToken:\n                        case ts__default.SyntaxKind.MinusToken:\n                        case ts__default.SyntaxKind.AsteriskToken:\n                        case ts__default.SyntaxKind.SlashToken:\n                        case ts__default.SyntaxKind.PercentToken:\n                        case ts__default.SyntaxKind.AmpersandAmpersandToken:\n                        case ts__default.SyntaxKind.BarBarToken:\n                            return this.isFoldableWorker(binaryExpression.left, folding) &&\n                                this.isFoldableWorker(binaryExpression.right, folding);\n                        default:\n                            return false;\n                    }\n                case ts__default.SyntaxKind.PropertyAccessExpression:\n                    var propertyAccessExpression = node;\n                    return this.isFoldableWorker(propertyAccessExpression.expression, folding);\n                case ts__default.SyntaxKind.ElementAccessExpression:\n                    var elementAccessExpression = node;\n                    return this.isFoldableWorker(elementAccessExpression.expression, folding) &&\n                        this.isFoldableWorker(elementAccessExpression.argumentExpression, folding);\n                case ts__default.SyntaxKind.Identifier:\n                    var identifier = node;\n                    var reference = this.symbols.resolve(identifier.text);\n                    if (reference !== undefined && isPrimitive(reference)) {\n                        return true;\n                    }\n                    break;\n                case ts__default.SyntaxKind.TemplateExpression:\n                    var templateExpression = node;\n                    return templateExpression.templateSpans.every(function (span) { return _this.isFoldableWorker(span.expression, folding); });\n            }\n        }\n        return false;\n    };\n    /**\n     * Produce a JSON serialiable object representing `node`. The foldable values in the expression\n     * tree are folded. For example, a node representing `1 + 2` is folded into `3`.\n     */\n    Evaluator.prototype.evaluateNode = function (node, preferReference) {\n        var _this = this;\n        var t = this;\n        var error;\n        function recordEntry(entry, node) {\n            if (t.options.substituteExpression) {\n                var newEntry = t.options.substituteExpression(entry, node);\n                if (t.recordExport && newEntry != entry && schema.isMetadataGlobalReferenceExpression(newEntry)) {\n                    t.recordExport(newEntry.name, entry);\n                }\n                entry = newEntry;\n            }\n            t.nodeMap.set(entry, node);\n            return entry;\n        }\n        function isFoldableError(value) {\n            return !t.options.verboseInvalidExpression && schema.isMetadataError(value);\n        }\n        var resolveName = function (name, preferReference) {\n            var reference = _this.symbols.resolve(name, preferReference);\n            if (reference === undefined) {\n                // Encode as a global reference. StaticReflector will check the reference.\n                return recordEntry({ __symbolic: 'reference', name: name }, node);\n            }\n            return reference;\n        };\n        switch (node.kind) {\n            case ts__default.SyntaxKind.ObjectLiteralExpression:\n                var obj_1 = {};\n                var quoted_1 = [];\n                ts__default.forEachChild(node, function (child) {\n                    switch (child.kind) {\n                        case ts__default.SyntaxKind.ShorthandPropertyAssignment:\n                        case ts__default.SyntaxKind.PropertyAssignment:\n                            var assignment = child;\n                            if (assignment.name.kind == ts__default.SyntaxKind.StringLiteral) {\n                                var name_2 = assignment.name.text;\n                                quoted_1.push(name_2);\n                            }\n                            var propertyName = _this.nameOf(assignment.name);\n                            if (isFoldableError(propertyName)) {\n                                error = propertyName;\n                                return true;\n                            }\n                            var propertyValue = isPropertyAssignment(assignment) ?\n                                _this.evaluateNode(assignment.initializer, /* preferReference */ true) :\n                                resolveName(propertyName, /* preferReference */ true);\n                            if (isFoldableError(propertyValue)) {\n                                error = propertyValue;\n                                return true; // Stop the forEachChild.\n                            }\n                            else {\n                                obj_1[propertyName] = isPropertyAssignment(assignment) ?\n                                    recordEntry(propertyValue, assignment.initializer) :\n                                    propertyValue;\n                            }\n                    }\n                });\n                if (error)\n                    return error;\n                if (this.options.quotedNames && quoted_1.length) {\n                    obj_1['$quoted$'] = quoted_1;\n                }\n                return recordEntry(obj_1, node);\n            case ts__default.SyntaxKind.ArrayLiteralExpression:\n                var arr_1 = [];\n                ts__default.forEachChild(node, function (child) {\n                    var value = _this.evaluateNode(child, /* preferReference */ true);\n                    // Check for error\n                    if (isFoldableError(value)) {\n                        error = value;\n                        return true; // Stop the forEachChild.\n                    }\n                    // Handle spread expressions\n                    if (schema.isMetadataSymbolicSpreadExpression(value)) {\n                        if (Array.isArray(value.expression)) {\n                            for (var _i = 0, _a = value.expression; _i < _a.length; _i++) {\n                                var spreadValue = _a[_i];\n                                arr_1.push(spreadValue);\n                            }\n                            return;\n                        }\n                    }\n                    arr_1.push(value);\n                });\n                if (error)\n                    return error;\n                return recordEntry(arr_1, node);\n            case spreadElementSyntaxKind:\n                var spreadExpression = this.evaluateNode(node.expression);\n                return recordEntry({ __symbolic: 'spread', expression: spreadExpression }, node);\n            case ts__default.SyntaxKind.CallExpression:\n                var callExpression = node;\n                if (isCallOf(callExpression, 'forwardRef') &&\n                    arrayOrEmpty(callExpression.arguments).length === 1) {\n                    var firstArgument = callExpression.arguments[0];\n                    if (firstArgument.kind == ts__default.SyntaxKind.ArrowFunction) {\n                        var arrowFunction = firstArgument;\n                        return recordEntry(this.evaluateNode(arrowFunction.body), node);\n                    }\n                }\n                var args = arrayOrEmpty(callExpression.arguments).map(function (arg) { return _this.evaluateNode(arg); });\n                if (!this.options.verboseInvalidExpression && args.some(schema.isMetadataError)) {\n                    return args.find(schema.isMetadataError);\n                }\n                if (this.isFoldable(callExpression)) {\n                    if (isMethodCallOf(callExpression, 'concat')) {\n                        var arrayValue = this.evaluateNode(callExpression.expression.expression);\n                        if (isFoldableError(arrayValue))\n                            return arrayValue;\n                        return arrayValue.concat(args[0]);\n                    }\n                }\n                // Always fold a CONST_EXPR even if the argument is not foldable.\n                if (isCallOf(callExpression, 'CONST_EXPR') &&\n                    arrayOrEmpty(callExpression.arguments).length === 1) {\n                    return recordEntry(args[0], node);\n                }\n                var expression = this.evaluateNode(callExpression.expression);\n                if (isFoldableError(expression)) {\n                    return recordEntry(expression, node);\n                }\n                var result = { __symbolic: 'call', expression: expression };\n                if (args && args.length) {\n                    result.arguments = args;\n                }\n                return recordEntry(result, node);\n            case ts__default.SyntaxKind.NewExpression:\n                var newExpression = node;\n                var newArgs = arrayOrEmpty(newExpression.arguments).map(function (arg) { return _this.evaluateNode(arg); });\n                if (!this.options.verboseInvalidExpression && newArgs.some(schema.isMetadataError)) {\n                    return recordEntry(newArgs.find(schema.isMetadataError), node);\n                }\n                var newTarget = this.evaluateNode(newExpression.expression);\n                if (schema.isMetadataError(newTarget)) {\n                    return recordEntry(newTarget, node);\n                }\n                var call = { __symbolic: 'new', expression: newTarget };\n                if (newArgs.length) {\n                    call.arguments = newArgs;\n                }\n                return recordEntry(call, node);\n            case ts__default.SyntaxKind.PropertyAccessExpression: {\n                var propertyAccessExpression = node;\n                var expression_1 = this.evaluateNode(propertyAccessExpression.expression);\n                if (isFoldableError(expression_1)) {\n                    return recordEntry(expression_1, node);\n                }\n                var member = this.nameOf(propertyAccessExpression.name);\n                if (isFoldableError(member)) {\n                    return recordEntry(member, node);\n                }\n                if (expression_1 && this.isFoldable(propertyAccessExpression.expression))\n                    return expression_1[member];\n                if (schema.isMetadataModuleReferenceExpression(expression_1)) {\n                    // A select into a module reference and be converted into a reference to the symbol\n                    // in the module\n                    return recordEntry({ __symbolic: 'reference', module: expression_1.module, name: member }, node);\n                }\n                return recordEntry({ __symbolic: 'select', expression: expression_1, member: member }, node);\n            }\n            case ts__default.SyntaxKind.ElementAccessExpression: {\n                var elementAccessExpression = node;\n                var expression_2 = this.evaluateNode(elementAccessExpression.expression);\n                if (isFoldableError(expression_2)) {\n                    return recordEntry(expression_2, node);\n                }\n                if (!elementAccessExpression.argumentExpression) {\n                    return recordEntry(errorSymbol('Expression form not supported', node), node);\n                }\n                var index = this.evaluateNode(elementAccessExpression.argumentExpression);\n                if (isFoldableError(expression_2)) {\n                    return recordEntry(expression_2, node);\n                }\n                if (this.isFoldable(elementAccessExpression.expression) &&\n                    this.isFoldable(elementAccessExpression.argumentExpression))\n                    return expression_2[index];\n                return recordEntry({ __symbolic: 'index', expression: expression_2, index: index }, node);\n            }\n            case ts__default.SyntaxKind.Identifier:\n                var identifier = node;\n                var name_3 = identifier.text;\n                return resolveName(name_3, preferReference);\n            case ts__default.SyntaxKind.TypeReference:\n                var typeReferenceNode = node;\n                var typeNameNode_1 = typeReferenceNode.typeName;\n                var getReference = function (node) {\n                    if (typeNameNode_1.kind === ts__default.SyntaxKind.QualifiedName) {\n                        var qualifiedName = node;\n                        var left_1 = _this.evaluateNode(qualifiedName.left);\n                        if (schema.isMetadataModuleReferenceExpression(left_1)) {\n                            return recordEntry({\n                                __symbolic: 'reference',\n                                module: left_1.module,\n                                name: qualifiedName.right.text\n                            }, node);\n                        }\n                        // Record a type reference to a declared type as a select.\n                        return { __symbolic: 'select', expression: left_1, member: qualifiedName.right.text };\n                    }\n                    else {\n                        var identifier_1 = typeNameNode_1;\n                        var symbol = _this.symbols.resolve(identifier_1.text);\n                        if (isFoldableError(symbol) || schema.isMetadataSymbolicReferenceExpression(symbol)) {\n                            return recordEntry(symbol, node);\n                        }\n                        return recordEntry(errorSymbol('Could not resolve type', node, { typeName: identifier_1.text }), node);\n                    }\n                };\n                var typeReference = getReference(typeNameNode_1);\n                if (isFoldableError(typeReference)) {\n                    return recordEntry(typeReference, node);\n                }\n                if (!schema.isMetadataModuleReferenceExpression(typeReference) &&\n                    typeReferenceNode.typeArguments && typeReferenceNode.typeArguments.length) {\n                    var args_1 = typeReferenceNode.typeArguments.map(function (element) { return _this.evaluateNode(element); });\n                    // TODO: Remove typecast when upgraded to 2.0 as it will be corretly inferred.\n                    // Some versions of 1.9 do not infer this correctly.\n                    typeReference.arguments = args_1;\n                }\n                return recordEntry(typeReference, node);\n            case ts__default.SyntaxKind.UnionType:\n                var unionType = node;\n                // Remove null and undefined from the list of unions.\n                var references = unionType.types\n                    .filter(function (n) { return n.kind != ts__default.SyntaxKind.NullKeyword &&\n                    n.kind != ts__default.SyntaxKind.UndefinedKeyword; })\n                    .map(function (n) { return _this.evaluateNode(n); });\n                // The remmaining reference must be the same. If two have type arguments consider them\n                // different even if the type arguments are the same.\n                var candidate = null;\n                for (var i = 0; i < references.length; i++) {\n                    var reference = references[i];\n                    if (schema.isMetadataSymbolicReferenceExpression(reference)) {\n                        if (candidate) {\n                            if (reference.name == candidate.name &&\n                                reference.module == candidate.module && !reference.arguments) {\n                                candidate = reference;\n                            }\n                        }\n                        else {\n                            candidate = reference;\n                        }\n                    }\n                    else {\n                        return reference;\n                    }\n                }\n                if (candidate)\n                    return candidate;\n                break;\n            case ts__default.SyntaxKind.NoSubstitutionTemplateLiteral:\n            case ts__default.SyntaxKind.StringLiteral:\n            case ts__default.SyntaxKind.TemplateHead:\n            case ts__default.SyntaxKind.TemplateTail:\n            case ts__default.SyntaxKind.TemplateMiddle:\n                return node.text;\n            case ts__default.SyntaxKind.NumericLiteral:\n                return parseFloat(node.text);\n            case ts__default.SyntaxKind.AnyKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'any' }, node);\n            case ts__default.SyntaxKind.StringKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'string' }, node);\n            case ts__default.SyntaxKind.NumberKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'number' }, node);\n            case ts__default.SyntaxKind.BooleanKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'boolean' }, node);\n            case ts__default.SyntaxKind.ArrayType:\n                var arrayTypeNode = node;\n                return recordEntry({\n                    __symbolic: 'reference',\n                    name: 'Array',\n                    arguments: [this.evaluateNode(arrayTypeNode.elementType)]\n                }, node);\n            case ts__default.SyntaxKind.NullKeyword:\n                return null;\n            case ts__default.SyntaxKind.TrueKeyword:\n                return true;\n            case ts__default.SyntaxKind.FalseKeyword:\n                return false;\n            case ts__default.SyntaxKind.ParenthesizedExpression:\n                var parenthesizedExpression = node;\n                return this.evaluateNode(parenthesizedExpression.expression);\n            case ts__default.SyntaxKind.TypeAssertionExpression:\n                var typeAssertion = node;\n                return this.evaluateNode(typeAssertion.expression);\n            case ts__default.SyntaxKind.PrefixUnaryExpression:\n                var prefixUnaryExpression = node;\n                var operand = this.evaluateNode(prefixUnaryExpression.operand);\n                if (isDefined(operand) && isPrimitive(operand)) {\n                    switch (prefixUnaryExpression.operator) {\n                        case ts__default.SyntaxKind.PlusToken:\n                            return +operand;\n                        case ts__default.SyntaxKind.MinusToken:\n                            return -operand;\n                        case ts__default.SyntaxKind.TildeToken:\n                            return ~operand;\n                        case ts__default.SyntaxKind.ExclamationToken:\n                            return !operand;\n                    }\n                }\n                var operatorText = void 0;\n                switch (prefixUnaryExpression.operator) {\n                    case ts__default.SyntaxKind.PlusToken:\n                        operatorText = '+';\n                        break;\n                    case ts__default.SyntaxKind.MinusToken:\n                        operatorText = '-';\n                        break;\n                    case ts__default.SyntaxKind.TildeToken:\n                        operatorText = '~';\n                        break;\n                    case ts__default.SyntaxKind.ExclamationToken:\n                        operatorText = '!';\n                        break;\n                    default:\n                        return undefined;\n                }\n                return recordEntry({ __symbolic: 'pre', operator: operatorText, operand: operand }, node);\n            case ts__default.SyntaxKind.BinaryExpression:\n                var binaryExpression = node;\n                var left = this.evaluateNode(binaryExpression.left);\n                var right = this.evaluateNode(binaryExpression.right);\n                if (isDefined(left) && isDefined(right)) {\n                    if (isPrimitive(left) && isPrimitive(right))\n                        switch (binaryExpression.operatorToken.kind) {\n                            case ts__default.SyntaxKind.BarBarToken:\n                                return left || right;\n                            case ts__default.SyntaxKind.AmpersandAmpersandToken:\n                                return left && right;\n                            case ts__default.SyntaxKind.AmpersandToken:\n                                return left & right;\n                            case ts__default.SyntaxKind.BarToken:\n                                return left | right;\n                            case ts__default.SyntaxKind.CaretToken:\n                                return left ^ right;\n                            case ts__default.SyntaxKind.EqualsEqualsToken:\n                                return left == right;\n                            case ts__default.SyntaxKind.ExclamationEqualsToken:\n                                return left != right;\n                            case ts__default.SyntaxKind.EqualsEqualsEqualsToken:\n                                return left === right;\n                            case ts__default.SyntaxKind.ExclamationEqualsEqualsToken:\n                                return left !== right;\n                            case ts__default.SyntaxKind.LessThanToken:\n                                return left < right;\n                            case ts__default.SyntaxKind.GreaterThanToken:\n                                return left > right;\n                            case ts__default.SyntaxKind.LessThanEqualsToken:\n                                return left <= right;\n                            case ts__default.SyntaxKind.GreaterThanEqualsToken:\n                                return left >= right;\n                            case ts__default.SyntaxKind.LessThanLessThanToken:\n                                return left << right;\n                            case ts__default.SyntaxKind.GreaterThanGreaterThanToken:\n                                return left >> right;\n                            case ts__default.SyntaxKind.GreaterThanGreaterThanGreaterThanToken:\n                                return left >>> right;\n                            case ts__default.SyntaxKind.PlusToken:\n                                return left + right;\n                            case ts__default.SyntaxKind.MinusToken:\n                                return left - right;\n                            case ts__default.SyntaxKind.AsteriskToken:\n                                return left * right;\n                            case ts__default.SyntaxKind.SlashToken:\n                                return left / right;\n                            case ts__default.SyntaxKind.PercentToken:\n                                return left % right;\n                        }\n                    return recordEntry({\n                        __symbolic: 'binop',\n                        operator: binaryExpression.operatorToken.getText(),\n                        left: left,\n                        right: right\n                    }, node);\n                }\n                break;\n            case ts__default.SyntaxKind.ConditionalExpression:\n                var conditionalExpression = node;\n                var condition = this.evaluateNode(conditionalExpression.condition);\n                var thenExpression = this.evaluateNode(conditionalExpression.whenTrue);\n                var elseExpression = this.evaluateNode(conditionalExpression.whenFalse);\n                if (isPrimitive(condition)) {\n                    return condition ? thenExpression : elseExpression;\n                }\n                return recordEntry({ __symbolic: 'if', condition: condition, thenExpression: thenExpression, elseExpression: elseExpression }, node);\n            case ts__default.SyntaxKind.FunctionExpression:\n            case ts__default.SyntaxKind.ArrowFunction:\n                return recordEntry(errorSymbol('Function call not supported', node), node);\n            case ts__default.SyntaxKind.TaggedTemplateExpression:\n                return recordEntry(errorSymbol('Tagged template expressions are not supported in metadata', node), node);\n            case ts__default.SyntaxKind.TemplateExpression:\n                var templateExpression = node;\n                if (this.isFoldable(node)) {\n                    return templateExpression.templateSpans.reduce(function (previous, current) { return previous + _this.evaluateNode(current.expression) +\n                        _this.evaluateNode(current.literal); }, this.evaluateNode(templateExpression.head));\n                }\n                else {\n                    return templateExpression.templateSpans.reduce(function (previous, current) {\n                        var expr = _this.evaluateNode(current.expression);\n                        var literal = _this.evaluateNode(current.literal);\n                        if (isFoldableError(expr))\n                            return expr;\n                        if (isFoldableError(literal))\n                            return literal;\n                        if (typeof previous === 'string' && typeof expr === 'string' &&\n                            typeof literal === 'string') {\n                            return previous + expr + literal;\n                        }\n                        var result = expr;\n                        if (previous !== '') {\n                            result = { __symbolic: 'binop', operator: '+', left: previous, right: expr };\n                        }\n                        if (literal != '') {\n                            result = { __symbolic: 'binop', operator: '+', left: result, right: literal };\n                        }\n                        return result;\n                    }, this.evaluateNode(templateExpression.head));\n                }\n            case ts__default.SyntaxKind.AsExpression:\n                var asExpression = node;\n                return this.evaluateNode(asExpression.expression);\n            case ts__default.SyntaxKind.ClassExpression:\n                return { __symbolic: 'class' };\n        }\n        return recordEntry(errorSymbol('Expression form not supported', node), node);\n    };\n    return Evaluator;\n}());\nexports.Evaluator = Evaluator;\nfunction isPropertyAssignment(node) {\n    return node.kind == ts__default.SyntaxKind.PropertyAssignment;\n}\nvar empty = ts__default.createNodeArray();\nfunction arrayOrEmpty(v) {\n    return v || empty;\n}\n\n});\n\nvar symbols = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar Symbols = (function () {\n    function Symbols(sourceFile) {\n        this.sourceFile = sourceFile;\n        this.references = new Map();\n    }\n    Symbols.prototype.resolve = function (name, preferReference) {\n        return (preferReference && this.references.get(name)) || this.symbols.get(name);\n    };\n    Symbols.prototype.define = function (name, value) { this.symbols.set(name, value); };\n    Symbols.prototype.defineReference = function (name, value) {\n        this.references.set(name, value);\n    };\n    Symbols.prototype.has = function (name) { return this.symbols.has(name); };\n    Object.defineProperty(Symbols.prototype, \"symbols\", {\n        get: function () {\n            var result = this._symbols;\n            if (!result) {\n                result = this._symbols = new Map();\n                populateBuiltins(result);\n                this.buildImports();\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Symbols.prototype.buildImports = function () {\n        var _this = this;\n        var symbols = this._symbols;\n        // Collect the imported symbols into this.symbols\n        var stripQuotes = function (s) { return s.replace(/^['\"]|['\"]$/g, ''); };\n        var visit = function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ImportEqualsDeclaration:\n                    var importEqualsDeclaration = node;\n                    if (importEqualsDeclaration.moduleReference.kind ===\n                        ts__default.SyntaxKind.ExternalModuleReference) {\n                        var externalReference = importEqualsDeclaration.moduleReference;\n                        if (externalReference.expression) {\n                            // An `import <identifier> = require(<module-specifier>);\n                            if (!externalReference.expression.parent) {\n                                // The `parent` field of a node is set by the TypeScript binder (run as\n                                // part of the type checker). Setting it here allows us to call `getText()`\n                                // even if the `SourceFile` was not type checked (which looks for `SourceFile`\n                                // in the parent chain). This doesn't damage the node as the binder unconditionally\n                                // sets the parent.\n                                externalReference.expression.parent = externalReference;\n                                externalReference.parent = _this.sourceFile;\n                            }\n                            var from_1 = stripQuotes(externalReference.expression.getText());\n                            symbols.set(importEqualsDeclaration.name.text, { __symbolic: 'reference', module: from_1 });\n                            break;\n                        }\n                    }\n                    symbols.set(importEqualsDeclaration.name.text, { __symbolic: 'error', message: \"Unsupported import syntax\" });\n                    break;\n                case ts__default.SyntaxKind.ImportDeclaration:\n                    var importDecl = node;\n                    if (!importDecl.importClause) {\n                        // An `import <module-specifier>` clause which does not bring symbols into scope.\n                        break;\n                    }\n                    if (!importDecl.moduleSpecifier.parent) {\n                        // See note above in the `ImportEqualDeclaration` case.\n                        importDecl.moduleSpecifier.parent = importDecl;\n                        importDecl.parent = _this.sourceFile;\n                    }\n                    var from = stripQuotes(importDecl.moduleSpecifier.getText());\n                    if (importDecl.importClause.name) {\n                        // An `import <identifier> form <module-specifier>` clause. Record the defualt symbol.\n                        symbols.set(importDecl.importClause.name.text, { __symbolic: 'reference', module: from, default: true });\n                    }\n                    var bindings = importDecl.importClause.namedBindings;\n                    if (bindings) {\n                        switch (bindings.kind) {\n                            case ts__default.SyntaxKind.NamedImports:\n                                // An `import { [<identifier> [, <identifier>] } from <module-specifier>` clause\n                                for (var _i = 0, _a = bindings.elements; _i < _a.length; _i++) {\n                                    var binding = _a[_i];\n                                    symbols.set(binding.name.text, {\n                                        __symbolic: 'reference',\n                                        module: from,\n                                        name: binding.propertyName ? binding.propertyName.text : binding.name.text\n                                    });\n                                }\n                                break;\n                            case ts__default.SyntaxKind.NamespaceImport:\n                                // An `input * as <identifier> from <module-specifier>` clause.\n                                symbols.set(bindings.name.text, { __symbolic: 'reference', module: from });\n                                break;\n                        }\n                    }\n                    break;\n            }\n            ts__default.forEachChild(node, visit);\n        };\n        if (this.sourceFile) {\n            ts__default.forEachChild(this.sourceFile, visit);\n        }\n    };\n    return Symbols;\n}());\nexports.Symbols = Symbols;\nfunction populateBuiltins(symbols) {\n    // From lib.core.d.ts (all \"define const\")\n    ['Object', 'Function', 'String', 'Number', 'Array', 'Boolean', 'Map', 'NaN', 'Infinity', 'Math',\n        'Date', 'RegExp', 'Error', 'Error', 'EvalError', 'RangeError', 'ReferenceError', 'SyntaxError',\n        'TypeError', 'URIError', 'JSON', 'ArrayBuffer', 'DataView', 'Int8Array', 'Uint8Array',\n        'Uint8ClampedArray', 'Uint16Array', 'Int16Array', 'Int32Array', 'Uint32Array', 'Float32Array',\n        'Float64Array']\n        .forEach(function (name) { return symbols.set(name, { __symbolic: 'reference', name: name }); });\n}\n\n});\n\nvar collector = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign = (commonjsGlobal && commonjsGlobal.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\nvar isStatic = function (node) { return ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Static; };\n/**\n * Collect decorator metadata from a TypeScript module.\n */\nvar MetadataCollector = (function () {\n    function MetadataCollector(options) {\n        if (options === void 0) { options = {}; }\n        this.options = options;\n    }\n    /**\n     * Returns a JSON.stringify friendly form describing the decorators of the exported classes from\n     * the source file that is expected to correspond to a module.\n     */\n    MetadataCollector.prototype.getMetadata = function (sourceFile, strict, substituteExpression) {\n        var _this = this;\n        if (strict === void 0) { strict = false; }\n        var locals = new symbols.Symbols(sourceFile);\n        var nodeMap = new Map();\n        var composedSubstituter = substituteExpression && this.options.substituteExpression ?\n            function (value, node) {\n                return _this.options.substituteExpression(substituteExpression(value, node), node);\n            } :\n            substituteExpression;\n        var evaluatorOptions = substituteExpression ? __assign({}, this.options, { substituteExpression: composedSubstituter }) :\n            this.options;\n        var metadata;\n        var evaluator$$1 = new evaluator.Evaluator(locals, nodeMap, evaluatorOptions, function (name, value) {\n            if (!metadata)\n                metadata = {};\n            metadata[name] = value;\n        });\n        var exports = undefined;\n        function objFromDecorator(decoratorNode) {\n            return evaluator$$1.evaluateNode(decoratorNode.expression);\n        }\n        function recordEntry(entry, node) {\n            nodeMap.set(entry, node);\n            return entry;\n        }\n        function errorSym(message, node, context) {\n            return evaluator.errorSymbol(message, node, context, sourceFile);\n        }\n        function maybeGetSimpleFunction(functionDeclaration) {\n            if (functionDeclaration.name && functionDeclaration.name.kind == ts__default.SyntaxKind.Identifier) {\n                var nameNode = functionDeclaration.name;\n                var functionName = nameNode.text;\n                var functionBody = functionDeclaration.body;\n                if (functionBody && functionBody.statements.length == 1) {\n                    var statement = functionBody.statements[0];\n                    if (statement.kind === ts__default.SyntaxKind.ReturnStatement) {\n                        var returnStatement = statement;\n                        if (returnStatement.expression) {\n                            var func = {\n                                __symbolic: 'function',\n                                parameters: namesOf(functionDeclaration.parameters),\n                                value: evaluator$$1.evaluateNode(returnStatement.expression)\n                            };\n                            if (functionDeclaration.parameters.some(function (p) { return p.initializer != null; })) {\n                                func.defaults = functionDeclaration.parameters.map(function (p) { return p.initializer && evaluator$$1.evaluateNode(p.initializer); });\n                            }\n                            return recordEntry({ func: func, name: functionName }, functionDeclaration);\n                        }\n                    }\n                }\n            }\n        }\n        function classMetadataOf(classDeclaration) {\n            var result = { __symbolic: 'class' };\n            function getDecorators(decorators) {\n                if (decorators && decorators.length)\n                    return decorators.map(function (decorator) { return objFromDecorator(decorator); });\n                return undefined;\n            }\n            function referenceFrom(node) {\n                var result = evaluator$$1.evaluateNode(node);\n                if (schema.isMetadataError(result) || schema.isMetadataSymbolicReferenceExpression(result) ||\n                    schema.isMetadataSymbolicSelectExpression(result)) {\n                    return result;\n                }\n                else {\n                    return errorSym('Symbol reference expected', node);\n                }\n            }\n            // Add class parents\n            if (classDeclaration.heritageClauses) {\n                classDeclaration.heritageClauses.forEach(function (hc) {\n                    if (hc.token === ts__default.SyntaxKind.ExtendsKeyword && hc.types) {\n                        hc.types.forEach(function (type) { return result.extends = referenceFrom(type.expression); });\n                    }\n                });\n            }\n            // Add arity if the type is generic\n            var typeParameters = classDeclaration.typeParameters;\n            if (typeParameters && typeParameters.length) {\n                result.arity = typeParameters.length;\n            }\n            // Add class decorators\n            if (classDeclaration.decorators) {\n                result.decorators = getDecorators(classDeclaration.decorators);\n            }\n            // member decorators\n            var members = null;\n            function recordMember(name, metadata) {\n                if (!members)\n                    members = {};\n                var data = members.hasOwnProperty(name) ? members[name] : [];\n                data.push(metadata);\n                members[name] = data;\n            }\n            // static member\n            var statics = null;\n            function recordStaticMember(name, value) {\n                if (!statics)\n                    statics = {};\n                statics[name] = value;\n            }\n            for (var _i = 0, _a = classDeclaration.members; _i < _a.length; _i++) {\n                var member = _a[_i];\n                var isConstructor = false;\n                switch (member.kind) {\n                    case ts__default.SyntaxKind.Constructor:\n                    case ts__default.SyntaxKind.MethodDeclaration:\n                        isConstructor = member.kind === ts__default.SyntaxKind.Constructor;\n                        var method = member;\n                        if (isStatic(method)) {\n                            var maybeFunc = maybeGetSimpleFunction(method);\n                            if (maybeFunc) {\n                                recordStaticMember(maybeFunc.name, maybeFunc.func);\n                            }\n                            continue;\n                        }\n                        var methodDecorators = getDecorators(method.decorators);\n                        var parameters = method.parameters;\n                        var parameterDecoratorData = [];\n                        var parametersData = [];\n                        var hasDecoratorData = false;\n                        var hasParameterData = false;\n                        for (var _b = 0, parameters_1 = parameters; _b < parameters_1.length; _b++) {\n                            var parameter = parameters_1[_b];\n                            var parameterData = getDecorators(parameter.decorators);\n                            parameterDecoratorData.push(parameterData);\n                            hasDecoratorData = hasDecoratorData || !!parameterData;\n                            if (isConstructor) {\n                                if (parameter.type) {\n                                    parametersData.push(referenceFrom(parameter.type));\n                                }\n                                else {\n                                    parametersData.push(null);\n                                }\n                                hasParameterData = true;\n                            }\n                        }\n                        var data = { __symbolic: isConstructor ? 'constructor' : 'method' };\n                        var name_1 = isConstructor ? '__ctor__' : evaluator$$1.nameOf(member.name);\n                        if (methodDecorators) {\n                            data.decorators = methodDecorators;\n                        }\n                        if (hasDecoratorData) {\n                            data.parameterDecorators = parameterDecoratorData;\n                        }\n                        if (hasParameterData) {\n                            data.parameters = parametersData;\n                        }\n                        if (!schema.isMetadataError(name_1)) {\n                            recordMember(name_1, data);\n                        }\n                        break;\n                    case ts__default.SyntaxKind.PropertyDeclaration:\n                    case ts__default.SyntaxKind.GetAccessor:\n                    case ts__default.SyntaxKind.SetAccessor:\n                        var property = member;\n                        if (isStatic(property)) {\n                            var name_2 = evaluator$$1.nameOf(property.name);\n                            if (!schema.isMetadataError(name_2)) {\n                                if (property.initializer) {\n                                    var value = evaluator$$1.evaluateNode(property.initializer);\n                                    recordStaticMember(name_2, value);\n                                }\n                                else {\n                                    recordStaticMember(name_2, errorSym('Variable not initialized', property.name));\n                                }\n                            }\n                        }\n                        var propertyDecorators = getDecorators(property.decorators);\n                        if (propertyDecorators) {\n                            var name_3 = evaluator$$1.nameOf(property.name);\n                            if (!schema.isMetadataError(name_3)) {\n                                recordMember(name_3, { __symbolic: 'property', decorators: propertyDecorators });\n                            }\n                        }\n                        break;\n                }\n            }\n            if (members) {\n                result.members = members;\n            }\n            if (statics) {\n                result.statics = statics;\n            }\n            return recordEntry(result, classDeclaration);\n        }\n        // Collect all exported symbols from an exports clause.\n        var exportMap = new Map();\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ExportDeclaration:\n                    var exportDeclaration = node;\n                    var moduleSpecifier = exportDeclaration.moduleSpecifier, exportClause = exportDeclaration.exportClause;\n                    if (!moduleSpecifier) {\n                        // If there is a module specifier there is also an exportClause\n                        exportClause.elements.forEach(function (spec) {\n                            var exportedAs = spec.name.text;\n                            var name = (spec.propertyName || spec.name).text;\n                            exportMap.set(name, exportedAs);\n                        });\n                    }\n            }\n        });\n        var isExport = function (node) {\n            return sourceFile.isDeclarationFile || ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Export;\n        };\n        var isExportedIdentifier = function (identifier) {\n            return identifier && exportMap.has(identifier.text);\n        };\n        var isExported = function (node) {\n            return isExport(node) || isExportedIdentifier(node.name);\n        };\n        var exportedIdentifierName = function (identifier) {\n            return identifier && (exportMap.get(identifier.text) || identifier.text);\n        };\n        var exportedName = function (node) { return exportedIdentifierName(node.name); };\n        // Predeclare classes and functions\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ClassDeclaration:\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        var className = classDeclaration.name.text;\n                        if (isExported(classDeclaration)) {\n                            locals.define(className, { __symbolic: 'reference', name: exportedName(classDeclaration) });\n                        }\n                        else {\n                            locals.define(className, errorSym('Reference to non-exported class', node, { className: className }));\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.InterfaceDeclaration:\n                    var interfaceDeclaration = node;\n                    if (interfaceDeclaration.name) {\n                        var interfaceName = interfaceDeclaration.name.text;\n                        // All references to interfaces should be converted to references to `any`.\n                        locals.define(interfaceName, { __symbolic: 'reference', name: 'any' });\n                    }\n                    break;\n                case ts__default.SyntaxKind.FunctionDeclaration:\n                    var functionDeclaration = node;\n                    if (!isExported(functionDeclaration)) {\n                        // Report references to this function as an error.\n                        var nameNode = functionDeclaration.name;\n                        if (nameNode && nameNode.text) {\n                            locals.define(nameNode.text, errorSym('Reference to a non-exported function', nameNode, { name: nameNode.text }));\n                        }\n                    }\n                    break;\n            }\n        });\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ExportDeclaration:\n                    // Record export declarations\n                    var exportDeclaration = node;\n                    var moduleSpecifier = exportDeclaration.moduleSpecifier, exportClause = exportDeclaration.exportClause;\n                    if (!moduleSpecifier) {\n                        // no module specifier -> export {propName as name};\n                        if (exportClause) {\n                            exportClause.elements.forEach(function (spec) {\n                                var name = spec.name.text;\n                                // If the symbol was not already exported, export a reference since it is a\n                                // reference to an import\n                                if (!metadata || !metadata[name]) {\n                                    var propNode = spec.propertyName || spec.name;\n                                    var value = evaluator$$1.evaluateNode(propNode);\n                                    if (!metadata)\n                                        metadata = {};\n                                    metadata[name] = recordEntry(value, node);\n                                }\n                            });\n                        }\n                    }\n                    if (moduleSpecifier && moduleSpecifier.kind == ts__default.SyntaxKind.StringLiteral) {\n                        // Ignore exports that don't have string literals as exports.\n                        // This is allowed by the syntax but will be flagged as an error by the type checker.\n                        var from = moduleSpecifier.text;\n                        var moduleExport = { from: from };\n                        if (exportClause) {\n                            moduleExport.export = exportClause.elements.map(function (spec) { return spec.propertyName ? { name: spec.propertyName.text, as: spec.name.text } :\n                                spec.name.text; });\n                        }\n                        if (!exports)\n                            exports = [];\n                        exports.push(moduleExport);\n                    }\n                    break;\n                case ts__default.SyntaxKind.ClassDeclaration:\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        if (isExported(classDeclaration)) {\n                            var name_4 = exportedName(classDeclaration);\n                            if (name_4) {\n                                if (!metadata)\n                                    metadata = {};\n                                metadata[name_4] = classMetadataOf(classDeclaration);\n                            }\n                        }\n                    }\n                    // Otherwise don't record metadata for the class.\n                    break;\n                case ts__default.SyntaxKind.TypeAliasDeclaration:\n                    var typeDeclaration = node;\n                    if (typeDeclaration.name && isExported(typeDeclaration)) {\n                        var name_5 = exportedName(typeDeclaration);\n                        if (name_5) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_5] = { __symbolic: 'interface' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.InterfaceDeclaration:\n                    var interfaceDeclaration = node;\n                    if (interfaceDeclaration.name && isExported(interfaceDeclaration)) {\n                        var name_6 = exportedName(interfaceDeclaration);\n                        if (name_6) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_6] = { __symbolic: 'interface' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.FunctionDeclaration:\n                    // Record functions that return a single value. Record the parameter\n                    // names substitution will be performed by the StaticReflector.\n                    var functionDeclaration = node;\n                    if (isExported(functionDeclaration) && functionDeclaration.name) {\n                        var name_7 = exportedName(functionDeclaration);\n                        var maybeFunc = maybeGetSimpleFunction(functionDeclaration);\n                        if (name_7) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_7] =\n                                maybeFunc ? recordEntry(maybeFunc.func, node) : { __symbolic: 'function' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.EnumDeclaration:\n                    var enumDeclaration = node;\n                    if (isExported(enumDeclaration)) {\n                        var enumValueHolder = {};\n                        var enumName = exportedName(enumDeclaration);\n                        var nextDefaultValue = 0;\n                        var writtenMembers = 0;\n                        for (var _i = 0, _a = enumDeclaration.members; _i < _a.length; _i++) {\n                            var member = _a[_i];\n                            var enumValue = void 0;\n                            if (!member.initializer) {\n                                enumValue = nextDefaultValue;\n                            }\n                            else {\n                                enumValue = evaluator$$1.evaluateNode(member.initializer);\n                            }\n                            var name_8 = undefined;\n                            if (member.name.kind == ts__default.SyntaxKind.Identifier) {\n                                var identifier = member.name;\n                                name_8 = identifier.text;\n                                enumValueHolder[name_8] = enumValue;\n                                writtenMembers++;\n                            }\n                            if (typeof enumValue === 'number') {\n                                nextDefaultValue = enumValue + 1;\n                            }\n                            else if (name_8) {\n                                nextDefaultValue = {\n                                    __symbolic: 'binary',\n                                    operator: '+',\n                                    left: {\n                                        __symbolic: 'select',\n                                        expression: recordEntry({ __symbolic: 'reference', name: enumName }, node), name: name_8\n                                    }\n                                };\n                            }\n                            else {\n                                nextDefaultValue =\n                                    recordEntry(errorSym('Unsuppported enum member name', member.name), node);\n                            }\n                        }\n                        if (writtenMembers) {\n                            if (enumName) {\n                                if (!metadata)\n                                    metadata = {};\n                                metadata[enumName] = recordEntry(enumValueHolder, node);\n                            }\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.VariableStatement:\n                    var variableStatement = node;\n                    var _loop_1 = function (variableDeclaration) {\n                        if (variableDeclaration.name.kind == ts__default.SyntaxKind.Identifier) {\n                            var nameNode = variableDeclaration.name;\n                            var varValue = void 0;\n                            if (variableDeclaration.initializer) {\n                                varValue = evaluator$$1.evaluateNode(variableDeclaration.initializer);\n                            }\n                            else {\n                                varValue = recordEntry(errorSym('Variable not initialized', nameNode), nameNode);\n                            }\n                            var exported = false;\n                            if (isExport(variableStatement) || isExport(variableDeclaration) ||\n                                isExportedIdentifier(nameNode)) {\n                                var name_9 = exportedIdentifierName(nameNode);\n                                if (name_9) {\n                                    if (!metadata)\n                                        metadata = {};\n                                    metadata[name_9] = recordEntry(varValue, node);\n                                }\n                                exported = true;\n                            }\n                            if (typeof varValue == 'string' || typeof varValue == 'number' ||\n                                typeof varValue == 'boolean') {\n                                locals.define(nameNode.text, varValue);\n                                if (exported) {\n                                    locals.defineReference(nameNode.text, { __symbolic: 'reference', name: nameNode.text });\n                                }\n                            }\n                            else if (!exported) {\n                                if (varValue && !schema.isMetadataError(varValue)) {\n                                    locals.define(nameNode.text, recordEntry(varValue, node));\n                                }\n                                else {\n                                    locals.define(nameNode.text, recordEntry(errorSym('Reference to a local symbol', nameNode, { name: nameNode.text }), node));\n                                }\n                            }\n                        }\n                        else {\n                            // Destructuring (or binding) declarations are not supported,\n                            // var {<identifier>[, <identifier>]+} = <expression>;\n                            //   or\n                            // var [<identifier>[, <identifier}+] = <expression>;\n                            // are not supported.\n                            var report_1 = function (nameNode) {\n                                switch (nameNode.kind) {\n                                    case ts__default.SyntaxKind.Identifier:\n                                        var name_10 = nameNode;\n                                        var varValue = errorSym('Destructuring not supported', name_10);\n                                        locals.define(name_10.text, varValue);\n                                        if (isExport(node)) {\n                                            if (!metadata)\n                                                metadata = {};\n                                            metadata[name_10.text] = varValue;\n                                        }\n                                        break;\n                                    case ts__default.SyntaxKind.BindingElement:\n                                        var bindingElement = nameNode;\n                                        report_1(bindingElement.name);\n                                        break;\n                                    case ts__default.SyntaxKind.ObjectBindingPattern:\n                                    case ts__default.SyntaxKind.ArrayBindingPattern:\n                                        var bindings = nameNode;\n                                        bindings.elements.forEach(report_1);\n                                        break;\n                                }\n                            };\n                            report_1(variableDeclaration.name);\n                        }\n                    };\n                    for (var _b = 0, _c = variableStatement.declarationList.declarations; _b < _c.length; _b++) {\n                        var variableDeclaration = _c[_b];\n                        _loop_1(variableDeclaration);\n                    }\n                    break;\n            }\n        });\n        if (metadata || exports) {\n            if (!metadata)\n                metadata = {};\n            else if (strict) {\n                validateMetadata(sourceFile, nodeMap, metadata);\n            }\n            var result = {\n                __symbolic: 'module',\n                version: this.options.version || schema.METADATA_VERSION, metadata: metadata\n            };\n            if (exports)\n                result.exports = exports;\n            return result;\n        }\n    };\n    return MetadataCollector;\n}());\nexports.MetadataCollector = MetadataCollector;\n// This will throw if the metadata entry given contains an error node.\nfunction validateMetadata(sourceFile, nodeMap, metadata) {\n    var locals = new Set(['Array', 'Object', 'Set', 'Map', 'string', 'number', 'any']);\n    function validateExpression(expression) {\n        if (!expression) {\n            return;\n        }\n        else if (Array.isArray(expression)) {\n            expression.forEach(validateExpression);\n        }\n        else if (typeof expression === 'object' && !expression.hasOwnProperty('__symbolic')) {\n            Object.getOwnPropertyNames(expression).forEach(function (v) { return validateExpression(expression[v]); });\n        }\n        else if (schema.isMetadataError(expression)) {\n            reportError(expression);\n        }\n        else if (schema.isMetadataGlobalReferenceExpression(expression)) {\n            if (!locals.has(expression.name)) {\n                var reference = metadata[expression.name];\n                if (reference) {\n                    validateExpression(reference);\n                }\n            }\n        }\n        else if (schema.isFunctionMetadata(expression)) {\n            validateFunction(expression);\n        }\n        else if (schema.isMetadataSymbolicExpression(expression)) {\n            switch (expression.__symbolic) {\n                case 'binary':\n                    var binaryExpression = expression;\n                    validateExpression(binaryExpression.left);\n                    validateExpression(binaryExpression.right);\n                    break;\n                case 'call':\n                case 'new':\n                    var callExpression = expression;\n                    validateExpression(callExpression.expression);\n                    if (callExpression.arguments)\n                        callExpression.arguments.forEach(validateExpression);\n                    break;\n                case 'index':\n                    var indexExpression = expression;\n                    validateExpression(indexExpression.expression);\n                    validateExpression(indexExpression.index);\n                    break;\n                case 'pre':\n                    var prefixExpression = expression;\n                    validateExpression(prefixExpression.operand);\n                    break;\n                case 'select':\n                    var selectExpression = expression;\n                    validateExpression(selectExpression.expression);\n                    break;\n                case 'spread':\n                    var spreadExpression = expression;\n                    validateExpression(spreadExpression.expression);\n                    break;\n                case 'if':\n                    var ifExpression = expression;\n                    validateExpression(ifExpression.condition);\n                    validateExpression(ifExpression.elseExpression);\n                    validateExpression(ifExpression.thenExpression);\n                    break;\n            }\n        }\n    }\n    function validateMember(classData, member) {\n        if (member.decorators) {\n            member.decorators.forEach(validateExpression);\n        }\n        if (schema.isMethodMetadata(member) && member.parameterDecorators) {\n            member.parameterDecorators.forEach(validateExpression);\n        }\n        // Only validate parameters of classes for which we know that are used with our DI\n        if (classData.decorators && schema.isConstructorMetadata(member) && member.parameters) {\n            member.parameters.forEach(validateExpression);\n        }\n    }\n    function validateClass(classData) {\n        if (classData.decorators) {\n            classData.decorators.forEach(validateExpression);\n        }\n        if (classData.members) {\n            Object.getOwnPropertyNames(classData.members)\n                .forEach(function (name) { return classData.members[name].forEach(function (m) { return validateMember(classData, m); }); });\n        }\n        if (classData.statics) {\n            Object.getOwnPropertyNames(classData.statics).forEach(function (name) {\n                var staticMember = classData.statics[name];\n                if (schema.isFunctionMetadata(staticMember)) {\n                    validateExpression(staticMember.value);\n                }\n                else {\n                    validateExpression(staticMember);\n                }\n            });\n        }\n    }\n    function validateFunction(functionDeclaration) {\n        if (functionDeclaration.value) {\n            var oldLocals = locals;\n            if (functionDeclaration.parameters) {\n                locals = new Set(oldLocals.values());\n                if (functionDeclaration.parameters)\n                    functionDeclaration.parameters.forEach(function (n) { return locals.add(n); });\n            }\n            validateExpression(functionDeclaration.value);\n            locals = oldLocals;\n        }\n    }\n    function shouldReportNode(node) {\n        if (node) {\n            var nodeStart = node.getStart();\n            return !(node.pos != nodeStart &&\n                sourceFile.text.substring(node.pos, nodeStart).indexOf('@dynamic') >= 0);\n        }\n        return true;\n    }\n    function reportError(error) {\n        var node = nodeMap.get(error);\n        if (shouldReportNode(node)) {\n            var lineInfo = error.line != undefined ?\n                error.character != undefined ? \":\" + (error.line + 1) + \":\" + (error.character + 1) :\n                    \":\" + (error.line + 1) :\n                '';\n            throw new Error(\"\" + sourceFile.fileName + lineInfo + \": Metadata collected contains an error that will be reported at runtime: \" + expandedMessage(error) + \".\\n  \" + JSON.stringify(error));\n        }\n    }\n    Object.getOwnPropertyNames(metadata).forEach(function (name) {\n        var entry = metadata[name];\n        try {\n            if (schema.isClassMetadata(entry)) {\n                validateClass(entry);\n            }\n        }\n        catch (e) {\n            var node = nodeMap.get(entry);\n            if (shouldReportNode(node)) {\n                if (node) {\n                    var _a = sourceFile.getLineAndCharacterOfPosition(node.getStart()), line = _a.line, character = _a.character;\n                    throw new Error(sourceFile.fileName + \":\" + (line + 1) + \":\" + (character + 1) + \": Error encountered in metadata generated for exported symbol '\" + name + \"': \\n \" + e.message);\n                }\n                throw new Error(\"Error encountered in metadata generated for exported symbol \" + name + \": \\n \" + e.message);\n            }\n        }\n    });\n}\n// Collect parameter names from a function.\nfunction namesOf(parameters) {\n    var result = [];\n    function addNamesOf(name) {\n        if (name.kind == ts__default.SyntaxKind.Identifier) {\n            var identifier = name;\n            result.push(identifier.text);\n        }\n        else {\n            var bindingPattern = name;\n            for (var _i = 0, _a = bindingPattern.elements; _i < _a.length; _i++) {\n                var element = _a[_i];\n                var name_11 = element.name;\n                if (name_11) {\n                    addNamesOf(name_11);\n                }\n            }\n        }\n    }\n    for (var _i = 0, parameters_2 = parameters; _i < parameters_2.length; _i++) {\n        var parameter = parameters_2[_i];\n        addNamesOf(parameter.name);\n    }\n    return result;\n}\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n    }\n    return error.message;\n}\n\n});\n\nvar bundler = createCommonjsModule(function (module, exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\n\n// The character set used to produce private names.\nvar PRIVATE_NAME_CHARS = 'abcdefghijklmnopqrstuvwxyz';\nvar MetadataBundler = (function () {\n    function MetadataBundler(root, importAs, host) {\n        this.root = root;\n        this.importAs = importAs;\n        this.host = host;\n        this.symbolMap = new Map();\n        this.metadataCache = new Map();\n        this.exports = new Map();\n        this.rootModule = \"./\" + path__default.basename(root);\n    }\n    MetadataBundler.prototype.getMetadataBundle = function () {\n        // Export the root module. This also collects the transitive closure of all values referenced by\n        // the exports.\n        var exportedSymbols = this.exportAll(this.rootModule);\n        this.canonicalizeSymbols(exportedSymbols);\n        // TODO: exports? e.g. a module re-exports a symbol from another bundle\n        var metadata = this.getEntries(exportedSymbols);\n        var privates = Array.from(this.symbolMap.values())\n            .filter(function (s) { return s.referenced && s.isPrivate; })\n            .map(function (s) { return ({\n            privateName: s.privateName,\n            name: s.declaration.name,\n            module: s.declaration.module\n        }); });\n        var origins = Array.from(this.symbolMap.values())\n            .filter(function (s) { return s.referenced && !s.reexport; })\n            .reduce(function (p, s) {\n            p[s.isPrivate ? s.privateName : s.name] = s.declaration.module;\n            return p;\n        }, {});\n        var exports = this.getReExports(exportedSymbols);\n        return {\n            metadata: {\n                __symbolic: 'module',\n                version: schema.METADATA_VERSION,\n                exports: exports.length ? exports : undefined, metadata: metadata, origins: origins,\n                importAs: this.importAs\n            },\n            privates: privates\n        };\n    };\n    MetadataBundler.resolveModule = function (importName, from) {\n        return resolveModule(importName, from);\n    };\n    MetadataBundler.prototype.getMetadata = function (moduleName) {\n        var result = this.metadataCache.get(moduleName);\n        if (!result) {\n            if (moduleName.startsWith('.')) {\n                var fullModuleName = resolveModule(moduleName, this.root);\n                result = this.host.getMetadataFor(fullModuleName);\n            }\n            this.metadataCache.set(moduleName, result);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.exportAll = function (moduleName) {\n        var _this = this;\n        var module = this.getMetadata(moduleName);\n        var result = this.exports.get(moduleName);\n        if (result) {\n            return result;\n        }\n        result = [];\n        var exportSymbol = function (exportedSymbol, exportAs) {\n            var symbol = _this.symbolOf(moduleName, exportAs);\n            result.push(symbol);\n            exportedSymbol.reexportedAs = symbol;\n            symbol.exports = exportedSymbol;\n        };\n        // Export all the symbols defined in this module.\n        if (module && module.metadata) {\n            for (var key in module.metadata) {\n                var data = module.metadata[key];\n                if (schema.isMetadataImportedSymbolReferenceExpression(data)) {\n                    // This is a re-export of an imported symbol. Record this as a re-export.\n                    var exportFrom = resolveModule(data.module, moduleName);\n                    this.exportAll(exportFrom);\n                    var symbol = this.symbolOf(exportFrom, data.name);\n                    exportSymbol(symbol, key);\n                }\n                else {\n                    // Record that this symbol is exported by this module.\n                    result.push(this.symbolOf(moduleName, key));\n                }\n            }\n        }\n        // Export all the re-exports from this module\n        if (module && module.exports) {\n            for (var _i = 0, _a = module.exports; _i < _a.length; _i++) {\n                var exportDeclaration = _a[_i];\n                var exportFrom = resolveModule(exportDeclaration.from, moduleName);\n                // Record all the exports from the module even if we don't use it directly.\n                var exportedSymbols = this.exportAll(exportFrom);\n                if (exportDeclaration.export) {\n                    // Re-export all the named exports from a module.\n                    for (var _b = 0, _c = exportDeclaration.export; _b < _c.length; _b++) {\n                        var exportItem = _c[_b];\n                        var name_1 = typeof exportItem == 'string' ? exportItem : exportItem.name;\n                        var exportAs = typeof exportItem == 'string' ? exportItem : exportItem.as;\n                        var symbol = this.symbolOf(exportFrom, name_1);\n                        if (exportedSymbols && exportedSymbols.length == 1 && exportedSymbols[0].reexport &&\n                            exportedSymbols[0].name == '*') {\n                            // This is a named export from a module we have no metadata about. Record the named\n                            // export as a re-export.\n                            symbol.reexport = true;\n                        }\n                        exportSymbol(this.symbolOf(exportFrom, name_1), exportAs);\n                    }\n                }\n                else {\n                    // Re-export all the symbols from the module\n                    var exportedSymbols_1 = this.exportAll(exportFrom);\n                    for (var _d = 0, exportedSymbols_2 = exportedSymbols_1; _d < exportedSymbols_2.length; _d++) {\n                        var exportedSymbol = exportedSymbols_2[_d];\n                        var name_2 = exportedSymbol.name;\n                        exportSymbol(exportedSymbol, name_2);\n                    }\n                }\n            }\n        }\n        if (!module) {\n            // If no metadata is found for this import then it is considered external to the\n            // library and should be recorded as a re-export in the final metadata if it is\n            // eventually re-exported.\n            var symbol = this.symbolOf(moduleName, '*');\n            symbol.reexport = true;\n            result.push(symbol);\n        }\n        this.exports.set(moduleName, result);\n        return result;\n    };\n    /**\n     * Fill in the canonicalSymbol which is the symbol that should be imported by factories.\n     * The canonical symbol is the one exported by the index file for the bundle or definition\n     * symbol for private symbols that are not exported by bundle index.\n     */\n    MetadataBundler.prototype.canonicalizeSymbols = function (exportedSymbols) {\n        var symbols = Array.from(this.symbolMap.values());\n        this.exported = new Set(exportedSymbols);\n        symbols.forEach(this.canonicalizeSymbol, this);\n    };\n    MetadataBundler.prototype.canonicalizeSymbol = function (symbol) {\n        var rootExport = getRootExport(symbol);\n        var declaration = getSymbolDeclaration(symbol);\n        var isPrivate = !this.exported.has(rootExport);\n        var canonicalSymbol = isPrivate ? declaration : rootExport;\n        symbol.isPrivate = isPrivate;\n        symbol.declaration = declaration;\n        symbol.canonicalSymbol = canonicalSymbol;\n        symbol.reexport = declaration.reexport;\n    };\n    MetadataBundler.prototype.getEntries = function (exportedSymbols) {\n        var _this = this;\n        var result = {};\n        var exportedNames = new Set(exportedSymbols.map(function (s) { return s.name; }));\n        var privateName = 0;\n        function newPrivateName() {\n            while (true) {\n                var digits = [];\n                var index = privateName++;\n                var base = PRIVATE_NAME_CHARS;\n                while (!digits.length || index > 0) {\n                    digits.unshift(base[index % base.length]);\n                    index = Math.floor(index / base.length);\n                }\n                digits.unshift('\\u0275');\n                var result_1 = digits.join('');\n                if (!exportedNames.has(result_1))\n                    return result_1;\n            }\n        }\n        exportedSymbols.forEach(function (symbol) { return _this.convertSymbol(symbol); });\n        var symbolsMap = new Map();\n        Array.from(this.symbolMap.values()).forEach(function (symbol) {\n            if (symbol.referenced && !symbol.reexport) {\n                var name_3 = symbol.name;\n                var identifier = symbol.declaration.module + \":\" + symbol.declaration.name;\n                if (symbol.isPrivate && !symbol.privateName) {\n                    name_3 = newPrivateName();\n                    symbol.privateName = name_3;\n                }\n                if (symbolsMap.has(identifier)) {\n                    var names = symbolsMap.get(identifier);\n                    names.push(name_3);\n                }\n                else {\n                    symbolsMap.set(identifier, [name_3]);\n                }\n                result[name_3] = symbol.value;\n            }\n        });\n        // check for duplicated entries\n        symbolsMap.forEach(function (names, identifier) {\n            if (names.length > 1) {\n                var _a = identifier.split(':'), module_1 = _a[0], declaredName = _a[1];\n                // prefer the export that uses the declared name (if any)\n                var reference_1 = names.indexOf(declaredName);\n                if (reference_1 === -1) {\n                    reference_1 = 0;\n                }\n                // keep one entry and replace the others by references\n                names.forEach(function (name, i) {\n                    if (i !== reference_1) {\n                        result[name] = { __symbolic: 'reference', name: names[reference_1] };\n                    }\n                });\n            }\n        });\n        return result;\n    };\n    MetadataBundler.prototype.getReExports = function (exportedSymbols) {\n        var modules = new Map();\n        var exportAlls = new Set();\n        for (var _i = 0, exportedSymbols_3 = exportedSymbols; _i < exportedSymbols_3.length; _i++) {\n            var symbol = exportedSymbols_3[_i];\n            if (symbol.reexport) {\n                // symbol.declaration is guarenteed to be defined during the phase this method is called.\n                var declaration = symbol.declaration;\n                var module_2 = declaration.module;\n                if (declaration.name == '*') {\n                    // Reexport all the symbols.\n                    exportAlls.add(declaration.module);\n                }\n                else {\n                    // Re-export the symbol as the exported name.\n                    var entry = modules.get(module_2);\n                    if (!entry) {\n                        entry = [];\n                        modules.set(module_2, entry);\n                    }\n                    var as = symbol.name;\n                    var name_4 = declaration.name;\n                    entry.push({ name: name_4, as: as });\n                }\n            }\n        }\n        return Array.from(exportAlls.values()).map(function (from) { return ({ from: from }); }).concat(Array.from(modules.entries()).map(function (_a) {\n            var from = _a[0], exports = _a[1];\n            return ({ export: exports, from: from });\n        }));\n    };\n    MetadataBundler.prototype.convertSymbol = function (symbol) {\n        // canonicalSymbol is ensured to be defined before this is called.\n        var canonicalSymbol = symbol.canonicalSymbol;\n        if (!canonicalSymbol.referenced) {\n            canonicalSymbol.referenced = true;\n            // declaration is ensured to be definded before this method is called.\n            var declaration = canonicalSymbol.declaration;\n            var module_3 = this.getMetadata(declaration.module);\n            if (module_3) {\n                var value = module_3.metadata[declaration.name];\n                if (value && !declaration.name.startsWith('___')) {\n                    canonicalSymbol.value = this.convertEntry(declaration.module, value);\n                }\n            }\n        }\n    };\n    MetadataBundler.prototype.convertEntry = function (moduleName, value) {\n        if (schema.isClassMetadata(value)) {\n            return this.convertClass(moduleName, value);\n        }\n        if (schema.isFunctionMetadata(value)) {\n            return this.convertFunction(moduleName, value);\n        }\n        if (schema.isInterfaceMetadata(value)) {\n            return value;\n        }\n        return this.convertValue(moduleName, value);\n    };\n    MetadataBundler.prototype.convertClass = function (moduleName, value) {\n        var _this = this;\n        return {\n            __symbolic: 'class',\n            arity: value.arity,\n            extends: this.convertExpression(moduleName, value.extends),\n            decorators: value.decorators && value.decorators.map(function (d) { return _this.convertExpression(moduleName, d); }),\n            members: this.convertMembers(moduleName, value.members),\n            statics: value.statics && this.convertStatics(moduleName, value.statics)\n        };\n    };\n    MetadataBundler.prototype.convertMembers = function (moduleName, members) {\n        var _this = this;\n        var result = {};\n        for (var name_5 in members) {\n            var value = members[name_5];\n            result[name_5] = value.map(function (v) { return _this.convertMember(moduleName, v); });\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertMember = function (moduleName, member) {\n        var _this = this;\n        var result = { __symbolic: member.__symbolic };\n        result.decorators =\n            member.decorators && member.decorators.map(function (d) { return _this.convertExpression(moduleName, d); });\n        if (schema.isMethodMetadata(member)) {\n            result.parameterDecorators = member.parameterDecorators &&\n                member.parameterDecorators.map(function (d) { return d && d.map(function (p) { return _this.convertExpression(moduleName, p); }); });\n            if (schema.isConstructorMetadata(member)) {\n                if (member.parameters) {\n                    result.parameters =\n                        member.parameters.map(function (p) { return _this.convertExpression(moduleName, p); });\n                }\n            }\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertStatics = function (moduleName, statics) {\n        var result = {};\n        for (var key in statics) {\n            var value = statics[key];\n            result[key] = schema.isFunctionMetadata(value) ? this.convertFunction(moduleName, value) : value;\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertFunction = function (moduleName, value) {\n        var _this = this;\n        return {\n            __symbolic: 'function',\n            parameters: value.parameters,\n            defaults: value.defaults && value.defaults.map(function (v) { return _this.convertValue(moduleName, v); }),\n            value: this.convertValue(moduleName, value.value)\n        };\n    };\n    MetadataBundler.prototype.convertValue = function (moduleName, value) {\n        var _this = this;\n        if (isPrimitive(value)) {\n            return value;\n        }\n        if (schema.isMetadataError(value)) {\n            return this.convertError(moduleName, value);\n        }\n        if (schema.isMetadataSymbolicExpression(value)) {\n            return this.convertExpression(moduleName, value);\n        }\n        if (Array.isArray(value)) {\n            return value.map(function (v) { return _this.convertValue(moduleName, v); });\n        }\n        // Otherwise it is a metadata object.\n        var object = value;\n        var result = {};\n        for (var key in object) {\n            result[key] = this.convertValue(moduleName, object[key]);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertExpression = function (moduleName, value) {\n        if (value) {\n            switch (value.__symbolic) {\n                case 'error':\n                    return this.convertError(moduleName, value);\n                case 'reference':\n                    return this.convertReference(moduleName, value);\n                default:\n                    return this.convertExpressionNode(moduleName, value);\n            }\n        }\n        return value;\n    };\n    MetadataBundler.prototype.convertError = function (module, value) {\n        return {\n            __symbolic: 'error',\n            message: value.message,\n            line: value.line,\n            character: value.character,\n            context: value.context, module: module\n        };\n    };\n    MetadataBundler.prototype.convertReference = function (moduleName, value) {\n        var _this = this;\n        var createReference = function (symbol) {\n            var declaration = symbol.declaration;\n            if (declaration.module.startsWith('.')) {\n                // Reference to a symbol defined in the module. Ensure it is converted then return a\n                // references to the final symbol.\n                _this.convertSymbol(symbol);\n                return {\n                    __symbolic: 'reference',\n                    get name() {\n                        // Resolved lazily because private names are assigned late.\n                        var canonicalSymbol = symbol.canonicalSymbol;\n                        if (canonicalSymbol.isPrivate == null) {\n                            throw Error('Invalid state: isPrivate was not initialized');\n                        }\n                        return canonicalSymbol.isPrivate ? canonicalSymbol.privateName : canonicalSymbol.name;\n                    }\n                };\n            }\n            else {\n                // The symbol was a re-exported symbol from another module. Return a reference to the\n                // original imported symbol.\n                return { __symbolic: 'reference', name: declaration.name, module: declaration.module };\n            }\n        };\n        if (schema.isMetadataGlobalReferenceExpression(value)) {\n            var metadata = this.getMetadata(moduleName);\n            if (metadata && metadata.metadata && metadata.metadata[value.name]) {\n                // Reference to a symbol defined in the module\n                return createReference(this.canonicalSymbolOf(moduleName, value.name));\n            }\n            // If a reference has arguments, the arguments need to be converted.\n            if (value.arguments) {\n                return {\n                    __symbolic: 'reference',\n                    name: value.name,\n                    arguments: value.arguments.map(function (a) { return _this.convertValue(moduleName, a); })\n                };\n            }\n            // Global references without arguments (such as to Math or JSON) are unmodified.\n            return value;\n        }\n        if (schema.isMetadataImportedSymbolReferenceExpression(value)) {\n            // References to imported symbols are separated into two, references to bundled modules and\n            // references to modules external to the bundle. If the module reference is relative it is\n            // assumed to be in the bundle. If it is Global it is assumed to be outside the bundle.\n            // References to symbols outside the bundle are left unmodified. References to symbol inside\n            // the bundle need to be converted to a bundle import reference reachable from the bundle\n            // index.\n            if (value.module.startsWith('.')) {\n                // Reference is to a symbol defined inside the module. Convert the reference to a reference\n                // to the canonical symbol.\n                var referencedModule = resolveModule(value.module, moduleName);\n                var referencedName = value.name;\n                return createReference(this.canonicalSymbolOf(referencedModule, referencedName));\n            }\n            // Value is a reference to a symbol defined outside the module.\n            if (value.arguments) {\n                // If a reference has arguments the arguments need to be converted.\n                return {\n                    __symbolic: 'reference',\n                    name: value.name,\n                    module: value.module,\n                    arguments: value.arguments.map(function (a) { return _this.convertValue(moduleName, a); })\n                };\n            }\n            return value;\n        }\n        if (schema.isMetadataModuleReferenceExpression(value)) {\n            // Cannot support references to bundled modules as the internal modules of a bundle are erased\n            // by the bundler.\n            if (value.module.startsWith('.')) {\n                return {\n                    __symbolic: 'error',\n                    message: 'Unsupported bundled module reference',\n                    context: { module: value.module }\n                };\n            }\n            // References to unbundled modules are unmodified.\n            return value;\n        }\n    };\n    MetadataBundler.prototype.convertExpressionNode = function (moduleName, value) {\n        var result = { __symbolic: value.__symbolic };\n        for (var key in value) {\n            result[key] = this.convertValue(moduleName, value[key]);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.symbolOf = function (module, name) {\n        var symbolKey = module + \":\" + name;\n        var symbol = this.symbolMap.get(symbolKey);\n        if (!symbol) {\n            symbol = { module: module, name: name };\n            this.symbolMap.set(symbolKey, symbol);\n        }\n        return symbol;\n    };\n    MetadataBundler.prototype.canonicalSymbolOf = function (module, name) {\n        // Ensure the module has been seen.\n        this.exportAll(module);\n        var symbol = this.symbolOf(module, name);\n        if (!symbol.canonicalSymbol) {\n            this.canonicalizeSymbol(symbol);\n        }\n        return symbol;\n    };\n    return MetadataBundler;\n}());\nexports.MetadataBundler = MetadataBundler;\nvar CompilerHostAdapter = (function () {\n    function CompilerHostAdapter(host) {\n        this.host = host;\n        this.collector = new collector.MetadataCollector();\n    }\n    CompilerHostAdapter.prototype.getMetadataFor = function (fileName) {\n        var sourceFile = this.host.getSourceFile(fileName + '.ts', ts__default.ScriptTarget.Latest);\n        return this.collector.getMetadata(sourceFile);\n    };\n    return CompilerHostAdapter;\n}());\nexports.CompilerHostAdapter = CompilerHostAdapter;\nfunction resolveModule(importName, from) {\n    if (importName.startsWith('.') && from) {\n        var normalPath = path__default.normalize(path__default.join(path__default.dirname(from), importName));\n        if (!normalPath.startsWith('.') && from.startsWith('.')) {\n            // path.normalize() preserves leading '../' but not './'. This adds it back.\n            normalPath = \".\" + path__default.sep + normalPath;\n        }\n        // Replace windows path delimiters with forward-slashes. Otherwise the paths are not\n        // TypeScript compatible when building the bundle.\n        return normalPath.replace(/\\\\/g, '/');\n    }\n    return importName;\n}\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\nfunction getRootExport(symbol) {\n    return symbol.reexportedAs ? getRootExport(symbol.reexportedAs) : symbol;\n}\nfunction getSymbolDeclaration(symbol) {\n    return symbol.exports ? getSymbolDeclaration(symbol.exports) : symbol;\n}\n\n});\n\nvar index_writer = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar INDEX_HEADER = \"/**\\n * Generated bundle index. Do not edit.\\n */\\n\";\nfunction privateEntriesToIndex(index, privates) {\n    var results = [INDEX_HEADER];\n    // Export all of the index symbols.\n    results.push(\"export * from '\" + index + \"';\", '');\n    // Simplify the exports\n    var exports = new Map();\n    for (var _i = 0, privates_1 = privates; _i < privates_1.length; _i++) {\n        var entry = privates_1[_i];\n        var entries = exports.get(entry.module);\n        if (!entries) {\n            entries = [];\n            exports.set(entry.module, entries);\n        }\n        entries.push(entry);\n    }\n    var compareEntries = compare(function (e) { return e.name; });\n    var compareModules = compare(function (e) { return e[0]; });\n    var orderedExports = Array.from(exports)\n        .map(function (_a) {\n        var module = _a[0], entries = _a[1];\n        return [module, entries.sort(compareEntries)];\n    })\n        .sort(compareModules);\n    for (var _a = 0, orderedExports_1 = orderedExports; _a < orderedExports_1.length; _a++) {\n        var _b = orderedExports_1[_a], module_1 = _b[0], entries = _b[1];\n        var symbols = entries.map(function (e) { return e.name + \" as \" + e.privateName; });\n        results.push(\"export {\" + symbols + \"} from '\" + module_1 + \"';\");\n    }\n    return results.join('\\n');\n}\nexports.privateEntriesToIndex = privateEntriesToIndex;\nfunction compare(select) {\n    return function (a, b) {\n        var ak = select(a);\n        var bk = select(b);\n        return ak > bk ? 1 : ak < bk ? -1 : 0;\n    };\n}\n\n});\n\nvar bundle_index_host = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\n\nvar DTS = /\\.d\\.ts$/;\nvar JS_EXT = /(\\.js|)$/;\nfunction createSyntheticIndexHost(delegate, syntheticIndex) {\n    var normalSyntheticIndexName = path__default.normalize(syntheticIndex.name);\n    var indexContent = syntheticIndex.content;\n    var indexMetadata = syntheticIndex.metadata;\n    var newHost = Object.create(delegate);\n    newHost.fileExists = function (fileName) {\n        return path__default.normalize(fileName) == normalSyntheticIndexName || delegate.fileExists(fileName);\n    };\n    newHost.readFile = function (fileName) {\n        return path__default.normalize(fileName) == normalSyntheticIndexName ? indexContent :\n            delegate.readFile(fileName);\n    };\n    newHost.getSourceFile =\n        function (fileName, languageVersion, onError) {\n            if (path__default.normalize(fileName) == normalSyntheticIndexName) {\n                return ts__default.createSourceFile(fileName, indexContent, languageVersion, true);\n            }\n            return delegate.getSourceFile(fileName, languageVersion, onError);\n        };\n    newHost.writeFile =\n        function (fileName, data, writeByteOrderMark, onError, sourceFiles) {\n            delegate.writeFile(fileName, data, writeByteOrderMark, onError, sourceFiles);\n            if (fileName.match(DTS) && sourceFiles && sourceFiles.length == 1 &&\n                path__default.normalize(sourceFiles[0].fileName) == normalSyntheticIndexName) {\n                // If we are writing the synthetic index, write the metadata along side.\n                var metadataName = fileName.replace(DTS, '.metadata.json');\n                fs__default.writeFileSync(metadataName, indexMetadata, { encoding: 'utf8' });\n            }\n        };\n    return newHost;\n}\nfunction createBundleIndexHost(ngOptions, rootFiles, host) {\n    var files = rootFiles.filter(function (f) { return !DTS.test(f); });\n    if (files.length != 1) {\n        return {\n            host: host,\n            errors: [{\n                    file: null,\n                    start: null,\n                    length: null,\n                    messageText: 'Angular compiler option \"flatModuleIndex\" requires one and only one .ts file in the \"files\" field.',\n                    category: ts__default.DiagnosticCategory.Error,\n                    code: 0\n                }]\n        };\n    }\n    var file = files[0];\n    var indexModule = file.replace(/\\.ts$/, '');\n    var bundler$$1 = new bundler.MetadataBundler(indexModule, ngOptions.flatModuleId, new bundler.CompilerHostAdapter(host));\n    var metadataBundle = bundler$$1.getMetadataBundle();\n    var metadata = JSON.stringify(metadataBundle.metadata);\n    var name = path__default.join(path__default.dirname(indexModule), ngOptions.flatModuleOutFile.replace(JS_EXT, '.ts'));\n    var libraryIndex = \"./\" + path__default.basename(indexModule);\n    var content = index_writer.privateEntriesToIndex(libraryIndex, metadataBundle.privates);\n    host = createSyntheticIndexHost(host, { name: name, content: content, metadata: metadata });\n    return { host: host, indexName: name };\n}\nexports.createBundleIndexHost = createBundleIndexHost;\n\n});\n\nvar index = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(collector);\n__export(schema);\n__export(bundle_index_host);\n\n});\n\nvar compiler_1 = ( compiler && undefined ) || compiler;\n\nvar compiler_host = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (commonjsGlobal && commonjsGlobal.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\n\nvar EXT = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar DTS = /\\.d\\.ts$/;\nvar NODE_MODULES = '/node_modules/';\nvar IS_GENERATED = /\\.(ngfactory|ngstyle|ngsummary)$/;\nvar GENERATED_FILES = /\\.ngfactory\\.ts$|\\.ngstyle\\.ts$|\\.ngsummary\\.ts$/;\nvar GENERATED_OR_DTS_FILES = /\\.d\\.ts$|\\.ngfactory\\.ts$|\\.ngstyle\\.ts$|\\.ngsummary\\.ts$/;\nvar SHALLOW_IMPORT = /^((\\w|-)+|(@(\\w|-)+(\\/(\\w|-)+)+))$/;\nvar BaseAotCompilerHost = (function () {\n    function BaseAotCompilerHost(options, context) {\n        this.options = options;\n        this.context = context;\n        this.resolverCache = new Map();\n        this.flatModuleIndexCache = new Map();\n        this.flatModuleIndexNames = new Set();\n        this.flatModuleIndexRedirectNames = new Set();\n    }\n    BaseAotCompilerHost.prototype.getMetadataFor = function (filePath) {\n        if (!this.context.fileExists(filePath)) {\n            // If the file doesn't exists then we cannot return metadata for the file.\n            // This will occur if the user referenced a declared module for which no file\n            // exists for the module (i.e. jQuery or angularjs).\n            return;\n        }\n        if (DTS.test(filePath)) {\n            var metadatas = this.readMetadata(filePath);\n            if (!metadatas) {\n                // If there is a .d.ts file but no metadata file we need to produce a\n                // metadata from the .d.ts file as metadata files capture reexports\n                // (starting with v3).\n                metadatas = [this.upgradeMetadataWithDtsData({ '__symbolic': 'module', 'version': 1, 'metadata': {} }, filePath)];\n            }\n            return metadatas;\n        }\n        // Attention: don't cache this, so that e.g. the LanguageService\n        // can read in changes from source files in the metadata!\n        var metadata = this.getMetadataForSourceFile(filePath);\n        return metadata ? [metadata] : [];\n    };\n    BaseAotCompilerHost.prototype.readMetadata = function (dtsFilePath) {\n        var metadatas = this.resolverCache.get(dtsFilePath);\n        if (metadatas) {\n            return metadatas;\n        }\n        var metadataPath = dtsFilePath.replace(DTS, '.metadata.json');\n        if (!this.context.fileExists(metadataPath)) {\n            return undefined;\n        }\n        try {\n            var metadataOrMetadatas = JSON.parse(this.context.readFile(metadataPath));\n            var metadatas_1 = metadataOrMetadatas ?\n                (Array.isArray(metadataOrMetadatas) ? metadataOrMetadatas : [metadataOrMetadatas]) :\n                [];\n            if (metadatas_1.length) {\n                var maxMetadata = metadatas_1.reduce(function (p, c) { return p.version > c.version ? p : c; });\n                if (maxMetadata.version < index.METADATA_VERSION) {\n                    metadatas_1.push(this.upgradeMetadataWithDtsData(maxMetadata, dtsFilePath));\n                }\n            }\n            this.resolverCache.set(dtsFilePath, metadatas_1);\n            return metadatas_1;\n        }\n        catch (e) {\n            console.error(\"Failed to read JSON file \" + metadataPath);\n            throw e;\n        }\n    };\n    BaseAotCompilerHost.prototype.upgradeMetadataWithDtsData = function (oldMetadata, dtsFilePath) {\n        // patch v1 to v3 by adding exports and the `extends` clause.\n        // patch v3 to v4 by adding `interface` symbols for TypeAlias\n        var newMetadata = {\n            '__symbolic': 'module',\n            'version': index.METADATA_VERSION,\n            'metadata': __assign({}, oldMetadata.metadata),\n        };\n        if (oldMetadata.exports) {\n            newMetadata.exports = oldMetadata.exports;\n        }\n        if (oldMetadata.importAs) {\n            newMetadata.importAs = oldMetadata.importAs;\n        }\n        if (oldMetadata.origins) {\n            newMetadata.origins = oldMetadata.origins;\n        }\n        var dtsMetadata = this.getMetadataForSourceFile(dtsFilePath);\n        if (dtsMetadata) {\n            for (var prop in dtsMetadata.metadata) {\n                if (!newMetadata.metadata[prop]) {\n                    newMetadata.metadata[prop] = dtsMetadata.metadata[prop];\n                }\n            }\n            // Only copy exports from exports from metadata prior to version 3.\n            // Starting with version 3 the collector began collecting exports and\n            // this should be redundant. Also, with bundler will rewrite the exports\n            // which will hoist the exports from modules referenced indirectly causing\n            // the imports to be different than the .d.ts files and using the .d.ts file\n            // exports would cause the StaticSymbolResolver to redirect symbols to the\n            // incorrect location.\n            if ((!oldMetadata.version || oldMetadata.version < 3) && dtsMetadata.exports) {\n                newMetadata.exports = dtsMetadata.exports;\n            }\n        }\n        return newMetadata;\n    };\n    BaseAotCompilerHost.prototype.loadResource = function (filePath) {\n        if (this.context.readResource)\n            return this.context.readResource(filePath);\n        if (!this.context.fileExists(filePath)) {\n            throw compiler_1.syntaxError(\"Error: Resource file not found: \" + filePath);\n        }\n        return this.context.readFile(filePath);\n    };\n    BaseAotCompilerHost.prototype.loadSummary = function (filePath) {\n        if (this.context.fileExists(filePath)) {\n            return this.context.readFile(filePath);\n        }\n        return null;\n    };\n    BaseAotCompilerHost.prototype.isSourceFile = function (filePath) {\n        var excludeRegex = this.options.generateCodeForLibraries === false ? GENERATED_OR_DTS_FILES : GENERATED_FILES;\n        if (excludeRegex.test(filePath)) {\n            return false;\n        }\n        if (DTS.test(filePath)) {\n            // Check for a bundle index.\n            if (this.hasBundleIndex(filePath)) {\n                var normalFilePath = path__default.normalize(filePath);\n                return this.flatModuleIndexNames.has(normalFilePath) ||\n                    this.flatModuleIndexRedirectNames.has(normalFilePath);\n            }\n        }\n        return true;\n    };\n    BaseAotCompilerHost.prototype.hasBundleIndex = function (filePath) {\n        var _this = this;\n        var checkBundleIndex = function (directory) {\n            var result = _this.flatModuleIndexCache.get(directory);\n            if (result == null) {\n                if (path__default.basename(directory) == 'node_module') {\n                    // Don't look outside the node_modules this package is installed in.\n                    result = false;\n                }\n                else {\n                    // A bundle index exists if the typings .d.ts file has a metadata.json that has an\n                    // importAs.\n                    try {\n                        var packageFile = path__default.join(directory, 'package.json');\n                        if (_this.context.fileExists(packageFile)) {\n                            // Once we see a package.json file, assume false until it we find the bundle index.\n                            result = false;\n                            var packageContent = JSON.parse(_this.context.readFile(packageFile));\n                            if (packageContent.typings) {\n                                var typings = path__default.normalize(path__default.join(directory, packageContent.typings));\n                                if (DTS.test(typings)) {\n                                    var metadataFile = typings.replace(DTS, '.metadata.json');\n                                    if (_this.context.fileExists(metadataFile)) {\n                                        var metadata = JSON.parse(_this.context.readFile(metadataFile));\n                                        if (metadata.flatModuleIndexRedirect) {\n                                            _this.flatModuleIndexRedirectNames.add(typings);\n                                            // Note: don't set result = true,\n                                            // as this would mark this folder\n                                            // as having a bundleIndex too early without\n                                            // filling the bundleIndexNames.\n                                        }\n                                        else if (metadata.importAs) {\n                                            _this.flatModuleIndexNames.add(typings);\n                                            result = true;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            var parent_1 = path__default.dirname(directory);\n                            if (parent_1 != directory) {\n                                // Try the parent directory.\n                                result = checkBundleIndex(parent_1);\n                            }\n                            else {\n                                result = false;\n                            }\n                        }\n                    }\n                    catch (e) {\n                        // If we encounter any errors assume we this isn't a bundle index.\n                        result = false;\n                    }\n                }\n                _this.flatModuleIndexCache.set(directory, result);\n            }\n            return result;\n        };\n        return checkBundleIndex(path__default.dirname(filePath));\n    };\n    return BaseAotCompilerHost;\n}());\nexports.BaseAotCompilerHost = BaseAotCompilerHost;\n// TODO(tbosch): remove this once G3 uses the transformer compiler!\nvar CompilerHost = (function (_super) {\n    __extends(CompilerHost, _super);\n    function CompilerHost(program, options, context, collectorOptions) {\n        var _this = _super.call(this, options, context) || this;\n        _this.program = program;\n        _this.moduleFileNames = new Map();\n        _this.metadataProvider = new index.MetadataCollector(collectorOptions);\n        // normalize the path so that it never ends with '/'.\n        _this.basePath = path__default.normalize(path__default.join(_this.options.basePath, '.')).replace(/\\\\/g, '/');\n        _this.genDir = path__default.normalize(path__default.join(_this.options.genDir, '.')).replace(/\\\\/g, '/');\n        var genPath = path__default.relative(_this.basePath, _this.genDir);\n        _this.isGenDirChildOfRootDir = genPath === '' || !genPath.startsWith('..');\n        _this.resolveModuleNameHost = Object.create(_this.context);\n        // When calling ts.resolveModuleName,\n        // additional allow checks for .d.ts files to be done based on\n        // checks for .ngsummary.json files,\n        // so that our codegen depends on fewer inputs and requires to be called\n        // less often.\n        // This is needed as we use ts.resolveModuleName in reflector_host\n        // and it should be able to resolve summary file names.\n        _this.resolveModuleNameHost.fileExists = function (fileName) {\n            if (_this.context.fileExists(fileName)) {\n                return true;\n            }\n            if (DTS.test(fileName)) {\n                var base = fileName.substring(0, fileName.length - 5);\n                return _this.context.fileExists(base + '.ngsummary.json');\n            }\n            return false;\n        };\n        _this.urlResolver = compiler_1.createOfflineCompileUrlResolver();\n        return _this;\n    }\n    CompilerHost.prototype.getSourceFile = function (filePath) {\n        var sf = this.program.getSourceFile(filePath);\n        if (!sf) {\n            if (this.context.fileExists(filePath)) {\n                var sourceText = this.context.readFile(filePath);\n                sf = ts__default.createSourceFile(filePath, sourceText, ts__default.ScriptTarget.Latest, true);\n            }\n            else {\n                throw new Error(\"Source file \" + filePath + \" not present in program.\");\n            }\n        }\n        return sf;\n    };\n    CompilerHost.prototype.getMetadataForSourceFile = function (filePath) {\n        return this.metadataProvider.getMetadata(this.getSourceFile(filePath));\n    };\n    CompilerHost.prototype.toSummaryFileName = function (fileName, referringSrcFileName) {\n        return fileName.replace(EXT, '') + '.d.ts';\n    };\n    CompilerHost.prototype.fromSummaryFileName = function (fileName, referringLibFileName) { return fileName; };\n    CompilerHost.prototype.calculateEmitPath = function (filePath) {\n        // Write codegen in a directory structure matching the sources.\n        var root = this.options.basePath;\n        for (var _i = 0, _a = this.options.rootDirs || []; _i < _a.length; _i++) {\n            var eachRootDir = _a[_i];\n            if (this.options.trace) {\n                console.error(\"Check if \" + filePath + \" is under rootDirs element \" + eachRootDir);\n            }\n            if (path__default.relative(eachRootDir, filePath).indexOf('.') !== 0) {\n                root = eachRootDir;\n            }\n        }\n        // transplant the codegen path to be inside the `genDir`\n        var relativePath = path__default.relative(root, filePath);\n        while (relativePath.startsWith('..' + path__default.sep)) {\n            // Strip out any `..` path such as: `../node_modules/@foo` as we want to put everything\n            // into `genDir`.\n            relativePath = relativePath.substr(3);\n        }\n        return path__default.join(this.options.genDir, relativePath);\n    };\n    // We use absolute paths on disk as canonical.\n    CompilerHost.prototype.getCanonicalFileName = function (fileName) { return fileName; };\n    CompilerHost.prototype.moduleNameToFileName = function (m, containingFile) {\n        var key = m + ':' + (containingFile || '');\n        var result = this.moduleFileNames.get(key) || null;\n        if (!result) {\n            if (!containingFile || !containingFile.length) {\n                if (m.indexOf('.') === 0) {\n                    throw new Error('Resolution of relative paths requires a containing file.');\n                }\n                // Any containing file gives the same result for absolute imports\n                containingFile = this.getCanonicalFileName(path__default.join(this.basePath, 'index.ts'));\n            }\n            m = m.replace(EXT, '');\n            var resolved = ts__default.resolveModuleName(m, containingFile.replace(/\\\\/g, '/'), this.options, this.resolveModuleNameHost)\n                .resolvedModule;\n            result = resolved ? this.getCanonicalFileName(resolved.resolvedFileName) : null;\n            this.moduleFileNames.set(key, result);\n        }\n        return result;\n    };\n    /**\n     * We want a moduleId that will appear in import statements in the generated code.\n     * These need to be in a form that system.js can load, so absolute file paths don't work.\n     *\n     * The `containingFile` is always in the `genDir`, where as the `importedFile` can be in\n     * `genDir`, `node_module` or `basePath`.  The `importedFile` is either a generated file or\n     * existing file.\n     *\n     *               | genDir   | node_module |  rootDir\n     * --------------+----------+-------------+----------\n     * generated     | relative |   relative  |   n/a\n     * existing file |   n/a    |   absolute  |  relative(*)\n     *\n     * NOTE: (*) the relative path is computed depending on `isGenDirChildOfRootDir`.\n     */\n    CompilerHost.prototype.fileNameToModuleName = function (importedFile, containingFile) {\n        // If a file does not yet exist (because we compile it later), we still need to\n        // assume it exists it so that the `resolve` method works!\n        if (importedFile !== containingFile && !this.context.fileExists(importedFile)) {\n            this.context.assumeFileExists(importedFile);\n        }\n        containingFile = this.rewriteGenDirPath(containingFile);\n        var containingDir = path__default.dirname(containingFile);\n        // drop extension\n        importedFile = importedFile.replace(EXT, '');\n        var nodeModulesIndex = importedFile.indexOf(NODE_MODULES);\n        var importModule = nodeModulesIndex === -1 ?\n            null :\n            importedFile.substring(nodeModulesIndex + NODE_MODULES.length);\n        var isGeneratedFile = IS_GENERATED.test(importedFile);\n        if (isGeneratedFile) {\n            // rewrite to genDir path\n            if (importModule) {\n                // it is generated, therefore we do a relative path to the factory\n                return this.dotRelative(containingDir, this.genDir + NODE_MODULES + importModule);\n            }\n            else {\n                // assume that import is also in `genDir`\n                importedFile = this.rewriteGenDirPath(importedFile);\n                return this.dotRelative(containingDir, importedFile);\n            }\n        }\n        else {\n            // user code import\n            if (importModule) {\n                return importModule;\n            }\n            else {\n                if (!this.isGenDirChildOfRootDir) {\n                    // assume that they are on top of each other.\n                    importedFile = importedFile.replace(this.basePath, this.genDir);\n                }\n                if (SHALLOW_IMPORT.test(importedFile)) {\n                    return importedFile;\n                }\n                return this.dotRelative(containingDir, importedFile);\n            }\n        }\n    };\n    CompilerHost.prototype.resourceNameToFileName = function (m, containingFile) {\n        return this.urlResolver.resolve(containingFile, m);\n    };\n    /**\n     * Moves the path into `genDir` folder while preserving the `node_modules` directory.\n     */\n    CompilerHost.prototype.rewriteGenDirPath = function (filepath) {\n        var nodeModulesIndex = filepath.indexOf(NODE_MODULES);\n        if (nodeModulesIndex !== -1) {\n            // If we are in node_modules, transplant them into `genDir`.\n            return path__default.join(this.genDir, filepath.substring(nodeModulesIndex));\n        }\n        else {\n            // pretend that containing file is on top of the `genDir` to normalize the paths.\n            // we apply the `genDir` => `rootDir` delta through `rootDirPrefix` later.\n            return filepath.replace(this.basePath, this.genDir);\n        }\n    };\n    CompilerHost.prototype.dotRelative = function (from, to) {\n        var rPath = path__default.relative(from, to).replace(/\\\\/g, '/');\n        return rPath.startsWith('.') ? rPath : './' + rPath;\n    };\n    return CompilerHost;\n}(BaseAotCompilerHost));\nexports.CompilerHost = CompilerHost;\nvar CompilerHostContextAdapter = (function () {\n    function CompilerHostContextAdapter() {\n        this.assumedExists = {};\n    }\n    CompilerHostContextAdapter.prototype.assumeFileExists = function (fileName) { this.assumedExists[fileName] = true; };\n    return CompilerHostContextAdapter;\n}());\nexports.CompilerHostContextAdapter = CompilerHostContextAdapter;\nvar ModuleResolutionHostAdapter = (function (_super) {\n    __extends(ModuleResolutionHostAdapter, _super);\n    function ModuleResolutionHostAdapter(host) {\n        var _this = _super.call(this) || this;\n        _this.host = host;\n        if (host.directoryExists) {\n            _this.directoryExists = function (directoryName) { return host.directoryExists(directoryName); };\n        }\n        return _this;\n    }\n    ModuleResolutionHostAdapter.prototype.fileExists = function (fileName) {\n        return this.assumedExists[fileName] || this.host.fileExists(fileName);\n    };\n    ModuleResolutionHostAdapter.prototype.readFile = function (fileName) { return this.host.readFile(fileName); };\n    ModuleResolutionHostAdapter.prototype.readResource = function (s) {\n        if (!this.host.fileExists(s)) {\n            // TODO: We should really have a test for error cases like this!\n            throw new Error(\"Compilation failed. Resource file not found: \" + s);\n        }\n        return Promise.resolve(this.host.readFile(s));\n    };\n    return ModuleResolutionHostAdapter;\n}(CompilerHostContextAdapter));\nexports.ModuleResolutionHostAdapter = ModuleResolutionHostAdapter;\nvar NodeCompilerHostContext = (function (_super) {\n    __extends(NodeCompilerHostContext, _super);\n    function NodeCompilerHostContext() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NodeCompilerHostContext.prototype.fileExists = function (fileName) {\n        return this.assumedExists[fileName] || fs__default.existsSync(fileName);\n    };\n    NodeCompilerHostContext.prototype.directoryExists = function (directoryName) {\n        try {\n            return fs__default.statSync(directoryName).isDirectory();\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    NodeCompilerHostContext.prototype.readFile = function (fileName) { return fs__default.readFileSync(fileName, 'utf8'); };\n    NodeCompilerHostContext.prototype.readResource = function (s) {\n        if (!this.fileExists(s)) {\n            // TODO: We should really have a test for error cases like this!\n            throw new Error(\"Compilation failed. Resource file not found: \" + s);\n        }\n        return Promise.resolve(this.readFile(s));\n    };\n    return NodeCompilerHostContext;\n}(CompilerHostContextAdapter));\nexports.NodeCompilerHostContext = NodeCompilerHostContext;\n\n});\n\nvar symbols$2 = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An enumeration of basic types.\n *\n * @experimental\n */\nvar BuiltinType;\n(function (BuiltinType) {\n    /**\n     * The type is a type that can hold any other type.\n     */\n    BuiltinType[BuiltinType[\"Any\"] = 0] = \"Any\";\n    /**\n     * The type of a string literal.\n     */\n    BuiltinType[BuiltinType[\"String\"] = 1] = \"String\";\n    /**\n     * The type of a numeric literal.\n     */\n    BuiltinType[BuiltinType[\"Number\"] = 2] = \"Number\";\n    /**\n     * The type of the `true` and `false` literals.\n     */\n    BuiltinType[BuiltinType[\"Boolean\"] = 3] = \"Boolean\";\n    /**\n     * The type of the `undefined` literal.\n     */\n    BuiltinType[BuiltinType[\"Undefined\"] = 4] = \"Undefined\";\n    /**\n     * the type of the `null` literal.\n     */\n    BuiltinType[BuiltinType[\"Null\"] = 5] = \"Null\";\n    /**\n     * the type is an unbound type parameter.\n     */\n    BuiltinType[BuiltinType[\"Unbound\"] = 6] = \"Unbound\";\n    /**\n     * Not a built-in type.\n     */\n    BuiltinType[BuiltinType[\"Other\"] = 7] = \"Other\";\n})(BuiltinType = exports.BuiltinType || (exports.BuiltinType = {}));\n\n});\n\nvar expression_type = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\nvar DiagnosticKind;\n(function (DiagnosticKind) {\n    DiagnosticKind[DiagnosticKind[\"Error\"] = 0] = \"Error\";\n    DiagnosticKind[DiagnosticKind[\"Warning\"] = 1] = \"Warning\";\n})(DiagnosticKind = exports.DiagnosticKind || (exports.DiagnosticKind = {}));\nvar TypeDiagnostic = (function () {\n    function TypeDiagnostic(kind, message, ast) {\n        this.kind = kind;\n        this.message = message;\n        this.ast = ast;\n    }\n    return TypeDiagnostic;\n}());\nexports.TypeDiagnostic = TypeDiagnostic;\n// AstType calculatetype of the ast given AST element.\nvar AstType = (function () {\n    function AstType(scope, query, context) {\n        this.scope = scope;\n        this.query = query;\n        this.context = context;\n    }\n    AstType.prototype.getType = function (ast) { return ast.visit(this); };\n    AstType.prototype.getDiagnostics = function (ast) {\n        this.diagnostics = [];\n        var type = ast.visit(this);\n        if (this.context.event && type.callable) {\n            this.reportWarning('Unexpected callable expression. Expected a method call', ast);\n        }\n        return this.diagnostics;\n    };\n    AstType.prototype.visitBinary = function (ast) {\n        var _this = this;\n        // Treat undefined and null as other.\n        function normalize(kind, other) {\n            switch (kind) {\n                case symbols$2.BuiltinType.Undefined:\n                case symbols$2.BuiltinType.Null:\n                    return normalize(other, symbols$2.BuiltinType.Other);\n            }\n            return kind;\n        }\n        var getType = function (ast, operation) {\n            var type = _this.getType(ast);\n            if (type.nullable) {\n                switch (operation) {\n                    case '&&':\n                    case '||':\n                    case '==':\n                    case '!=':\n                    case '===':\n                    case '!==':\n                        // Nullable allowed.\n                        break;\n                    default:\n                        _this.reportError(\"The expression might be null\", ast);\n                        break;\n                }\n                return _this.query.getNonNullableType(type);\n            }\n            return type;\n        };\n        var leftType = getType(ast.left, ast.operation);\n        var rightType = getType(ast.right, ast.operation);\n        var leftRawKind = this.query.getTypeKind(leftType);\n        var rightRawKind = this.query.getTypeKind(rightType);\n        var leftKind = normalize(leftRawKind, rightRawKind);\n        var rightKind = normalize(rightRawKind, leftRawKind);\n        // The following swtich implements operator typing similar to the\n        // type production tables in the TypeScript specification.\n        // https://github.com/Microsoft/TypeScript/blob/v1.8.10/doc/spec.md#4.19\n        var operKind = leftKind << 8 | rightKind;\n        switch (ast.operation) {\n            case '*':\n            case '/':\n            case '%':\n            case '-':\n            case '<<':\n            case '>>':\n            case '>>>':\n            case '&':\n            case '^':\n            case '|':\n                switch (operKind) {\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Number:\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.Number);\n                    default:\n                        var errorAst = ast.left;\n                        switch (leftKind) {\n                            case symbols$2.BuiltinType.Any:\n                            case symbols$2.BuiltinType.Number:\n                                errorAst = ast.right;\n                                break;\n                        }\n                        return this.reportError('Expected a numeric type', errorAst);\n                }\n            case '+':\n                switch (operKind) {\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Boolean:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Other:\n                    case symbols$2.BuiltinType.Boolean << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Other << 8 | symbols$2.BuiltinType.Any:\n                        return this.anyType;\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.Boolean << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.Boolean:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.Other:\n                    case symbols$2.BuiltinType.Other << 8 | symbols$2.BuiltinType.String:\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.String);\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Number:\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.Number);\n                    case symbols$2.BuiltinType.Boolean << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.Other << 8 | symbols$2.BuiltinType.Number:\n                        return this.reportError('Expected a number type', ast.left);\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Boolean:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Other:\n                        return this.reportError('Expected a number type', ast.right);\n                    default:\n                        return this.reportError('Expected operands to be a string or number type', ast);\n                }\n            case '>':\n            case '<':\n            case '<=':\n            case '>=':\n            case '==':\n            case '!=':\n            case '===':\n            case '!==':\n                switch (operKind) {\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Boolean:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Other:\n                    case symbols$2.BuiltinType.Boolean << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Boolean << 8 | symbols$2.BuiltinType.Boolean:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.Other << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Other << 8 | symbols$2.BuiltinType.Other:\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.Boolean);\n                    default:\n                        return this.reportError('Expected the operants to be of similar type or any', ast);\n                }\n            case '&&':\n                return rightType;\n            case '||':\n                return this.query.getTypeUnion(leftType, rightType);\n        }\n        return this.reportError(\"Unrecognized operator \" + ast.operation, ast);\n    };\n    AstType.prototype.visitChain = function (ast) {\n        if (this.diagnostics) {\n            // If we are producing diagnostics, visit the children\n            compiler_1.visitAstChildren(ast, this);\n        }\n        // The type of a chain is always undefined.\n        return this.query.getBuiltinType(symbols$2.BuiltinType.Undefined);\n    };\n    AstType.prototype.visitConditional = function (ast) {\n        // The type of a conditional is the union of the true and false conditions.\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        return this.query.getTypeUnion(this.getType(ast.trueExp), this.getType(ast.falseExp));\n    };\n    AstType.prototype.visitFunctionCall = function (ast) {\n        var _this = this;\n        // The type of a function call is the return type of the selected signature.\n        // The signature is selected based on the types of the arguments. Angular doesn't\n        // support contextual typing of arguments so this is simpler than TypeScript's\n        // version.\n        var args = ast.args.map(function (arg) { return _this.getType(arg); });\n        var target = this.getType(ast.target);\n        if (!target || !target.callable)\n            return this.reportError('Call target is not callable', ast);\n        var signature = target.selectSignature(args);\n        if (signature)\n            return signature.result;\n        // TODO: Consider a better error message here.\n        return this.reportError('Unable no compatible signature found for call', ast);\n    };\n    AstType.prototype.visitImplicitReceiver = function (ast) {\n        var _this = this;\n        // Return a pseudo-symbol for the implicit receiver.\n        // The members of the implicit receiver are what is defined by the\n        // scope passed into this class.\n        return {\n            name: '$implict',\n            kind: 'component',\n            language: 'ng-template',\n            type: undefined,\n            container: undefined,\n            callable: false,\n            nullable: false,\n            public: true,\n            definition: undefined,\n            members: function () { return _this.scope; },\n            signatures: function () { return []; },\n            selectSignature: function (types) { return undefined; },\n            indexed: function (argument) { return undefined; }\n        };\n    };\n    AstType.prototype.visitInterpolation = function (ast) {\n        // If we are producing diagnostics, visit the children.\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        return this.undefinedType;\n    };\n    AstType.prototype.visitKeyedRead = function (ast) {\n        var targetType = this.getType(ast.obj);\n        var keyType = this.getType(ast.key);\n        var result = targetType.indexed(keyType);\n        return result || this.anyType;\n    };\n    AstType.prototype.visitKeyedWrite = function (ast) {\n        // The write of a type is the type of the value being written.\n        return this.getType(ast.value);\n    };\n    AstType.prototype.visitLiteralArray = function (ast) {\n        var _this = this;\n        // A type literal is an array type of the union of the elements\n        return this.query.getArrayType((_a = this.query).getTypeUnion.apply(_a, ast.expressions.map(function (element) { return _this.getType(element); })));\n        var _a;\n    };\n    AstType.prototype.visitLiteralMap = function (ast) {\n        // If we are producing diagnostics, visit the children\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        // TODO: Return a composite type.\n        return this.anyType;\n    };\n    AstType.prototype.visitLiteralPrimitive = function (ast) {\n        // The type of a literal primitive depends on the value of the literal.\n        switch (ast.value) {\n            case true:\n            case false:\n                return this.query.getBuiltinType(symbols$2.BuiltinType.Boolean);\n            case null:\n                return this.query.getBuiltinType(symbols$2.BuiltinType.Null);\n            case undefined:\n                return this.query.getBuiltinType(symbols$2.BuiltinType.Undefined);\n            default:\n                switch (typeof ast.value) {\n                    case 'string':\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.String);\n                    case 'number':\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.Number);\n                    default:\n                        return this.reportError('Unrecognized primitive', ast);\n                }\n        }\n    };\n    AstType.prototype.visitMethodCall = function (ast) {\n        return this.resolveMethodCall(this.getType(ast.receiver), ast);\n    };\n    AstType.prototype.visitPipe = function (ast) {\n        var _this = this;\n        // The type of a pipe node is the return type of the pipe's transform method. The table returned\n        // by getPipes() is expected to contain symbols with the corresponding transform method type.\n        var pipe = this.query.getPipes().get(ast.name);\n        if (!pipe)\n            return this.reportError(\"No pipe by the name \" + ast.name + \" found\", ast);\n        var expType = this.getType(ast.exp);\n        var signature = pipe.selectSignature([expType].concat(ast.args.map(function (arg) { return _this.getType(arg); })));\n        if (!signature)\n            return this.reportError('Unable to resolve signature for pipe invocation', ast);\n        return signature.result;\n    };\n    AstType.prototype.visitPrefixNot = function (ast) {\n        // The type of a prefix ! is always boolean.\n        return this.query.getBuiltinType(symbols$2.BuiltinType.Boolean);\n    };\n    AstType.prototype.visitNonNullAssert = function (ast) {\n        var expressionType = this.getType(ast.expression);\n        return this.query.getNonNullableType(expressionType);\n    };\n    AstType.prototype.visitPropertyRead = function (ast) {\n        return this.resolvePropertyRead(this.getType(ast.receiver), ast);\n    };\n    AstType.prototype.visitPropertyWrite = function (ast) {\n        // The type of a write is the type of the value being written.\n        return this.getType(ast.value);\n    };\n    AstType.prototype.visitQuote = function (ast) {\n        // The type of a quoted expression is any.\n        return this.query.getBuiltinType(symbols$2.BuiltinType.Any);\n    };\n    AstType.prototype.visitSafeMethodCall = function (ast) {\n        return this.resolveMethodCall(this.query.getNonNullableType(this.getType(ast.receiver)), ast);\n    };\n    AstType.prototype.visitSafePropertyRead = function (ast) {\n        return this.resolvePropertyRead(this.query.getNonNullableType(this.getType(ast.receiver)), ast);\n    };\n    Object.defineProperty(AstType.prototype, \"anyType\", {\n        get: function () {\n            var result = this._anyType;\n            if (!result) {\n                result = this._anyType = this.query.getBuiltinType(symbols$2.BuiltinType.Any);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstType.prototype, \"undefinedType\", {\n        get: function () {\n            var result = this._undefinedType;\n            if (!result) {\n                result = this._undefinedType = this.query.getBuiltinType(symbols$2.BuiltinType.Undefined);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AstType.prototype.resolveMethodCall = function (receiverType, ast) {\n        var _this = this;\n        if (this.isAny(receiverType)) {\n            return this.anyType;\n        }\n        // The type of a method is the selected methods result type.\n        var method = receiverType.members().get(ast.name);\n        if (!method)\n            return this.reportError(\"Unknown method '\" + ast.name + \"'\", ast);\n        if (!method.type)\n            return this.reportError(\"Could not find a type for '\" + ast.name + \"'\", ast);\n        if (!method.type.callable)\n            return this.reportError(\"Member '\" + ast.name + \"' is not callable\", ast);\n        var signature = method.type.selectSignature(ast.args.map(function (arg) { return _this.getType(arg); }));\n        if (!signature)\n            return this.reportError(\"Unable to resolve signature for call of method \" + ast.name, ast);\n        return signature.result;\n    };\n    AstType.prototype.resolvePropertyRead = function (receiverType, ast) {\n        if (this.isAny(receiverType)) {\n            return this.anyType;\n        }\n        // The type of a property read is the seelcted member's type.\n        var member = receiverType.members().get(ast.name);\n        if (!member) {\n            var receiverInfo = receiverType.name;\n            if (receiverInfo == '$implict') {\n                receiverInfo =\n                    'The component declaration, template variable declarations, and element references do';\n            }\n            else if (receiverType.nullable) {\n                return this.reportError(\"The expression might be null\", ast.receiver);\n            }\n            else {\n                receiverInfo = \"'\" + receiverInfo + \"' does\";\n            }\n            return this.reportError(\"Identifier '\" + ast.name + \"' is not defined. \" + receiverInfo + \" not contain such a member\", ast);\n        }\n        if (!member.public) {\n            var receiverInfo = receiverType.name;\n            if (receiverInfo == '$implict') {\n                receiverInfo = 'the component';\n            }\n            else {\n                receiverInfo = \"'\" + receiverInfo + \"'\";\n            }\n            this.reportWarning(\"Identifier '\" + ast.name + \"' refers to a private member of \" + receiverInfo, ast);\n        }\n        return member.type;\n    };\n    AstType.prototype.reportError = function (message, ast) {\n        if (this.diagnostics) {\n            this.diagnostics.push(new TypeDiagnostic(DiagnosticKind.Error, message, ast));\n        }\n        return this.anyType;\n    };\n    AstType.prototype.reportWarning = function (message, ast) {\n        if (this.diagnostics) {\n            this.diagnostics.push(new TypeDiagnostic(DiagnosticKind.Warning, message, ast));\n        }\n        return this.anyType;\n    };\n    AstType.prototype.isAny = function (symbol) {\n        return !symbol || this.query.getTypeKind(symbol) == symbols$2.BuiltinType.Any ||\n            (!!symbol.type && this.isAny(symbol.type));\n    };\n    return AstType;\n}());\nexports.AstType = AstType;\n\n});\n\nvar expression_diagnostics = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\nfunction getTemplateExpressionDiagnostics(info) {\n    var visitor = new ExpressionDiagnosticsVisitor(info, function (path$$1, includeEvent) {\n        return getExpressionScope(info, path$$1, includeEvent);\n    });\n    compiler_1.templateVisitAll(visitor, info.templateAst);\n    return visitor.diagnostics;\n}\nexports.getTemplateExpressionDiagnostics = getTemplateExpressionDiagnostics;\nfunction getExpressionDiagnostics(scope, ast, query, context) {\n    if (context === void 0) { context = {}; }\n    var analyzer = new expression_type.AstType(scope, query, context);\n    analyzer.getDiagnostics(ast);\n    return analyzer.diagnostics;\n}\nexports.getExpressionDiagnostics = getExpressionDiagnostics;\nfunction getReferences(info) {\n    var result = [];\n    function processReferences(references) {\n        var _loop_1 = function (reference) {\n            var type = undefined;\n            if (reference.value) {\n                type = info.query.getTypeSymbol(compiler_1.tokenReference(reference.value));\n            }\n            result.push({\n                name: reference.name,\n                kind: 'reference',\n                type: type || info.query.getBuiltinType(symbols$2.BuiltinType.Any),\n                get definition() { return getDefinitionOf(info, reference); }\n            });\n        };\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var reference = references_1[_i];\n            _loop_1(reference);\n        }\n    }\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visitEmbeddedTemplate = function (ast, context) {\n            _super.prototype.visitEmbeddedTemplate.call(this, ast, context);\n            processReferences(ast.references);\n        };\n        class_1.prototype.visitElement = function (ast, context) {\n            _super.prototype.visitElement.call(this, ast, context);\n            processReferences(ast.references);\n        };\n        return class_1;\n    }(compiler_1.RecursiveTemplateAstVisitor));\n    compiler_1.templateVisitAll(visitor, info.templateAst);\n    return result;\n}\nfunction getDefinitionOf(info, ast) {\n    if (info.fileName) {\n        var templateOffset = info.offset;\n        return [{\n                fileName: info.fileName,\n                span: {\n                    start: ast.sourceSpan.start.offset + templateOffset,\n                    end: ast.sourceSpan.end.offset + templateOffset\n                }\n            }];\n    }\n}\nfunction getVarDeclarations(info, path$$1) {\n    var result = [];\n    var current = path$$1.tail;\n    while (current) {\n        if (current instanceof compiler_1.EmbeddedTemplateAst) {\n            var _loop_2 = function (variable) {\n                var name_1 = variable.name;\n                // Find the first directive with a context.\n                var context = current.directives.map(function (d) { return info.query.getTemplateContext(d.directive.type.reference); })\n                    .find(function (c) { return !!c; });\n                // Determine the type of the context field referenced by variable.value.\n                var type = undefined;\n                if (context) {\n                    var value = context.get(variable.value);\n                    if (value) {\n                        type = value.type;\n                        var kind = info.query.getTypeKind(type);\n                        if (kind === symbols$2.BuiltinType.Any || kind == symbols$2.BuiltinType.Unbound) {\n                            // The any type is not very useful here. For special cases, such as ngFor, we can do\n                            // better.\n                            type = refinedVariableType(type, info, current);\n                        }\n                    }\n                }\n                if (!type) {\n                    type = info.query.getBuiltinType(symbols$2.BuiltinType.Any);\n                }\n                result.push({\n                    name: name_1,\n                    kind: 'variable', type: type, get definition() { return getDefinitionOf(info, variable); }\n                });\n            };\n            for (var _i = 0, _a = current.variables; _i < _a.length; _i++) {\n                var variable = _a[_i];\n                _loop_2(variable);\n            }\n        }\n        current = path$$1.parentOf(current);\n    }\n    return result;\n}\nfunction refinedVariableType(type, info, templateElement) {\n    // Special case the ngFor directive\n    var ngForDirective = templateElement.directives.find(function (d) {\n        var name = compiler_1.identifierName(d.directive.type);\n        return name == 'NgFor' || name == 'NgForOf';\n    });\n    if (ngForDirective) {\n        var ngForOfBinding = ngForDirective.inputs.find(function (i) { return i.directiveName == 'ngForOf'; });\n        if (ngForOfBinding) {\n            var bindingType = new expression_type.AstType(info.members, info.query, {}).getType(ngForOfBinding.value);\n            if (bindingType) {\n                var result = info.query.getElementType(bindingType);\n                if (result) {\n                    return result;\n                }\n            }\n        }\n    }\n    // We can't do better, return any\n    return info.query.getBuiltinType(symbols$2.BuiltinType.Any);\n}\nfunction getEventDeclaration(info, includeEvent) {\n    var result = [];\n    if (includeEvent) {\n        // TODO: Determine the type of the event parameter based on the Observable<T> or EventEmitter<T>\n        // of the event.\n        result = [{ name: '$event', kind: 'variable', type: info.query.getBuiltinType(symbols$2.BuiltinType.Any) }];\n    }\n    return result;\n}\nfunction getExpressionScope(info, path$$1, includeEvent) {\n    var result = info.members;\n    var references = getReferences(info);\n    var variables = getVarDeclarations(info, path$$1);\n    var events = getEventDeclaration(info, includeEvent);\n    if (references.length || variables.length || events.length) {\n        var referenceTable = info.query.createSymbolTable(references);\n        var variableTable = info.query.createSymbolTable(variables);\n        var eventsTable = info.query.createSymbolTable(events);\n        result = info.query.mergeSymbolTable([result, referenceTable, variableTable, eventsTable]);\n    }\n    return result;\n}\nexports.getExpressionScope = getExpressionScope;\nvar ExpressionDiagnosticsVisitor = (function (_super) {\n    __extends(ExpressionDiagnosticsVisitor, _super);\n    function ExpressionDiagnosticsVisitor(info, getExpressionScope) {\n        var _this = _super.call(this) || this;\n        _this.info = info;\n        _this.getExpressionScope = getExpressionScope;\n        _this.diagnostics = [];\n        _this.path = new compiler_1.AstPath([]);\n        return _this;\n    }\n    ExpressionDiagnosticsVisitor.prototype.visitDirective = function (ast, context) {\n        // Override the default child visitor to ignore the host properties of a directive.\n        if (ast.inputs && ast.inputs.length) {\n            compiler_1.templateVisitAll(this, ast.inputs, context);\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitBoundText = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, ast.sourceSpan.start.offset, false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitDirectiveProperty = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitElementProperty = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitEvent = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.handler, this.attributeValueLocation(ast), true);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitVariable = function (ast) {\n        var directive = this.directiveSummary;\n        if (directive && ast.value) {\n            var context = this.info.query.getTemplateContext(directive.type.reference);\n            if (context && !context.has(ast.value)) {\n                if (ast.value === '$implicit') {\n                    this.reportError('The template context does not have an implicit value', spanOf(ast.sourceSpan));\n                }\n                else {\n                    this.reportError(\"The template context does not defined a member called '\" + ast.value + \"'\", spanOf(ast.sourceSpan));\n                }\n            }\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitElement = function (ast, context) {\n        this.push(ast);\n        _super.prototype.visitElement.call(this, ast, context);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var previousDirectiveSummary = this.directiveSummary;\n        this.push(ast);\n        // Find directive that refernces this template\n        this.directiveSummary =\n            ast.directives.map(function (d) { return d.directive; }).find(function (d) { return hasTemplateReference(d.type); });\n        // Process children\n        _super.prototype.visitEmbeddedTemplate.call(this, ast, context);\n        this.pop();\n        this.directiveSummary = previousDirectiveSummary;\n    };\n    ExpressionDiagnosticsVisitor.prototype.attributeValueLocation = function (ast) {\n        var path$$1 = compiler_1.findNode(this.info.htmlAst, ast.sourceSpan.start.offset);\n        var last = path$$1.tail;\n        if (last instanceof compiler_1.Attribute && last.valueSpan) {\n            // Add 1 for the quote.\n            return last.valueSpan.start.offset + 1;\n        }\n        return ast.sourceSpan.start.offset;\n    };\n    ExpressionDiagnosticsVisitor.prototype.diagnoseExpression = function (ast, offset, includeEvent) {\n        var _this = this;\n        var scope = this.getExpressionScope(this.path, includeEvent);\n        (_a = this.diagnostics).push.apply(_a, getExpressionDiagnostics(scope, ast, this.info.query, {\n            event: includeEvent\n        }).map(function (d) { return ({\n            span: offsetSpan(d.ast.span, offset + _this.info.offset),\n            kind: d.kind,\n            message: d.message\n        }); }));\n        var _a;\n    };\n    ExpressionDiagnosticsVisitor.prototype.push = function (ast) { this.path.push(ast); };\n    ExpressionDiagnosticsVisitor.prototype.pop = function () { this.path.pop(); };\n    ExpressionDiagnosticsVisitor.prototype.reportError = function (message, span) {\n        if (span) {\n            this.diagnostics.push({ span: offsetSpan(span, this.info.offset), kind: expression_type.DiagnosticKind.Error, message: message });\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.reportWarning = function (message, span) {\n        this.diagnostics.push({ span: offsetSpan(span, this.info.offset), kind: expression_type.DiagnosticKind.Warning, message: message });\n    };\n    return ExpressionDiagnosticsVisitor;\n}(compiler_1.RecursiveTemplateAstVisitor));\nfunction hasTemplateReference(type) {\n    if (type.diDeps) {\n        for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n            var diDep = _a[_i];\n            if (diDep.token && diDep.token.identifier &&\n                compiler_1.identifierName(diDep.token.identifier) == 'TemplateRef')\n                return true;\n        }\n    }\n    return false;\n}\nfunction offsetSpan(span, amount) {\n    return { start: span.start + amount, end: span.end + amount };\n}\nfunction spanOf(sourceSpan) {\n    return { start: sourceSpan.start.offset, end: sourceSpan.end.offset };\n}\n\n});\n\nvar typescript_symbols = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\n// In TypeScript 2.1 these flags moved\n// These helpers work for both 2.0 and 2.1.\nvar isPrivate = ts__default.ModifierFlags ?\n    (function (node) {\n        return !!(ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Private);\n    }) :\n    (function (node) { return !!(node.flags & ts__default.NodeFlags.Private); });\nvar isReferenceType = ts__default.ObjectFlags ?\n    (function (type) {\n        return !!(type.flags & ts__default.TypeFlags.Object &&\n            type.objectFlags & ts__default.ObjectFlags.Reference);\n    }) :\n    (function (type) { return !!(type.flags & ts__default.TypeFlags.Reference); });\nfunction getSymbolQuery(program, checker, source, fetchPipes) {\n    return new TypeScriptSymbolQuery(program, checker, source, fetchPipes);\n}\nexports.getSymbolQuery = getSymbolQuery;\nfunction getClassMembers(program, checker, staticSymbol) {\n    var declaration = getClassFromStaticSymbol(program, staticSymbol);\n    if (declaration) {\n        var type = checker.getTypeAtLocation(declaration);\n        var node = program.getSourceFile(staticSymbol.filePath);\n        return new TypeWrapper(type, { node: node, program: program, checker: checker }).members();\n    }\n}\nexports.getClassMembers = getClassMembers;\nfunction getClassMembersFromDeclaration(program, checker, source, declaration) {\n    var type = checker.getTypeAtLocation(declaration);\n    return new TypeWrapper(type, { node: source, program: program, checker: checker }).members();\n}\nexports.getClassMembersFromDeclaration = getClassMembersFromDeclaration;\nfunction getClassFromStaticSymbol(program, type) {\n    var source = program.getSourceFile(type.filePath);\n    if (source) {\n        return ts__default.forEachChild(source, function (child) {\n            if (child.kind === ts__default.SyntaxKind.ClassDeclaration) {\n                var classDeclaration = child;\n                if (classDeclaration.name != null && classDeclaration.name.text === type.name) {\n                    return classDeclaration;\n                }\n            }\n        });\n    }\n    return undefined;\n}\nexports.getClassFromStaticSymbol = getClassFromStaticSymbol;\nfunction getPipesTable(source, program, checker, pipes) {\n    return new PipesTable(pipes, { program: program, checker: checker, node: source });\n}\nexports.getPipesTable = getPipesTable;\nvar TypeScriptSymbolQuery = (function () {\n    function TypeScriptSymbolQuery(program, checker, source, fetchPipes) {\n        this.program = program;\n        this.checker = checker;\n        this.source = source;\n        this.fetchPipes = fetchPipes;\n        this.typeCache = new Map();\n    }\n    TypeScriptSymbolQuery.prototype.getTypeKind = function (symbol) { return typeKindOf(this.getTsTypeOf(symbol)); };\n    TypeScriptSymbolQuery.prototype.getBuiltinType = function (kind) {\n        var result = this.typeCache.get(kind);\n        if (!result) {\n            var type = getBuiltinTypeFromTs(kind, { checker: this.checker, node: this.source, program: this.program });\n            result =\n                new TypeWrapper(type, { program: this.program, checker: this.checker, node: this.source });\n            this.typeCache.set(kind, result);\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getTypeUnion = function () {\n        var types = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            types[_i] = arguments[_i];\n        }\n        // No API exists so return any if the types are not all the same type.\n        var result = undefined;\n        if (types.length) {\n            result = types[0];\n            for (var i = 1; i < types.length; i++) {\n                if (types[i] != result) {\n                    result = undefined;\n                    break;\n                }\n            }\n        }\n        return result || this.getBuiltinType(symbols$2.BuiltinType.Any);\n    };\n    TypeScriptSymbolQuery.prototype.getArrayType = function (type) { return this.getBuiltinType(symbols$2.BuiltinType.Any); };\n    TypeScriptSymbolQuery.prototype.getElementType = function (type) {\n        if (type instanceof TypeWrapper) {\n            var elementType = getTypeParameterOf(type.tsType, 'Array');\n            if (elementType) {\n                return new TypeWrapper(elementType, type.context);\n            }\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getNonNullableType = function (symbol) {\n        if (symbol instanceof TypeWrapper && (typeof this.checker.getNonNullableType == 'function')) {\n            var tsType = symbol.tsType;\n            var nonNullableType = this.checker.getNonNullableType(tsType);\n            if (nonNullableType != tsType) {\n                return new TypeWrapper(nonNullableType, symbol.context);\n            }\n            else if (nonNullableType == tsType) {\n                return symbol;\n            }\n        }\n        return this.getBuiltinType(symbols$2.BuiltinType.Any);\n    };\n    TypeScriptSymbolQuery.prototype.getPipes = function () {\n        var result = this.pipesCache;\n        if (!result) {\n            result = this.pipesCache = this.fetchPipes();\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getTemplateContext = function (type) {\n        var context = { node: this.source, program: this.program, checker: this.checker };\n        var typeSymbol = findClassSymbolInContext(type, context);\n        if (typeSymbol) {\n            var contextType = this.getTemplateRefContextType(typeSymbol);\n            if (contextType)\n                return new SymbolWrapper(contextType, context).members();\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getTypeSymbol = function (type) {\n        var context = { node: this.source, program: this.program, checker: this.checker };\n        var typeSymbol = findClassSymbolInContext(type, context);\n        return typeSymbol && new SymbolWrapper(typeSymbol, context);\n    };\n    TypeScriptSymbolQuery.prototype.createSymbolTable = function (symbols) {\n        var result = new MapSymbolTable();\n        result.addAll(symbols.map(function (s) { return new DeclaredSymbol(s); }));\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.mergeSymbolTable = function (symbolTables) {\n        var result = new MapSymbolTable();\n        for (var _i = 0, symbolTables_1 = symbolTables; _i < symbolTables_1.length; _i++) {\n            var symbolTable = symbolTables_1[_i];\n            result.addAll(symbolTable.values());\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getSpanAt = function (line, column) {\n        return spanAt(this.source, line, column);\n    };\n    TypeScriptSymbolQuery.prototype.getTemplateRefContextType = function (typeSymbol) {\n        var type = this.checker.getTypeOfSymbolAtLocation(typeSymbol, this.source);\n        var constructor = type.symbol && type.symbol.members &&\n            getFromSymbolTable(type.symbol.members, '__constructor');\n        if (constructor) {\n            var constructorDeclaration = constructor.declarations[0];\n            for (var _i = 0, _a = constructorDeclaration.parameters; _i < _a.length; _i++) {\n                var parameter = _a[_i];\n                var type_1 = this.checker.getTypeAtLocation(parameter.type);\n                if (type_1.symbol.name == 'TemplateRef' && isReferenceType(type_1)) {\n                    var typeReference = type_1;\n                    if (typeReference.typeArguments && typeReference.typeArguments.length === 1) {\n                        return typeReference.typeArguments[0].symbol;\n                    }\n                }\n            }\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getTsTypeOf = function (symbol) {\n        var type = this.getTypeWrapper(symbol);\n        return type && type.tsType;\n    };\n    TypeScriptSymbolQuery.prototype.getTypeWrapper = function (symbol) {\n        var type = undefined;\n        if (symbol instanceof TypeWrapper) {\n            type = symbol;\n        }\n        else if (symbol.type instanceof TypeWrapper) {\n            type = symbol.type;\n        }\n        return type;\n    };\n    return TypeScriptSymbolQuery;\n}());\nfunction typeCallable(type) {\n    var signatures = type.getCallSignatures();\n    return signatures && signatures.length != 0;\n}\nfunction signaturesOf(type, context) {\n    return type.getCallSignatures().map(function (s) { return new SignatureWrapper(s, context); });\n}\nfunction selectSignature(type, context, types) {\n    // TODO: Do a better job of selecting the right signature.\n    var signatures = type.getCallSignatures();\n    return signatures.length ? new SignatureWrapper(signatures[0], context) : undefined;\n}\nvar TypeWrapper = (function () {\n    function TypeWrapper(tsType, context) {\n        this.tsType = tsType;\n        this.context = context;\n        this.kind = 'type';\n        this.language = 'typescript';\n        this.type = undefined;\n        this.container = undefined;\n        this.public = true;\n        if (!tsType) {\n            throw Error('Internal: null type');\n        }\n    }\n    Object.defineProperty(TypeWrapper.prototype, \"name\", {\n        get: function () {\n            var symbol = this.tsType.symbol;\n            return (symbol && symbol.name) || '<anonymous>';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"callable\", {\n        get: function () { return typeCallable(this.tsType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"nullable\", {\n        get: function () {\n            return this.context.checker.getNonNullableType(this.tsType) != this.tsType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"definition\", {\n        get: function () {\n            var symbol = this.tsType.getSymbol();\n            return symbol ? definitionFromTsSymbol(symbol) : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeWrapper.prototype.members = function () {\n        return new SymbolTableWrapper(this.tsType.getProperties(), this.context);\n    };\n    TypeWrapper.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    TypeWrapper.prototype.selectSignature = function (types) {\n        return selectSignature(this.tsType, this.context, types);\n    };\n    TypeWrapper.prototype.indexed = function (argument) { return undefined; };\n    return TypeWrapper;\n}());\nvar SymbolWrapper = (function () {\n    function SymbolWrapper(symbol, context) {\n        this.context = context;\n        this.nullable = false;\n        this.language = 'typescript';\n        this.symbol = symbol && context && (symbol.flags & ts__default.SymbolFlags.Alias) ?\n            context.checker.getAliasedSymbol(symbol) :\n            symbol;\n    }\n    Object.defineProperty(SymbolWrapper.prototype, \"name\", {\n        get: function () { return this.symbol.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"kind\", {\n        get: function () { return this.callable ? 'method' : 'property'; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"type\", {\n        get: function () { return new TypeWrapper(this.tsType, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"container\", {\n        get: function () { return getContainerOf(this.symbol, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"public\", {\n        get: function () {\n            // Symbols that are not explicitly made private are public.\n            return !isSymbolPrivate(this.symbol);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"callable\", {\n        get: function () { return typeCallable(this.tsType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"definition\", {\n        get: function () { return definitionFromTsSymbol(this.symbol); },\n        enumerable: true,\n        configurable: true\n    });\n    SymbolWrapper.prototype.members = function () {\n        if (!this._members) {\n            if ((this.symbol.flags & (ts__default.SymbolFlags.Class | ts__default.SymbolFlags.Interface)) != 0) {\n                var declaredType = this.context.checker.getDeclaredTypeOfSymbol(this.symbol);\n                var typeWrapper = new TypeWrapper(declaredType, this.context);\n                this._members = typeWrapper.members();\n            }\n            else {\n                this._members = new SymbolTableWrapper(this.symbol.members, this.context);\n            }\n        }\n        return this._members;\n    };\n    SymbolWrapper.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    SymbolWrapper.prototype.selectSignature = function (types) {\n        return selectSignature(this.tsType, this.context, types);\n    };\n    SymbolWrapper.prototype.indexed = function (argument) { return undefined; };\n    Object.defineProperty(SymbolWrapper.prototype, \"tsType\", {\n        get: function () {\n            var type = this._tsType;\n            if (!type) {\n                type = this._tsType =\n                    this.context.checker.getTypeOfSymbolAtLocation(this.symbol, this.context.node);\n            }\n            return type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SymbolWrapper;\n}());\nvar DeclaredSymbol = (function () {\n    function DeclaredSymbol(declaration) {\n        this.declaration = declaration;\n        this.language = 'ng-template';\n        this.nullable = false;\n        this.public = true;\n    }\n    Object.defineProperty(DeclaredSymbol.prototype, \"name\", {\n        get: function () { return this.declaration.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"kind\", {\n        get: function () { return this.declaration.kind; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"container\", {\n        get: function () { return undefined; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"type\", {\n        get: function () { return this.declaration.type; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"callable\", {\n        get: function () { return this.declaration.type.callable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"definition\", {\n        get: function () { return this.declaration.definition; },\n        enumerable: true,\n        configurable: true\n    });\n    DeclaredSymbol.prototype.members = function () { return this.declaration.type.members(); };\n    DeclaredSymbol.prototype.signatures = function () { return this.declaration.type.signatures(); };\n    DeclaredSymbol.prototype.selectSignature = function (types) {\n        return this.declaration.type.selectSignature(types);\n    };\n    DeclaredSymbol.prototype.indexed = function (argument) { return undefined; };\n    return DeclaredSymbol;\n}());\nvar SignatureWrapper = (function () {\n    function SignatureWrapper(signature, context) {\n        this.signature = signature;\n        this.context = context;\n    }\n    Object.defineProperty(SignatureWrapper.prototype, \"arguments\", {\n        get: function () {\n            return new SymbolTableWrapper(this.signature.getParameters(), this.context);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SignatureWrapper.prototype, \"result\", {\n        get: function () { return new TypeWrapper(this.signature.getReturnType(), this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    return SignatureWrapper;\n}());\nvar SignatureResultOverride = (function () {\n    function SignatureResultOverride(signature, resultType) {\n        this.signature = signature;\n        this.resultType = resultType;\n    }\n    Object.defineProperty(SignatureResultOverride.prototype, \"arguments\", {\n        get: function () { return this.signature.arguments; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SignatureResultOverride.prototype, \"result\", {\n        get: function () { return this.resultType; },\n        enumerable: true,\n        configurable: true\n    });\n    return SignatureResultOverride;\n}());\nvar toSymbolTable = isTypescriptVersion('2.2') ?\n    (function (symbols) {\n        var result = new Map();\n        for (var _i = 0, symbols_2 = symbols; _i < symbols_2.length; _i++) {\n            var symbol = symbols_2[_i];\n            result.set(symbol.name, symbol);\n        }\n        return result;\n    }) :\n    (function (symbols) {\n        var result = {};\n        for (var _i = 0, symbols_3 = symbols; _i < symbols_3.length; _i++) {\n            var symbol = symbols_3[_i];\n            result[symbol.name] = symbol;\n        }\n        return result;\n    });\nfunction toSymbols(symbolTable) {\n    if (!symbolTable)\n        return [];\n    var table = symbolTable;\n    if (typeof table.values === 'function') {\n        return Array.from(table.values());\n    }\n    var result = [];\n    var own = typeof table.hasOwnProperty === 'function' ?\n        function (name) { return table.hasOwnProperty(name); } :\n        function (name) { return !!table[name]; };\n    for (var name_1 in table) {\n        if (own(name_1)) {\n            result.push(table[name_1]);\n        }\n    }\n    return result;\n}\nvar SymbolTableWrapper = (function () {\n    function SymbolTableWrapper(symbols, context) {\n        this.context = context;\n        symbols = symbols || [];\n        if (Array.isArray(symbols)) {\n            this.symbols = symbols;\n            this.symbolTable = toSymbolTable(symbols);\n        }\n        else {\n            this.symbols = toSymbols(symbols);\n            this.symbolTable = symbols;\n        }\n    }\n    Object.defineProperty(SymbolTableWrapper.prototype, \"size\", {\n        get: function () { return this.symbols.length; },\n        enumerable: true,\n        configurable: true\n    });\n    SymbolTableWrapper.prototype.get = function (key) {\n        var symbol = getFromSymbolTable(this.symbolTable, key);\n        return symbol ? new SymbolWrapper(symbol, this.context) : undefined;\n    };\n    SymbolTableWrapper.prototype.has = function (key) {\n        var table = this.symbolTable;\n        return (typeof table.has === 'function') ? table.has(key) : table[key] != null;\n    };\n    SymbolTableWrapper.prototype.values = function () {\n        var _this = this;\n        return this.symbols.map(function (s) { return new SymbolWrapper(s, _this.context); });\n    };\n    return SymbolTableWrapper;\n}());\nvar MapSymbolTable = (function () {\n    function MapSymbolTable() {\n        this.map = new Map();\n        this._values = [];\n    }\n    Object.defineProperty(MapSymbolTable.prototype, \"size\", {\n        get: function () { return this.map.size; },\n        enumerable: true,\n        configurable: true\n    });\n    MapSymbolTable.prototype.get = function (key) { return this.map.get(key); };\n    MapSymbolTable.prototype.add = function (symbol) {\n        if (this.map.has(symbol.name)) {\n            var previous = this.map.get(symbol.name);\n            this._values[this._values.indexOf(previous)] = symbol;\n        }\n        this.map.set(symbol.name, symbol);\n        this._values.push(symbol);\n    };\n    MapSymbolTable.prototype.addAll = function (symbols) {\n        for (var _i = 0, symbols_4 = symbols; _i < symbols_4.length; _i++) {\n            var symbol = symbols_4[_i];\n            this.add(symbol);\n        }\n    };\n    MapSymbolTable.prototype.has = function (key) { return this.map.has(key); };\n    MapSymbolTable.prototype.values = function () {\n        // Switch to this.map.values once iterables are supported by the target language.\n        return this._values;\n    };\n    return MapSymbolTable;\n}());\nvar PipesTable = (function () {\n    function PipesTable(pipes, context) {\n        this.pipes = pipes;\n        this.context = context;\n    }\n    Object.defineProperty(PipesTable.prototype, \"size\", {\n        get: function () { return this.pipes.length; },\n        enumerable: true,\n        configurable: true\n    });\n    PipesTable.prototype.get = function (key) {\n        var pipe = this.pipes.find(function (pipe) { return pipe.name == key; });\n        if (pipe) {\n            return new PipeSymbol(pipe, this.context);\n        }\n    };\n    PipesTable.prototype.has = function (key) { return this.pipes.find(function (pipe) { return pipe.name == key; }) != null; };\n    PipesTable.prototype.values = function () {\n        var _this = this;\n        return this.pipes.map(function (pipe) { return new PipeSymbol(pipe, _this.context); });\n    };\n    return PipesTable;\n}());\nvar PipeSymbol = (function () {\n    function PipeSymbol(pipe, context) {\n        this.pipe = pipe;\n        this.context = context;\n        this.kind = 'pipe';\n        this.language = 'typescript';\n        this.container = undefined;\n        this.callable = true;\n        this.nullable = false;\n        this.public = true;\n    }\n    Object.defineProperty(PipeSymbol.prototype, \"name\", {\n        get: function () { return this.pipe.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PipeSymbol.prototype, \"type\", {\n        get: function () { return new TypeWrapper(this.tsType, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PipeSymbol.prototype, \"definition\", {\n        get: function () {\n            var symbol = this.tsType.getSymbol();\n            return symbol ? definitionFromTsSymbol(symbol) : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PipeSymbol.prototype.members = function () { return EmptyTable.instance; };\n    PipeSymbol.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    PipeSymbol.prototype.selectSignature = function (types) {\n        var signature = selectSignature(this.tsType, this.context, types);\n        if (types.length == 1) {\n            var parameterType = types[0];\n            if (parameterType instanceof TypeWrapper) {\n                var resultType = undefined;\n                switch (this.name) {\n                    case 'async':\n                        switch (parameterType.name) {\n                            case 'Observable':\n                            case 'Promise':\n                            case 'EventEmitter':\n                                resultType = getTypeParameterOf(parameterType.tsType, parameterType.name);\n                                break;\n                            default:\n                                resultType = getBuiltinTypeFromTs(symbols$2.BuiltinType.Any, this.context);\n                                break;\n                        }\n                        break;\n                    case 'slice':\n                        resultType = getTypeParameterOf(parameterType.tsType, 'Array');\n                        break;\n                }\n                if (resultType) {\n                    signature = new SignatureResultOverride(signature, new TypeWrapper(resultType, parameterType.context));\n                }\n            }\n        }\n        return signature;\n    };\n    PipeSymbol.prototype.indexed = function (argument) { return undefined; };\n    Object.defineProperty(PipeSymbol.prototype, \"tsType\", {\n        get: function () {\n            var type = this._tsType;\n            if (!type) {\n                var classSymbol = this.findClassSymbol(this.pipe.type.reference);\n                if (classSymbol) {\n                    type = this._tsType = this.findTransformMethodType(classSymbol);\n                }\n                if (!type) {\n                    type = this._tsType = getBuiltinTypeFromTs(symbols$2.BuiltinType.Any, this.context);\n                }\n            }\n            return type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PipeSymbol.prototype.findClassSymbol = function (type) {\n        return findClassSymbolInContext(type, this.context);\n    };\n    PipeSymbol.prototype.findTransformMethodType = function (classSymbol) {\n        var classType = this.context.checker.getDeclaredTypeOfSymbol(classSymbol);\n        if (classType) {\n            var transform = classType.getProperty('transform');\n            if (transform) {\n                return this.context.checker.getTypeOfSymbolAtLocation(transform, this.context.node);\n            }\n        }\n    };\n    return PipeSymbol;\n}());\nfunction findClassSymbolInContext(type, context) {\n    var sourceFile = context.program.getSourceFile(type.filePath);\n    if (sourceFile) {\n        var moduleSymbol = sourceFile.module || sourceFile.symbol;\n        var exports_1 = context.checker.getExportsOfModule(moduleSymbol);\n        return (exports_1 || []).find(function (symbol) { return symbol.name == type.name; });\n    }\n}\nvar EmptyTable = (function () {\n    function EmptyTable() {\n        this.size = 0;\n    }\n    EmptyTable.prototype.get = function (key) { return undefined; };\n    EmptyTable.prototype.has = function (key) { return false; };\n    EmptyTable.prototype.values = function () { return []; };\n    EmptyTable.instance = new EmptyTable();\n    return EmptyTable;\n}());\nfunction isSymbolPrivate(s) {\n    return !!s.valueDeclaration && isPrivate(s.valueDeclaration);\n}\nfunction getBuiltinTypeFromTs(kind, context) {\n    var type;\n    var checker = context.checker;\n    var node = context.node;\n    switch (kind) {\n        case symbols$2.BuiltinType.Any:\n            type = checker.getTypeAtLocation(setParents({\n                kind: ts__default.SyntaxKind.AsExpression,\n                expression: { kind: ts__default.SyntaxKind.TrueKeyword },\n                type: { kind: ts__default.SyntaxKind.AnyKeyword }\n            }, node));\n            break;\n        case symbols$2.BuiltinType.Boolean:\n            type =\n                checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.TrueKeyword }, node));\n            break;\n        case symbols$2.BuiltinType.Null:\n            type =\n                checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.NullKeyword }, node));\n            break;\n        case symbols$2.BuiltinType.Number:\n            var numeric = { kind: ts__default.SyntaxKind.NumericLiteral };\n            setParents({ kind: ts__default.SyntaxKind.ExpressionStatement, expression: numeric }, node);\n            type = checker.getTypeAtLocation(numeric);\n            break;\n        case symbols$2.BuiltinType.String:\n            type = checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.NoSubstitutionTemplateLiteral }, node));\n            break;\n        case symbols$2.BuiltinType.Undefined:\n            type = checker.getTypeAtLocation(setParents({\n                kind: ts__default.SyntaxKind.VoidExpression,\n                expression: { kind: ts__default.SyntaxKind.NumericLiteral }\n            }, node));\n            break;\n        default:\n            throw new Error(\"Internal error, unhandled literal kind \" + kind + \":\" + symbols$2.BuiltinType[kind]);\n    }\n    return type;\n}\nfunction setParents(node, parent) {\n    node.parent = parent;\n    ts__default.forEachChild(node, function (child) { return setParents(child, node); });\n    return node;\n}\nfunction spanAt(sourceFile, line, column) {\n    if (line != null && column != null) {\n        var position_1 = ts__default.getPositionOfLineAndCharacter(sourceFile, line, column);\n        var findChild = function findChild(node) {\n            if (node.kind > ts__default.SyntaxKind.LastToken && node.pos <= position_1 && node.end > position_1) {\n                var betterNode = ts__default.forEachChild(node, findChild);\n                return betterNode || node;\n            }\n        };\n        var node = ts__default.forEachChild(sourceFile, findChild);\n        if (node) {\n            return { start: node.getStart(), end: node.getEnd() };\n        }\n    }\n}\nfunction definitionFromTsSymbol(symbol) {\n    var declarations = symbol.declarations;\n    if (declarations) {\n        return declarations.map(function (declaration) {\n            var sourceFile = declaration.getSourceFile();\n            return {\n                fileName: sourceFile.fileName,\n                span: { start: declaration.getStart(), end: declaration.getEnd() }\n            };\n        });\n    }\n}\nfunction parentDeclarationOf(node) {\n    while (node) {\n        switch (node.kind) {\n            case ts__default.SyntaxKind.ClassDeclaration:\n            case ts__default.SyntaxKind.InterfaceDeclaration:\n                return node;\n            case ts__default.SyntaxKind.SourceFile:\n                return undefined;\n        }\n        node = node.parent;\n    }\n}\nfunction getContainerOf(symbol, context) {\n    if (symbol.getFlags() & ts__default.SymbolFlags.ClassMember && symbol.declarations) {\n        for (var _i = 0, _a = symbol.declarations; _i < _a.length; _i++) {\n            var declaration = _a[_i];\n            var parent_1 = parentDeclarationOf(declaration);\n            if (parent_1) {\n                var type = context.checker.getTypeAtLocation(parent_1);\n                if (type) {\n                    return new TypeWrapper(type, context);\n                }\n            }\n        }\n    }\n}\nfunction getTypeParameterOf(type, name) {\n    if (type && type.symbol && type.symbol.name == name) {\n        var typeArguments = type.typeArguments;\n        if (typeArguments && typeArguments.length <= 1) {\n            return typeArguments[0];\n        }\n    }\n}\nfunction typeKindOf(type) {\n    if (type) {\n        if (type.flags & ts__default.TypeFlags.Any) {\n            return symbols$2.BuiltinType.Any;\n        }\n        else if (type.flags & (ts__default.TypeFlags.String | ts__default.TypeFlags.StringLike | ts__default.TypeFlags.StringLiteral)) {\n            return symbols$2.BuiltinType.String;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Number | ts__default.TypeFlags.NumberLike)) {\n            return symbols$2.BuiltinType.Number;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Undefined)) {\n            return symbols$2.BuiltinType.Undefined;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Null)) {\n            return symbols$2.BuiltinType.Null;\n        }\n        else if (type.flags & ts__default.TypeFlags.Union) {\n            // If all the constituent types of a union are the same kind, it is also that kind.\n            var candidate = null;\n            var unionType = type;\n            if (unionType.types.length > 0) {\n                candidate = typeKindOf(unionType.types[0]);\n                for (var _i = 0, _a = unionType.types; _i < _a.length; _i++) {\n                    var subType = _a[_i];\n                    if (candidate != typeKindOf(subType)) {\n                        return symbols$2.BuiltinType.Other;\n                    }\n                }\n            }\n            if (candidate != null) {\n                return candidate;\n            }\n        }\n        else if (type.flags & ts__default.TypeFlags.TypeParameter) {\n            return symbols$2.BuiltinType.Unbound;\n        }\n    }\n    return symbols$2.BuiltinType.Other;\n}\nfunction getFromSymbolTable(symbolTable, key) {\n    var table = symbolTable;\n    var symbol;\n    if (typeof table.get === 'function') {\n        // TS 2.2 uses a Map\n        symbol = table.get(key);\n    }\n    else {\n        // TS pre-2.2 uses an object\n        symbol = table[key];\n    }\n    return symbol;\n}\nfunction toNumbers(value) {\n    return value ? value.split('.').map(function (v) { return +v; }) : [];\n}\nfunction compareNumbers(a, b) {\n    for (var i = 0; i < a.length && i < b.length; i++) {\n        if (a[i] > b[i])\n            return 1;\n        if (a[i] < b[i])\n            return -1;\n    }\n    return 0;\n}\nfunction isTypescriptVersion(low, high) {\n    var tsNumbers = toNumbers(ts__default.version);\n    return compareNumbers(toNumbers(low), tsNumbers) <= 0 &&\n        compareNumbers(toNumbers(high), tsNumbers) >= 0;\n}\n\n});\n\nvar language_services = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n\nThe API from compiler-cli that language-service can see.\nIt is important that none the exported modules require anything other than\nAngular modules and Typescript as this will indirectly add a dependency\nto the language service.\n\n*/\n\nexports.CompilerHost = compiler_host.CompilerHost;\nexports.ModuleResolutionHostAdapter = compiler_host.ModuleResolutionHostAdapter;\nexports.NodeCompilerHostContext = compiler_host.NodeCompilerHostContext;\n\nexports.getExpressionDiagnostics = expression_diagnostics.getExpressionDiagnostics;\nexports.getExpressionScope = expression_diagnostics.getExpressionScope;\nexports.getTemplateExpressionDiagnostics = expression_diagnostics.getTemplateExpressionDiagnostics;\n\nexports.AstType = expression_type.AstType;\nexports.DiagnosticKind = expression_type.DiagnosticKind;\nexports.TypeDiagnostic = expression_type.TypeDiagnostic;\n\nexports.BuiltinType = symbols$2.BuiltinType;\n\nexports.getClassFromStaticSymbol = typescript_symbols.getClassFromStaticSymbol;\nexports.getClassMembers = typescript_symbols.getClassMembers;\nexports.getClassMembersFromDeclaration = typescript_symbols.getClassMembersFromDeclaration;\nexports.getPipesTable = typescript_symbols.getPipesTable;\nexports.getSymbolQuery = typescript_symbols.getSymbolQuery;\n\n});\n\nvar language_services_1 = language_services.CompilerHost;\nvar language_services_2 = language_services.ModuleResolutionHostAdapter;\nvar language_services_5 = language_services.getExpressionScope;\nvar language_services_6 = language_services.getTemplateExpressionDiagnostics;\nvar language_services_7 = language_services.AstType;\nvar language_services_10 = language_services.BuiltinType;\nvar language_services_13 = language_services.getClassMembersFromDeclaration;\nvar language_services_14 = language_services.getPipesTable;\nvar language_services_15 = language_services.getSymbolQuery;\n\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window$1 = typeof window !== 'undefined' && window;\nvar __self$1 = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global$1 = typeof commonjsGlobal !== 'undefined' && commonjsGlobal;\nvar _root = __window$1 || __global$1 || __self$1;\nvar root_1 = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n\n\nvar root = {\n\troot: root_1\n};\n\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nvar isFunction_2 = isFunction;\n\n\nvar isFunction_1 = {\n\tisFunction: isFunction_2\n};\n\nvar isArray_1 = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n\n\nvar isArray = {\n\tisArray: isArray_1\n};\n\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nvar isObject_2 = isObject;\n\n\nvar isObject_1 = {\n\tisObject: isObject_2\n};\n\n// typeof any so that it we don't have to cast when comparing a result to the error object\nvar errorObject_1 = { e: {} };\n\n\nvar errorObject = {\n\terrorObject: errorObject_1\n};\n\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.errorObject.e = e;\n        return errorObject.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nvar tryCatch_2 = tryCatch;\n\n\n\nvar tryCatch_1 = {\n\ttryCatch: tryCatch_2\n};\n\nvar __extends$2 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends$2(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nvar UnsubscriptionError_2 = UnsubscriptionError;\n\n\nvar UnsubscriptionError_1 = {\n\tUnsubscriptionError: UnsubscriptionError_2\n};\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.errorObject.e.errors) : [errorObject.errorObject.e]);\n            }\n        }\n        if (isArray.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nvar Subscription_2 = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n\n\nvar Subscription_1 = {\n\tSubscription: Subscription_2\n};\n\nvar empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n\n\nvar Observer = {\n\tempty: empty\n};\n\nvar rxSubscriber = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nvar Symbol = root.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n\n});\n\nvar __extends$1 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends$1(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nvar Subscriber_2 = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends$1(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n\n\nvar Subscriber_1 = {\n\tSubscriber: Subscriber_2\n};\n\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nvar toSubscriber_2 = toSubscriber;\n\n\nvar toSubscriber_1 = {\n\ttoSubscriber: toSubscriber_2\n};\n\nvar observable = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n\n});\n\n/* tslint:disable:no-empty */\nfunction noop$1() { }\nvar noop_2 = noop$1;\n\n\nvar noop_1 = {\n\tnoop: noop_2\n};\n\n/* tslint:enable:max-line-length */\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nvar pipe_2 = pipe;\n/* @internal */\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop_1.noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nvar pipeFromArray_1 = pipeFromArray;\n\n\nvar pipe_1 = {\n\tpipe: pipe_2,\n\tpipeFromArray: pipeFromArray_1\n};\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable$$1 = new Observable();\n        observable$$1.source = this;\n        observable$$1.operator = operator;\n        return observable$$1;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.root.Rx && root.root.Rx.config && root.root.Rx.config.Promise) {\n                PromiseCtor = root.root.Rx.config.Promise;\n            }\n            else if (root.root.Promise) {\n                PromiseCtor = root.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable.observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.root.Rx && root.root.Rx.config && root.root.Rx.config.Promise) {\n                PromiseCtor = root.root.Rx.config.Promise;\n            }\n            else if (root.root.Promise) {\n                PromiseCtor = root.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nvar Observable_2 = Observable;\n\n\nvar Observable_1 = {\n\tObservable: Observable_2\n};\n\nvar __extends$4 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends$4(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nvar ScalarObservable_2 = ScalarObservable;\n\n\nvar ScalarObservable_1 = {\n\tScalarObservable: ScalarObservable_2\n};\n\nvar __extends$5 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends$5(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nvar EmptyObservable_2 = EmptyObservable;\n\n\nvar EmptyObservable_1 = {\n\tEmptyObservable: EmptyObservable_2\n};\n\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nvar isScheduler_2 = isScheduler;\n\n\nvar isScheduler_1 = {\n\tisScheduler: isScheduler_2\n};\n\nvar __extends$3 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends$3(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nvar ArrayObservable_2 = ArrayObservable;\n\n\nvar ArrayObservable_1 = {\n\tArrayObservable: ArrayObservable_2\n};\n\nvar isArrayLike_1 = (function (x) { return x && typeof x.length === 'number'; });\n\n\nvar isArrayLike = {\n\tisArrayLike: isArrayLike_1\n};\n\nfunction isPromise$2(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nvar isPromise_2 = isPromise$2;\n\n\nvar isPromise_1 = {\n\tisPromise: isPromise_2\n};\n\nvar iterator = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nfunction symbolIteratorPonyfill(root$$2) {\n    var Symbol = root$$2.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root$$2.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root$$2.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.iterator = symbolIteratorPonyfill(root.root);\n/**\n * @deprecated use iterator instead\n */\nexports.$$iterator = exports.iterator;\n\n});\n\nvar __extends$7 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends$7(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nvar InnerSubscriber_2 = InnerSubscriber;\n\n\nvar InnerSubscriber_1 = {\n\tInnerSubscriber: InnerSubscriber_2\n};\n\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            destination.syncErrorThrowable = true;\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike.isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[iterator.iterator] === 'function') {\n        var iterator$$1 = result[iterator.iterator]();\n        do {\n            var item = iterator$$1.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[observable.observable] === 'function') {\n        var obs = result[observable.observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = (\"You provided \" + value + \" where a stream was expected.\")\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\nvar subscribeToResult_2 = subscribeToResult;\n\n\nvar subscribeToResult_1 = {\n\tsubscribeToResult: subscribeToResult_2\n};\n\nvar __extends$8 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends$8(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nvar OuterSubscriber_2 = OuterSubscriber;\n\n\nvar OuterSubscriber_1 = {\n\tOuterSubscriber: OuterSubscriber_2\n};\n\nvar __extends$6 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return function mergeMapOperatorFunction(source) {\n        if (typeof resultSelector === 'number') {\n            concurrent = resultSelector;\n            resultSelector = null;\n        }\n        return source.lift(new MergeMapOperator(project, resultSelector, concurrent));\n    };\n}\nvar mergeMap_2 = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nvar MergeMapOperator_1 = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends$6(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nvar MergeMapSubscriber_1 = MergeMapSubscriber;\n\n\nvar mergeMap_1 = {\n\tmergeMap: mergeMap_2,\n\tMergeMapOperator: MergeMapOperator_1,\n\tMergeMapSubscriber: MergeMapSubscriber_1\n};\n\nfunction identity(x) {\n    return x;\n}\nvar identity_2 = identity;\n\n\nvar identity_1 = {\n\tidentity: identity_2\n};\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeMap_1.mergeMap(identity_1.identity, null, concurrent);\n}\nvar mergeAll_2 = mergeAll;\n\n\nvar mergeAll_1 = {\n\tmergeAll: mergeAll_2\n};\n\n/* tslint:enable:max-line-length */\nfunction merge$3() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(mergeStatic$1.apply(void 0, [source].concat(observables))); };\n}\nvar merge_2$2 = merge$3;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction mergeStatic$1() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler_1.isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n        return observables[0];\n    }\n    return mergeAll_1.mergeAll(concurrent)(new ArrayObservable_1.ArrayObservable(observables, scheduler));\n}\nvar mergeStatic_1 = mergeStatic$1;\n\n\nvar merge_1 = {\n\tmerge: merge_2$2,\n\tmergeStatic: mergeStatic_1\n};\n\nvar merge_2$1 = merge_1;\nvar mergeStatic = merge_2$1.mergeStatic;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge$2() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return merge_1.merge.apply(void 0, observables)(this);\n}\nvar merge_4 = merge$2;\n\n\nvar merge_3 = {\n\tmergeStatic: mergeStatic,\n\tmerge: merge_4\n};\n\nvar merge_2 = merge_3.mergeStatic;\n\nvar __extends$11 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends$11(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nvar ObjectUnsubscribedError_2 = ObjectUnsubscribedError;\n\n\nvar ObjectUnsubscribedError_1 = {\n\tObjectUnsubscribedError: ObjectUnsubscribedError_2\n};\n\nvar __extends$12 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends$12(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nvar SubjectSubscription_2 = SubjectSubscription;\n\n\nvar SubjectSubscription_1 = {\n\tSubjectSubscription: SubjectSubscription_2\n};\n\nvar __extends$10 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends$10(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nvar SubjectSubscriber_1 = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends$10(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nvar Subject_2 = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends$10(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nvar AnonymousSubject_1 = AnonymousSubject;\n\n\nvar Subject_1 = {\n\tSubjectSubscriber: SubjectSubscriber_1,\n\tSubject: Subject_2,\n\tAnonymousSubject: AnonymousSubject_1\n};\n\nvar __extends$13 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nfunction refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator$1(source));\n    };\n}\nvar refCount_2 = refCount;\nvar RefCountOperator$1 = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber$1(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber$1 = (function (_super) {\n    __extends$13(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar refCount_1 = {\n\trefCount: refCount_2\n};\n\nvar __extends$9 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = (function (_super) {\n    __extends$9(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n        this._isComplete = false;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription_1.Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_1.Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return refCount_1.refCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nvar ConnectableObservable_2 = ConnectableObservable;\nvar connectableProto = ConnectableObservable.prototype;\nvar connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = (function (_super) {\n    __extends$9(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber));\nvar RefCountSubscriber = (function (_super) {\n    __extends$9(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar ConnectableObservable_1 = {\n\tConnectableObservable: ConnectableObservable_2,\n\tconnectableObservableDescriptor: connectableObservableDescriptor\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, ConnectableObservable_1.connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nvar multicast_2 = multicast;\nvar MulticastOperator = (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nvar MulticastOperator_1 = MulticastOperator;\n\n\nvar multicast_1 = {\n\tmulticast: multicast_2,\n\tMulticastOperator: MulticastOperator_1\n};\n\nfunction shareSubjectFactory() {\n    return new Subject_1.Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .publish().refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share$1() {\n    return function (source) { return refCount_1.refCount()(multicast_1.multicast(shareSubjectFactory)(source)); };\n}\nvar share_2$2 = share$1;\n\n\n\nvar share_1 = {\n\tshare: share_2$2\n};\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return share_1.share()(this);\n}\nvar share_3 = share;\n\n/**\n * @license Angular v5.0.0-rc.3-fc86352\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar InjectionToken = (function () {\n    function InjectionToken(_desc) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\n\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__paramaters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {?} objOrType\n     * @return {?}\n     */\n    function DecoratorFactory(objOrType) {\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, objOrType);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new (/** @type {?} */ (DecoratorFactory))(objOrType);\n        var /** @type {?} */ TypeDecorator = /** @type {?} */ (function TypeDecorator(cls) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var /** @type {?} */ values = props.apply(void 0, args);\n            for (var /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = (/** @type {?} */ (ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Attribute$1$1 = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy$1 = {\n    /**\n       * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n       */\n    OnPush: 0,\n    /**\n       * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n       */\n    Default: 1,\n};\nChangeDetectionStrategy$1[ChangeDetectionStrategy$1.OnPush] = \"OnPush\";\nChangeDetectionStrategy$1[ChangeDetectionStrategy$1.Default] = \"Default\";\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Directive$1 = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Type of the Component decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Component$1 = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy$1.Default }, c));\n}, Directive$1);\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Pipe$1 = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar NgModule$1 = makeDecorator('NgModule', function (ngModule) { return ngModule; });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ViewEncapsulation$1 = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via\n       * {@link Component#styles} or {@link Component#styleUrls}, and adding the new Host Element\n       * attribute to all selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n};\nViewEncapsulation$1[ViewEncapsulation$1.Emulated] = \"Emulated\";\nViewEncapsulation$1[ViewEncapsulation$1.Native] = \"Native\";\nViewEncapsulation$1[ViewEncapsulation$1.None] = \"None\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar Version$1 = (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * \\@stable\n */\nvar VERSION$2 = new Version$1('5.0.0-rc.3-fc86352');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Inject$1 = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Injectable = makeDecorator('Injectable');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify$1(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify$1).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify$1(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef$1(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify$1(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new StaticInjector(providers, parent);\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new _NullInjector();\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = /** @type {?} */ ([]);\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = /** @type {?} */ ({});\nvar ɵ2 = GET_PROPERTY_NAME;\nvar USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ2 });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = (function () {\n    function StaticInjector(providers, parent) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        this.parent = parent;\n        var /** @type {?} */ records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    StaticInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        var /** @type {?} */ record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ tokenPath = e[NG_TEMP_TOKEN_PATH];\n            e.message = formatError('\\n' + e.message, tokenPath);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokens = /** @type {?} */ ([]), /** @type {?} */ records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify$1(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    var /** @type {?} */ deps = computeDeps(provider);\n    var /** @type {?} */ fn = IDENT;\n    var /** @type {?} */ value = EMPTY;\n    var /** @type {?} */ useNew = false;\n    var /** @type {?} */ provide = resolveForwardRef$1(provider.provide);\n    if (USE_VALUE$1 in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef$1((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef$1(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var /** @type {?} */ i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var /** @type {?} */ token = resolveForwardRef$1(provider.provide);\n            var /** @type {?} */ resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var /** @type {?} */ multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var /** @type {?} */ record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue);\n    }\n    catch (/** @type {?} */ e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var /** @type {?} */ path$$1 = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path$$1.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue) {\n    var /** @type {?} */ value;\n    if (record) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var /** @type {?} */ obj = undefined;\n            var /** @type {?} */ useNew = record.useNew;\n            var /** @type {?} */ fn = record.fn;\n            var /** @type {?} */ depRecords = record.deps;\n            var /** @type {?} */ deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var /** @type {?} */ i = 0; i < depRecords.length; i++) {\n                    var /** @type {?} */ depRecord = depRecords[i];\n                    var /** @type {?} */ options = depRecord.options;\n                    var /** @type {?} */ childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND));\n                }\n            }\n            record.value = value = useNew ? new ((_a = (/** @type {?} */ (fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else {\n        value = parent.get(token, notFoundValue);\n    }\n    return value;\n    var _a;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    var /** @type {?} */ deps = EMPTY;\n    var /** @type {?} */ providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n            var /** @type {?} */ options = 6;\n            var /** @type {?} */ token = resolveForwardRef$1(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n                    var /** @type {?} */ annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject$1) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef$1(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        var /** @type {?} */ token = resolveForwardRef$1((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE$1 in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction formatError(text, obj) {\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var /** @type {?} */ context = stringify$1(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify$1).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var /** @type {?} */ parts = /** @type {?} */ ([]);\n        for (var /** @type {?} */ key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var /** @type {?} */ value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify$1(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar ErrorHandler = (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify$1(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\n\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ keys = [key];\n    var /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    var /** @type {?} */ error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify$1(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify$1(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify$1).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify$1(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify$1(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify$1(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef$1(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n         * @return {?} the number of keys registered in the system.\n         */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\n/**\n * \\@internal\n */\nvar KeyRegistry = (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nvar Type$1$1 = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar ReflectionCapabilities = (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (type, parentCtor) {\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(type.toString())) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        var /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = /** @type {?} */ ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return type instanceof Type$1$1 && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify$1(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return \"./\" + stringify$1(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = /**\n     * @param {?} caps\n     * @return {?}\n     */\n    function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\n\nvar ResolvedReflectiveProvider_ = (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n    }\n    Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.resolvedFactories[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar ResolvedReflectiveFactory = (function () {\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef$1(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type$1$1) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject$1) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type$1$1) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject$1) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef$1(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar ReflectiveInjector = (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders} for more info.\n     */\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve} and {@link ReflectiveInjector#fromResolvedProviders}.\n     */\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var /** @type {?} */ len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = /**\n     * @return {?}\n     */\n    function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (/** @type {?} */ e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (/** @type {?} */ e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = /** @type {?} */ (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise$1(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var /** @type {?} */ asyncInitPromises = [];\n        var /** @type {?} */ complete = function () {\n            (/** @type {?} */ (_this)).done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                var /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise$1(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject$1, args: [APP_INITIALIZER,] }, { type: Optional },] },\n    ]; };\n    return ApplicationInitStatus;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nvar APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Console.ctorParameters = function () { return []; };\n    return Console;\n}());\n\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = /**\n     * Clears all caches.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { };\n    Compiler.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Compiler.ctorParameters = function () { return []; };\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar CompilerFactory = (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar ComponentRef = (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactory = (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify$1(component) + \". Did you add it to @NgModule.entryComponents?\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nvar _NullComponentFactoryResolver = (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"selector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.selector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.componentType; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"ngContentSelectors\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.ngContentSelectors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.inputs; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.outputs; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar NgModuleRef = (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar NgModuleFactory = (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar trace;\nvar events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    var /** @type {?} */ wtf = (/** @type {?} */ (_global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar EventEmitter = (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(Subject_2));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar NgZone = (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error('Angular requires Zone.js prolyfill.');\n        }\n        Zone.assertZonePatched();\n        var /** @type {?} */ self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = /**\n     * @return {?}\n     */\n    function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs, name) {\n        var /** @type {?} */ zone = (/** @type {?} */ ((this)))._inner;\n        var /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * @return {?}\n */\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n *\n * \\@internal\n */\nvar NoopNgZone = (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.run = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runGuarded = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runOutsideAngular = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runTask = /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = (function () {\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     */\n    /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     */\n    /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    Testability.prototype.isStable = /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (/** @type {?} */ ((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * Run callback when the application is stable\n     * @param callback function to be called after the application is stable\n     */\n    /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    Testability.prototype.whenStable = /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     */\n    /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone, },\n    ]; };\n    return Testability;\n}());\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\n\nvar _NoopGetTestability = (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ marker = new InjectionToken(\"Platform: \" + name);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                createPlatform(Injector.create(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * Provides additional options to the bootstraping process.\n *\n * \\@stable\n * @record\n */\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n */\nvar PlatformRef = (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var /** @type {?} */ ngZoneOption = options ? options.ngZone : undefined;\n        var /** @type {?} */ ngZone = getNgZone(ngZoneOption);\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = Injector.create([{ provide: NgZone, useValue: ngZone }], _this.injector);\n            var /** @type {?} */ moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { return /** @type {?} */ ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * @stable\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModule = /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ options = optionsReducer({}, compilerOptions);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef.prototype._moduleDoBootstrap = /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    function (moduleRef) {\n        var /** @type {?} */ appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify$1(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef.prototype.onDestroy = /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @return {?}\n         */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    PlatformRef.prototype.destroy = /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector, },\n    ]; };\n    return PlatformRef;\n}());\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    var /** @type {?} */ ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise$1(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n */\nvar ApplicationRef = (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var /** @type {?} */ isCurrentlyStable = new Observable_2(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var /** @type {?} */ isStable = new Observable_2(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var /** @type {?} */ stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var /** @type {?} */ unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            merge_2(isCurrentlyStable, share_3.call(isStable));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef.prototype.bootstrap = /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    ApplicationRef.prototype.tick = /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (/** @type {?} */ e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.attachView = /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.detachView = /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._loadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._unloadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationRef.prototype.ngOnDestroy = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: /**\n         * Returns the number of attached views.\n         * @return {?}\n         */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Console, },\n        { type: Injector, },\n        { type: ErrorHandler, },\n        { type: ComponentFactoryResolver, },\n        { type: ApplicationInitStatus, },\n    ]; };\n    return ApplicationRef;\n}());\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar Renderer = (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * \\@experimental\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar RendererFactory2 = (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * \\@experimental\n * @abstract\n */\nvar Renderer2 = (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n */\nvar ElementRef = (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar QueryList = (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n    }\n    Object.defineProperty(QueryList.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[this.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._results = flatten$2(res);\n        (/** @type {?} */ (this)).dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = /**\n     * internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = /**\n     * internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten$2(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten$2(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use\n * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n * View Container.\n * \\@stable\n * @abstract\n */\nvar TemplateRef = (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar ViewContainerRef = (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ChangeDetectorRef = (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ViewRef = (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar EmbeddedViewRef = (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EventListener = (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugNode = (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugElement = (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar WrappedValue = (function () {\n    function WrappedValue(wrapped) {\n        this.wrapped = wrapped;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new WrappedValue(value); };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar SimpleChange = (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) &&\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                /** @type {?} */ ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify$1(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * \\@stable\n */\nvar IterableChangeRecord_ = (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\nvar _DuplicateItemRecordList = (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = /**\n     * @template K, V\n     * @return {?}\n     */\n    function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = /**\n     * @param {?=} map\n     * @return {?}\n     */\n    function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify$1(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * \\@stable\n */\nvar KeyValueChangeRecord_ = (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\n\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar IterableDiffers = (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n            return new IterableDiffers(factories);\n        }\n        else {\n            return new IterableDiffers(factories);\n        }\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar KeyValueDiffers = (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = /**\n     * @param {?} kv\n     * @return {?}\n     */\n    function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule$1, args: [{\n                    providers: [\n                        ApplicationRef,\n                        ApplicationInitStatus,\n                        Compiler,\n                        APP_ID_RANDOM_PROVIDER,\n                        { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                        {\n                            provide: LOCALE_ID,\n                            useFactory: _localeFactory,\n                            deps: [[new Inject$1(LOCALE_ID), new Optional(), new SkipSelf()]]\n                        },\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n    ]; };\n    return ApplicationModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar SecurityContext$1 = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext$1[SecurityContext$1.NONE] = \"NONE\";\nSecurityContext$1[SecurityContext$1.HTML] = \"HTML\";\nSecurityContext$1[SecurityContext$1.STYLE] = \"STYLE\";\nSecurityContext$1[SecurityContext$1.SCRIPT] = \"SCRIPT\";\nSecurityContext$1[SecurityContext$1.URL] = \"URL\";\nSecurityContext$1[SecurityContext$1.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar Sanitizer = (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @record\n */\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    clearProviderOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify$1(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), oldValue, value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (/** @type {?} */ e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName$1(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nfunction splitDepsDsl(deps) {\n    return deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation$1.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    var /** @type {?} */ value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = /** @type {?} */ ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = /** @type {?} */ ((hostElDef)).nodeIndex + 1;\n    var /** @type {?} */ endIndex = /** @type {?} */ ((hostElDef)).nodeIndex + /** @type {?} */ ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = /** @type {?} */ ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName$1(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n    var /** @type {?} */ renderNode$$1 = elData.renderElement;\n    var /** @type {?} */ name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var /** @type {?} */ bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext$1.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    var /** @type {?} */ def = data._def;\n    var /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            providers[i] = _createProviderInstance$1(data, provDef);\n        }\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var /** @type {?} */ providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        var /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === undefined) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var /** @type {?} */ injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var /** @type {?} */ def = ngModule._def;\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EMPTY_CONTEXT = new Object();\nvar ComponentFactory_ = (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ inputsArr = [];\n            var /** @type {?} */ inputs = /** @type {?} */ ((this._inputs));\n            for (var /** @type {?} */ propName in inputs) {\n                var /** @type {?} */ templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION$2.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = /** @type {?} */ ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ viewRef_ = /** @type {?} */ (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ fs$$1 = this._view.root.rendererFactory;\n        if (fs$$1.begin) {\n            fs$$1.begin();\n        }\n        Services.checkAndUpdateView(this._view);\n        if (fs$$1.end) {\n            fs$$1.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = /**\n     * @return {?}\n     */\n    function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: 0 /* None */ }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify$1(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[/** @type {?} */ ((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return /** @type {?} */ ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    while (view) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(view, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(view, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(view, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(view, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(view, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(view, providerDef_1) };\n                            view.nodes[providerDef_1.nodeIndex] = /** @type {?} */ (providerData);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(view);\n        elDef = /** @type {?} */ ((viewParentEl(view)));\n        view = /** @type {?} */ ((view.parent));\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                callElementProvidersLifecycles(view, parent_1, lifecycles);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles) {\n    for (var /** @type {?} */ i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles) {\n    var /** @type {?} */ providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var /** @type {?} */ provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.nodeIndex + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var /** @type {?} */ elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var /** @type {?} */ elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode$$1;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    var /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var /** @type {?} */ el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var /** @type {?} */ projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" not dirty\", \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.clearProviderOverrides = services.clearProviderOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        clearProviderOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) {\n            return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n        updateRenderer: function (view, checkType) {\n            return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        clearProviderOverrides: debugClearProviderOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n    providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    for (var /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        var /** @type {?} */ lastElementDef = null;\n        for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var /** @type {?} */ i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var /** @type {?} */ provider = /** @type {?} */ ((nodeDef.provider));\n                var /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function calcHasOverrides(def) {\n        var /** @type {?} */ hasOverrides = false;\n        var /** @type {?} */ hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var /** @type {?} */ override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            var /** @type {?} */ provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = (/** @type {?} */ (checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = /** @type {?} */ ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (/** @type {?} */ e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ elDef = this.nodeDef;\n        var /** @type {?} */ elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n    }\n    Object.defineProperty(DebugRenderer2.prototype, \"data\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\nvar NgModuleFactory_ = (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        initServicesIfNeeded();\n        var /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @license Angular v5.0.0-rc.3-fc86352\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The kind of diagnostic message.\n *\n * @experimental\n */\nvar DiagnosticKind;\n(function (DiagnosticKind) {\n    DiagnosticKind[DiagnosticKind[\"Error\"] = 0] = \"Error\";\n    DiagnosticKind[DiagnosticKind[\"Warning\"] = 1] = \"Warning\";\n})(DiagnosticKind || (DiagnosticKind = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isParseSourceSpan(value) {\n    return value && !!value.start;\n}\nfunction spanOf(span) {\n    if (!span)\n        return undefined;\n    if (isParseSourceSpan(span)) {\n        return { start: span.start.offset, end: span.end.offset };\n    }\n    else {\n        if (span.endSourceSpan) {\n            return { start: span.sourceSpan.start.offset, end: span.endSourceSpan.end.offset };\n        }\n        else if (span.children && span.children.length) {\n            return {\n                start: span.sourceSpan.start.offset,\n                end: spanOf(span.children[span.children.length - 1]).end\n            };\n        }\n        return { start: span.sourceSpan.start.offset, end: span.sourceSpan.end.offset };\n    }\n}\nfunction inSpan(position, span, exclusive) {\n    return span != null && (exclusive ? position >= span.start && position < span.end :\n        position >= span.start && position <= span.end);\n}\nfunction offsetSpan(span, amount) {\n    return { start: span.start + amount, end: span.end + amount };\n}\nfunction isNarrower(spanA, spanB) {\n    return spanA.start >= spanB.start && spanA.end <= spanB.end;\n}\nfunction hasTemplateReference(type) {\n    if (type.diDeps) {\n        for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n            var diDep = _a[_i];\n            if (diDep.token && diDep.token.identifier &&\n                identifierName(diDep.token.identifier) == 'TemplateRef')\n                return true;\n        }\n    }\n    return false;\n}\nfunction getSelectors(info) {\n    var map = new Map();\n    var selectors = flatten(info.directives.map(function (directive) {\n        var selectors = CssSelector.parse(directive.selector);\n        selectors.forEach(function (selector) { return map.set(selector, directive); });\n        return selectors;\n    }));\n    return { selectors: selectors, map: map };\n}\nfunction flatten(a) {\n    return (_a = []).concat.apply(_a, a);\n    var _a;\n}\nfunction removeSuffix(value, suffix) {\n    if (value.endsWith(suffix))\n        return value.substring(0, value.length - suffix.length);\n    return value;\n}\nfunction uniqueByName(elements) {\n    if (elements) {\n        var result = [];\n        var set = new Set();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            if (!set.has(element.name)) {\n                set.add(element.name);\n                result.push(element);\n            }\n        }\n        return result;\n    }\n}\n\nfunction diagnosticInfoFromTemplateInfo(info) {\n    return {\n        fileName: info.fileName,\n        offset: info.template.span.start,\n        query: info.template.query,\n        members: info.template.members,\n        htmlAst: info.htmlAst,\n        templateAst: info.templateAst\n    };\n}\nfunction findTemplateAstAt(ast, position, allowWidening) {\n    if (allowWidening === void 0) { allowWidening = false; }\n    var path$$1 = [];\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visit = function (ast, context) {\n            var span = spanOf(ast);\n            if (inSpan(position, span)) {\n                var len = path$$1.length;\n                if (!len || allowWidening || isNarrower(span, spanOf(path$$1[len - 1]))) {\n                    path$$1.push(ast);\n                }\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        class_1.prototype.visitEmbeddedTemplate = function (ast, context) {\n            return this.visitChildren(context, function (visit) {\n                // Ignore reference, variable and providers\n                visit(ast.attrs);\n                visit(ast.directives);\n                visit(ast.children);\n            });\n        };\n        class_1.prototype.visitElement = function (ast, context) {\n            return this.visitChildren(context, function (visit) {\n                // Ingnore providers\n                visit(ast.attrs);\n                visit(ast.inputs);\n                visit(ast.outputs);\n                visit(ast.references);\n                visit(ast.directives);\n                visit(ast.children);\n            });\n        };\n        class_1.prototype.visitDirective = function (ast, context) {\n            // Ignore the host properties of a directive\n            var result = this.visitChildren(context, function (visit) { visit(ast.inputs); });\n            // We never care about the diretive itself, just its inputs.\n            if (path$$1[path$$1.length - 1] == ast) {\n                path$$1.pop();\n            }\n            return result;\n        };\n        return class_1;\n    }(RecursiveTemplateAstVisitor));\n    templateVisitAll(visitor, ast);\n    return new AstPath(path$$1, position);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findAstAt(ast, position, excludeEmpty) {\n    if (excludeEmpty === void 0) { excludeEmpty = false; }\n    var path$$1 = [];\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visit = function (ast) {\n            if ((!excludeEmpty || ast.span.start < ast.span.end) && inSpan(position, ast.span)) {\n                path$$1.push(ast);\n                visitAstChildren(ast, this);\n            }\n        };\n        return class_1;\n    }(NullAstVisitor));\n    // We never care about the ASTWithSource node and its visit() method calls its ast's visit so\n    // the visit() method above would never see it.\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    visitor.visit(ast);\n    return new AstPath(path$$1, position);\n}\nfunction getExpressionCompletions(scope, ast, position, query) {\n    var path$$1 = findAstAt(ast, position);\n    if (path$$1.empty)\n        return undefined;\n    var tail = path$$1.tail;\n    var result = scope;\n    function getType(ast) { return new language_services_7(scope, query, {}).getType(ast); }\n    // If the completion request is in a not in a pipe or property access then the global scope\n    // (that is the scope of the implicit receiver) is the right scope as the user is typing the\n    // beginning of an expression.\n    tail.visit({\n        visitBinary: function (ast) { },\n        visitChain: function (ast) { },\n        visitConditional: function (ast) { },\n        visitFunctionCall: function (ast) { },\n        visitImplicitReceiver: function (ast) { },\n        visitInterpolation: function (ast) { result = undefined; },\n        visitKeyedRead: function (ast) { },\n        visitKeyedWrite: function (ast) { },\n        visitLiteralArray: function (ast) { },\n        visitLiteralMap: function (ast) { },\n        visitLiteralPrimitive: function (ast) { },\n        visitMethodCall: function (ast) { },\n        visitPipe: function (ast) {\n            if (position >= ast.exp.span.end &&\n                (!ast.args || !ast.args.length || position < ast.args[0].span.start)) {\n                // We are in a position a pipe name is expected.\n                result = query.getPipes();\n            }\n        },\n        visitPrefixNot: function (ast) { },\n        visitNonNullAssert: function (ast) { },\n        visitPropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitPropertyWrite: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitQuote: function (ast) {\n            // For a quote, return the members of any (if there are any).\n            result = query.getBuiltinType(language_services_10.Any).members();\n        },\n        visitSafeMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitSafePropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n    });\n    return result && result.values();\n}\nfunction getExpressionSymbol(scope, ast, position, query) {\n    var path$$1 = findAstAt(ast, position, /* excludeEmpty */ true);\n    if (path$$1.empty)\n        return undefined;\n    var tail = path$$1.tail;\n    function getType(ast) { return new language_services_7(scope, query, {}).getType(ast); }\n    var symbol = undefined;\n    var span = undefined;\n    // If the completion request is in a not in a pipe or property access then the global scope\n    // (that is the scope of the implicit receiver) is the right scope as the user is typing the\n    // beginning of an expression.\n    tail.visit({\n        visitBinary: function (ast) { },\n        visitChain: function (ast) { },\n        visitConditional: function (ast) { },\n        visitFunctionCall: function (ast) { },\n        visitImplicitReceiver: function (ast) { },\n        visitInterpolation: function (ast) { },\n        visitKeyedRead: function (ast) { },\n        visitKeyedWrite: function (ast) { },\n        visitLiteralArray: function (ast) { },\n        visitLiteralMap: function (ast) { },\n        visitLiteralPrimitive: function (ast) { },\n        visitMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitPipe: function (ast) {\n            if (position >= ast.exp.span.end &&\n                (!ast.args || !ast.args.length || position < ast.args[0].span.start)) {\n                // We are in a position a pipe name is expected.\n                var pipes = query.getPipes();\n                if (pipes) {\n                    symbol = pipes.get(ast.name);\n                    span = ast.span;\n                }\n            }\n        },\n        visitPrefixNot: function (ast) { },\n        visitNonNullAssert: function (ast) { },\n        visitPropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitPropertyWrite: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitQuote: function (ast) { },\n        visitSafeMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitSafePropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n    });\n    if (symbol && span) {\n        return { symbol: symbol, span: span };\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar values = [\n    'ID',\n    'CDATA',\n    'NAME',\n    ['ltr', 'rtl'],\n    ['rect', 'circle', 'poly', 'default'],\n    'NUMBER',\n    ['nohref'],\n    ['ismap'],\n    ['declare'],\n    ['DATA', 'REF', 'OBJECT'],\n    ['GET', 'POST'],\n    'IDREF',\n    ['TEXT', 'PASSWORD', 'CHECKBOX', 'RADIO', 'SUBMIT', 'RESET', 'FILE', 'HIDDEN', 'IMAGE', 'BUTTON'],\n    ['checked'],\n    ['disabled'],\n    ['readonly'],\n    ['multiple'],\n    ['selected'],\n    ['button', 'submit', 'reset'],\n    ['void', 'above', 'below', 'hsides', 'lhs', 'rhs', 'vsides', 'box', 'border'],\n    ['none', 'groups', 'rows', 'cols', 'all'],\n    ['left', 'center', 'right', 'justify', 'char'],\n    ['top', 'middle', 'bottom', 'baseline'],\n    'IDREFS',\n    ['row', 'col', 'rowgroup', 'colgroup'],\n    ['defer']\n];\nvar groups = [\n    { id: 0 },\n    {\n        onclick: 1,\n        ondblclick: 1,\n        onmousedown: 1,\n        onmouseup: 1,\n        onmouseover: 1,\n        onmousemove: 1,\n        onmouseout: 1,\n        onkeypress: 1,\n        onkeydown: 1,\n        onkeyup: 1\n    },\n    { lang: 2, dir: 3 },\n    { onload: 1, onunload: 1 },\n    { name: 1 },\n    { href: 1 },\n    { type: 1 },\n    { alt: 1 },\n    { tabindex: 5 },\n    { media: 1 },\n    { nohref: 6 },\n    { usemap: 1 },\n    { src: 1 },\n    { onfocus: 1, onblur: 1 },\n    { charset: 1 },\n    { declare: 8, classid: 1, codebase: 1, data: 1, codetype: 1, archive: 1, standby: 1 },\n    { title: 1 },\n    { value: 1 },\n    { cite: 1 },\n    { datetime: 1 },\n    { accept: 1 },\n    { shape: 4, coords: 1 },\n    { for: 11\n    },\n    { action: 1, method: 10, enctype: 1, onsubmit: 1, onreset: 1, 'accept-charset': 1 },\n    { valuetype: 9 },\n    { longdesc: 1 },\n    { width: 1 },\n    { disabled: 14 },\n    { readonly: 15, onselect: 1 },\n    { accesskey: 1 },\n    { size: 5, multiple: 16 },\n    { onchange: 1 },\n    { label: 1 },\n    { selected: 17 },\n    { type: 12, checked: 13, size: 1, maxlength: 5 },\n    { rows: 5, cols: 5 },\n    { type: 18 },\n    { height: 1 },\n    { summary: 1, border: 1, frame: 19, rules: 20, cellspacing: 1, cellpadding: 1, datapagesize: 1 },\n    { align: 21, char: 1, charoff: 1, valign: 22 },\n    { span: 5 },\n    { abbr: 1, axis: 1, headers: 23, scope: 24, rowspan: 5, colspan: 5 },\n    { profile: 1 },\n    { 'http-equiv': 2, name: 2, content: 1, scheme: 1 },\n    { class: 1, style: 1 },\n    { hreflang: 2, rel: 1, rev: 1 },\n    { ismap: 7 },\n    { defer: 25, event: 1, for: 1 }\n];\nvar elements = {\n    TT: [0, 1, 2, 16, 44],\n    I: [0, 1, 2, 16, 44],\n    B: [0, 1, 2, 16, 44],\n    BIG: [0, 1, 2, 16, 44],\n    SMALL: [0, 1, 2, 16, 44],\n    EM: [0, 1, 2, 16, 44],\n    STRONG: [0, 1, 2, 16, 44],\n    DFN: [0, 1, 2, 16, 44],\n    CODE: [0, 1, 2, 16, 44],\n    SAMP: [0, 1, 2, 16, 44],\n    KBD: [0, 1, 2, 16, 44],\n    VAR: [0, 1, 2, 16, 44],\n    CITE: [0, 1, 2, 16, 44],\n    ABBR: [0, 1, 2, 16, 44],\n    ACRONYM: [0, 1, 2, 16, 44],\n    SUB: [0, 1, 2, 16, 44],\n    SUP: [0, 1, 2, 16, 44],\n    SPAN: [0, 1, 2, 16, 44],\n    BDO: [0, 2, 16, 44],\n    BR: [0, 16, 44],\n    BODY: [0, 1, 2, 3, 16, 44],\n    ADDRESS: [0, 1, 2, 16, 44],\n    DIV: [0, 1, 2, 16, 44],\n    A: [0, 1, 2, 4, 5, 6, 8, 13, 14, 16, 21, 29, 44, 45],\n    MAP: [0, 1, 2, 4, 16, 44],\n    AREA: [0, 1, 2, 5, 7, 8, 10, 13, 16, 21, 29, 44],\n    LINK: [0, 1, 2, 5, 6, 9, 14, 16, 44, 45],\n    IMG: [0, 1, 2, 4, 7, 11, 12, 16, 25, 26, 37, 44, 46],\n    OBJECT: [0, 1, 2, 4, 6, 8, 11, 15, 16, 26, 37, 44],\n    PARAM: [0, 4, 6, 17, 24],\n    HR: [0, 1, 2, 16, 44],\n    P: [0, 1, 2, 16, 44],\n    H1: [0, 1, 2, 16, 44],\n    H2: [0, 1, 2, 16, 44],\n    H3: [0, 1, 2, 16, 44],\n    H4: [0, 1, 2, 16, 44],\n    H5: [0, 1, 2, 16, 44],\n    H6: [0, 1, 2, 16, 44],\n    PRE: [0, 1, 2, 16, 44],\n    Q: [0, 1, 2, 16, 18, 44],\n    BLOCKQUOTE: [0, 1, 2, 16, 18, 44],\n    INS: [0, 1, 2, 16, 18, 19, 44],\n    DEL: [0, 1, 2, 16, 18, 19, 44],\n    DL: [0, 1, 2, 16, 44],\n    DT: [0, 1, 2, 16, 44],\n    DD: [0, 1, 2, 16, 44],\n    OL: [0, 1, 2, 16, 44],\n    UL: [0, 1, 2, 16, 44],\n    LI: [0, 1, 2, 16, 44],\n    FORM: [0, 1, 2, 4, 16, 20, 23, 44],\n    LABEL: [0, 1, 2, 13, 16, 22, 29, 44],\n    INPUT: [0, 1, 2, 4, 7, 8, 11, 12, 13, 16, 17, 20, 27, 28, 29, 31, 34, 44, 46],\n    SELECT: [0, 1, 2, 4, 8, 13, 16, 27, 30, 31, 44],\n    OPTGROUP: [0, 1, 2, 16, 27, 32, 44],\n    OPTION: [0, 1, 2, 16, 17, 27, 32, 33, 44],\n    TEXTAREA: [0, 1, 2, 4, 8, 13, 16, 27, 28, 29, 31, 35, 44],\n    FIELDSET: [0, 1, 2, 16, 44],\n    LEGEND: [0, 1, 2, 16, 29, 44],\n    BUTTON: [0, 1, 2, 4, 8, 13, 16, 17, 27, 29, 36, 44],\n    TABLE: [0, 1, 2, 16, 26, 38, 44],\n    CAPTION: [0, 1, 2, 16, 44],\n    COLGROUP: [0, 1, 2, 16, 26, 39, 40, 44],\n    COL: [0, 1, 2, 16, 26, 39, 40, 44],\n    THEAD: [0, 1, 2, 16, 39, 44],\n    TBODY: [0, 1, 2, 16, 39, 44],\n    TFOOT: [0, 1, 2, 16, 39, 44],\n    TR: [0, 1, 2, 16, 39, 44],\n    TH: [0, 1, 2, 16, 39, 41, 44],\n    TD: [0, 1, 2, 16, 39, 41, 44],\n    HEAD: [2, 42],\n    TITLE: [2],\n    BASE: [5],\n    META: [2, 43],\n    STYLE: [2, 6, 9, 16],\n    SCRIPT: [6, 12, 14, 47],\n    NOSCRIPT: [0, 1, 2, 16, 44],\n    HTML: [2]\n};\nvar defaultAttributes = [0, 1, 2, 4];\nfunction elementNames() {\n    return Object.keys(elements).sort().map(function (v) { return v.toLowerCase(); });\n}\nfunction compose(indexes) {\n    var result = {};\n    if (indexes) {\n        for (var _i = 0, indexes_1 = indexes; _i < indexes_1.length; _i++) {\n            var index = indexes_1[_i];\n            var group = groups[index];\n            for (var name_1 in group)\n                if (group.hasOwnProperty(name_1))\n                    result[name_1] = values[group[name_1]];\n        }\n    }\n    return result;\n}\nfunction attributeNames(element) {\n    return Object.keys(compose(elements[element.toUpperCase()] || defaultAttributes)).sort();\n}\n\n// This section is describes the DOM property surface of a DOM element and is derivgulp formated\n// from\n// from the SCHEMA strings from the security context information. SCHEMA is copied here because\n// it would be an unnecessary risk to allow this array to be imported from the security context\n// schema registry.\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        /* added manually to avoid breaking changes */\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar EVENT = 'event';\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\nvar SchemaInformation = (function () {\n    function SchemaInformation() {\n        var _this = this;\n        this.schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var parts = encodedType.split('|');\n            var properties = parts[1].split(',');\n            var typeParts = (parts[0] + '^').split('^');\n            var typeName = typeParts[0];\n            var type = {};\n            typeName.split(',').forEach(function (tag) { return _this.schema[tag.toLowerCase()] = type; });\n            var superName = typeParts[1];\n            var superType = superName && _this.schema[superName.toLowerCase()];\n            if (superType) {\n                for (var key in superType) {\n                    type[key] = superType[key];\n                }\n            }\n            properties.forEach(function (property) {\n                if (property == '') {\n                }\n                else if (property.startsWith('*')) {\n                    type[property.substring(1)] = EVENT;\n                }\n                else if (property.startsWith('!')) {\n                    type[property.substring(1)] = BOOLEAN;\n                }\n                else if (property.startsWith('#')) {\n                    type[property.substring(1)] = NUMBER;\n                }\n                else if (property.startsWith('%')) {\n                    type[property.substring(1)] = OBJECT;\n                }\n                else {\n                    type[property] = STRING;\n                }\n            });\n        });\n    }\n    SchemaInformation.prototype.allKnownElements = function () { return Object.keys(this.schema); };\n    SchemaInformation.prototype.eventsOf = function (elementName) {\n        var elementType = this.schema[elementName.toLowerCase()] || {};\n        return Object.keys(elementType).filter(function (property) { return elementType[property] === EVENT; });\n    };\n    SchemaInformation.prototype.propertiesOf = function (elementName) {\n        var elementType = this.schema[elementName.toLowerCase()] || {};\n        return Object.keys(elementType).filter(function (property) { return elementType[property] !== EVENT; });\n    };\n    SchemaInformation.prototype.typeOf = function (elementName, property) {\n        return (this.schema[elementName.toLowerCase()] || {})[property];\n    };\n    Object.defineProperty(SchemaInformation, \"instance\", {\n        get: function () {\n            var result = SchemaInformation._instance;\n            if (!result) {\n                result = SchemaInformation._instance = new SchemaInformation();\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SchemaInformation;\n}());\nfunction eventNames(elementName) {\n    return SchemaInformation.instance.eventsOf(elementName);\n}\nfunction propertyNames(elementName) {\n    return SchemaInformation.instance.propertiesOf(elementName);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar hiddenHtmlElements = {\n    html: true,\n    script: true,\n    noscript: true,\n    base: true,\n    body: true,\n    title: true,\n    head: true,\n    link: true,\n};\nfunction getTemplateCompletions(templateInfo) {\n    var result = undefined;\n    var htmlAst = templateInfo.htmlAst, templateAst = templateInfo.templateAst, template = templateInfo.template;\n    // The templateNode starts at the delimiter character so we add 1 to skip it.\n    if (templateInfo.position != null) {\n        var templatePosition_1 = templateInfo.position - template.span.start;\n        var path_1 = findNode(htmlAst, templatePosition_1);\n        var mostSpecific = path_1.tail;\n        if (path_1.empty || !mostSpecific) {\n            result = elementCompletions(templateInfo, path_1);\n        }\n        else {\n            var astPosition_1 = templatePosition_1 - mostSpecific.sourceSpan.start.offset;\n            mostSpecific.visit({\n                visitElement: function (ast) {\n                    var startTagSpan = spanOf(ast.sourceSpan);\n                    var tagLen = ast.name.length;\n                    if (templatePosition_1 <=\n                        startTagSpan.start + tagLen + 1 /* 1 for the opening angle bracked */) {\n                        // If we are in the tag then return the element completions.\n                        result = elementCompletions(templateInfo, path_1);\n                    }\n                    else if (templatePosition_1 < startTagSpan.end) {\n                        // We are in the attribute section of the element (but not in an attribute).\n                        // Return the attribute completions.\n                        result = attributeCompletions(templateInfo, path_1);\n                    }\n                },\n                visitAttribute: function (ast) {\n                    if (!ast.valueSpan || !inSpan(templatePosition_1, spanOf(ast.valueSpan))) {\n                        // We are in the name of an attribute. Show attribute completions.\n                        result = attributeCompletions(templateInfo, path_1);\n                    }\n                    else if (ast.valueSpan && inSpan(templatePosition_1, spanOf(ast.valueSpan))) {\n                        result = attributeValueCompletions(templateInfo, templatePosition_1, ast);\n                    }\n                },\n                visitText: function (ast) {\n                    // Check if we are in a entity.\n                    result = entityCompletions(getSourceText(template, spanOf(ast)), astPosition_1);\n                    if (result)\n                        return result;\n                    result = interpolationCompletions(templateInfo, templatePosition_1);\n                    if (result)\n                        return result;\n                    var element = path_1.first(Element);\n                    if (element) {\n                        var definition = getHtmlTagDefinition(element.name);\n                        if (definition.contentType === TagContentType.PARSABLE_DATA) {\n                            result = voidElementAttributeCompletions(templateInfo, path_1);\n                            if (!result) {\n                                // If the element can hold content Show element completions.\n                                result = elementCompletions(templateInfo, path_1);\n                            }\n                        }\n                    }\n                    else {\n                        // If no element container, implies parsable data so show elements.\n                        result = voidElementAttributeCompletions(templateInfo, path_1);\n                        if (!result) {\n                            result = elementCompletions(templateInfo, path_1);\n                        }\n                    }\n                },\n                visitComment: function (ast) { },\n                visitExpansion: function (ast) { },\n                visitExpansionCase: function (ast) { }\n            }, null);\n        }\n    }\n    return result;\n}\nfunction attributeCompletions(info, path$$1) {\n    var item = path$$1.tail instanceof Element ? path$$1.tail : path$$1.parentOf(path$$1.tail);\n    if (item instanceof Element) {\n        return attributeCompletionsForElement(info, item.name, item);\n    }\n    return undefined;\n}\nfunction attributeCompletionsForElement(info, elementName, element) {\n    var attributes = getAttributeInfosForElement(info, elementName, element);\n    // Map all the attributes to a completion\n    return attributes.map(function (attr) { return ({\n        kind: attr.fromHtml ? 'html attribute' : 'attribute',\n        name: nameOfAttr(attr),\n        sort: attr.name\n    }); });\n}\nfunction getAttributeInfosForElement(info, elementName, element) {\n    var attributes = [];\n    // Add html attributes\n    var htmlAttributes = attributeNames(elementName) || [];\n    if (htmlAttributes) {\n        attributes.push.apply(attributes, htmlAttributes.map(function (name) { return ({ name: name, fromHtml: true }); }));\n    }\n    // Add html properties\n    var htmlProperties = propertyNames(elementName);\n    if (htmlProperties) {\n        attributes.push.apply(attributes, htmlProperties.map(function (name) { return ({ name: name, input: true }); }));\n    }\n    // Add html events\n    var htmlEvents = eventNames(elementName);\n    if (htmlEvents) {\n        attributes.push.apply(attributes, htmlEvents.map(function (name) { return ({ name: name, output: true }); }));\n    }\n    var _a = getSelectors(info), selectors = _a.selectors, selectorMap = _a.map;\n    if (selectors && selectors.length) {\n        // All the attributes that are selectable should be shown.\n        var applicableSelectors = selectors.filter(function (selector) { return !selector.element || selector.element == elementName; });\n        var selectorAndAttributeNames = applicableSelectors.map(function (selector) { return ({ selector: selector, attrs: selector.attrs.filter(function (a) { return !!a; }) }); });\n        var attrs_1 = flatten(selectorAndAttributeNames.map(function (selectorAndAttr) {\n            var directive = selectorMap.get(selectorAndAttr.selector);\n            var result = selectorAndAttr.attrs.map(function (name) { return ({ name: name, input: name in directive.inputs, output: name in directive.outputs }); });\n            return result;\n        }));\n        // Add template attribute if a directive contains a template reference\n        selectorAndAttributeNames.forEach(function (selectorAndAttr) {\n            var selector = selectorAndAttr.selector;\n            var directive = selectorMap.get(selector);\n            if (directive && hasTemplateReference(directive.type) && selector.attrs.length &&\n                selector.attrs[0]) {\n                attrs_1.push({ name: selector.attrs[0], template: true });\n            }\n        });\n        // All input and output properties of the matching directives should be added.\n        var elementSelector = element ?\n            createElementCssSelector(element) :\n            createElementCssSelector(new Element(elementName, [], [], null, null, null));\n        var matcher = new SelectorMatcher();\n        matcher.addSelectables(selectors);\n        matcher.match(elementSelector, function (selector) {\n            var directive = selectorMap.get(selector);\n            if (directive) {\n                attrs_1.push.apply(attrs_1, Object.keys(directive.inputs).map(function (name) { return ({ name: name, input: true }); }));\n                attrs_1.push.apply(attrs_1, Object.keys(directive.outputs).map(function (name) { return ({ name: name, output: true }); }));\n            }\n        });\n        // If a name shows up twice, fold it into a single value.\n        attrs_1 = foldAttrs(attrs_1);\n        // Now expand them back out to ensure that input/output shows up as well as input and\n        // output.\n        attributes.push.apply(attributes, flatten(attrs_1.map(expandedAttr)));\n    }\n    return attributes;\n}\nfunction attributeValueCompletions(info, position, attr) {\n    var path$$1 = findTemplateAstAt(info.templateAst, position);\n    var mostSpecific = path$$1.tail;\n    var dinfo = diagnosticInfoFromTemplateInfo(info);\n    if (mostSpecific) {\n        var visitor = new ExpressionVisitor(info, position, attr, function () { return language_services_5(dinfo, path$$1, false); });\n        mostSpecific.visit(visitor, null);\n        if (!visitor.result || !visitor.result.length) {\n            // Try allwoing widening the path\n            var widerPath_1 = findTemplateAstAt(info.templateAst, position, /* allowWidening */ true);\n            if (widerPath_1.tail) {\n                var widerVisitor = new ExpressionVisitor(info, position, attr, function () { return language_services_5(dinfo, widerPath_1, false); });\n                widerPath_1.tail.visit(widerVisitor, null);\n                return widerVisitor.result;\n            }\n        }\n        return visitor.result;\n    }\n}\nfunction elementCompletions(info, path$$1) {\n    var htmlNames = elementNames().filter(function (name) { return !(name in hiddenHtmlElements); });\n    // Collect the elements referenced by the selectors\n    var directiveElements = getSelectors(info)\n        .selectors.map(function (selector) { return selector.element; })\n        .filter(function (name) { return !!name; });\n    var components = directiveElements.map(function (name) { return ({ kind: 'component', name: name, sort: name }); });\n    var htmlElements = htmlNames.map(function (name) { return ({ kind: 'element', name: name, sort: name }); });\n    // Return components and html elements\n    return uniqueByName(htmlElements.concat(components));\n}\nfunction entityCompletions(value, position) {\n    // Look for entity completions\n    var re = /&[A-Za-z]*;?(?!\\d)/g;\n    var found;\n    var result = undefined;\n    while (found = re.exec(value)) {\n        var len = found[0].length;\n        if (position >= found.index && position < (found.index + len)) {\n            result = Object.keys(NAMED_ENTITIES)\n                .map(function (name) { return ({ kind: 'entity', name: \"&\" + name + \";\", sort: name }); });\n            break;\n        }\n    }\n    return result;\n}\nfunction interpolationCompletions(info, position) {\n    // Look for an interpolation in at the position.\n    var templatePath = findTemplateAstAt(info.templateAst, position);\n    var mostSpecific = templatePath.tail;\n    if (mostSpecific) {\n        var visitor = new ExpressionVisitor(info, position, undefined, function () { return language_services_5(diagnosticInfoFromTemplateInfo(info), templatePath, false); });\n        mostSpecific.visit(visitor, null);\n        return uniqueByName(visitor.result);\n    }\n}\n// There is a special case of HTML where text that contains a unclosed tag is treated as\n// text. For exaple '<h1> Some <a text </h1>' produces a text nodes inside of the H1\n// element \"Some <a text\". We, however, want to treat this as if the user was requesting\n// the attributes of an \"a\" element, not requesting completion in the a text element. This\n// code checks for this case and returns element completions if it is detected or undefined\n// if it is not.\nfunction voidElementAttributeCompletions(info, path$$1) {\n    var tail = path$$1.tail;\n    if (tail instanceof Text) {\n        var match = tail.value.match(/<(\\w(\\w|\\d|-)*:)?(\\w(\\w|\\d|-)*)\\s/);\n        // The position must be after the match, otherwise we are still in a place where elements\n        // are expected (such as `<|a` or `<a|`; we only want attributes for `<a |` or after).\n        if (match &&\n            path$$1.position >= (match.index || 0) + match[0].length + tail.sourceSpan.start.offset) {\n            return attributeCompletionsForElement(info, match[3]);\n        }\n    }\n}\nvar ExpressionVisitor = (function (_super) {\n    __extends(ExpressionVisitor, _super);\n    function ExpressionVisitor(info, position, attr, getExpressionScope$$1) {\n        var _this = _super.call(this) || this;\n        _this.info = info;\n        _this.position = position;\n        _this.attr = attr;\n        _this.getExpressionScope = getExpressionScope$$1 || (function () { return info.template.members; });\n        return _this;\n    }\n    ExpressionVisitor.prototype.visitDirectiveProperty = function (ast) {\n        this.attributeValueCompletions(ast.value);\n    };\n    ExpressionVisitor.prototype.visitElementProperty = function (ast) {\n        this.attributeValueCompletions(ast.value);\n    };\n    ExpressionVisitor.prototype.visitEvent = function (ast) { this.attributeValueCompletions(ast.handler); };\n    ExpressionVisitor.prototype.visitElement = function (ast) {\n        var _this = this;\n        if (this.attr && getSelectors(this.info) && this.attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\n            // The value is a template expression but the expression AST was not produced when the\n            // TemplateAst was produce so\n            // do that now.\n            var key_1 = this.attr.name.substr(TEMPLATE_ATTR_PREFIX.length);\n            // Find the selector\n            var selectorInfo = getSelectors(this.info);\n            var selectors = selectorInfo.selectors;\n            var selector_1 = selectors.filter(function (s) { return s.attrs.some(function (attr, i) { return i % 2 == 0 && attr == key_1; }); })[0];\n            var templateBindingResult = this.info.expressionParser.parseTemplateBindings(key_1, this.attr.value, null);\n            // find the template binding that contains the position\n            if (!this.attr.valueSpan)\n                return;\n            var valueRelativePosition_1 = this.position - this.attr.valueSpan.start.offset - 1;\n            var bindings = templateBindingResult.templateBindings;\n            var binding = bindings.find(function (binding) { return inSpan(valueRelativePosition_1, binding.span, /* exclusive */ true); }) ||\n                bindings.find(function (binding) { return inSpan(valueRelativePosition_1, binding.span); });\n            var keyCompletions = function () {\n                var keys = [];\n                if (selector_1) {\n                    var attrNames = selector_1.attrs.filter(function (_, i) { return i % 2 == 0; });\n                    keys = attrNames.filter(function (name) { return name.startsWith(key_1) && name != key_1; })\n                        .map(function (name) { return lowerName(name.substr(key_1.length)); });\n                }\n                keys.push('let');\n                _this.result = keys.map(function (key) { return ({ kind: 'key', name: key, sort: key }); });\n            };\n            if (!binding || (binding.key == key_1 && !binding.expression)) {\n                // We are in the root binding. We should return `let` and keys that are left in the\n                // selector.\n                keyCompletions();\n            }\n            else if (binding.keyIsVar) {\n                var equalLocation = this.attr.value.indexOf('=');\n                this.result = [];\n                if (equalLocation >= 0 && valueRelativePosition_1 >= equalLocation) {\n                    // We are after the '=' in a let clause. The valid values here are the members of the\n                    // template reference's type parameter.\n                    var directiveMetadata = selectorInfo.map.get(selector_1);\n                    if (directiveMetadata) {\n                        var contextTable = this.info.template.query.getTemplateContext(directiveMetadata.type.reference);\n                        if (contextTable) {\n                            this.result = this.symbolsToCompletions(contextTable.values());\n                        }\n                    }\n                }\n                else if (binding.key && valueRelativePosition_1 <= (binding.key.length - key_1.length)) {\n                    keyCompletions();\n                }\n            }\n            else {\n                // If the position is in the expression or after the key or there is no key, return the\n                // expression completions\n                if ((binding.expression && inSpan(valueRelativePosition_1, binding.expression.ast.span)) ||\n                    (binding.key &&\n                        valueRelativePosition_1 > binding.span.start + (binding.key.length - key_1.length)) ||\n                    !binding.key) {\n                    var span = new ParseSpan(0, this.attr.value.length);\n                    this.attributeValueCompletions(binding.expression ? binding.expression.ast :\n                        new PropertyRead(span, new ImplicitReceiver(span), ''), valueRelativePosition_1);\n                }\n                else {\n                    keyCompletions();\n                }\n            }\n        }\n    };\n    ExpressionVisitor.prototype.visitBoundText = function (ast) {\n        var expressionPosition = this.position - ast.sourceSpan.start.offset;\n        if (inSpan(expressionPosition, ast.value.span)) {\n            var completions = getExpressionCompletions(this.getExpressionScope(), ast.value, expressionPosition, this.info.template.query);\n            if (completions) {\n                this.result = this.symbolsToCompletions(completions);\n            }\n        }\n    };\n    ExpressionVisitor.prototype.attributeValueCompletions = function (value, position) {\n        var symbols = getExpressionCompletions(this.getExpressionScope(), value, position == null ? this.attributeValuePosition : position, this.info.template.query);\n        if (symbols) {\n            this.result = this.symbolsToCompletions(symbols);\n        }\n    };\n    ExpressionVisitor.prototype.symbolsToCompletions = function (symbols) {\n        return symbols.filter(function (s) { return !s.name.startsWith('__') && s.public; })\n            .map(function (symbol) { return ({ kind: symbol.kind, name: symbol.name, sort: symbol.name }); });\n    };\n    Object.defineProperty(ExpressionVisitor.prototype, \"attributeValuePosition\", {\n        get: function () {\n            if (this.attr && this.attr.valueSpan) {\n                return this.position - this.attr.valueSpan.start.offset - 1;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ExpressionVisitor;\n}(NullTemplateVisitor));\nfunction getSourceText(template, span) {\n    return template.source.substring(span.start, span.end);\n}\nfunction nameOfAttr(attr) {\n    var name = attr.name;\n    if (attr.output) {\n        name = removeSuffix(name, 'Events');\n        name = removeSuffix(name, 'Changed');\n    }\n    var result = [name];\n    if (attr.input) {\n        result.unshift('[');\n        result.push(']');\n    }\n    if (attr.output) {\n        result.unshift('(');\n        result.push(')');\n    }\n    if (attr.template) {\n        result.unshift('*');\n    }\n    return result.join('');\n}\nvar templateAttr = /^(\\w+:)?(template$|^\\*)/;\nfunction createElementCssSelector(element) {\n    var cssSelector = new CssSelector();\n    var elNameNoNs = splitNsName(element.name)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var _i = 0, _a = element.attrs; _i < _a.length; _i++) {\n        var attr = _a[_i];\n        if (!attr.name.match(templateAttr)) {\n            var _b = splitNsName(attr.name), _ = _b[0], attrNameNoNs = _b[1];\n            cssSelector.addAttribute(attrNameNoNs, attr.value);\n            if (attr.name.toLowerCase() == 'class') {\n                var classes = attr.value.split(/s+/g);\n                classes.forEach(function (className) { return cssSelector.addClassName(className); });\n            }\n        }\n    }\n    return cssSelector;\n}\nfunction foldAttrs(attrs) {\n    var inputOutput = new Map();\n    var templates = new Map();\n    var result = [];\n    attrs.forEach(function (attr) {\n        if (attr.fromHtml) {\n            return attr;\n        }\n        if (attr.template) {\n            var duplicate = templates.get(attr.name);\n            if (!duplicate) {\n                result.push({ name: attr.name, template: true });\n                templates.set(attr.name, attr);\n            }\n        }\n        if (attr.input || attr.output) {\n            var duplicate = inputOutput.get(attr.name);\n            if (duplicate) {\n                duplicate.input = duplicate.input || attr.input;\n                duplicate.output = duplicate.output || attr.output;\n            }\n            else {\n                var cloneAttr = { name: attr.name };\n                if (attr.input)\n                    cloneAttr.input = true;\n                if (attr.output)\n                    cloneAttr.output = true;\n                result.push(cloneAttr);\n                inputOutput.set(attr.name, cloneAttr);\n            }\n        }\n    });\n    return result;\n}\nfunction expandedAttr(attr) {\n    if (attr.input && attr.output) {\n        return [\n            attr, { name: attr.name, input: true, output: false },\n            { name: attr.name, input: false, output: true }\n        ];\n    }\n    return [attr];\n}\nfunction lowerName(name) {\n    return name && (name[0].toLowerCase() + name.substr(1));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction locateSymbol(info) {\n    if (!info.position)\n        return undefined;\n    var templatePosition = info.position - info.template.span.start;\n    var path$$1 = findTemplateAstAt(info.templateAst, templatePosition);\n    if (path$$1.tail) {\n        var symbol_1 = undefined;\n        var span_1 = undefined;\n        var attributeValueSymbol_1 = function (ast, inEvent) {\n            if (inEvent === void 0) { inEvent = false; }\n            var attribute = findAttribute(info);\n            if (attribute) {\n                if (inSpan(templatePosition, spanOf(attribute.valueSpan))) {\n                    var dinfo = diagnosticInfoFromTemplateInfo(info);\n                    var scope = language_services_5(dinfo, path$$1, inEvent);\n                    if (attribute.valueSpan) {\n                        var expressionOffset = attribute.valueSpan.start.offset + 1;\n                        var result = getExpressionSymbol(scope, ast, templatePosition - expressionOffset, info.template.query);\n                        if (result) {\n                            symbol_1 = result.symbol;\n                            span_1 = offsetSpan(result.span, expressionOffset);\n                        }\n                    }\n                    return true;\n                }\n            }\n            return false;\n        };\n        path$$1.tail.visit({\n            visitNgContent: function (ast) { },\n            visitEmbeddedTemplate: function (ast) { },\n            visitElement: function (ast) {\n                var component = ast.directives.find(function (d) { return d.directive.isComponent; });\n                if (component) {\n                    symbol_1 = info.template.query.getTypeSymbol(component.directive.type.reference);\n                    symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'component');\n                    span_1 = spanOf(ast);\n                }\n                else {\n                    // Find a directive that matches the element name\n                    var directive = ast.directives.find(function (d) { return d.directive.selector != null && d.directive.selector.indexOf(ast.name) >= 0; });\n                    if (directive) {\n                        symbol_1 = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                        symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'directive');\n                        span_1 = spanOf(ast);\n                    }\n                }\n            },\n            visitReference: function (ast) {\n                symbol_1 = ast.value && info.template.query.getTypeSymbol(tokenReference(ast.value));\n                span_1 = spanOf(ast);\n            },\n            visitVariable: function (ast) { },\n            visitEvent: function (ast) {\n                if (!attributeValueSymbol_1(ast.handler, /* inEvent */ true)) {\n                    symbol_1 = findOutputBinding(info, path$$1, ast);\n                    symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'event');\n                    span_1 = spanOf(ast);\n                }\n            },\n            visitElementProperty: function (ast) { attributeValueSymbol_1(ast.value); },\n            visitAttr: function (ast) { },\n            visitBoundText: function (ast) {\n                var expressionPosition = templatePosition - ast.sourceSpan.start.offset;\n                if (inSpan(expressionPosition, ast.value.span)) {\n                    var dinfo = diagnosticInfoFromTemplateInfo(info);\n                    var scope = language_services_5(dinfo, path$$1, /* includeEvent */ false);\n                    var result = getExpressionSymbol(scope, ast.value, expressionPosition, info.template.query);\n                    if (result) {\n                        symbol_1 = result.symbol;\n                        span_1 = offsetSpan(result.span, ast.sourceSpan.start.offset);\n                    }\n                }\n            },\n            visitText: function (ast) { },\n            visitDirective: function (ast) {\n                symbol_1 = info.template.query.getTypeSymbol(ast.directive.type.reference);\n                span_1 = spanOf(ast);\n            },\n            visitDirectiveProperty: function (ast) {\n                if (!attributeValueSymbol_1(ast.value)) {\n                    symbol_1 = findInputBinding(info, path$$1, ast);\n                    span_1 = spanOf(ast);\n                }\n            }\n        }, null);\n        if (symbol_1 && span_1) {\n            return { symbol: symbol_1, span: offsetSpan(span_1, info.template.span.start) };\n        }\n    }\n}\nfunction findAttribute(info) {\n    if (info.position) {\n        var templatePosition = info.position - info.template.span.start;\n        var path$$1 = findNode(info.htmlAst, templatePosition);\n        return path$$1.first(Attribute$1);\n    }\n}\nfunction findInputBinding(info, path$$1, binding) {\n    var element = path$$1.first(ElementAst);\n    if (element) {\n        for (var _i = 0, _a = element.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            var invertedInput = invertMap(directive.directive.inputs);\n            var fieldName = invertedInput[binding.templateName];\n            if (fieldName) {\n                var classSymbol = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                if (classSymbol) {\n                    return classSymbol.members().get(fieldName);\n                }\n            }\n        }\n    }\n}\nfunction findOutputBinding(info, path$$1, binding) {\n    var element = path$$1.first(ElementAst);\n    if (element) {\n        for (var _i = 0, _a = element.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            var invertedOutputs = invertMap(directive.directive.outputs);\n            var fieldName = invertedOutputs[binding.name];\n            if (fieldName) {\n                var classSymbol = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                if (classSymbol) {\n                    return classSymbol.members().get(fieldName);\n                }\n            }\n        }\n    }\n}\nfunction invertMap(obj) {\n    var result = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var name_1 = _a[_i];\n        var v = obj[name_1];\n        result[v] = name_1;\n    }\n    return result;\n}\n/**\n * Wrap a symbol and change its kind to component.\n */\nvar OverrideKindSymbol = (function () {\n    function OverrideKindSymbol(sym, kindOverride) {\n        this.sym = sym;\n        this.kind = kindOverride;\n    }\n    Object.defineProperty(OverrideKindSymbol.prototype, \"name\", {\n        get: function () { return this.sym.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"language\", {\n        get: function () { return this.sym.language; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"type\", {\n        get: function () { return this.sym.type; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"container\", {\n        get: function () { return this.sym.container; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"public\", {\n        get: function () { return this.sym.public; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"callable\", {\n        get: function () { return this.sym.callable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"nullable\", {\n        get: function () { return this.sym.nullable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"definition\", {\n        get: function () { return this.sym.definition; },\n        enumerable: true,\n        configurable: true\n    });\n    OverrideKindSymbol.prototype.members = function () { return this.sym.members(); };\n    OverrideKindSymbol.prototype.signatures = function () { return this.sym.signatures(); };\n    OverrideKindSymbol.prototype.selectSignature = function (types) { return this.sym.selectSignature(types); };\n    OverrideKindSymbol.prototype.indexed = function (argument) { return this.sym.indexed(argument); };\n    return OverrideKindSymbol;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getDefinition(info) {\n    var result = locateSymbol(info);\n    return result && result.symbol.definition;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getTemplateDiagnostics(fileName, astProvider, templates) {\n    var results = [];\n    var _loop_1 = function (template) {\n        var ast = astProvider.getTemplateAst(template, fileName);\n        if (ast) {\n            if (ast.parseErrors && ast.parseErrors.length) {\n                results.push.apply(results, ast.parseErrors.map(function (e) { return ({\n                    kind: DiagnosticKind.Error,\n                    span: offsetSpan(spanOf(e.span), template.span.start),\n                    message: e.msg\n                }); }));\n            }\n            else if (ast.templateAst && ast.htmlAst) {\n                var info = {\n                    templateAst: ast.templateAst,\n                    htmlAst: ast.htmlAst,\n                    offset: template.span.start,\n                    query: template.query,\n                    members: template.members\n                };\n                var expressionDiagnostics = language_services_6(info);\n                results.push.apply(results, expressionDiagnostics);\n            }\n            if (ast.errors) {\n                results.push.apply(results, ast.errors.map(function (e) { return ({ kind: e.kind, span: e.span || template.span, message: e.message }); }));\n            }\n        }\n    };\n    for (var _i = 0, templates_1 = templates; _i < templates_1.length; _i++) {\n        var template = templates_1[_i];\n        _loop_1(template);\n    }\n    return results;\n}\nfunction getDeclarationDiagnostics(declarations, modules) {\n    var results = [];\n    var directives = undefined;\n    var _loop_2 = function (declaration) {\n        var report = function (message, span) {\n            results.push({\n                kind: DiagnosticKind.Error,\n                span: span || declaration.declarationSpan, message: message\n            });\n        };\n        for (var _i = 0, _a = declaration.errors; _i < _a.length; _i++) {\n            var error = _a[_i];\n            report(error.message, error.span);\n        }\n        if (declaration.metadata) {\n            if (declaration.metadata.isComponent) {\n                if (!modules.ngModuleByPipeOrDirective.has(declaration.type)) {\n                    report(\"Component '\" + declaration.type.name + \"' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration\");\n                }\n                if (!declaration.metadata.template.template &&\n                    !declaration.metadata.template.templateUrl) {\n                    report(\"Component \" + declaration.type.name + \" must have a template or templateUrl\");\n                }\n            }\n            else {\n                if (!directives) {\n                    directives = new Set();\n                    modules.ngModules.forEach(function (module) {\n                        module.declaredDirectives.forEach(function (directive) { directives.add(directive.reference); });\n                    });\n                }\n                if (!directives.has(declaration.type)) {\n                    report(\"Directive '\" + declaration.type.name + \"' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration\");\n                }\n            }\n        }\n    };\n    for (var _i = 0, declarations_1 = declarations; _i < declarations_1.length; _i++) {\n        var declaration = declarations_1[_i];\n        _loop_2(declaration);\n    }\n    return results;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getHover(info) {\n    var result = locateSymbol(info);\n    if (result) {\n        return { text: hoverTextOf(result.symbol), span: result.span };\n    }\n}\nfunction hoverTextOf(symbol) {\n    var result = [{ text: symbol.kind }, { text: ' ' }, { text: symbol.name, language: symbol.language }];\n    var container = symbol.container;\n    if (container) {\n        result.push({ text: ' of ' }, { text: container.name, language: container.language });\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create an instance of an Angular `LanguageService`.\n *\n * @experimental\n */\nfunction createLanguageService(host) {\n    return new LanguageServiceImpl(host);\n}\nvar LanguageServiceImpl = (function () {\n    function LanguageServiceImpl(host) {\n        this.host = host;\n    }\n    Object.defineProperty(LanguageServiceImpl.prototype, \"metadataResolver\", {\n        get: function () { return this.host.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    LanguageServiceImpl.prototype.getTemplateReferences = function () { return this.host.getTemplateReferences(); };\n    LanguageServiceImpl.prototype.getDiagnostics = function (fileName) {\n        var results = [];\n        var templates = this.host.getTemplates(fileName);\n        if (templates && templates.length) {\n            results.push.apply(results, getTemplateDiagnostics(fileName, this, templates));\n        }\n        var declarations = this.host.getDeclarations(fileName);\n        if (declarations && declarations.length) {\n            var summary = this.host.getAnalyzedModules();\n            results.push.apply(results, getDeclarationDiagnostics(declarations, summary));\n        }\n        return uniqueBySpan(results);\n    };\n    LanguageServiceImpl.prototype.getPipesAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return templateInfo.pipes;\n        }\n        return [];\n    };\n    LanguageServiceImpl.prototype.getCompletionsAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getTemplateCompletions(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getDefinitionAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getDefinition(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getHoverAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getHover(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getTemplateAstAtPosition = function (fileName, position) {\n        var template = this.host.getTemplateAt(fileName, position);\n        if (template) {\n            var astResult = this.getTemplateAst(template, fileName);\n            if (astResult && astResult.htmlAst && astResult.templateAst && astResult.directive &&\n                astResult.directives && astResult.pipes && astResult.expressionParser)\n                return {\n                    position: position,\n                    fileName: fileName,\n                    template: template,\n                    htmlAst: astResult.htmlAst,\n                    directive: astResult.directive,\n                    directives: astResult.directives,\n                    pipes: astResult.pipes,\n                    templateAst: astResult.templateAst,\n                    expressionParser: astResult.expressionParser\n                };\n        }\n        return undefined;\n    };\n    LanguageServiceImpl.prototype.getTemplateAst = function (template, contextFile) {\n        var _this = this;\n        var result = undefined;\n        try {\n            var resolvedMetadata = this.metadataResolver.getNonNormalizedDirectiveMetadata(template.type);\n            var metadata = resolvedMetadata && resolvedMetadata.metadata;\n            if (metadata) {\n                var rawHtmlParser = new HtmlParser();\n                var htmlParser = new I18NHtmlParser(rawHtmlParser);\n                var expressionParser = new Parser(new Lexer());\n                var config = new CompilerConfig();\n                var parser = new TemplateParser(config, this.host.resolver.getReflector(), expressionParser, new DomElementSchemaRegistry(), htmlParser, null, []);\n                var htmlResult = htmlParser.parse(template.source, '', true);\n                var analyzedModules = this.host.getAnalyzedModules();\n                var errors = undefined;\n                var ngModule = analyzedModules.ngModuleByPipeOrDirective.get(template.type);\n                if (!ngModule) {\n                    // Reported by the the declaration diagnostics.\n                    ngModule = findSuitableDefaultModule(analyzedModules);\n                }\n                if (ngModule) {\n                    var resolvedDirectives = ngModule.transitiveModule.directives.map(function (d) { return _this.host.resolver.getNonNormalizedDirectiveMetadata(d.reference); });\n                    var directives = removeMissing(resolvedDirectives).map(function (d) { return d.metadata.toSummary(); });\n                    var pipes = ngModule.transitiveModule.pipes.map(function (p) { return _this.host.resolver.getOrLoadPipeMetadata(p.reference).toSummary(); });\n                    var schemas = ngModule.schemas;\n                    var parseResult = parser.tryParseHtml(htmlResult, metadata, directives, pipes, schemas);\n                    result = {\n                        htmlAst: htmlResult.rootNodes,\n                        templateAst: parseResult.templateAst,\n                        directive: metadata, directives: directives, pipes: pipes,\n                        parseErrors: parseResult.errors, expressionParser: expressionParser, errors: errors\n                    };\n                }\n            }\n        }\n        catch (e) {\n            var span = template.span;\n            if (e.fileName == contextFile) {\n                span = template.query.getSpanAt(e.line, e.column) || span;\n            }\n            result = { errors: [{ kind: DiagnosticKind.Error, message: e.message, span: span }] };\n        }\n        return result || {};\n    };\n    return LanguageServiceImpl;\n}());\nfunction removeMissing(values) {\n    return values.filter(function (e) { return !!e; });\n}\nfunction uniqueBySpan(elements) {\n    if (elements) {\n        var result = [];\n        var map = new Map();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            var span = element.span;\n            var set = map.get(span.start);\n            if (!set) {\n                set = new Set();\n                map.set(span.start, set);\n            }\n            if (!set.has(span.end)) {\n                set.add(span.end);\n                result.push(element);\n            }\n        }\n        return result;\n    }\n}\nfunction findSuitableDefaultModule(modules) {\n    var result = undefined;\n    var resultSize = 0;\n    for (var _i = 0, _a = modules.ngModules; _i < _a.length; _i++) {\n        var module_1 = _a[_i];\n        var moduleSize = module_1.transitiveModule.directives.length;\n        if (moduleSize > resultSize) {\n            result = module_1;\n            resultSize = moduleSize;\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ReflectorModuleModuleResolutionHost = (function () {\n    function ReflectorModuleModuleResolutionHost(host) {\n        var _this = this;\n        this.host = host;\n        if (host.directoryExists)\n            this.directoryExists = function (directoryName) { return _this.host.directoryExists(directoryName); };\n    }\n    ReflectorModuleModuleResolutionHost.prototype.fileExists = function (fileName) { return !!this.host.getScriptSnapshot(fileName); };\n    ReflectorModuleModuleResolutionHost.prototype.readFile = function (fileName) {\n        var snapshot = this.host.getScriptSnapshot(fileName);\n        if (snapshot) {\n            return snapshot.getText(0, snapshot.getLength());\n        }\n        // Typescript readFile() declaration should be `readFile(fileName: string): string | undefined\n        return undefined;\n    };\n    return ReflectorModuleModuleResolutionHost;\n}());\n// This reflector host's purpose is to first set verboseInvalidExpressions to true so the\n// reflector will collect errors instead of throwing, and second to all deferring the creation\n// of the program until it is actually needed.\nvar ReflectorHost = (function (_super) {\n    __extends(ReflectorHost, _super);\n    function ReflectorHost(getProgram, serviceHost, options) {\n        var _this = _super.call(this, \n        // The ancestor value for program is overridden below so passing null here is safe.\n        /* program */ null, options, new language_services_2(new ReflectorModuleModuleResolutionHost(serviceHost)), { verboseInvalidExpression: true }) || this;\n        _this.getProgram = getProgram;\n        return _this;\n    }\n    Object.defineProperty(ReflectorHost.prototype, \"program\", {\n        get: function () { return this.getProgram(); },\n        set: function (value) {\n            // Discard the result set by ancestor constructor\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectorHost;\n}(language_services_1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a `LanguageServiceHost`\n */\nfunction createLanguageServiceFromTypescript(host, service) {\n    var ngHost = new TypeScriptServiceHost(host, service);\n    var ngServer = createLanguageService(ngHost);\n    ngHost.setSite(ngServer);\n    return ngServer;\n}\n/**\n * The language service never needs the normalized versions of the metadata. To avoid parsing\n * the content and resolving references, return an empty file. This also allows normalizing\n * template that are syntatically incorrect which is required to provide completions in\n * syntactically incorrect templates.\n */\nvar DummyHtmlParser = (function (_super) {\n    __extends(DummyHtmlParser, _super);\n    function DummyHtmlParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DummyHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return new ParseTreeResult([], []);\n    };\n    return DummyHtmlParser;\n}(HtmlParser));\n/**\n * Avoid loading resources in the language servcie by using a dummy loader.\n */\nvar DummyResourceLoader = (function (_super) {\n    __extends(DummyResourceLoader, _super);\n    function DummyResourceLoader() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DummyResourceLoader.prototype.get = function (url) { return Promise.resolve(''); };\n    return DummyResourceLoader;\n}(ResourceLoader));\n/**\n * An implemntation of a `LanguageServiceHost` for a TypeScript project.\n *\n * The `TypeScriptServiceHost` implements the Angular `LanguageServiceHost` using\n * the TypeScript language services.\n *\n * @experimental\n */\nvar TypeScriptServiceHost = (function () {\n    function TypeScriptServiceHost(host, tsService) {\n        this.host = host;\n        this.tsService = tsService;\n        this._staticSymbolCache = new StaticSymbolCache();\n        this._typeCache = [];\n        this.modulesOutOfDate = true;\n        this.fileVersions = new Map();\n    }\n    TypeScriptServiceHost.prototype.setSite = function (service) { this.service = service; };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"resolver\", {\n        /**\n         * Angular LanguageServiceHost implementation\n         */\n        get: function () {\n            var _this = this;\n            this.validate();\n            var result = this._resolver;\n            if (!result) {\n                var moduleResolver = new NgModuleResolver(this.reflector);\n                var directiveResolver = new DirectiveResolver(this.reflector);\n                var pipeResolver = new PipeResolver(this.reflector);\n                var elementSchemaRegistry = new DomElementSchemaRegistry();\n                var resourceLoader = new DummyResourceLoader();\n                var urlResolver = createOfflineCompileUrlResolver();\n                var htmlParser = new DummyHtmlParser();\n                // This tracks the CompileConfig in codegen.ts. Currently these options\n                // are hard-coded.\n                var config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation$1.Emulated, useJit: false });\n                var directiveNormalizer = new DirectiveNormalizer(resourceLoader, urlResolver, htmlParser, config);\n                result = this._resolver = new CompileMetadataResolver(config, htmlParser, moduleResolver, directiveResolver, pipeResolver, new JitSummaryResolver(), elementSchemaRegistry, directiveNormalizer, new Console(), this._staticSymbolCache, this.reflector, function (error, type) { return _this.collectError(error, type && type.filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.getTemplateReferences = function () {\n        this.ensureTemplateMap();\n        return this.templateReferences || [];\n    };\n    TypeScriptServiceHost.prototype.getTemplateAt = function (fileName, position) {\n        var sourceFile = this.getSourceFile(fileName);\n        if (sourceFile) {\n            this.context = sourceFile.fileName;\n            var node = this.findNode(sourceFile, position);\n            if (node) {\n                return this.getSourceFromNode(fileName, this.host.getScriptVersion(sourceFile.fileName), node);\n            }\n        }\n        else {\n            this.ensureTemplateMap();\n            // TODO: Cannocalize the file?\n            var componentType = this.fileToComponent.get(fileName);\n            if (componentType) {\n                return this.getSourceFromType(fileName, this.host.getScriptVersion(fileName), componentType);\n            }\n        }\n        return undefined;\n    };\n    TypeScriptServiceHost.prototype.getAnalyzedModules = function () {\n        this.validate();\n        return this.ensureAnalyzedModules();\n    };\n    TypeScriptServiceHost.prototype.ensureAnalyzedModules = function () {\n        var analyzedModules = this.analyzedModules;\n        if (!analyzedModules) {\n            var analyzeHost = { isSourceFile: function (filePath) { return true; } };\n            var programFiles = this.program.getSourceFiles().map(function (sf) { return sf.fileName; });\n            analyzedModules = this.analyzedModules =\n                analyzeNgModules(programFiles, analyzeHost, this.staticSymbolResolver, this.resolver);\n        }\n        return analyzedModules;\n    };\n    TypeScriptServiceHost.prototype.getTemplates = function (fileName) {\n        var _this = this;\n        this.ensureTemplateMap();\n        var componentType = this.fileToComponent.get(fileName);\n        if (componentType) {\n            var templateSource = this.getTemplateAt(fileName, 0);\n            if (templateSource) {\n                return [templateSource];\n            }\n        }\n        else {\n            var version_1 = this.host.getScriptVersion(fileName);\n            var result_1 = [];\n            // Find each template string in the file\n            var visit_1 = function (child) {\n                var templateSource = _this.getSourceFromNode(fileName, version_1, child);\n                if (templateSource) {\n                    result_1.push(templateSource);\n                }\n                else {\n                    ts.forEachChild(child, visit_1);\n                }\n            };\n            var sourceFile = this.getSourceFile(fileName);\n            if (sourceFile) {\n                this.context = sourceFile.path || sourceFile.fileName;\n                ts.forEachChild(sourceFile, visit_1);\n            }\n            return result_1.length ? result_1 : undefined;\n        }\n    };\n    TypeScriptServiceHost.prototype.getDeclarations = function (fileName) {\n        var _this = this;\n        var result = [];\n        var sourceFile = this.getSourceFile(fileName);\n        if (sourceFile) {\n            var visit_2 = function (child) {\n                var declaration = _this.getDeclarationFromNode(sourceFile, child);\n                if (declaration) {\n                    result.push(declaration);\n                }\n                else {\n                    ts.forEachChild(child, visit_2);\n                }\n            };\n            ts.forEachChild(sourceFile, visit_2);\n        }\n        return result;\n    };\n    TypeScriptServiceHost.prototype.getSourceFile = function (fileName) {\n        return this.tsService.getProgram().getSourceFile(fileName);\n    };\n    TypeScriptServiceHost.prototype.updateAnalyzedModules = function () {\n        this.validate();\n        if (this.modulesOutOfDate) {\n            this.analyzedModules = null;\n            this._reflector = null;\n            this.templateReferences = null;\n            this.fileToComponent = null;\n            this.ensureAnalyzedModules();\n            this.modulesOutOfDate = false;\n        }\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"program\", {\n        get: function () { return this.tsService.getProgram(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"checker\", {\n        get: function () {\n            var checker = this._checker;\n            if (!checker) {\n                checker = this._checker = this.program.getTypeChecker();\n            }\n            return checker;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.validate = function () {\n        var _this = this;\n        var program = this.program;\n        if (this._staticSymbolResolver && this.lastProgram != program) {\n            // Invalidate file that have changed in the static symbol resolver\n            var invalidateFile = function (fileName) {\n                return _this._staticSymbolResolver.invalidateFile(fileName);\n            };\n            this.clearCaches();\n            var seen_1 = new Set();\n            for (var _i = 0, _a = this.program.getSourceFiles(); _i < _a.length; _i++) {\n                var sourceFile = _a[_i];\n                var fileName = sourceFile.fileName;\n                seen_1.add(fileName);\n                var version$$1 = this.host.getScriptVersion(fileName);\n                var lastVersion = this.fileVersions.get(fileName);\n                if (version$$1 != lastVersion) {\n                    this.fileVersions.set(fileName, version$$1);\n                    invalidateFile(fileName);\n                }\n            }\n            // Remove file versions that are no longer in the file and invalidate them.\n            var missing = Array.from(this.fileVersions.keys()).filter(function (f) { return !seen_1.has(f); });\n            missing.forEach(function (f) { return _this.fileVersions.delete(f); });\n            missing.forEach(invalidateFile);\n            this.lastProgram = program;\n        }\n    };\n    TypeScriptServiceHost.prototype.clearCaches = function () {\n        this._checker = null;\n        this._typeCache = [];\n        this._resolver = null;\n        this.collectedErrors = null;\n        this.modulesOutOfDate = true;\n    };\n    TypeScriptServiceHost.prototype.ensureTemplateMap = function () {\n        if (!this.fileToComponent || !this.templateReferences) {\n            var fileToComponent = new Map();\n            var templateReference = [];\n            var ngModuleSummary = this.getAnalyzedModules();\n            var urlResolver = createOfflineCompileUrlResolver();\n            for (var _i = 0, _a = ngModuleSummary.ngModules; _i < _a.length; _i++) {\n                var module_1 = _a[_i];\n                for (var _b = 0, _c = module_1.declaredDirectives; _b < _c.length; _b++) {\n                    var directive = _c[_b];\n                    var metadata = this.resolver.getNonNormalizedDirectiveMetadata(directive.reference).metadata;\n                    if (metadata.isComponent && metadata.template && metadata.template.templateUrl) {\n                        var templateName = urlResolver.resolve(this.reflector.componentModuleUrl(directive.reference), metadata.template.templateUrl);\n                        fileToComponent.set(templateName, directive.reference);\n                        templateReference.push(templateName);\n                    }\n                }\n            }\n            this.fileToComponent = fileToComponent;\n            this.templateReferences = templateReference;\n        }\n    };\n    TypeScriptServiceHost.prototype.getSourceFromDeclaration = function (fileName, version$$1, source, span, type, declaration, node, sourceFile) {\n        var queryCache = undefined;\n        var t = this;\n        if (declaration) {\n            return {\n                version: version$$1,\n                source: source,\n                span: span,\n                type: type,\n                get members() {\n                    return language_services_13(t.program, t.checker, sourceFile, declaration);\n                },\n                get query() {\n                    if (!queryCache) {\n                        var pipes_1 = t.service.getPipesAt(fileName, node.getStart());\n                        queryCache = language_services_15(t.program, t.checker, sourceFile, function () { return language_services_14(sourceFile, t.program, t.checker, pipes_1); });\n                    }\n                    return queryCache;\n                }\n            };\n        }\n    };\n    TypeScriptServiceHost.prototype.getSourceFromNode = function (fileName, version$$1, node) {\n        var result = undefined;\n        var t = this;\n        switch (node.kind) {\n            case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n            case ts.SyntaxKind.StringLiteral:\n                var _a = this.getTemplateClassDeclFromNode(node), declaration = _a[0], decorator = _a[1];\n                if (declaration && declaration.name) {\n                    var sourceFile = this.getSourceFile(fileName);\n                    return this.getSourceFromDeclaration(fileName, version$$1, this.stringOf(node) || '', shrink(spanOf$1(node)), this.reflector.getStaticSymbol(sourceFile.fileName, declaration.name.text), declaration, node, sourceFile);\n                }\n                break;\n        }\n        return result;\n    };\n    TypeScriptServiceHost.prototype.getSourceFromType = function (fileName, version$$1, type) {\n        var result = undefined;\n        var declaration = this.getTemplateClassFromStaticSymbol(type);\n        if (declaration) {\n            var snapshot = this.host.getScriptSnapshot(fileName);\n            if (snapshot) {\n                var source = snapshot.getText(0, snapshot.getLength());\n                result = this.getSourceFromDeclaration(fileName, version$$1, source, { start: 0, end: source.length }, type, declaration, declaration, declaration.getSourceFile());\n            }\n        }\n        return result;\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"reflectorHost\", {\n        get: function () {\n            var _this = this;\n            var result = this._reflectorHost;\n            if (!result) {\n                if (!this.context) {\n                    // Make up a context by finding the first script and using that as the base dir.\n                    this.context = this.host.getScriptFileNames()[0];\n                }\n                // Use the file context's directory as the base directory.\n                // The host's getCurrentDirectory() is not reliable as it is always \"\" in\n                // tsserver. We don't need the exact base directory, just one that contains\n                // a source file.\n                var source = this.tsService.getProgram().getSourceFile(this.context);\n                if (!source) {\n                    throw new Error('Internal error: no context could be determined');\n                }\n                var tsConfigPath = findTsConfig(source.fileName);\n                var basePath = path.dirname(tsConfigPath || this.context);\n                var options = { basePath: basePath, genDir: basePath };\n                var compilerOptions = this.host.getCompilationSettings();\n                if (compilerOptions && compilerOptions.baseUrl) {\n                    options.baseUrl = compilerOptions.baseUrl;\n                }\n                result = this._reflectorHost =\n                    new ReflectorHost(function () { return _this.tsService.getProgram(); }, this.host, options);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.collectError = function (error, filePath) {\n        if (filePath) {\n            var errorMap = this.collectedErrors;\n            if (!errorMap || !this.collectedErrors) {\n                errorMap = this.collectedErrors = new Map();\n            }\n            var errors = errorMap.get(filePath);\n            if (!errors) {\n                errors = [];\n                this.collectedErrors.set(filePath, errors);\n            }\n            errors.push(error);\n        }\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"staticSymbolResolver\", {\n        get: function () {\n            var _this = this;\n            var result = this._staticSymbolResolver;\n            if (!result) {\n                this._summaryResolver = new AotSummaryResolver({\n                    loadSummary: function (filePath) { return null; },\n                    isSourceFile: function (sourceFilePath) { return true; },\n                    toSummaryFileName: function (sourceFilePath) { return sourceFilePath; },\n                    fromSummaryFileName: function (filePath) { return filePath; },\n                }, this._staticSymbolCache);\n                result = this._staticSymbolResolver = new StaticSymbolResolver(this.reflectorHost, this._staticSymbolCache, this._summaryResolver, function (e, filePath) { return _this.collectError(e, filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"reflector\", {\n        get: function () {\n            var _this = this;\n            var result = this._reflector;\n            if (!result) {\n                var ssr = this.staticSymbolResolver;\n                result = this._reflector = new StaticReflector(this._summaryResolver, ssr, [], [], function (e, filePath) { return _this.collectError(e, filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.getTemplateClassFromStaticSymbol = function (type) {\n        var source = this.getSourceFile(type.filePath);\n        if (source) {\n            var declarationNode = ts.forEachChild(source, function (child) {\n                if (child.kind === ts.SyntaxKind.ClassDeclaration) {\n                    var classDeclaration = child;\n                    if (classDeclaration.name != null && classDeclaration.name.text === type.name) {\n                        return classDeclaration;\n                    }\n                }\n            });\n            return declarationNode;\n        }\n        return undefined;\n    };\n    /**\n     * Given a template string node, see if it is an Angular template string, and if so return the\n     * containing class.\n     */\n    TypeScriptServiceHost.prototype.getTemplateClassDeclFromNode = function (currentToken) {\n        // Verify we are in a 'template' property assignment, in an object literal, which is an call\n        // arg, in a decorator\n        var parentNode = currentToken.parent; // PropertyAssignment\n        if (!parentNode) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        if (parentNode.kind !== ts.SyntaxKind.PropertyAssignment) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        else {\n            // TODO: Is this different for a literal, i.e. a quoted property name like \"template\"?\n            if (parentNode.name.text !== 'template') {\n                return TypeScriptServiceHost.missingTemplate;\n            }\n        }\n        parentNode = parentNode.parent; // ObjectLiteralExpression\n        if (!parentNode || parentNode.kind !== ts.SyntaxKind.ObjectLiteralExpression) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        parentNode = parentNode.parent; // CallExpression\n        if (!parentNode || parentNode.kind !== ts.SyntaxKind.CallExpression) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        var callTarget = parentNode.expression;\n        var decorator = parentNode.parent; // Decorator\n        if (!decorator || decorator.kind !== ts.SyntaxKind.Decorator) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        var declaration = decorator.parent; // ClassDeclaration\n        if (!declaration || declaration.kind !== ts.SyntaxKind.ClassDeclaration) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        return [declaration, callTarget];\n    };\n    TypeScriptServiceHost.prototype.getCollectedErrors = function (defaultSpan, sourceFile) {\n        var errors = (this.collectedErrors && this.collectedErrors.get(sourceFile.fileName));\n        return (errors && errors.map(function (e) {\n            return { message: e.message, span: spanAt(sourceFile, e.line, e.column) || defaultSpan };\n        })) ||\n            [];\n    };\n    TypeScriptServiceHost.prototype.getDeclarationFromNode = function (sourceFile, node) {\n        if (node.kind == ts.SyntaxKind.ClassDeclaration && node.decorators &&\n            node.name) {\n            for (var _i = 0, _a = node.decorators; _i < _a.length; _i++) {\n                var decorator = _a[_i];\n                if (decorator.expression && decorator.expression.kind == ts.SyntaxKind.CallExpression) {\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        var call = decorator.expression;\n                        var target = call.expression;\n                        var type = this.checker.getTypeAtLocation(target);\n                        if (type) {\n                            var staticSymbol = this.reflector.getStaticSymbol(sourceFile.fileName, classDeclaration.name.text);\n                            try {\n                                if (this.resolver.isDirective(staticSymbol)) {\n                                    var metadata = this.resolver.getNonNormalizedDirectiveMetadata(staticSymbol).metadata;\n                                    var declarationSpan = spanOf$1(target);\n                                    return {\n                                        type: staticSymbol,\n                                        declarationSpan: declarationSpan,\n                                        metadata: metadata,\n                                        errors: this.getCollectedErrors(declarationSpan, sourceFile)\n                                    };\n                                }\n                            }\n                            catch (e) {\n                                if (e.message) {\n                                    this.collectError(e, sourceFile.fileName);\n                                    var declarationSpan = spanOf$1(target);\n                                    return {\n                                        type: staticSymbol,\n                                        declarationSpan: declarationSpan,\n                                        errors: this.getCollectedErrors(declarationSpan, sourceFile)\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TypeScriptServiceHost.prototype.stringOf = function (node) {\n        switch (node.kind) {\n            case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n                return node.text;\n            case ts.SyntaxKind.StringLiteral:\n                return node.text;\n        }\n    };\n    TypeScriptServiceHost.prototype.findNode = function (sourceFile, position) {\n        function find(node) {\n            if (position >= node.getStart() && position < node.getEnd()) {\n                return ts.forEachChild(node, find) || node;\n            }\n        }\n        return find(sourceFile);\n    };\n    TypeScriptServiceHost.missingTemplate = [undefined, undefined];\n    return TypeScriptServiceHost;\n}());\nfunction findTsConfig(fileName) {\n    var dir = path.dirname(fileName);\n    while (fs.existsSync(dir)) {\n        var candidate = path.join(dir, 'tsconfig.json');\n        if (fs.existsSync(candidate))\n            return candidate;\n        var parentDir = path.dirname(dir);\n        if (parentDir === dir)\n            break;\n        dir = parentDir;\n    }\n}\nfunction spanOf$1(node) {\n    return { start: node.getStart(), end: node.getEnd() };\n}\nfunction shrink(span, offset) {\n    if (offset == null)\n        offset = 1;\n    return { start: span.start + offset, end: span.end - offset };\n}\nfunction spanAt(sourceFile, line, column) {\n    if (line != null && column != null) {\n        var position_1 = ts.getPositionOfLineAndCharacter(sourceFile, line, column);\n        var findChild = function findChild(node) {\n            if (node.kind > ts.SyntaxKind.LastToken && node.pos <= position_1 && node.end > position_1) {\n                var betterNode = ts.forEachChild(node, findChild);\n                return betterNode || node;\n            }\n        };\n        var node = ts.forEachChild(sourceFile, findChild);\n        if (node) {\n            return { start: node.getStart(), end: node.getEnd() };\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar projectHostMap = new WeakMap();\nfunction getExternalFiles(project) {\n    var host = projectHostMap.get(project);\n    if (host) {\n        return host.getTemplateReferences();\n    }\n}\nvar angularOnlyResults = process.argv.indexOf('--angularOnlyResults') >= 0;\nfunction angularOnlyFilter(ls) {\n    return {\n        cleanupSemanticCache: function () { return ls.cleanupSemanticCache(); },\n        getSyntacticDiagnostics: function (fileName) { return []; },\n        getSemanticDiagnostics: function (fileName) { return []; },\n        getCompilerOptionsDiagnostics: function () { return []; },\n        getSyntacticClassifications: function (fileName, span) { return []; },\n        getSemanticClassifications: function (fileName, span) { return []; },\n        getEncodedSyntacticClassifications: function (fileName, span) { return ({ undefined: undefined }); },\n        getEncodedSemanticClassifications: function (fileName, span) { return undefined; },\n        getCompletionsAtPosition: function (fileName, position) { return undefined; },\n        getCompletionEntryDetails: function (fileName, position, entryName) {\n            return undefined;\n        },\n        getCompletionEntrySymbol: function (fileName, position, entryName) { return undefined; },\n        getQuickInfoAtPosition: function (fileName, position) { return undefined; },\n        getNameOrDottedNameSpan: function (fileName, startPos, endPos) { return undefined; },\n        getBreakpointStatementAtPosition: function (fileName, position) { return undefined; },\n        getSignatureHelpItems: function (fileName, position) { return undefined; },\n        getRenameInfo: function (fileName, position) { return undefined; },\n        findRenameLocations: function (fileName, position, findInStrings, findInComments) {\n            return [];\n        },\n        getDefinitionAtPosition: function (fileName, position) { return []; },\n        getTypeDefinitionAtPosition: function (fileName, position) { return []; },\n        getImplementationAtPosition: function (fileName, position) { return []; },\n        getReferencesAtPosition: function (fileName, position) { return []; },\n        findReferences: function (fileName, position) { return []; },\n        getDocumentHighlights: function (fileName, position, filesToSearch) { return []; },\n        /** @deprecated */\n        getOccurrencesAtPosition: function (fileName, position) { return []; },\n        getNavigateToItems: function (searchValue) { return []; },\n        getNavigationBarItems: function (fileName) { return []; },\n        getNavigationTree: function (fileName) { return undefined; },\n        getOutliningSpans: function (fileName) { return []; },\n        getTodoComments: function (fileName, descriptors) { return []; },\n        getBraceMatchingAtPosition: function (fileName, position) { return []; },\n        getIndentationAtPosition: function (fileName, position, options) { return undefined; },\n        getFormattingEditsForRange: function (fileName, start, end, options) { return []; },\n        getFormattingEditsForDocument: function (fileName, options) { return []; },\n        getFormattingEditsAfterKeystroke: function (fileName, position, key, options) { return []; },\n        getDocCommentTemplateAtPosition: function (fileName, position) { return undefined; },\n        isValidBraceCompletionAtPosition: function (fileName, position, openingBrace) { return undefined; },\n        getCodeFixesAtPosition: function (fileName, start, end, errorCodes) { return []; },\n        getEmitOutput: function (fileName) { return undefined; },\n        getProgram: function () { return ls.getProgram(); },\n        dispose: function () { return ls.dispose(); },\n        getApplicableRefactors: function (fileName, positionOrRaneg) { return []; },\n        getEditsForRefactor: function (fileName, formatOptions, positionOrRange, refactorName, actionName) {\n            return undefined;\n        },\n    };\n}\nfunction create(info /* ts.server.PluginCreateInfo */) {\n    // Create the proxy\n    var proxy = Object.create(null);\n    var oldLS = info.languageService;\n    if (angularOnlyResults) {\n        oldLS = angularOnlyFilter(oldLS);\n    }\n    function tryCall(fileName, callback) {\n        if (fileName && !oldLS.getProgram().getSourceFile(fileName)) {\n            return undefined;\n        }\n        try {\n            return callback();\n        }\n        catch (e) {\n            return undefined;\n        }\n    }\n    function tryFilenameCall(m) {\n        return function (fileName) { return tryCall(fileName, function () { return (m.call(ls, fileName)); }); };\n    }\n    function tryFilenameOneCall(m) {\n        return function (fileName, p) { return tryCall(fileName, function () { return (m.call(ls, fileName, p)); }); };\n    }\n    function tryFilenameTwoCall(m) {\n        return function (fileName, p1, p2) { return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2)); }); };\n    }\n    function tryFilenameThreeCall(m) {\n        return function (fileName, p1, p2, p3) { return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2, p3)); }); };\n    }\n    function tryFilenameFourCall(m) {\n        return function (fileName, p1, p2, p3, p4) {\n            return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2, p3, p4)); });\n        };\n    }\n    function typescriptOnly(ls) {\n        return {\n            cleanupSemanticCache: function () { return ls.cleanupSemanticCache(); },\n            getSyntacticDiagnostics: tryFilenameCall(ls.getSyntacticDiagnostics),\n            getSemanticDiagnostics: tryFilenameCall(ls.getSemanticDiagnostics),\n            getCompilerOptionsDiagnostics: function () { return ls.getCompilerOptionsDiagnostics(); },\n            getSyntacticClassifications: tryFilenameOneCall(ls.getSemanticClassifications),\n            getSemanticClassifications: tryFilenameOneCall(ls.getSemanticClassifications),\n            getEncodedSyntacticClassifications: tryFilenameOneCall(ls.getEncodedSyntacticClassifications),\n            getEncodedSemanticClassifications: tryFilenameOneCall(ls.getEncodedSemanticClassifications),\n            getCompletionsAtPosition: tryFilenameOneCall(ls.getCompletionsAtPosition),\n            getCompletionEntryDetails: tryFilenameTwoCall(ls.getCompletionEntryDetails),\n            getCompletionEntrySymbol: tryFilenameTwoCall(ls.getCompletionEntrySymbol),\n            getQuickInfoAtPosition: tryFilenameOneCall(ls.getQuickInfoAtPosition),\n            getNameOrDottedNameSpan: tryFilenameTwoCall(ls.getNameOrDottedNameSpan),\n            getBreakpointStatementAtPosition: tryFilenameOneCall(ls.getBreakpointStatementAtPosition),\n            getSignatureHelpItems: tryFilenameOneCall(ls.getSignatureHelpItems),\n            getRenameInfo: tryFilenameOneCall(ls.getRenameInfo),\n            findRenameLocations: tryFilenameThreeCall(ls.findRenameLocations),\n            getDefinitionAtPosition: tryFilenameOneCall(ls.getDefinitionAtPosition),\n            getTypeDefinitionAtPosition: tryFilenameOneCall(ls.getTypeDefinitionAtPosition),\n            getImplementationAtPosition: tryFilenameOneCall(ls.getImplementationAtPosition),\n            getReferencesAtPosition: tryFilenameOneCall(ls.getReferencesAtPosition),\n            findReferences: tryFilenameOneCall(ls.findReferences),\n            getDocumentHighlights: tryFilenameTwoCall(ls.getDocumentHighlights),\n            /** @deprecated */\n            getOccurrencesAtPosition: tryFilenameOneCall(ls.getOccurrencesAtPosition),\n            getNavigateToItems: function (searchValue, maxResultCount, fileName, excludeDtsFiles) { return tryCall(fileName, function () { return ls.getNavigateToItems(searchValue, maxResultCount, fileName, excludeDtsFiles); }); },\n            getNavigationBarItems: tryFilenameCall(ls.getNavigationBarItems),\n            getNavigationTree: tryFilenameCall(ls.getNavigationTree),\n            getOutliningSpans: tryFilenameCall(ls.getOutliningSpans),\n            getTodoComments: tryFilenameOneCall(ls.getTodoComments),\n            getBraceMatchingAtPosition: tryFilenameOneCall(ls.getBraceMatchingAtPosition),\n            getIndentationAtPosition: tryFilenameTwoCall(ls.getIndentationAtPosition),\n            getFormattingEditsForRange: tryFilenameThreeCall(ls.getFormattingEditsForRange),\n            getFormattingEditsForDocument: tryFilenameOneCall(ls.getFormattingEditsForDocument),\n            getFormattingEditsAfterKeystroke: tryFilenameThreeCall(ls.getFormattingEditsAfterKeystroke),\n            getDocCommentTemplateAtPosition: tryFilenameOneCall(ls.getDocCommentTemplateAtPosition),\n            isValidBraceCompletionAtPosition: tryFilenameTwoCall(ls.isValidBraceCompletionAtPosition),\n            getCodeFixesAtPosition: tryFilenameFourCall(ls.getCodeFixesAtPosition),\n            getEmitOutput: tryFilenameCall(ls.getEmitOutput),\n            getProgram: function () { return ls.getProgram(); },\n            dispose: function () { return ls.dispose(); },\n            getApplicableRefactors: function (fileName, positionOrRaneg) { return []; },\n            getEditsForRefactor: function (fileName, formatOptions, positionOrRange, refactorName, actionName) {\n                return undefined;\n            },\n        };\n    }\n    oldLS = typescriptOnly(oldLS);\n    var _loop_1 = function (k) {\n        proxy[k] = function () { return oldLS[k].apply(oldLS, arguments); };\n    };\n    for (var k in oldLS) {\n        _loop_1(k);\n    }\n    function completionToEntry(c) {\n        return { kind: c.kind, name: c.name, sortText: c.sort, kindModifiers: '' };\n    }\n    function diagnosticToDiagnostic(d, file) {\n        var result = {\n            file: file,\n            start: d.span.start,\n            length: d.span.end - d.span.start,\n            messageText: d.message,\n            category: ts.DiagnosticCategory.Error,\n            code: 0,\n            source: 'ng'\n        };\n        return result;\n    }\n    function tryOperation(attempting, callback) {\n        try {\n            return callback();\n        }\n        catch (e) {\n            info.project.projectService.logger.info(\"Failed to \" + attempting + \": \" + e.toString());\n            info.project.projectService.logger.info(\"Stack trace: \" + e.stack);\n            return null;\n        }\n    }\n    var serviceHost = new TypeScriptServiceHost(info.languageServiceHost, info.languageService);\n    var ls = createLanguageService(serviceHost);\n    serviceHost.setSite(ls);\n    projectHostMap.set(info.project, serviceHost);\n    proxy.getCompletionsAtPosition = function (fileName, position) {\n        var base = oldLS.getCompletionsAtPosition(fileName, position) || {\n            isGlobalCompletion: false,\n            isMemberCompletion: false,\n            isNewIdentifierLocation: false,\n            entries: []\n        };\n        tryOperation('get completions', function () {\n            var results = ls.getCompletionsAt(fileName, position);\n            if (results && results.length) {\n                if (base === undefined) {\n                    base = {\n                        isGlobalCompletion: false,\n                        isMemberCompletion: false,\n                        isNewIdentifierLocation: false,\n                        entries: []\n                    };\n                }\n                for (var _i = 0, results_1 = results; _i < results_1.length; _i++) {\n                    var entry = results_1[_i];\n                    base.entries.push(completionToEntry(entry));\n                }\n            }\n        });\n        return base;\n    };\n    proxy.getQuickInfoAtPosition = function (fileName, position) {\n        var base = oldLS.getQuickInfoAtPosition(fileName, position);\n        // TODO(vicb): the tags property has been removed in TS 2.2\n        tryOperation('get quick info', function () {\n            var ours = ls.getHoverAt(fileName, position);\n            if (ours) {\n                var displayParts = [];\n                for (var _i = 0, _a = ours.text; _i < _a.length; _i++) {\n                    var part = _a[_i];\n                    displayParts.push({ kind: part.language || 'angular', text: part.text });\n                }\n                var tags = base && base.tags;\n                base = {\n                    displayParts: displayParts,\n                    documentation: [],\n                    kind: 'angular',\n                    kindModifiers: 'what does this do?',\n                    textSpan: { start: ours.span.start, length: ours.span.end - ours.span.start },\n                };\n                if (tags) {\n                    base.tags = tags;\n                }\n            }\n        });\n        return base;\n    };\n    proxy.getSemanticDiagnostics = function (fileName) {\n        var result = oldLS.getSemanticDiagnostics(fileName);\n        var base = result || [];\n        tryOperation('get diagnostics', function () {\n            info.project.projectService.logger.info(\"Computing Angular semantic diagnostics...\");\n            var ours = ls.getDiagnostics(fileName);\n            if (ours && ours.length) {\n                var file_1 = oldLS.getProgram().getSourceFile(fileName);\n                base.push.apply(base, ours.map(function (d) { return diagnosticToDiagnostic(d, file_1); }));\n            }\n        });\n        return base;\n    };\n    proxy.getDefinitionAtPosition = function (fileName, position) {\n        var base = oldLS.getDefinitionAtPosition(fileName, position);\n        if (base && base.length) {\n            return base;\n        }\n        return tryOperation('get definition', function () {\n            var ours = ls.getDefinitionAt(fileName, position);\n            if (ours && ours.length) {\n                base = base || [];\n                for (var _i = 0, ours_1 = ours; _i < ours_1.length; _i++) {\n                    var loc = ours_1[_i];\n                    base.push({\n                        fileName: loc.fileName,\n                        textSpan: { start: loc.span.start, length: loc.span.end - loc.span.start },\n                        name: '',\n                        kind: 'definition',\n                        containerName: loc.fileName,\n                        containerKind: 'file'\n                    });\n                }\n            }\n            return base;\n        }) || [];\n    };\n    return proxy;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * @stable\n */\nvar VERSION = new Version$1('5.0.0-rc.3-fc86352');\n\nexports.createLanguageService = createLanguageService;\nexports.TypeScriptServiceHost = TypeScriptServiceHost;\nexports.createLanguageServiceFromTypescript = createLanguageServiceFromTypescript;\nexports.VERSION = VERSION;\nexports.getExternalFiles = getExternalFiles;\nexports.create = create;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n});\n//# sourceMappingURL=language-service.umd.js.map\n"]}