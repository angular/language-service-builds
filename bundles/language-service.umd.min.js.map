{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/language-service/bundles/language-service.umd.js"],"names":["$getModule","name","$provided","require","define","modules","cb","$deferred","$reflect","defineMetadata","getOwnMetadata","global","$resolved","module","exports","provided","result","Object","assign","reflect-metadata","apply","this","map","fs","path","ts","__extends","d","b","__","constructor","extendStatics","prototype","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","SchemaMetadata","MetadataFactory","makeMetadataFactory","props","factory","args","_i","arguments","length","values","__assign","ngMetadataName","isTypeOf","obj","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","Error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten$1","list","reduce","flat","item","flatItem","concat","sourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf$1$1","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path$$1","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ERROR_COMPONENT_TYPE","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector$1","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","srcFileUrl","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","symbol","metadata","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","transitiveModule","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","__symbolic","isNgSymbol","isDirective","isPipe","isInjectable","getNgModuleMetadata","isValueExportingNonSourceFile","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","compiler","AotCompiler","StyleCompiler","NgModuleCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl$$1","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","seen","summaries","createOutputContext","genFilePath","moduleName","runtime","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","createCommonjsModule","isFunction","isObject","tryCatcher","tryCatchTarget","errorObject","tryCatch","flattenUnsubscriptionErrors","errs","err","UnsubscriptionError_1","UnsubscriptionError","toSubscriber","nextOrObserver","complete","Subscriber_1","Subscriber","rxSubscriber","Observer","empty","isScheduler","schedule","isPromise$2","subscribe","subscribeToResult","outerSubscriber","outerValue","outerIndex","destination","InnerSubscriber_1","InnerSubscriber","closed","Observable_1","Observable","_isScalar","next","isArrayLike","isPromise_1","root","setTimeout","iterator","iterator$$1","done","observable","obs","TypeError","isObject_1","mergeAll","concurrent","POSITIVE_INFINITY","lift","MergeAllOperator","merge$2","observables","call","mergeStatic","scheduler","last","isScheduler_1","ArrayObservable_1","ArrayObservable","mergeAll_1","multicast","subjectOrSubjectFactory","subjectFactory","MulticastOperator","connectable","ConnectableObservable_1","connectableObservableDescriptor","shareSubjectFactory","Subject_1","Subject","share","multicast_1","refCount","makeDecorator","parentClass","chainFn","DecoratorFactory","objOrType","metaCtor","annotationInstance","TypeDecorator","cls","ANNOTATIONS","makeMetadataCtor","annotationCls","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","parameters","PARAMETERS","annotation","getSymbolIterator","_symbolIterator","Symbol_1","_global","getOwnPropertyNames","scheduleMicroTask","Zone","current","looseIdentical","stringify$1","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef$1","resolveProvider","computeDeps","IDENT","EMPTY","useNew","provide","USE_VALUE$1","staticError","multiProviderMixError","recursivelyProcessProviders","records","MULTI_PROVIDER_FN","record","tryResolveToken","notFoundValue","resolveToken","NG_TEMP_TOKEN_PATH","CIRCULAR","NO_NEW_LINE","depRecords","depRecord","childRecord","NULL_INJECTOR","Injector","THROW_IF_NOT_FOUND","providerDeps","annotations","Optional","SkipSelf","Self","Inject$1","formatError","charAt","JSON","NEW_LINE","getDebugContext","ERROR_DEBUG_CONTEXT","getOriginalError","ERROR_ORIGINAL_ERROR","getErrorLogger","ERROR_LOGGER","defaultErrorLogger","wrappedError","originalError","findFirstClosedCycle","constructResolvingPath","injectionError","injector","constructResolvingMessage","errMsg","addKey","injectors","noProviderError","cyclicDependencyError","instantiationError","originalException","originalStack","first","invalidProviderError","noAnnotationError","typeOrFunc","signature","ii","parameter","outOfBoundsError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","isType","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","getParentCtor","parentProto","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","constructDependencies","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","resolveReflectiveProviders","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","resolvedFactories","Type$1$1","params_1","t","_extractToken","optional","_createDependency","visibility","paramMetadata","InjectionToken","_mapProviders","_providers","getProviderAtIndex","isPromise$1","_appIdRandomProviderFactory","_randomChar","floor","random","_throwError","noComponentFactoryError","ERROR_COMPONENT","createScope","events","leave","scope","returnValue","trace","leaveScope","noopScope","arg0","arg1","noop","checkStable","zone","_nesting","hasPendingMicrotasks","isStable","onMicrotaskEmpty","emit","runOutsideAngular","onStable","forkInnerZoneWithAngularBehavior","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","hasPendingMacrotasks","macroTask","onHandleError","handleError","onError","onUnstable","isDevMode","_runModeLocked","_devMode","createPlatform","_platform","destroyed","ALLOW_MULTIPLE_PLATFORMS","PlatformRef","inits","PLATFORM_INITIALIZER","init","assertPlatform","requiredToken","platform","getPlatform","getNgZone","ngZoneOption","NoopNgZone","NgZone","enableLongStackTrace","_callAndReportToErrorHandler","errorHandler","ngZone","catch","optionsReducer","dst","objs","remove","splice","flatten$2","_queryElementChildren","predicate","matches","childNodes","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","isJsObject","comparator","iterator1","iterator2","item1","item2","iterateListLike","getPreviousIndex","addRemoveOffset","moveOffsets","previousIndex","moveOffset","getTypeNameForDebugging","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","_localeFactory","locale","asTextData","view","asElementData","asProviderData","asPureExpressionData","asQueryList","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","viewWrappedDebugError","_addDebugContext","logError","isViewDebugError","viewDestroyedError","tokenKey","_tokenKeyCache","size","checkBinding","def","oldValues","state","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","Services","createDebugContext","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","eventName","event","componentView","handleEvent","declaredViewContainer","viewParentEl","renderNode","renderElement","renderText","elementEventFullName$1","isComponentView","isEmbeddedView","splitDepsDsl","getParentRenderElement","renderHost","renderParent","componentRendererType","encapsulation","ViewEncapsulation$1","Native","resolveDefinition","DEFINITION_CACHE","NOOP","rootRenderNodes","renderNodes","visitRootRenderNodes","nextSibling","renderer","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","appendChild","insertBefore","removeChild","splitNamespace","NS_PREFIX_RE","createElement","elDef","rootSelectorOrNode","selectorOrNode","ns","createComment","parentEl","selectRootElement","name_2","setAttribute","listenToElementOutputs","outputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","outputIndex","checkAndUpdateElementInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","bindings","changed","checkAndUpdateElementValue","checkAndUpdateElementDynamic","binding","elData","renderNode$$1","setElementAttribute","setElementClass","setElementStyle","setElementProperty","renderValue","sanitizer","sanitize","removeAttribute","addClass","removeClass","SecurityContext$1","setStyle","removeStyle","setProperty","initNgModule","data","_def","provDef","NOT_CREATED$1","_createProviderInstance$1","resolveNgModuleDep","_parent","tokenKey$$1","InjectorRefTokenKey$1","NgModuleRefTokenKey","providersByKey","providerInstance","_createClass","_callFactory","depValues","callNgModuleLifecycle","lifecycles","instance","ngOnDestroy","attachEmbeddedView","parentView","elementData","viewIndex","addToArray","attachProjectedView","dirtyParentQueries","renderAttachEmbeddedView","vcElementData","dvcElementData","projectedViews","template","_projectedViews","markNodeAsProjectedTemplate","viewDef","nodeFlags","parentNodeDef","childFlags","detachEmbeddedView","removeFromArray","renderDetachView","detachProjectedView","moveEmbeddedView","oldViewIndex","newViewIndex","prevView","prevRenderNode","createViewContainerData","ViewContainerRef_","createChangeDetectorRef","ViewRef_","createTemplateData","TemplateRef_","createInjector","Injector_","createRendererV1","RendererAdapter","createNgModuleRef","moduleType","bootstrapComponents","NgModuleRef_","createProviderInstance","NOT_CREATED","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","allowPrivateServices","subscription","eventHandlerClosure","unsubscribe","checkAndUpdateDirectiveInline","providerData","changes","updateProp","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveDynamic","callFactory","resolveDep","startView","ChangeDetectorRefTokenKey","RendererV1TokenKey","findCompView","Renderer2TokenKey","ElementRefTokenKey","ElementRef","ViewContainerRefTokenKey","viewContainer","TemplateRefTokenKey","InjectorRefTokenKey","providerDef_1","allProviders","publicProviders","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","WrappedValue","wrapped","SimpleChange","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","directChildFlags","callElementProvidersLifecycles","setCurrentNode","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","createQuery","QueryList","nodeMatchedQueries","tplDef","filterId","setDirty","checkAndUpdateQuery","queryList","dirty","directiveInstance","newValues","elementDef","calcQueryValues","reset","notify","boundValue","bindingType","notifyOnChanges","queryDef","valueType","matchedQueries","getQueryValue","childMatchedQueries","embeddedView","dvc","projectedView","queryValueType","appendNgContent","createPureExpression","checkAndUpdatePureExpressionInline","pipe","checkAndUpdatePureExpressionDynamic","createText","checkAndUpdateTextInline","_addInterpolationPart","checkAndUpdateTextDynamic","createEmbeddedView","anchorDef$$1","createView","initView","createViewNodes","createRootView","createComponentView","hostElement","compRenderer","rendererType","rendererFactory","createRenderer","componentProvider","disposables","outputCount","bindingCount","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","checkNoChangesView","markProjectedViewsForCheck","updateDirectives","execEmbeddedViewsAction","CheckNoChanges","updateRenderer","checkAndUpdateView","CheckAndUpdate","checkAndUpdateNode","argStyle","checkAndUpdateNodeInline","checkAndUpdateNodeDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","destroyView","Destroy","destroyNode","destroyViewNodes","destroy","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","nodeCount","initServicesIfNeeded","initialized","services","createDebugServices","createProdServices","overrideProvider","clearProviderOverrides","createProdRootView","DebugContext_","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugClearProviderOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","elInjector","createRootData","RendererFactory2","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","Sanitizer","ErrorHandler","anchorDef","viewDef$$1","parentInjector","applyProviderOverridesToNgModule","override","providerOverrides","clear","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","elIndex","checkIndex","detectChanges","checkNoChanges","_currentView","_currentNodeIndex","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","_currentAction","debugCheckRenderNodeFn","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","camelCaseToDashCase","CAMEL_CASE_REGEXP","getRenderNodeIndex","renderNodeIndex","findHostElement","collectReferences","references","refName","self","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","isParseSourceSpan","spanOf","inSpan","exclusive","offsetSpan","amount","isNarrower","spanA","spanB","hasTemplateReference","diDep","getSelectors","info","flatten","removeSuffix","uniqueByName","elements","elements_1","diagnosticInfoFromTemplateInfo","members","htmlAst","templateAst","findTemplateAstAt","allowWidening","visitEmbeddedTemplate","visitChildren","visitElement","inputs","visitDirective","RecursiveTemplateAstVisitor","findAstAt","excludeEmpty","NullAstVisitor","getExpressionCompletions","getType","language_services_7","tail","getPipes","receiverType","getBuiltinType","language_services_10","Any","getExpressionSymbol","compose","indexes","indexes_1","group","groups","name_1","attributeNames","defaultAttributes","eventNames","SchemaInformation","eventsOf","propertyNames","propertiesOf","getTemplateCompletions","templateInfo","templatePosition_1","path_1","mostSpecific","elementCompletions","astPosition_1","startTagSpan","tagLen","attributeCompletions","visitAttribute","valueSpan","attributeValueCompletions","visitText","entityCompletions","getSourceText","interpolationCompletions","contentType","TagContentType","PARSABLE_DATA","voidElementAttributeCompletions","visitComment","visitExpansion","visitExpansionCase","parentOf","attributeCompletionsForElement","getAttributeInfosForElement","fromHtml","nameOfAttr","htmlAttributes","htmlProperties","htmlEvents","selectorMap","applicableSelectors","selectorAndAttributeNames","attrs_1","selectorAndAttr","elementSelector","createElementCssSelector","SelectorMatcher","addSelectables","foldAttrs","expandedAttr","dinfo","ExpressionVisitor","language_services_5","widerPath_1","widerVisitor","htmlNames","hiddenHtmlElements","directiveElements","components","found","re","exec","NAMED_ENTITIES","templatePath","templateAttr","inputOutput","templates","duplicate","cloneAttr","lowerName","locateSymbol","templatePosition","symbol_1","span_1","attributeValueSymbol_1","inEvent","attribute","findAttribute","expressionOffset","visitNgContent","getTypeSymbol","OverrideKindSymbol","visitReference","visitVariable","visitEvent","handler","findOutputBinding","visitElementProperty","visitAttr","visitBoundText","expressionPosition","visitDirectiveProperty","findInputBinding","invertedInput","invertMap","fieldName","templateName","classSymbol","invertedOutputs","getDefinition","definition","getTemplateDiagnostics","astProvider","results","templates_1","getTemplateAst","DiagnosticKind","expressionDiagnostics","language_services_6","getDeclarationDiagnostics","declarations","declarations_1","declaration","report","declarationSpan","templateUrl","getHover","hoverTextOf","language","container","createLanguageService","LanguageServiceImpl","removeMissing","uniqueBySpan","findSuitableDefaultModule","resultSize","module_1","moduleSize","createLanguageServiceFromTypescript","service","ngHost","TypeScriptServiceHost","ngServer","setSite","findTsConfig","dirname","existsSync","candidate","parentDir","spanOf$1","getStart","getEnd","shrink","spanAt","position_1","getPositionOfLineAndCharacter","findChild","SyntaxKind","LastToken","forEachChild","getExternalFiles","project","projectHostMap","getTemplateReferences","angularOnlyFilter","ls","cleanupSemanticCache","getSyntacticDiagnostics","getSemanticDiagnostics","getCompilerOptionsDiagnostics","getSyntacticClassifications","getSemanticClassifications","getEncodedSyntacticClassifications","getEncodedSemanticClassifications","getCompletionsAtPosition","getCompletionEntryDetails","entryName","getCompletionEntrySymbol","getQuickInfoAtPosition","getNameOrDottedNameSpan","startPos","endPos","getBreakpointStatementAtPosition","getSignatureHelpItems","getRenameInfo","findRenameLocations","findInStrings","findInComments","getDefinitionAtPosition","getTypeDefinitionAtPosition","getImplementationAtPosition","getReferencesAtPosition","findReferences","getDocumentHighlights","filesToSearch","getOccurrencesAtPosition","getNavigateToItems","searchValue","getNavigationBarItems","getNavigationTree","getOutliningSpans","getTodoComments","descriptors","getBraceMatchingAtPosition","getIndentationAtPosition","getFormattingEditsForRange","getFormattingEditsForDocument","getFormattingEditsAfterKeystroke","getDocCommentTemplateAtPosition","isValidBraceCompletionAtPosition","openingBrace","getCodeFixesAtPosition","errorCodes","getEmitOutput","getProgram","dispose","getApplicableRefactors","positionOrRaneg","getEditsForRefactor","formatOptions","positionOrRange","refactorName","actionName","tryCall","oldLS","getSourceFile","tryFilenameCall","tryFilenameOneCall","tryFilenameTwoCall","p1","p2","tryFilenameThreeCall","p3","tryFilenameFourCall","p4","completionToEntry","sortText","kindModifiers","diagnosticToDiagnostic","messageText","category","DiagnosticCategory","tryOperation","attempting","projectService","logger","proxy","languageService","angularOnlyResults","maxResultCount","excludeDtsFiles","serviceHost","languageServiceHost","isGlobalCompletion","isMemberCompletion","isNewIdentifierLocation","entries","getCompletionsAt","results_1","ours","getHoverAt","displayParts","tags","documentation","textSpan","getDiagnostics","file_1","getDefinitionAt","ours_1","loc","containerName","containerKind","fs__default","path__default","ts__default","setPrototypeOf","__proto__","createInject","createInjectionToken","desc","_desc","createAttribute","attributeName","createContentChildren","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","createNgModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createInjectable","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","CatQuery","Types","DepFlags","Value","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","RenderElement","TemplateRef","ViewContainerRef","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION$1","TextAst","BoundTextAst","AttrAst","BoundElementPropertyAst","BoundEventAst","calcFullName","ReferenceAst","VariableAst","variables","BoundDirectivePropertyAst","directiveName","DirectiveAst","hostProperties","hostEvents","Builtin","NullTemplateVisitor","jitDevMode","assertNoMembers","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileAnimationEntryMetadata","definitions","CompileAnimationStateMetadata","CompileAnimationStateDeclarationMetadata","stateNameExpr","styles","CompileAnimationStateTransitionMetadata","stateChangeExpr","steps","CompileAnimationMetadata","CompileAnimationKeyframesSequenceMetadata","CompileAnimationStyleMetadata","CompileAnimationAnimateMetadata","timings","CompileAnimationWithStepsMetadata","CompileAnimationSequenceMetadata","CompileAnimationGroupMetadata","CompileSummaryKind","Injectable","CompileStylesheetMetadata","styleUrls","CompileTemplateMetadata","externalStylesheets","animations","ngContentSelectors","interpolation","toSummary","anim","CompileDirectiveMetadata","isHost","hostListeners","componentViewType","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","childOf","Expansion","ExpansionCase","expSourceSpan","startSourceSpan","InterpolationConfig","fromArray","markers","style","RAW_TEXT","ESCAPABLE_RAW_TEXT","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","_dedupeBindings","names","reversedResult","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","isClosedByChild","_getParentElementSkippingContainers","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","stackIndex","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","_f","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","textDef","directiveDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","_SELECTOR_REGEXP","classNames","_addResult","cssSel","inNot","hasElementSelector","getMatchingElementTemplate","classAttr","klass","notSelector","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","isNgModule","getNgModuleSummary","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","oldModule","modulesByToken","modSummary","mod","addedTokens","tokenRef","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","hasUnknownDeps","dependenciesMetadata","isSelf","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassField","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","ProviderViewContext","ProviderElementContext","viewContext","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","foundLocal","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","sourceFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","srcFilePath","emitSourceMaps","referenceFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","metas","ElementSchemaRegistry","BOOLEAN$1","NUMBER$1","STRING$1","OBJECT$1","SCHEMA$1","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","isHostComponent","refOutputVars","updates","actions","getOutputVar","targetStatements","viewStmts","preprocessUpdateExpression","nameResolver","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","_preprocessUpdateExpression","_visitElementOrTemplate","queryMatchesExpr","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","createUpdateStatements","allowEmptyExprs","updateBindingCount","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","GeneratedFile","sourceOrStmts","indexBySymbol","processedSummaryBySymbol","processedSummaries","getKnownModuleName","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","ngModuleSummary","summary_1","importAs","__symbol","toSummaryFileName","baseSymbol","visitStaticSymbol","loadSummary","isLibrary","ngModuleSymbols","serializeSummaryWithDeps","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","loadingPromises","loadFilesSync","emitFlags","ngModuleIndex","typeIndex","dirId","_createTypeCheckBlock","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","arity","getTypeArity","getImportAs","importModule","fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","stylesheetMetadata","compiledStylesheet","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","staticSymbol","findSymbolDeclaration","getResourcePath","refSymbol","getSymbolByModule","declarationSymbol","recordModuleNameForFileName","recordImportAs","findDeclaration","containingFile","tryFindDeclaration","ignoreErrorsFor","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","decorators","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","lcProperty","injectionToken","opaqueToken","ROUTES","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","PopulatedScope","ResolvedStaticSymbol","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","importedFilePath","containingFilePath","sourceSymbol","targetSymbol","invalidateFile","symbols_1","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","createResolvedSymbol","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor","VERSION","commonjsGlobal","window","isModuleMetadata","isClassMetadata","isInterfaceMetadata","isMemberMetadata","isMethodMetadata","isConstructorMetadata","isFunctionMetadata","isMetadataSymbolicExpression","isMetadataSymbolicBinaryExpression","isMetadataSymbolicIndexExpression","isMetadataSymbolicCallExpression","isMetadataSymbolicPrefixExpression","isMetadataSymbolicIfExpression","isMetadataGlobalReferenceExpression","isMetadataSymbolicReferenceExpression","isMetadataModuleReferenceExpression","default","isMetadataImportedSymbolReferenceExpression","isMetadataImportDefaultReference","isMetadataSymbolicSelectExpression","isMetadataSymbolicSpreadExpression","isMetadataError","METADATA_VERSION","evaluator","isMethodCallOf","callExpression","PropertyAccessExpression","propertyAccessExpression","isCallOf","ident","everyNodeChild","getSourceFileOfNode","SourceFile","errorSymbol","getLineAndCharacterOfPosition","isPropertyAssignment","PropertyAssignment","arrayOrEmpty","spreadElementSyntaxKind","SpreadElement","SpreadElementExpression","Evaluator","nodeMap","recordExport","nameOf","evaluateNode","received","getText","isFoldable","isFoldableWorker","folding","ObjectLiteralExpression","propertyAssignment","initializer","ArrayLiteralExpression","CallExpression","arrayNode","arrayValue","NoSubstitutionTemplateLiteral","StringLiteral","NumericLiteral","NullKeyword","TrueKeyword","FalseKeyword","TemplateHead","TemplateMiddle","TemplateTail","ParenthesizedExpression","parenthesizedExpression","BinaryExpression","binaryExpression","operatorToken","PlusToken","MinusToken","AsteriskToken","SlashToken","PercentToken","AmpersandAmpersandToken","BarBarToken","ElementAccessExpression","elementAccessExpression","argumentExpression","TemplateExpression","templateSpans","preferReference","recordEntry","substituteExpression","newEntry","isFoldableError","verboseInvalidExpression","resolveName","obj_1","quoted_1","ShorthandPropertyAssignment","assignment","propertyValue","quotedNames","arr_1","spreadValue","firstArgument","ArrowFunction","arrowFunction","NewExpression","newExpression","newArgs","newTarget","expression_1","expression_2","TypeReference","typeReferenceNode","typeNameNode_1","typeReference","QualifiedName","qualifiedName","left_1","identifier_1","typeArguments","args_1","UnionType","unionType","UndefinedKeyword","AnyKeyword","StringKeyword","NumberKeyword","BooleanKeyword","arrayTypeNode","elementType","TypeAssertionExpression","typeAssertion","PrefixUnaryExpression","prefixUnaryExpression","TildeToken","ExclamationToken","operatorText","AmpersandToken","BarToken","CaretToken","EqualsEqualsToken","ExclamationEqualsToken","EqualsEqualsEqualsToken","ExclamationEqualsEqualsToken","LessThanToken","GreaterThanToken","LessThanEqualsToken","GreaterThanEqualsToken","LessThanLessThanToken","GreaterThanGreaterThanToken","GreaterThanGreaterThanGreaterThanToken","ConditionalExpression","conditionalExpression","thenExpression","whenTrue","elseExpression","whenFalse","FunctionExpression","TaggedTemplateExpression","templateExpression","previous","head","AsExpression","asExpression","ClassExpression","createNodeArray","populateBuiltins","Symbols","defineReference","_symbols","buildImports","stripQuotes","ImportEqualsDeclaration","importEqualsDeclaration","moduleReference","ExternalModuleReference","externalReference","from_1","ImportDeclaration","importDecl","importClause","moduleSpecifier","namedBindings","NamedImports","NamespaceImport","validateMetadata","validateExpression","locals","validateFunction","indexExpression","prefixExpression","selectExpression","spreadExpression","ifExpression","validateMember","classData","parameterDecorators","validateClass","staticMember","functionDeclaration","oldLocals","shouldReportNode","nodeStart","lineInfo","namesOf","addNamesOf","bindingPattern","name_11","parameters_2","isStatic","getCombinedModifierFlags","ModifierFlags","Static","MetadataCollector","getMetadata","objFromDecorator","decoratorNode","evaluator$$1","errorSym","maybeGetSimpleFunction","nameNode","functionName","functionBody","statement","returnStatement","func","classMetadataOf","classDeclaration","getDecorators","decorator","referenceFrom","recordMember","recordStaticMember","heritageClauses","hc","ExtendsKeyword","extends","typeParameters","isConstructor","Constructor","MethodDeclaration","maybeFunc","methodDecorators","parameterDecoratorData","parametersData","hasDecoratorData","hasParameterData","parameterData","PropertyDeclaration","GetAccessor","SetAccessor","propertyDecorators","composedSubstituter","evaluatorOptions","exportMap","ExportDeclaration","exportDeclaration","exportClause","exportedAs","isExport","isDeclarationFile","Export","isExportedIdentifier","isExported","exportedIdentifierName","exportedName","ClassDeclaration","InterfaceDeclaration","interfaceDeclaration","interfaceName","FunctionDeclaration","propNode","name_4","TypeAliasDeclaration","typeDeclaration","name_5","name_6","name_7","EnumDeclaration","enumDeclaration","enumValueHolder","enumName","nextDefaultValue","writtenMembers","enumValue","name_8","VariableStatement","variableStatement","declarationList","variableDeclaration","exported","name_9","report_1","name_10","BindingElement","ObjectBindingPattern","ArrayBindingPattern","bundler","importName","normalPath","normalize","getRootExport","reexportedAs","getSymbolDeclaration","PRIVATE_NAME_CHARS","MetadataBundler","symbolMap","rootModule","basename","getMetadataBundle","exportedSymbols","exportAll","canonicalizeSymbols","getEntries","privates","referenced","isPrivate","privateName","origins","getReExports","fullModuleName","exportedSymbol","symbolOf","exportFrom","exportItem","exportedSymbols_1","exportedSymbols_2","canonicalizeSymbol","rootExport","canonicalSymbol","newPrivateName","digits","exportedNames","convertSymbol","symbolsMap","declaredName","reference_1","exportAlls","exportedSymbols_3","module_2","module_3","convertEntry","convertClass","convertFunction","convertValue","convertExpression","convertMembers","convertStatics","convertMember","convertError","object","convertReference","convertExpressionNode","createReference","canonicalSymbolOf","referencedModule","referencedName","symbolKey","CompilerHostAdapter","ScriptTarget","Latest","index_writer","privateEntriesToIndex","INDEX_HEADER","privates_1","compareEntries","compare","compareModules","orderedExports","orderedExports_1","select","ak","bk","bundle_index_host","createSyntheticIndexHost","syntheticIndex","normalSyntheticIndexName","indexContent","indexMetadata","newHost","fileExists","readFile","languageVersion","createSourceFile","writeFile","writeByteOrderMark","sourceFiles","DTS","metadataName","writeFileSync","createBundleIndexHost","ngOptions","indexModule","bundler$$1","flatModuleId","metadataBundle","flatModuleOutFile","JS_EXT","libraryIndex","indexName","__export","compiler_1","compiler_host","EXT","IS_GENERATED","GENERATED_FILES","GENERATED_OR_DTS_FILES","SHALLOW_IMPORT","BaseAotCompilerHost","resolverCache","flatModuleIndexCache","flatModuleIndexNames","flatModuleIndexRedirectNames","metadatas","readMetadata","upgradeMetadataWithDtsData","getMetadataForSourceFile","dtsFilePath","metadataPath","metadataOrMetadatas","metadatas_1","maxMetadata","oldMetadata","newMetadata","dtsMetadata","readResource","generateCodeForLibraries","hasBundleIndex","normalFilePath","checkBundleIndex","directory","packageFile","packageContent","typings","metadataFile","flatModuleIndexRedirect","CompilerHost","program","collectorOptions","moduleFileNames","metadataProvider","genDir","genPath","relative","isGenDirChildOfRootDir","resolveModuleNameHost","sf","calculateEmitPath","rootDirs","eachRootDir","relativePath","getCanonicalFileName","resolveModuleName","resolvedFileName","importedFile","assumeFileExists","rewriteGenDirPath","containingDir","nodeModulesIndex","dotRelative","filepath","to","rPath","CompilerHostContextAdapter","assumedExists","ModuleResolutionHostAdapter","directoryExists","directoryName","NodeCompilerHostContext","statSync","isDirectory","readFileSync","symbols$2","expression_type","TypeDiagnostic","AstType","diagnostics","callable","reportWarning","Undefined","Null","Other","nullable","getNonNullableType","leftType","rightType","leftRawKind","getTypeKind","rightRawKind","leftKind","rightKind","operKind","errorAst","Boolean","anyType","getTypeUnion","selectSignature","public","signatures","indexed","argument","undefinedType","targetType","keyType","getArrayType","resolveMethodCall","expType","resolvePropertyRead","_anyType","_undefinedType","isAny","receiverInfo","expression_diagnostics","getTemplateExpressionDiagnostics","ExpressionDiagnosticsVisitor","includeEvent","getExpressionScope","getExpressionDiagnostics","analyzer","getReferences","processReferences","references_1","getDefinitionOf","templateOffset","getVarDeclarations","getTemplateContext","Unbound","refinedVariableType","templateElement","ngForDirective","ngForOfBinding","getElementType","getEventDeclaration","referenceTable","createSymbolTable","variableTable","eventsTable","mergeSymbolTable","diagnoseExpression","attributeValueLocation","directiveSummary","previousDirectiveSummary","typescript_symbols","getSymbolQuery","checker","fetchPipes","TypeScriptSymbolQuery","getClassMembers","getClassFromStaticSymbol","getTypeAtLocation","TypeWrapper","getClassMembersFromDeclaration","getPipesTable","PipesTable","typeCallable","getCallSignatures","signaturesOf","SignatureWrapper","toSymbols","symbolTable","table","own","findClassSymbolInContext","moduleSymbol","getExportsOfModule","isSymbolPrivate","valueDeclaration","getBuiltinTypeFromTs","setParents","numeric","VoidExpression","definitionFromTsSymbol","parentDeclarationOf","getContainerOf","getFlags","SymbolFlags","ClassMember","getTypeParameterOf","typeKindOf","TypeFlags","StringLike","NumberLike","Union","TypeParameter","getFromSymbolTable","toNumbers","compareNumbers","isReferenceType","ObjectFlags","objectFlags","Reference","typeCache","getTsTypeOf","tsType","nonNullableType","pipesCache","contextType","getTemplateRefContextType","SymbolWrapper","MapSymbolTable","addAll","DeclaredSymbol","symbolTables","symbolTables_1","getSpanAt","getTypeOfSymbolAtLocation","constructorDeclaration","type_1","getTypeWrapper","getSymbol","SymbolTableWrapper","getProperties","Alias","getAliasedSymbol","_members","Interface","getDeclaredTypeOfSymbol","typeWrapper","_tsType","getParameters","getReturnType","SignatureResultOverride","resultType","toSymbolTable","tsNumbers","symbols_2","symbols_3","_values","symbols_4","PipeSymbol","EmptyTable","parameterType","findClassSymbol","findTransformMethodType","classType","getProperty","language_services","language_services_1","language_services_2","language_services_13","language_services_14","language_services_15","__window$1","__self$1","WorkerGlobalScope","__global$1","_root","root_1","isFunction_2","isFunction_1","isArray_1","isObject_2","errorObject_1","tryCatch_2","tryCatch_1","__extends$2","UnsubscriptionError_2","Subscription","_parents","_subscriptions","_unsubscribe","hasErrors","trial","teardown","_addParent","tmp","subscriptions","subscriptionIndex","Subscription_2","Subscription_1","Symbol","$$rxSubscriber","__extends$1","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","Subscriber_2","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","toSubscriber_2","toSubscriber_1","getSymbolObservable","$$observable","_subscribe","observable$$1","sink","_trySubscribe","PromiseCtor","Rx","reject","Observable_2","__extends$4","ScalarObservable","dispatch","ScalarObservable_2","ScalarObservable_1","__extends$5","EmptyObservable","EmptyObservable_2","EmptyObservable_1","isScheduler_2","__extends$3","ArrayObservable_2","__extends$7","OuterSubscriber","notifyNext","innerValue","innerIndex","innerSub","notifyError","notifyComplete","OuterSubscriber_2","OuterSubscriber_1","isArrayLike_1","isPromise_2","symbolIteratorPonyfill","root$$2","Set_1","Map_1","$$iterator","__extends$8","InnerSubscriber_2","subscribeToResult_2","subscribeToResult_1","__extends$6","mergeAll_2","observer","MergeAllSubscriber","MergeAllOperator_1","hasCompleted","active","shift","MergeAllSubscriber_1","merge_2$1","mergeStatic_1","merge_1","merge_2","__extends$11","ObjectUnsubscribedError","ObjectUnsubscribedError_2","ObjectUnsubscribedError_1","__extends$12","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscription_2","SubjectSubscription_1","__extends$10","SubjectSubscriber","SubjectSubscriber_1","hasError","thrownError","AnonymousSubject","asObservable","Subject_2","AnonymousSubject_1","__extends$9","ConnectableObservable","_refCount","_isComplete","getSubject","_subject","connect","connection","_connection","ConnectableSubscriber","RefCountOperator","ConnectableObservable_2","connectableProto","refCounter","RefCountSubscriber","sharedConnection","multicast_2","MulticastOperator_1","share_2","ChangeDetectionStrategy$1","Directive$1","NgModule$1","Version$1","VERSION$2","__window","__self","__global","_THROW_IF_NOT_FOUND","_NullInjector","StaticInjector","NULL","GET_PROPERTY_NAME","ɵ2","objWithPropertyToExtract","_records","tokenPath","_findOriginalError","_findContext","errorLogger","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","_ownAnnotations","ownAnnotations","_ownPropMetadata","propDecorators","propDecorators_1","propMetadata_1","ownPropMetadata","setter","importUri","resourceUri","resolveIdentifier","resolveEnum","enumIdentifier","Reflector","reflectionCapabilities","updateCapabilities","caps","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_constructionCounter","keyIds","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","APP_INITIALIZER","ApplicationInitStatus","appInits","donePromise","rej","runInitializers","asyncInitPromises","initResult","APP_ID","APP_ID_RANDOM_PROVIDER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","Console","log","Compiler","CompilerFactory","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryBoundToModule","wtfEnabled","wtf","wtfCreateScope","wtfLeave","EventEmitter","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","assertZonePatched","_outer","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZoneInjector","exceptionHandler","onDestroy","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","createCompiler","appRef","ApplicationRef","_bootstrapComponents","ngDoBootstrap","listener","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","stableSub","unstableSub","componentOrFactory","compRef","_unloadComponent","nativeElement","_loadComponent","_tickScope","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","Renderer2","_results","toArray","ViewRef","EventListener","EmbeddedViewRef","DebugNode","_debugContext","addChild","listeners","providerTokens","classes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","queryAllNodes","triggerEventHandler","eventObj","wrap","previousValue","currentValue","firstChange","isFirstChange","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","forEachOperation","nextIt","nextRemove","adjPreviousIndex","currentIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","factories","copied","extend","iterable","KeyValueDiffers","kv","keyValDiff","iterableDiff","_CORE_PLATFORM_PROVIDERS","parentPlatformFactory","ApplicationModule","WeakMap","EMPTY_CONTEXT","ComponentRef_","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","componentNodeIndex","_view","_viewRef","_component","_elDef","changeDetectorRef","_data","attachToViewContainerRef","templateRef","insert","ngModuleRef","contextInjector","viewRef_","viewData","move","detach","_viewContainerRef","_appRef","markForCheck","fs$$1","begin","reattach","vcRef","_parentView","namespaceAndName","createViewRoot","createTemplateAnchor","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","_moduleType","elView","elOrCompView","childDef","logViewDef","logNodeIndex","currRenderNodeIndex","nodeLogger","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","NgModuleFactory_","_ngModuleDefFactory","onclick","ondblclick","onmousedown","onmouseup","onmouseover","onmousemove","onmouseout","onkeypress","onkeydown","onkeyup","onload","onunload","href","alt","media","nohref","usemap","onfocus","onblur","charset","declare","classid","codebase","codetype","archive","standby","cite","datetime","accept","shape","coords","enctype","onsubmit","onreset","accept-charset","valuetype","longdesc","width","disabled","onselect","accesskey","multiple","onchange","label","selected","checked","maxlength","rows","cols","height","border","frame","rules","cellspacing","cellpadding","datapagesize","align","charoff","valign","abbr","axis","headers","rowspan","colspan","profile","http-equiv","scheme","hreflang","rel","rev","ismap","defer","BIG","STRONG","DFN","CODE","SAMP","KBD","VAR","CITE","ABBR","ACRONYM","SPAN","BDO","BODY","ADDRESS","DIV","MAP","AREA","IMG","OBJECT","PARAM","PRE","BLOCKQUOTE","INS","DEL","DL","DT","DD","FORM","LABEL","INPUT","SELECT","OPTGROUP","OPTION","TEXTAREA","FIELDSET","LEGEND","BUTTON","TABLE","CAPTION","COLGROUP","COL","HEAD","TITLE","BASE","META","NOSCRIPT","SCHEMA","EVENT","BOOLEAN","NUMBER","STRING","typeParts","allKnownElements","typeOf","_instance","noscript","getExpressionScope$$1","key_1","selectorInfo","selector_1","templateBindingResult","valueRelativePosition_1","keyCompletions","equalLocation","directiveMetadata","contextTable","symbolsToCompletions","completions","attributeValuePosition","sym","kindOverride","getTemplates","getDeclarations","getAnalyzedModules","getPipesAt","getTemplateAstAtPosition","getTemplateAt","contextFile","resolvedMetadata","rawHtmlParser","parser","htmlResult","resolvedDirectives","ReflectorModuleModuleResolutionHost","getScriptSnapshot","snapshot","getLength","ReflectorHost","DummyHtmlParser","DummyResourceLoader","tsService","_typeCache","modulesOutOfDate","fileVersions","validate","_resolver","moduleResolver","directiveResolver","pipeResolver","resourceLoader","directiveNormalizer","collectError","ensureTemplateMap","templateReferences","getSourceFromNode","getScriptVersion","fileToComponent","getSourceFromType","ensureAnalyzedModules","analyzeHost","programFiles","getSourceFiles","version_1","visit_1","templateSource","visit_2","getDeclarationFromNode","updateAnalyzedModules","_checker","getTypeChecker","_staticSymbolResolver","lastProgram","clearCaches","seen_1","version$$1","collectedErrors","templateReference","getSourceFromDeclaration","queryCache","pipes_1","getTemplateClassDeclFromNode","stringOf","getTemplateClassFromStaticSymbol","_reflectorHost","getScriptFileNames","tsConfigPath","getCompilationSettings","errorMap","reflectorHost","ssr","currentToken","missingTemplate","callTarget","Decorator","getCollectedErrors","defaultSpan","process","argv"],"mappings":"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9C,KAC5B,eAAgB,YAAa,YAAa,YAAa,SACvD,SAAU,kBAAmB,kBAAmB,WAAY,cAC5D,UAAW,aAAc,YAAa,WAAY,SAClD,aAAc,gBAAiB,YAAa,eAAgB,cAEhEtiD,gBAAgBkF,gBAAgBq9C,cAC5B,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA,cAUJ,IAAIkjD,uBAAyB,WACzB,QAASA,0BAET,MAAOA,0BAcPC,UAAY,UACZC,SAAW,SACXC,SAAW,SACXC,SAAW,SA2CXC,UACA,iYAEA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC;iwUACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZtvF,yBAA4B,SAAUl7B,QAEtC,QAASk7B,4BACL,GAAIxD,OAAQ13B,OAAOklC,KAAK1vC,OAASA,IAqCjC,OApCAkiC,OAAM+yF,WACNR,SAAS7tH,QAAQ,SAAUsuH,aACvB,GAAqB9uH,SACjB+S,GAAK+7G,YAAY3rH,MAAM,KAAM4rH,QAAUh8G,GAAG,GAAIi8G,cAAgBj8G,GAAG,GAChD0iC,WAAau5E,cAAc7rH,MAAM,KAClD+P,GAAK67G,QAAQ5rH,MAAM,KAAM8rH,UAAY/7G,GAAG,GAAIg8G,UAAYh8G,GAAG,EAC/D+7G,WAAU9rH,MAAM,KAAK3C,QAAQ,SAAU+Y,KAAO,MAAOuiB,OAAM+yF,QAAQt1G,IAAInS,eAAiBpH,MACxF,IAAqBmvH,WAAYD,WAAapzF,MAAM+yF,QAAQK,UAAU9nH,cAClE+nH,YACA31H,OAAOg3B,KAAK2+F,WAAW3uH,QAAQ,SAAUqoB,MAAQ7oB,KAAK6oB,MAAQsmG,UAAUtmG,QAE5E4sB,WAAWj1C,QAAQ,SAAU4uH,UACzB,GAAIA,SAASvzH,OAAS,EAClB,OAAQuzH,SAAS,IACb,IAAK,IAMD,KACJ,KAAK,IACDpvH,KAAKovH,SAAStvH,UAAU,IAAMmuH,SAC9B,MACJ,KAAK,IACDjuH,KAAKovH,SAAStvH,UAAU,IAAMouH,QAC9B,MACJ,KAAK,IACDluH,KAAKovH,SAAStvH,UAAU,IAAMsuH,QAC9B,MACJ,SACIpuH,KAAKovH,UAAYjB,cAK9BryF,MAmNX,MA1PA7hC,WAAUqlC,yBAA0Bl7B,QA+CpCk7B,yBAAyB/kC,UAAU80H,YAMnC,SAAUlpH,QAASymB,SAAU0iG,aACzB,GAAIA,YAAYvkG,KAAK,SAAUwkG,QAAU,MAAOA,QAAO/2H,OAAS8xE,iBAAiB9xE,OAC7E,OAAO,CAEX,IAAI2N,QAAQpJ,QAAQ,MAAQ,EAAG,CAC3B,GAAImJ,cAAcC,UAAYC,YAAYD,SACtC,OAAO,CAEX,IAAImpH,YAAYvkG,KAAK,SAAUwkG,QAAU,MAAOA,QAAO/2H,OAAS6xE,uBAAuB7xE,OAGnF,OAAO,EAIf,SADyCoB,KAAKi1H,QAAQ1oH,QAAQiB,gBAAkBxN,KAAKi1H,QAAiB,SAC3EjiG,WAO/B0S,yBAAyB/kC,UAAUi1H,WAKnC,SAAUrpH,QAASmpH,aACf,GAAIA,YAAYvkG,KAAK,SAAUwkG,QAAU,MAAOA,QAAO/2H,OAAS8xE,iBAAiB9xE,OAC7E,OAAO,CAEX,IAAI2N,QAAQpJ,QAAQ,MAAQ,EAAG,CAC3B,GAAImJ,cAAcC,UAAYC,YAAYD,SACtC,OAAO,CAEX,IAAImpH,YAAYvkG,KAAK,SAAUwkG,QAAU,MAAOA,QAAO/2H,OAAS6xE,uBAAuB7xE,OAEnF,OAAO,EAGf,QAASoB,KAAKi1H,QAAQ1oH,QAAQiB,gBA0BlCk4B,yBAAyB/kC,UAAUizB,gBAcnC,SAAUrnB,QAASymB,SAAUC,aACrBA,cAEAD,SAAWhzB,KAAK61H,kBAAkB7iG,WAItCzmB,QAAUA,QAAQiB,cAClBwlB,SAAWA,SAASxlB,aACpB,IAAqB2c,KAAM4E,gBAAgBxiB,QAAU,IAAMymB,SAC3D,OAAI7I,QAGJA,IAAM4E,gBAAgB,KAAOiE,YACVa,gBAAgBC,OAMvC4R,yBAAyB/kC,UAAUk1H,kBAInC,SAAU7iG,UAAY,MAAO0hG,eAAc1hG,WAAaA,UAIxD0S,yBAAyB/kC,UAAU68G,+BAGnC,WAAc,MAAO,gBAKrB93E,yBAAyB/kC,UAAUm1H,iBAInC,SAAUl3H,MACN,GAAIA,KAAK4O,cAAc6Q,WAAW,MAAO,CAKrC,OAAS7Z,OAAO,EAAMF,IAJK,8BAAgC1F,KAAO,qDAC5CA,KAAKwE,MAAM,GAAK,cACtBxE,KAAO,sFAKvB,OAAS4F,OAAO,IAOxBkhC,yBAAyB/kC,UAAUo1H,kBAInC,SAAUn3H,MACN,GAAIA,KAAK4O,cAAc6Q,WAAW,MAAO,CAGrC,OAAS7Z,OAAO,EAAMF,IAFK,+BAAiC1F,KAAO,qDAC7CA,KAAKwE,MAAM,GAAK,SAItC,OAASoB,OAAO,IAMxBkhC,yBAAyB/kC,UAAU2yB,qBAGnC,WAAc,MAAO1zB,QAAOg3B,KAAK52B,KAAKi1H,UAKtCvvF,yBAAyB/kC,UAAUq1H,gCAInC,SAAUhjG,UACN,MAAOzwB,qBAAoBywB,WAQ/B0S,yBAAyB/kC,UAAUs1H,6BAMnC,SAAUC,cAAeC,iBAAkBjyH,KACvC,GAAqBo2B,MAAO,GACP87F,OAASlyH,IAAI8B,WAAW3C,OACxB62F,SAA4B,IACjD,IAAIlrE,uBAAuBknG,gBAA0B,IAARhyH,KAAqB,MAARA,IACtD,GAAmB,gBAARA,KACPo2B,KAAO,SAEN,CACD,GAAqB+7F,mBAAoBnyH,IAAIqH,MAAM,yBAC/C8qH,oBAAoD,GAA/BA,kBAAkB,GAAGp0H,SAC1Ci4F,SAAW,uCAAyCi8B,iBAAmB,IAAMjyH,KAIzF,OAASM,MAAO01F,SAAU32F,MAAO6yH,OAAS97F,OAEvCoL,0BACT0uF,uBA6CEkC,UAAa,WACb,QAASA,aACLt2H,KAAKu2H,eAAgB,EAibzB,MAjaAD,WAAU31H,UAAU61H,YAMpB,SAAU5qH,QAASkkB,SAAU2mG,kBACJ,KAAjBA,eAA2BA,aAAe,GAC9C,IAAqBC,kBAAmBtnG,wBAAwBxjB,QAGhE,OAFAA,SAAUsjB,cAActjB,SACxBA,QAAU5L,KAAK22H,kBAAkB/qH,SAC1B5L,KAAK42H,cAAchrH,QAASkkB,SAAU2mG,cAAgBC,kBAMjEJ,UAAU31H,UAAUg2H,kBAIpB,SAAU/qH,SAEN,MADAA,SAAU5L,KAAK62H,mCAAmCjrH,SAC3C5L,KAAK82H,8BAA8BlrH,UAM9C0qH,UAAU31H,UAAUk2H,mCAIpB,SAAUjrH,SAEN,MAAOA,SAAQnJ,QAAQs0H,0BAA2B,WAE9C,IAAK,GADDp0H,MACKZ,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCY,EAAEZ,IAAMC,UAAUD,GAEtB,OAAOY,GAAE,GAAK,OAOtB2zH,UAAU31H,UAAUm2H,8BAIpB,SAAUlrH,SAEN,MAAOA,SAAQnJ,QAAQu0H,kBAAmB,WAEtC,IAAK,GADDr0H,MACKZ,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCY,EAAEZ,IAAMC,UAAUD,GAEtB,IAAqBquB,MAAOztB,EAAE,GAAGF,QAAQE,EAAE,GAAI,IAAIF,QAAQE,EAAE,GAAI,GACjE,OAAOA,GAAE,GAAKytB,QAStBkmG,UAAU31H,UAAUi2H,cAMpB,SAAUhrH,QAASqrH,cAAeR,cAC9B,GAAqBS,eAAgBl3H,KAAKm3H,iCAAiCvrH,QAU3E,OARAA,SAAU5L,KAAKo3H,6BAA6BxrH,SAC5CA,QAAU5L,KAAKq3H,kBAAkBzrH,SACjCA,QAAU5L,KAAKs3H,yBAAyB1rH,SACxCA,QAAU5L,KAAKu3H,2BAA2B3rH,SACtCqrH,gBACArrH,QAAU5L,KAAKw3H,gBAAgB5rH,QAASqrH,cAAeR,eAE3D7qH,QAAUA,QAAU,KAAOsrH,cACpBtrH,QAAQvI,QAMnBizH,UAAU31H,UAAUw2H,iCAIpB,SAAUvrH,SAEN,GACqBjJ,GADA80H,EAAI,EAGzB,KADAC,0BAA0BtgG,UAAY,EACmB,QAAjDz0B,EAAI+0H,0BAA0Bz1D,KAAKr2D,WAAoB,CAE3D6rH,GAD4B90H,EAAE,GAAGF,QAAQE,EAAE,GAAI,IAAIF,QAAQE,EAAE,GAAIA,EAAE,IACvD,OAEhB,MAAO80H,IAMXnB,UAAU31H,UAAU02H,kBAIpB,SAAUzrH,SACN,MAAO5L,MAAK23H,kBAAkB/rH,QAASgsH,gBAAiB53H,KAAK63H,yBAMjEvB,UAAU31H,UAAU22H,yBAIpB,SAAU1rH,SACN,MAAO5L,MAAK23H,kBAAkB/rH,QAASksH,uBAAwB93H,KAAK+3H,gCAQxEzB,UAAU31H,UAAUg3H,kBAMpB,SAAU/rH,QAASosH,OAAQC,cAEvB,MAAOrsH,SAAQnJ,QAAQu1H,OAAQ,WAE3B,IAAK,GADDr1H,MACKZ,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCY,EAAEZ,IAAMC,UAAUD,GAEtB,IAAIY,EAAE,GAAI,CAGN,IAAK,GAFgBoV,OAAQpV,EAAE,GAAG4G,MAAM,KACnBkuH,KACK3sH,EAAI,EAAGA,EAAIiN,MAAM9V,OAAQ6I,IAAK,CACpD,GAAqB0T,GAAIzG,MAAMjN,GAAGzH,MAClC,KAAKmb,EACD,KACJi5G,GAAE3wH,KAAKmxH,aAAaC,0BAA2B15G,EAAG7b,EAAE,KAExD,MAAO80H,GAAE5xH,KAAK,KAGd,MAAOqyH,2BAA4Bv1H,EAAE,MAUjD2zH,UAAU31H,UAAUo3H,8BAMpB,SAAU/3F,KAAMnP,KAAMb,QAClB,MAAIa,MAAK1tB,QAAQg1H,gBAAkB,EACxBn4H,KAAK63H,uBAAuB73F,KAAMnP,KAAMb,QAGxCgQ,KAAOnP,KAAOb,OAAS,KAAOa,KAAO,IAAMmP,KAAOhQ,QASjEsmG,UAAU31H,UAAUk3H,uBAMpB,SAAU73F,KAAMnP,KAAMb,QAClB,MAAOgQ,MAAOnP,KAAKpuB,QAAQ01H,cAAe,IAAMnoG,QAMpDsmG,UAAU31H,UAAU42H,2BAIpB,SAAU3rH,SACN,MAAOwsH,uBAAsB7vH,OAAO,SAAU5I,OAAQwV,SAAW,MAAOxV,QAAO8C,QAAQ0S,QAAS,MAASvJ,UAQ7G0qH,UAAU31H,UAAU62H,gBAMpB,SAAU5rH,QAASqrH,cAAeR,cAC9B,GAAIv0F,OAAQliC,IACZ,OAAOuvB,cAAa3jB,QAAS,SAAUwkB,MACnC,GAAqBN,UAAWM,KAAKN,SAChBC,QAAUK,KAAKL,OASpC,OARwB,KAApBK,KAAKN,SAAS,GACdA,SACIoS,MAAMm2F,eAAejoG,KAAKN,SAAUmnG,cAAeR,aAAcv0F,MAAMq0F,gBAEtEnmG,KAAKN,SAASzR,WAAW,WAAa+R,KAAKN,SAASzR,WAAW,cACpE+R,KAAKN,SAASzR,WAAW,UAAY+R,KAAKN,SAASzR,WAAW,gBAC9D0R,QAAUmS,MAAMs1F,gBAAgBpnG,KAAKL,QAASknG,cAAeR,eAE1D,GAAIpmG,SAAQP,SAAUC,YAUrCumG,UAAU31H,UAAU03H,eAOpB,SAAUvoG,SAAUmnG,cAAeR,aAAc6B,QAC7C,GAAIp2F,OAAQliC,IACZ,OAAO8vB,UAASvmB,MAAM,KACjBtJ,IAAI,SAAU4wB,MAAQ,MAAOA,MAAKxtB,OAAOkG,MAAMgvH,wBAC/Ct4H,IAAI,SAAUu4H,WACf,GAAIC,aAAcD,UAAU,GAAIE,WAAaF,UAAUp1H,MAAM,EAW7D,QAVkC,SAAUq1H,aACxC,MAAIv2F,OAAMy2F,sBAAsBF,YAAaxB,eAClCqB,OACHp2F,MAAM02F,0BAA0BH,YAAaxB,cAAeR,cAC5Dv0F,MAAM22F,oBAAoBJ,YAAaxB,cAAeR,cAGnDgC,aAGIA,cAAc9vH,OAAO+vH,YAAY7yH,KAAK,OAExDA,KAAK,OAOdywH,UAAU31H,UAAUg4H,sBAKpB,SAAU7oG,SAAUmnG,eAEhB,OAD0Bj3H,KAAK84H,kBAAkB7B,eACtC7rH,KAAK0kB,WAMpBwmG,UAAU31H,UAAUm4H,kBAIpB,SAAU7B,eACN,GAAqB8B,KAAM,MACNC,IAAM,KAE3B,OADA/B,eAAgBA,cAAcx0H,QAAQs2H,IAAK,OAAOt2H,QAAQu2H,IAAK,OACxD,GAAI5jH,QAAO,KAAO6hH,cAAgB,IAAMgC,kBAAmB,MAQtE3C,UAAU31H,UAAUk4H,oBAMpB,SAAU/oG,SAAUmnG,cAAeR,cAE/B,MAAOz2H,MAAKk5H,0BAA0BppG,SAAUmnG,cAAeR,eAQnEH,UAAU31H,UAAUu4H,0BAMpB,SAAUppG,SAAUmnG,cAAeR,cAG/B,GADA0C,gBAAgB/hG,UAAY,EACxB+hG,gBAAgB/tH,KAAK0kB,UAAW,CAChC,GAAqBspG,aAAcp5H,KAAKu2H,cAAgB,IAAME,aAAe,IAAMQ,aACnF,OAAOnnG,UACFrtB,QAAQ42H,4BAA6B,SAAUC,IAAKxpG,UACrD,MAAOA,UAASrtB,QAAQ,kBAAmB,SAAU+d,EAAG+3E,OAAQghC,MAAO/gC,OACnE,MAAOD,QAAS6gC,YAAcG,MAAQ/gC,UAGzC/1F,QAAQ02H,gBAAiBC,YAAc,KAEhD,MAAOnC,eAAgB,IAAMnnG,UAQjCwmG,UAAU31H,UAAUi4H,0BAMpB,SAAU9oG,SAAUmnG,cAAeR,cAC/B,GAAIv0F,OAAQliC,KACSw5H,KAAO,kBAC5BvC,eAAgBA,cAAcx0H,QAAQ+2H,KAAM,SAAUh5G,GAElD,IAAK,GADDzI,UACKhW,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCgW,MAAMhW,GAAK,GAAKC,UAAUD,GAE9B,OAAOgW,OAAM,IAEjB,IAAqB6c,UAAW,IAAMqiG,cAAgB,IACjCwC,mBAAqB,SAAUj7G,GAChD,GAAqBk7G,SAAUl7G,EAAEnb,MACjC,KAAKq2H,QACD,MAAO,EAEX,IAAIl7G,EAAErb,QAAQ+0H,4BAA8B,EACxCwB,QAAUx3F,MAAMg3F,0BAA0B16G,EAAGy4G,cAAeR,kBAE3D,CAED,GAAqBr9E,GAAI56B,EAAE/b,QAAQ02H,gBAAiB,GACpD,IAAI//E,EAAEn3C,OAAS,EAAG,CACd,GAAqBo9C,SAAUjG,EAAE7tC,MAAM,kBACnC8zC,WACAq6E,QAAUr6E,QAAQ,GAAKzqB,SAAWyqB,QAAQ,GAAKA,QAAQ,KAInE,MAAOq6E,UAEUC,YAAc,GAAIC,cAAa9pG,SACpDA,UAAW6pG,YAAY5pG,SAMvB,KALA,GAEqBhqB,KAFA8zH,eAAiB,GACjBr0E,WAAa,EAEbs0E,IAAM,sBACNC,WAAajqG,SAAS3sB,QAAQ+0H,2BACb,QAA9BnyH,IAAM+zH,IAAI73D,KAAKnyC,YAAqB,CACxC,GAAqB2iG,WAAY1sH,IAAI,GAChB8qB,KAAOf,SAAS1sB,MAAMoiD,WAAYz/C,IAAIV,OAAOhC,MAIlEw2H,kBADkCr0E,YAAcu0E,WAAaN,mBAAmB5oG,MAAQA,MACzD,IAAM4hG,UAAY,IACjDjtE,WAAas0E,IAAI1iG,UAIrB,MAFAyiG,iBAAkBJ,mBAAmB3pG,SAAS5pB,UAAUs/C,aAEjDm0E,YAAYK,QAAQH,iBAM/BvD,UAAU31H,UAAUy2H,6BAIpB,SAAUtnG,UACN,MAAOA,UAASrtB,QAAQw3H,oBAAqBC,sBACxCz3H,QAAQ03H,aAAchC,gBAExB7B,aAEPsD,aAAgB,WAChB,QAASA,cAAa9pG,UAClB,GAAIoS,OAAQliC,IACZA,MAAK+iG,gBACL/iG,KAAKqF,MAAQ,EAGbyqB,SAAWA,SAASrtB,QAAQ,gBAAiB,SAAU+d,EAAG45G,MACtD,GAAqBC,WAAY,QAAUn4F,MAAM78B,MAAQ,IAGzD,OAFA68B,OAAM6gE,aAAaj8F,KAAKszH,MACxBl4F,MAAM78B,QACCg1H,YAIXr6H,KAAKs6H,SAAWxqG,SAASrtB,QAAQ,4BAA6B,SAAU+d,EAAG+5G,OAAQ/lH,KAC/E,GAAqB6lH,WAAY,QAAUn4F,MAAM78B,MAAQ,IAGzD,OAFA68B,OAAM6gE,aAAaj8F,KAAK0N,KACxB0tB,MAAM78B,QACCk1H,OAASF,YAsBxB,MAfAT,cAAaj5H,UAAUq5H,QAIvB,SAAUjqG,SACN,GAAImS,OAAQliC,IACZ,OAAO+vB,SAAQttB,QAAQ,gBAAiB,SAAUggG,GAAIp9F,OAAS,MAAO68B,OAAM6gE,cAAc19F,UAK9Fu0H,aAAaj5H,UAAUovB,QAGvB,WAAc,MAAO/vB,MAAKs6H,UACnBV,gBAEP7C,0BAA4B,4EAC5BC,kBAAoB,kEACpBU,0BAA4B,2EAC5BS,cAAgB,iBAEhB+B,qBAAuB,oBACvBM,aAAe,kDAGf5C,gBAAkB,GAAIxiH,QAAO,IAAM+iH,cAAgBqC,aAAc,OACjE1C,uBAAyB,GAAI1iH,QAAO,IAAM8kH,qBAAuBM,aAAc,OAC/EtC,0BAA4BC,cAAgB,iBAC5CkB,4BAA8B,uCAC9BjB,uBACA,YACA,aACA,mBACA,eAKAG,qBAAuB,sCACvBU,kBAAoB,6BACpBE,gBAAkB,oBAClBgB,aAAe,WACfF,oBAAsB,mBACtB9qG,WAAa,uBASbG,oBAAsB,2CAStBO,QAAU,wDACVU,SAAW,UACXQ,WAAa,IACbD,YAAc,IACdZ,kBAAoB,UACpBG,QAAW,WACX,QAASA,SAAQP,SAAUC,SACvB/vB,KAAK8vB,SAAWA,SAChB9vB,KAAK+vB,QAAUA,QAEnB,MAAOM,YA4BPW,wBAA2B,WAC3B,QAASA,yBAAwBpB,cAAeO,QAC5CnwB,KAAK4vB,cAAgBA,cACrB5vB,KAAKmwB,OAASA,OAElB,MAAOa,4BAqDPypG,wBAA2B,WAC3B,QAASA,yBAAwB77H,KAAM2W,UAAWkqB,UAC9Cz/B,KAAKpB,KAAOA,KACZoB,KAAKuV,UAAYA,UACjBvV,KAAKy/B,SAAWA,SAEpB,MAAOg7F,4BAEPC,mBAAsB,WACtB,QAASA,oBAAmB77F,UAAW87F,UAAWn7F,aAAco7F,UAAWxxH,MACvEpJ,KAAK6+B,UAAYA,UACjB7+B,KAAK26H,UAAYA,UACjB36H,KAAKw/B,aAAeA,aACpBx/B,KAAK46H,UAAYA,UACjB56H,KAAKoJ,KAAOA,KAEhB,MAAOsxH,uBAEPn0F,cAAiB,WACjB,QAASA,eAAcskD,cACnB7qF,KAAK6qF,aAAeA,aACpB7qF,KAAK66H,WAAa,GAAIvE,WAmG1B,MA5FA/vF,eAAc5lC,UAAUm6H,iBAKxB,SAAUj8F,UAAW0vD,MACjB,GAAqBtiC,UAA8BsiC,KAAc,QACjE,OAAOvuF,MAAK+6H,eAAel8F,UAAW0vD,KAAM,GAAIvW,4BAC5Cd,OAAQjrB,SAASirB,OACjBe,UAAWhsB,SAASgsB,UACpB1iE,UAAW7N,oBAAoB6mF,KAAKnoF,QACpCpG,KAAKg7H,eAAezsC,OAAO,IASnChoD,cAAc5lC,UAAUs6H,cAOxB,SAAUp8F,UAAW0vD,KAAMnD,WAAYvrD,MAEnC,WADa,KAATA,OAAmBA,KAAO7/B,KAAKg7H,eAAezsC,OAC3CvuF,KAAK+6H,eAAel8F,UAAW0vD,KAAMnD,WAAYvrD,MAAM,IAMlE0G,cAAc5lC,UAAUq6H,eAIxB,SAAUzsC,MACN,MAA0BA,MAAc,SAAE3pC,gBAAkB9f,kBAAkBC,UAUlFwB,cAAc5lC,UAAUo6H,eAQxB,SAAUl8F,UAAW0vD,KAAMnD,WAAYvrD,KAAMq7F,uBACzC,GAAIh5F,OAAQliC,KACSm7H,iBAAmB/vC,WAAWlU,OAAOj3E,IAAI,SAAUm7H,YAAc,MAAOl0G,SAAQgb,MAAMm5F,cAAcD,WAAYv7F,SAChHL,eACrB4rD,YAAWnT,UAAUrxE,QAAQ,SAAU4lF,UACnC,GAAqB8uC,WAAYH,iBAAiBl5H,MAElDk5H,kBAAiBr0H,KAAsB,MACvC04B,aAAa14B,KAAK,GAAI2zH,yBAAwBxpG,iBAAiB,MAAOu7D,SAAU,SAAUjpF,OAAS,MAAO43H,kBAAiBG,WAAaz8F,UAAUhZ,WAAWtiB,WAIjK,IAAqBo3H,WAAY1pG,iBAAiBiqG,sBAAwB3sC,KAAO,MAC5DnpE,KAAOO,SAASg1G,WAChCp6G,IAAI6F,WAAW+0G,iBAAkB,GAAIn8F,WAAU1T,cAAek3F,aAAaC,UAC3E7qF,WAAW,KAAMsjG,uBAAyBrjG,aAAaC,QACxDD,aAAaC,MAAOD,aAAaoH,UAGrC,OADAJ,WAAUhG,WAAW/xB,KAAKse,MACnB,GAAIs1G,oBAAmB77F,UAAW87F,UAAWn7F,aAAcK,KAAMurD,aAO5E7kD,cAAc5lC,UAAU06H,cAKxB,SAAUpgD,MAAOp7C,MACb,MAAOA,MAAO7/B,KAAK66H,WAAWrE,YAAYv7C,MAvH/B,oBADH,kBAwHoEA,OAEzE10C,iBAyBPnV,sBAAwB,wBACxBmqG,kBAAoB,GAAI33G,MAAK,MAAO,WAAY,WAAY,SAAU,UAGtE43G,SAAW,wCACXC,aAAe,GAAIrmH,QAAO,KAAOomH,SAAW,KAC5CE,kBAAoB,GAAItmH,QAAO,IAAMomH,SAAW,QAAS,KAkCzD9pG,kBAAqB,WACrB,QAASA,sBAmFT,MA5EAA,mBAAkB/wB,UAAUk8D,aAK5B,SAAU3kD,QAASzU,SACf,MAAI83H,mBAAkB5nG,IAAIzb,QAAQtZ,OAASsyB,2BAA2BhZ,QAAQ7K,OAGnE,GAAInD,SAAQgO,QAAQtZ,KAAM+K,SAAS3J,KAAMkY,QAAQ7K,OAAQ6K,QAAQ9N,SAAU8N,QAAQnO,WAAYmO,QAAQ2iE,gBAAiB3iE,QAAQ/N,eAEpI,GAAID,SAAQgO,QAAQtZ,KAAMsZ,QAAQ7K,MAAO1D,SAAS3J,KAAMkY,QAAQ9N,UAAW8N,QAAQnO,WAAYmO,QAAQ2iE,gBAAiB3iE,QAAQ/N,gBAO3IunB,kBAAkB/wB,UAAU0+D,eAK5B,SAAU2D,UAAWv/D,SACjB,MAAOu/D,WAAUpkE,OAASwyB,sBAAwB4xC,UAAY,MAOlEtxC,kBAAkB/wB,UAAU6+D,UAK5B,SAAUlvD,KAAM7M,SAEZ,MADkC6M,MAAK/M,MAAMgI,MAAMkwH,cAExC,GAAIrmG,MAAK/D,YAAY/gB,KAAK/M,OAAOd,QAAQi5H,kBAAmB,KAAMprH,KAAKvG,YAE3E,MAOX2nB,kBAAkB/wB,UAAUq/D,aAK5B,SAAU2pC,QAASlmG,SAAW,MAAOkmG,UAMrCj4E,kBAAkB/wB,UAAUs/D,eAK5B,SAAUiyC,UAAWzuG,SAAW,MAAOyuG,YAMvCxgF,kBAAkB/wB,UAAUu/D,mBAK5B,SAAUiyC,cAAe1uG,SAAW,MAAO0uG,gBACpCzgF,qBAsBPU,cAAgB,OAAQ,MAAO,MAAO,MAAO,OAAQ,SA8BrDJ,gBAAmB,WACnB,QAASA,iBAAgBpoB,MAAO+xH,SAAU/pG,QACtC5xB,KAAK4J,MAAQA,MACb5J,KAAK27H,SAAWA,SAChB37H,KAAK4xB,OAASA,OAElB,MAAOI,oBAEPK,eAAkB,SAAU7nB,QAE5B,QAAS6nB,gBAAe3nB,KAAMwvF,UAC1B,MAAO1vF,QAAOklC,KAAK1vC,KAAM0K,KAAMwvF,WAAal6F,KAEhD,MAJAK,WAAUgyB,eAAgB7nB,QAInB6nB,gBACTwmE,YAME9mE,UAAa,WACb,QAASA,aACL/xB,KAAKiyB,YAAa,EAClBjyB,KAAK4xB,UA4ET,MArEAG,WAAUpxB,UAAUk8D,aAKpB,SAAU3kD,QAASzU,SACf,MAAO,IAAIyG,SAAQgO,QAAQtZ,KAAMsZ,QAAQ7K,MAAO1D,SAAS3J,KAAMkY,QAAQ9N,UAAW8N,QAAQnO,WAAYmO,QAAQ2iE,gBAAiB3iE,QAAQ/N,gBAO3I4nB,UAAUpxB,UAAU0+D,eAKpB,SAAU2D,UAAWv/D,SAAW,MAAOu/D,YAMvCjxC,UAAUpxB,UAAU6+D,UAKpB,SAAUlvD,KAAM7M,SAAW,MAAO6M,OAMlCyhB,UAAUpxB,UAAUq/D,aAKpB,SAAU2pC,QAASlmG,SAAW,MAAOkmG,UAMrC53E,UAAUpxB,UAAUs/D,eAKpB,SAAUqiC,IAAK7+F,SAEX,MADAzD,MAAKiyB,YAAa,EACC,UAAZqwE,IAAIl8F,KAAmB8rB,kBAAkBowE,IAAKtiG,KAAK4xB,QACtDgB,mBAAmB0vE,IAAKtiG,KAAK4xB,SAOrCG,UAAUpxB,UAAUu/D,mBAKpB,SAAU+pC,QAASxmG,SACf,KAAM,IAAIgB,OAAM,0BAEbstB,aAgDP6pG,mBACAC,QAAS,EACTC,aAAc,EACdC,UAAW,EAEfH,mBAAkBA,kBAAkBC,SAAW,UAC/CD,kBAAkBA,kBAAkBE,cAAgB,eACpDF,kBAAkBA,kBAAkBG,WAAa,WAIjD,IAAIC,eAAiB,WACjB,QAASA,eAAcp9H,KAAM8V,WAAYtO,KAAM2D,YAC3C/J,KAAKpB,KAAOA,KACZoB,KAAK0U,WAAaA,WAClB1U,KAAKoG,KAAOA,KACZpG,KAAK+J,WAAaA,WAClB/J,KAAKi8H,UAAYj8H,KAAKoG,OAASw1H,kBAAkBE,aACjD97H,KAAKq8B,YAAcr8B,KAAKoG,OAASw1H,kBAAkBG,UAEvD,MAAOC,kBAKPE,cAAiB,WACjB,QAASA,eAAcC,YAAazhC,qBAAsBkgB,gBAAiBz5E,MAAOi7F,eAC9E,GAAIl6F,OAAQliC,IACZA,MAAKm8H,YAAcA,YACnBn8H,KAAK06F,qBAAuBA,qBAC5B16F,KAAK46G,gBAAkBA,gBACvB56G,KAAKo8H,cAAgBA,cACrBp8H,KAAKq8H,YAAc,GAAI9zG,KACvBvoB,KAAKs8H,WAAa,GAAI/zG,KACtB4Y,MAAMv6B,QAAQ,SAAUisD,MAAQ,MAAO3wB,OAAMm6F,YAAY97G,IAAIsyC,KAAKj0D,KAAMi0D,QA8iB5E,MAziBAqpE,eAAcv7H,UAAU47H,aAGxB,WAAc,MAAO74H,OAAMigB,KAAK3jB,KAAKs8H,WAAWp6H,WAOhDg6H,cAAcv7H,UAAU67H,gCAMxB,SAAUjhB,QAASv6C,gBAAiBj3D,YAChC,GAAIm4B,OAAQliC,IACZ,IAAIu7G,QAAQplC,eAAgB,CACxB,GAAqBsmD,gBAUrB,OATA78H,QAAOg3B,KAAK2kF,QAAQplC,gBAAgBvvE,QAAQ,SAAUosB,UAClD,GAAqBte,YAAa6mG,QAAQplC,eAAenjD,SAC/B,iBAAfte,YACPwtB,MAAMw6F,qBAAqB1pG,SAAUte,YAAY,EAAM3K,cAAgB0yH,cAGvEv6F,MAAM8xD,aAAa,uCAA0ChhE,SAAW,8DAAkEte,WAAa,YAAgBA,YAAa,IAAK3K,cAG1L0yH,aAAax8H,IAAI,SAAUgvB,MAAQ,MAAOiT,OAAMy6F,yBAAyB37D,gBAAiB/xC,QAErG,MAAO,OAOXitG,cAAcv7H,UAAUi8H,6BAKxB,SAAUrhB,QAASxxG,YACf,GAAIm4B,OAAQliC,IACZ,IAAIu7G,QAAQ5iC,cAAe,CACvB,GAAqBkkD,qBAUrB,OATAj9H,QAAOg3B,KAAK2kF,QAAQ5iC,eAAe/xE,QAAQ,SAAUosB,UACjD,GAAqBte,YAAa6mG,QAAQ5iC,cAAc3lD,SAC9B,iBAAfte,YACPwtB,MAAM46F,WAAW9pG,SAAUte,WAAY3K,cAAgB8yH,mBAGvD36F,MAAM8xD,aAAa,+BAAkChhE,SAAW,8DAAkEte,WAAa,YAAgBA,YAAa,IAAK3K,cAGlL8yH,kBAEX,MAAO,OAOXX,cAAcv7H,UAAU2zF,mBAKxB,SAAU/wF,MAAOwG,YACb,GAAqBgzH,YAAahzH,WAAWD,MAAM9D,UACnD,KACI,GAAqBW,KAAyB3G,KAAKm8H,YAAY7nC,mBAAmB/wF,MAAOw5H,WAAY/8H,KAAK06F,qBAI1G,OAHI/zF,MACA3G,KAAKg9H,8BAA8Br2H,IAAIirB,OAAQ7nB,YACnD/J,KAAKi9H,YAAYt2H,IAAKoD,YACfpD,IAEX,MAAwB0S,GAEpB,MADArZ,MAAKg0F,aAAa,GAAK36E,EAAGtP,YACnB/J,KAAKm8H,YAAYznC,qBAAqB,QAASqoC,cAY9Db,cAAcv7H,UAAUu8H,2BASxB,SAAU9oC,YAAa7wF,MAAOwG,WAAYozH,qBAAsBC,YAAaC,YAEzE,IAAK,GADgBx0E,UAAW7oD,KAAKs9H,uBAAuBlpC,YAAa7wF,MAAOwG,YACtDe,EAAI,EAAGA,EAAI+9C,SAAS5mD,OAAQ6I,IAAK,CACvD,GAAqBm+C,SAAUJ,SAAS/9C,EACpCm+C,SAAQ4pC,SACRwqC,WAAWv2H,KAAK,GAAIgvE,aAAY7sB,QAAQj1C,IAAKi1C,QAAQrqD,KAAMmL,aAEtDk/C,QAAQv0C,WACb1U,KAAKu9H,kBAAkBt0E,QAAQj1C,IAAKi1C,QAAQv0C,WAAY3K,WAAYozH,qBAAsBC,cAG1FD,qBAAqBr2H,MAAMmiD,QAAQj1C,IAAK,KACxChU,KAAKw9H,iBAAiBv0E,QAAQj1C,IAAK,KAAMjK,WAAYozH,qBAAsBC,gBAUvFlB,cAAcv7H,UAAU28H,uBAMxB,SAAUlpC,YAAa7wF,MAAOwG,YAC1B,GAAIm4B,OAAQliC,KACS+8H,WAAahzH,WAAWD,MAAM9D,UACnD,KACI,GAAqBy3H,gBAAiBz9H,KAAKm8H,YAAYhoC,sBAAsBC,YAAa7wF,MAAOw5H,WAQjG,OAPA/8H,MAAKg9H,8BAA8BS,eAAe7rG,OAAQ7nB,YAC1D0zH,eAAetqC,iBAAiBvsF,QAAQ,SAAUqiD,SAC1CA,QAAQv0C,YACRwtB,MAAM+6F,YAAYh0E,QAAQv0C,WAAY3K,cAG9C0zH,eAAexpG,SAASrtB,QAAQ,SAAU82H,SAAWx7F,MAAM8xD,aAAa0pC,QAAS3zH,WAAY2uF,gBAAgBC,WACtG8kC,eAAetqC,iBAE1B,MAAwB95E,GAEpB,MADArZ,MAAKg0F,aAAa,GAAK36E,EAAGtP,iBAYlCmyH,cAAcv7H,UAAU68H,iBAQxB,SAAU5+H,KAAM2E,MAAOwG,WAAYozH,qBAAsBC,aACjDvqG,kBAAkBj0B,OAClBA,KAAOA,KAAKsH,UAAU,GAClB3C,OACAvD,KAAKg0F,aAAa,8LAC6FjqF,WAAY2uF,gBAAgBE;yPAE/I54F,KAAK29H,gBAAgB/+H,KAAM2E,MAAOwG,WAAYozH,qBAAsBC,cAGpEA,YAAYt2H,KAAK,GAAIk1H,eAAcp9H,KAAMoB,KAAKm8H,YAAYznC,qBAAqBnxF,MAAO,IAAKq4H,kBAAkBE,aAAc/xH,cAYnImyH,cAAcv7H,UAAU+7H,qBASxB,SAAU99H,KAAM8V,WAAYgkE,OAAQ3uE,WAAYozH,qBAAsBC,aAClE,GAAqBQ,kBAAkB,CACnCh/H,MAAKyf,WA/OS,aAgPdu/G,iBAAkB,EAClBh/H,KAAOA,KAAKsH,UAjPE,WAiP4BjE,SAErC4wB,kBAAkBj0B,QACvBg/H,iBAAkB,EAClBh/H,KAAOA,KAAKsH,UAAU,IAEtB03H,gBACA59H,KAAK29H,gBAAgB/+H,KAAM8V,WAAY3K,WAAYozH,qBAAsBC,aAGzEp9H,KAAKu9H,kBAAkB3+H,KAAMoB,KAAK69H,cAAcnpH,WAAYgkE,OAAQ3uE,YAAaA,WAAYozH,qBAAsBC,cAW3HlB,cAAcv7H,UAAUm9H,2BAQxB,SAAUl/H,KAAM2E,MAAOwG,WAAYozH,qBAAsBC,aACrD,GAAqB33G,MAAOzlB,KAAKs0F,mBAAmB/wF,MAAOwG,WAC3D,SAAI0b,OACAzlB,KAAKu9H,kBAAkB3+H,KAAM6mB,KAAM1b,WAAYozH,qBAAsBC,cAC9D,IAYflB,cAAcv7H,UAAU48H,kBAQxB,SAAU3+H,KAAM+H,IAAKoD,WAAYozH,qBAAsBC,aACnDD,qBAAqBr2H,MAAMlI,KAAyB+H,IAAW,SAC/Dy2H,YAAYt2H,KAAK,GAAIk1H,eAAcp9H,KAAM+H,IAAKi1H,kBAAkBC,QAAS9xH,cAU7EmyH,cAAcv7H,UAAUg9H,gBAQxB,SAAU/+H,KAAM8V,WAAY3K,WAAYozH,qBAAsBC,aAI1D,GAAqBz2H,KAAM3G,KAAK69H,cAAcnpH,YAAc,aAAa,EAAO3K,WAChFozH,sBAAqBr2H,MAAMlI,KAAyB+H,IAAW,SAC/Dy2H,YAAYt2H,KAAK,GAAIk1H,eAAcp9H,KAAM+H,IAAKi1H,kBAAkBG,UAAWhyH,cAQ/EmyH,cAAcv7H,UAAUk9H,cAMxB,SAAUt6H,MAAOw6H,cAAeh0H,YAC5B,GAAqBgzH,YAAahzH,WAAWD,MAAM9D,UACnD,KACI,GAAqBW,KAAMo3H,cACvB/9H,KAAKm8H,YAAYtoC,mBAAmBtwF,MAAOw5H,WAAY/8H,KAAK06F,sBAC5D16F,KAAKm8H,YAAYxoC,aAAapwF,MAAOw5H,WAAY/8H,KAAK06F,qBAI1D,OAHI/zF,MACA3G,KAAKg9H,8BAA8Br2H,IAAIirB,OAAQ7nB,YACnD/J,KAAKi9H,YAAYt2H,IAAKoD,YACfpD,IAEX,MAAwB0S,GAEpB,MADArZ,MAAKg0F,aAAa,GAAK36E,EAAGtP,YACnB/J,KAAKm8H,YAAYznC,qBAAqB,QAASqoC,cAQ9Db,cAAcv7H,UAAUg8H,yBAKxB,SAAU37D,gBAAiBg9D,WACvB,GAAIA,UAAU3hG,YACV,MAAO,IAAIq5C,yBAAwBsoD,UAAUp/H,KAAMq7B,oBAAoBE,UAAWtG,gBAAgBC,KAAMkqG,UAAUtpH,WAAY,KAAMspH,UAAUj0H,WAElJ,IAAqBuwB,MAAO,KACPy3B,gBAA+B,GAC/BksE,kBAAoB,KACpBlmH,MAAQimH,UAAUp/H,KAAK2K,MAnXrB,KAoXF20H,qBAAoC,EAEzD,IAAInmH,MAAM9V,OAAS,EACf,GAtXW,QAsXP8V,MAAM,GAAwB,CAC9BkmH,kBAAoBlmH,MAAM,GAC1B/X,KAAKm+H,iCAAiCF,kBAAmBD,UAAUj0H,YAAY,GAC/Em0H,iBAAmBprG,6BAA6B9yB,KAAK46G,gBAAiB55C,gBAAiBi9D,mBAAmB,EAC1G,IAAqBG,gBAAiBH,kBAAkB96H,QAAQ,IAChE,IAAIi7H,gBAAkB,EAAG,CACrB,GAAqBl3E,IAAK+2E,kBAAkB/3H,UAAU,EAAGk4H,gBACpCjgE,OAAS8/D,kBAAkB/3H,UAAUk4H,eAAiB,EAC3EH,mBAAoBrxH,eAAes6C,GAAIiX,QAE3CpM,YAAc93B,oBAAoBn5B,cA/X/B,SAiYEiX,MAAM,IACXkmH,kBAAoBlmH,MAAM,GAC1Bg6C,YAAc93B,oBAAoBG,MAClC8jG,kBAAoBrqG,gBAAgBC,OAnYjC,SAqYE/b,MAAM,KACXuiB,KAAOviB,MAAM9V,OAAS,EAAI8V,MAAM,GAAK,KACrCkmH,kBAAoBlmH,MAAM,GAC1Bg6C,YAAc93B,oBAAoBI,MAClC6jG,kBAAoBrqG,gBAAgBzlB,OAU5C,OAN0B,QAAtB6vH,oBACAA,kBAAoBj+H,KAAK46G,gBAAgBib,kBAAkBmI,UAAUp/H,MACrEs/H,iBAAmBprG,6BAA6B9yB,KAAK46G,gBAAiB55C,gBAAiBi9D,mBAAmB,GAC1GlsE,YAAc93B,oBAAoBC,SAClCl6B,KAAKm+H,iCAAiCF,kBAAmBD,UAAUj0H,YAAY,IAE5E,GAAI2rE,yBAAwBuoD,kBAAmBlsE,YAAamsE,iBAAiB,GAAIF,UAAUtpH,WAAY4lB,KAAM0jG,UAAUj0H,aAUlImyH,cAAcv7H,UAAUm8H,WAQxB,SAAUl+H,KAAM8V,WAAY3K,WAAYozH,qBAAsBkB,cACtDxrG,kBAAkBj0B,OAClBA,KAAOA,KAAK6kC,OAAO,GACnBzjC,KAAKs+H,qBAAqB1/H,KAAM8V,WAAY3K,WAAYs0H,eAGxDr+H,KAAKu+H,YAAY3/H,KAAM8V,WAAY3K,WAAYozH,qBAAsBkB,eAU7EnC,cAAcv7H,UAAU29H,qBAOxB,SAAU1/H,KAAM8V,WAAY3K,WAAYs0H,cACpC,GAAqBh/E,SAAUr8C,cAAcpE,MAAOA,KAAM,KACrC+kD,UAAYtE,QAAQ,GACpB/iB,MAAQ+iB,QAAQ,GAAG7xC,aACxC,IAAI8uB,MACA,OAAQA,OACJ,IAAK,QACL,IAAK,OACD,GAAqB31B,KAAM3G,KAAKw+H,aAAa9pH,WAAY3K,WACzDs0H,cAAav3H,KAAK,GAAI6uE,eAAchyB,UAAW,KAAMrnB,MAAO31B,IAAKoD,YACjE,MACJ,SACI/J,KAAKg0F,aAAa,8CAAiD13D,MAAQ,WAAeqnB,UAAY,yCAA2C55C,gBAKzJ/J,MAAKg0F,aAAa,wCAA0CrwC,UAAY,4EAA6E55C,aAW7JmyH,cAAcv7H,UAAU49H,YAQxB,SAAU3/H,KAAM8V,WAAY3K,WAAYozH,qBAAsBkB,cAE1D,GAAIllH,IAAKtW,aAAajE,MAAwB,KAAUA,OAAQgV,OAASuF,GAAG,GAAIwqC,UAAYxqC,GAAG,GAC1ExS,IAAM3G,KAAKw+H,aAAa9pH,WAAY3K,WACzDozH,sBAAqBr2H,MAAuB,KAA6BH,IAAW,SACpF03H,aAAav3H,KAAK,GAAI6uE,eAAchyB,UAAW/vC,OAAQ,KAAMjN,IAAKoD,cAStEmyH,cAAcv7H,UAAU69H,aAKxB,SAAUj7H,MAAOwG,YACb,GAAqBgzH,YAAahzH,WAAWD,MAAM9D,UACnD,KACI,GAAqBW,KAAM3G,KAAKm8H,YAAY9oC,YAAY9vF,MAAOw5H,WAAY/8H,KAAK06F,qBAIhF,OAHI/zF,MACA3G,KAAKg9H,8BAA8Br2H,IAAIirB,OAAQ7nB,aAE9CpD,KAAOA,IAAIA,cAAe8uB,YAC3Bz1B,KAAKg0F,aAAa,oCAAqCjqF,YAChD/J,KAAKm8H,YAAYznC,qBAAqB,QAASqoC,cAE1D/8H,KAAKi9H,YAAYt2H,IAAKoD,YACfpD,KAEX,MAAwB0S,GAEpB,MADArZ,MAAKg0F,aAAa,GAAK36E,EAAGtP,YACnB/J,KAAKm8H,YAAYznC,qBAAqB,QAASqoC,cAS9Db,cAAcv7H,UAAUqzF,aAMxB,SAAU/iF,QAASlH,WAAY+uF,WACb,KAAVA,QAAoBA,MAAQJ,gBAAgBE,OAChD54F,KAAKo8H,cAAct1H,KAAK,GAAI+xF,YAAW9uF,WAAYkH,QAAS6nF,SAOhEojC,cAAcv7H,UAAUq8H,8BAKxB,SAAUprG,OAAQ7nB,YACd,IAAK,GAAIhI,IAAK,EAAG08H,SAAW7sG,OAAQ7vB,GAAK08H,SAASx8H,OAAQF,KAAM,CAC5D,GAAIyC,OAAQi6H,SAAS18H,GACrB/B,MAAKg0F,aAAaxvF,MAAMyM,QAASlH,cAQzCmyH,cAAcv7H,UAAUs8H,YAKxB,SAAUt2H,IAAKoD,YACX,GAAIm4B,OAAQliC,IACZ,IAAI2G,IAAK,CACL,GAAqB+3H,WAAY,GAAIC,cACrCh4H,KAAID,MAAMg4H,WACVA,UAAUv9F,MAAMv6B,QAAQ,SAAUD,IAAKi4H,UACnC,GAAqBre,UAAWr+E,MAAMm6F,YAAY/7G,IAAIs+G,SACjDre,UAIDr+E,MAAMo6F,WAAW/7G,IAAIq+G,SAAUre,UAH/Br+E,MAAM8xD,aAAa,aAAe4qC,SAAW,uBAAwB,GAAIjpH,iBAAgB5L,WAAWD,MAAM+tF,OAAOlxF,IAAI+D,KAAKZ,OAAQC,WAAWD,MAAM+tF,OAAOlxF,IAAI+D,KAAKT,WAcnLiyH,cAAcv7H,UAAUw9H,iCAMxB,SAAUnrG,SAAUjpB,WAAY80H,QAC5B,GAAqBx5D,QAASw5D,OAAS7+H,KAAK46G,gBAAgBmb,kBAAkB/iG,UAC1EhzB,KAAK46G,gBAAgBkb,iBAAiB9iG,SACtCqyC,QAAO7gE,OACPxE,KAAKg0F,aAAgC3uB,OAAW,IAAGt7D,WAAY2uF,gBAAgBE,QAGhFsjC,iBAEPyC,cAAiB,SAAUn0H,QAE3B,QAASm0H,iBACL,GAAIz8F,OAAmB,OAAX13B,QAAmBA,OAAOzK,MAAMC,KAAMgC,YAAchC,IAEhE,OADAkiC,OAAMf,MAAQ,GAAI5Y,KACX2Z,MAkBX,MAtBA7hC,WAAUs+H,cAAen0H,QAWzBm0H,cAAch+H,UAAU4T,UAKxB,SAAU5N,IAAKlD,SAIX,MAHAzD,MAAKmhC,MAAM5gB,IAAI5Z,IAAI/H,KAAM+H,KACzBA,IAAI6N,IAAI9N,MAAM1G,MACdA,KAAK2J,SAAShD,IAAI7E,KAAM2B,SACjB,MAEJk7H,eACT7rC,qBAsCEgsC,iBAAmB,2GAsBnB/oG,iBAAmB,WAInBf,WAAa,QACb+pG,kBAAoB5rG,YAAYC,MAAM,KAAK,GAC3C4C,qCAAuC,kEAEvC9B,iBAcA8qG,mBAAsB,SAAUx0H,QAEhC,QAASw0H,oBAAmB/tH,QAASvG,KAAMouF,OACvC,MAAOtuF,QAAOklC,KAAK1vC,KAAM0K,KAAMuG,QAAS6nF,QAAU94F,KAEtD,MAJAK,WAAU2+H,mBAAoBx0H,QAIvBw0H,oBACTnmC,YACEomC,oBAAuB,WACvB,QAASA,qBAAoBziE,YAAa0iE,UAAWttG,QACjD5xB,KAAKw8D,YAAcA,YACnBx8D,KAAKk/H,UAAYA,UACjBl/H,KAAK4xB,OAASA,OAElB,MAAOqtG,wBAEPr5F,eAAkB,WAClB,QAASA,gBAAemlD,QAASoC,WAAYgvC,YAAavhB,gBAAiB9vB,YAAayqB,SAAU4pB,YAC9Fn/H,KAAK+qF,QAAUA,QACf/qF,KAAKmtF,WAAaA,WAClBntF,KAAKm8H,YAAcA,YACnBn8H,KAAK46G,gBAAkBA,gBACvB56G,KAAK8qF,YAAcA,YACnB9qF,KAAKu1G,SAAWA,SAChBv1G,KAAKm/H,WAAaA,WAgLtB,MApKAv5F,gBAAejlC,UAAUyyB,MAUzB,SAAU/J,UAAW4iC,SAAU7jC,WAAY+Y,MAAOo4C,QAAShU,YAAatgC,qBACpE,GAAqBtlC,QAASK,KAAKo/H,SAAS/1G,UAAW4iC,SAAU7jC,WAAY+Y,MAAOo4C,QAAShU,YAAatgC,qBACrFhR,SAA8Bt0B,OAAc,OAAEijB,OAAO,SAAUpe,OAAS,MAAOA,OAAMs0F,QAAUJ,gBAAgBC,UAAY/1E,OAAOoR,cA9DvH,4EA8DwKgC,wCACnLpE,OAA4BjyB,OAAc,OAAEijB,OAAO,SAAUpe,OAAS,MAAOA,OAAMs0F,QAAUJ,gBAAgBE,OAIlI,IAHI3kE,SAAShyB,OAAS,GAClBjC,KAAKu1G,SAASpJ,KAAK,6BAA+Bl4E,SAASpuB,KAAK,OAEhE+rB,OAAO3vB,OAAS,EAAG,CAEnB,KAAMoC,aAAY,2BADiButB,OAAO/rB,KAAK,MACa+rB,QAEhE,OAASq6B,SAA6BtsD,OAAmB,YAAGwhC,MAA0BxhC,OAAiB,YAY3GimC,eAAejlC,UAAUy+H,SAUzB,SAAU/1G,UAAW4iC,SAAU7jC,WAAY+Y,MAAOo4C,QAAShU,YAAatgC,qBACpE,GAAqBo6F,iBAAsC,gBAAbpzE,UAA2CjsD,KAAiB,YAAEozB,MAAM64B,SAAUsZ,aAAa,EAAMvlE,KAAKs/H,uBAAuBj2G,YACvK4iC,QAIJ,OAHKhnB,uBACDo6F,gBAAkB9tG,kBAAkB8tG,kBAEjCr/H,KAAKu/H,aAAav/H,KAAKw/H,WAAWH,iBAAkBh2G,UAAWjB,WAAY+Y,MAAOo4C,UAU7F3zC,eAAejlC,UAAU4+H,aAQzB,SAAU/tG,kBAAmBnI,UAAWjB,WAAY+Y,MAAOo4C,SACvD,GAAqB55E,QACAiyB,OAASJ,kBAAkBI,OAC3BstG,YACrB,IAAI1tG,kBAAkBG,UAAU1vB,OAAS,EAAG,CACxC,GAAqBw9H,gBAAiBpqG,wBAAwBjN,YACzCs3G,UAAYrqG,wBAAwB8L,OACpCw+F,oBAAsB,GAAIrV,qBAAoBtqH,KAAKmtF,WAAY9jE,WAC/DpT,wBAAuC,EACxDoT,WAAU4iC,UAAY5iC,UAAU4iC,SAASqsB,gBACzCriE,qBACInM,MAAOuf,UAAU4iC,SAASqsB,cAAc,GACxCruE,IAAKof,UAAU4iC,SAASqsB,cAAc,IAG9C,IAAqBsnD,eAAgB,GAAI1D,eAAcl8H,KAAKm8H,YAA8B,oBAAyBn8H,KAAK46G,gBAAiB8kB,UAAW9tG,QAC/HiuG,aAAe,GAAIC,sBAAqB9/H,KAAKmtF,WAAYntF,KAAK+qF,QAAS40C,oBAAqBF,eAAgBG,cAAe5/H,KAAK46G,gBAAiBrhC,QAAS3nD,OAC/KjyB,QAASgK,SAASk2H,aAAcruG,kBAAkBG,UAAWouG,uBAC7DnuG,OAAO9qB,KAAK/G,MAAM6xB,OAAQ+tG,oBAAoB/tG,QAC9CstG,UAAUp4H,KAAK/G,MAAMm/H,UAAWU,cAAcrD,oBAG9C58H,UAGJ,OADAK,MAAKggI,wCAAwCrgI,OAAQiyB,QACjDA,OAAO3vB,OAAS,EACT,GAAIg9H,qBAAoBt/H,OAAQu/H,UAAWttG,SAElD5xB,KAAKm/H,YACLn/H,KAAKm/H,WAAWv4H,QAAQ,SAAUq8B,WAAatjC,OAAS6G,iBAAiBy8B,UAAWtjC,UAEjF,GAAIs/H,qBAAoBt/H,OAAQu/H,UAAWttG,UAOtDgU,eAAejlC,UAAU6+H,WAKzB,SAAUhuG,kBAAmByuG,YACV,KAAXA,SAAqBA,QAAS,EAClC,IAAqBruG,QAASJ,kBAAkBI,MAChD,IAAqB,GAAjBA,OAAO3vB,QAAeg+H,OAAQ,CAE9B,GAAqBC,iBAAkBruG,YAAYL,kBAAkBG,UACrEC,QAAO9qB,KAAK/G,MAAM6xB,OAAQsuG,gBAAgBtuG,QAC1CJ,kBAAoB,GAAIC,iBAAgByuG,gBAAgBt2H,MAAOgoB,QAEnE,MAAOJ,oBAMXoU,eAAejlC,UAAU2+H,uBAIzB,SAAUj2G,WACN,GAAIA,UAAU4iC,SACV,MAAO6uB,qBAAoBC,UAAU1xD,UAAU4iC,SAASqsB,gBAWhE1yC,eAAejlC,UAAUq/H,wCAMzB,SAAUrgI,OAAQiyB,QACd,GAAqBuuG,sBACrBxgI,QAAOijB,OAAO,SAAU1K,SAAW,QAAS,QAA6B0iD,aACpEh0D,QAAQ,SAAUsR,SACnB,MAAO,SAA6B0iD,WAAWh0D,QAAQ,SAAUS,WAC7D,GAAqBzI,MAAOyI,UAAUzI,IACtC,IAAIuhI,mBAAmBh9H,QAAQvE,MAAQ,EACnCuhI,mBAAmBr5H,KAAKlI,UAEvB,CACD,GAAqB4F,OAAQ,GAAIw6H,oBAAmB,eAAkBpgI,KAAO,6BAA+ByI,UAAU0C,WAAY2uF,gBAAgBE,MAClJhnE,QAAO9qB,KAAKtC,aAKrBohC,kBAEPk6F,qBAAwB,WACxB,QAASA,sBAAqBz9G,UAAWnN,OAAQyqH,oBAAqBv3G,WAAYg4G,eAAgBxlB,gBAAiBylB,SAAUjE,eACzH,GAAIl6F,OAAQliC,IACZA,MAAKqiB,UAAYA,UACjBriB,KAAKkV,OAASA,OACdlV,KAAK2/H,oBAAsBA,oBAC3B3/H,KAAKogI,eAAiBA,eACtBpgI,KAAK46G,gBAAkBA,gBACvB56G,KAAKqgI,SAAWA,SAChBrgI,KAAKo8H,cAAgBA,cACrBp8H,KAAKsgI,gBAAkB,GAAIp/D,iBAC3BlhE,KAAKugI,gBAAkB,GAAIh4G,KAC3BvoB,KAAKwgI,eAAiB,EAEtBxgI,KAAK4pB,oBAAsB+1G,oBAAoBt2G,UAAUE,YAAYtnB,OAAS,EAC9EmmB,WAAWxhB,QAAQ,SAAU4hB,UAAWnjB,OACpC,GAAqByqB,UAAWqD,YAAYC,MAAyB5K,UAAmB,SACxF0Z,OAAMo+F,gBAAgBn/D,eAAerxC,SAAUtH,WAC/C0Z,MAAMq+F,gBAAgBhgH,IAAIiI,UAAWnjB,SAyoB7C,MAjoBAy6H,sBAAqBn/H,UAAUs/D,eAK/B,SAAUiyC,UAAWzuG,SAAW,MAAO,OAMvCq8H,qBAAqBn/H,UAAUu/D,mBAK/B,SAAUiyC,cAAe1uG,SAAW,MAAO,OAM3Cq8H,qBAAqBn/H,UAAU6+D,UAK/B,SAAUlvD,KAAM83B,QACZ,GAAqB0d,gBAAoC1d,OAAOq4F,mBAAmB1B,mBAC9D2B,YAAcrvG,YAAY/gB,KAAK/M,OAC/BkiB,KAAOzlB,KAAKogI,eAAe9rC,mBAAmBosC,YAAgCpwH,KAAgB,WACnH,OAAOmV,MAAO,GAAI+vD,cAAa/vD,KAAMqgC,eAAmCx1C,KAAgB,YACpF,GAAIilE,SAAQmrD,YAAa56E,eAAmCx1C,KAAgB,aAOpFwvH,qBAAqBn/H,UAAU0+D,eAK/B,SAAU2D,UAAWv/D,SACjB,MAAO,IAAIgyE,SAAQzS,UAAUpkE,KAAMokE,UAAUz/D,MAAOy/D,UAAUj5D,aAOlE+1H,qBAAqBn/H,UAAUq/D,aAK/B,SAAU2pC,QAASlmG,SAAW,MAAO,OAMrCq8H,qBAAqBn/H,UAAUk8D,aAK/B,SAAU3kD,QAASkwB,QACf,GAAIlG,OAAQliC,KACS2gI,gBAAkB3gI,KAAK4pB,oBACvB7b,SAAWmK,QAAQtZ,KACnBouF,iBAAmBjgF,gBAAgBmL,QACxD,IAAI80E,iBAAiB5mF,OAAS4H,qBAAqBM,QAC/C0+E,iBAAiB5mF,OAAS4H,qBAAqBI,MAI/C,MAAO,KAEX,IAAI4+E,iBAAiB5mF,OAAS4H,qBAAqBS,YAC/CpD,qBAAqB2hF,iBAAiB//E,UAGtC,MAAO,KAEX,IAAqB2zH,mBACAC,2BACAC,0BACAC,eACAxmF,UACAymF,mCACAC,0BACAC,uBACAC,oBAAqB,EACrB9zH,SACA+zH,kBAAoB1rG,WAAWxd,QAASlY,KAAKkV,OAAO0gB,qBAAsB,SAAUjzB,EAAG+H,MAAQ,MAAOw3B,OAAM8xD,aAAarxF,EAAG+H,KAAMguF,gBAAgBC,UACvKzgF,SAAQ7K,MAAMzG,QAAQ,SAAU0G,MAC5B,GACqB+zH,wBACAjtC,YAFAktC,WAAap/F,MAAMq/F,WAAWH,kBAAmB9zH,KAAMszH,eAAgBC,wBAAyBtmF,OAAQumF,uBAAwBC,aAGhIS,eAAiBt/F,MAAMu/F,wBAAwBn0H,KAAK1O,KACrEsjC,OAAMhtB,OAAO0gB,sBA7VT,YA6ViC4rG,gBACrCt/F,MAAM8xD,aAzVkB,4EAyV8B1mF,KAAKvD,WAAY2uF,gBAAgBC,SACvF0oC,uBAAyB/zH,KAAK/J,OAEzBi+H,eAAenjH,WAhWP,OAiWbgjH,uBAAyB/zH,KAAK/J,MAC9B6wF,YAAcotC,eAAet7H,UAlWhB,IAkWiDjE,QAAU,IAE5E,IAAqBy/H,oBAA+C,MAA1BL,sBACtCK,sBACIP,oBACAj/F,MAAM8xD,aAAa,mHAAoH1mF,KAAKvD,YAEhJo3H,oBAAqB,EACrBj/F,MAAMk+F,eAAelD,2BAA4C,YAAkC,uBAA4B5vH,KAAKvD,WAAYk3H,uBAAwBD,gCAAiCE,sBAExMI,YAAeI,qBAEhBr0H,MAAMvG,KAAKo7B,MAAMm9B,eAAe/xD,KAAM,OACtCszH,eAAe95H,MAAMwG,KAAK1O,KAAM0O,KAAK/J,UAG7C,IAAqBo+H,oBAAqBptG,2BAA2BxmB,SAAU6yH,gBAC3EznH,GAAKnZ,KAAK4hI,iBAAiB5hI,KAAKsgI,gBAAiBqB,oBAAqBE,eAAiB1oH,GAAGiP,WAAY05G,aAAe3oH,GAAG2oH,aACvGlnE,cACAmnE,wBAA0B,GAAIn+G,KAC9Bo+G,cAAgBhiI,KAAKiiI,qBAAqBb,kBAAmBlpH,QAAQtZ,KAAMijI,eAAgBhB,wBAAyBC,uBAA2C5oH,QAAmB,WAAG0iD,WAAYmnE,yBACjMG,aAAeliI,KAAKmiI,2BAA2BjqH,QAAQtZ,KAAMiiI,wBAAyBkB,yBACtFK,WAAah6F,OAAOg5F,mBAAqBD,mBACzCkB,gBAAkB,GAAI9X,wBAAuBvqH,KAAK2/H,oBAAwCv3F,OAAuB,gBAAGg6F,WAAYJ,cAAe30H,MAAOutD,WAAYwmE,kBAAmBT,gBAAoCzoH,QAAmB,YAC5O9N,SAAWT,SAASqjF,iBAAiB7/E,YAAcm1H,qBAAuBtiI,KAAMkY,QAAQ9N,SAAUm4H,eAAe3hI,OAAOwgI,kBAAmBY,cAAeZ,kBAAuCh5F,OAAuB,gBAAIi6F,iBACjPA,iBAAgB1W,cAEhB,IAIqB6W,eAJAC,mBAAmD,MAA9Bz1C,iBAAiB5/E,UACvD+lB,YAAYC,MAAM45D,iBAAiB5/E,WAAW,GAC9Cu0H,mBACiB77E,eAAoC1d,OAAOq4F,mBAAmBgC,mBAEnF,IAAIz1C,iBAAiB5mF,OAAS4H,qBAAqBE,WAC3CgK,QAAQ9N,WAAa8N,QAAQ9N,SAASs4H,MAAMvtG,mBAC5Cn1B,KAAKg0F,aAAa,4CAAgE97E,QAAmB,YAEzGsqH,cAAgB,GAAI3oG,cAAa75B,KAAKwgI,iBAAkBW,mBAAsC,KAAWr7E,eAAmC5tC,QAAmB,gBAE9J,IAAIkpH,kBACLphI,KAAK2iI,sCAAsCX,cAAeznF,QAC1Dv6C,KAAK4iI,gDAAgDZ,cAAeE,aAAiChqH,QAAmB,YACxHsqH,cAAgB,GAAI9oG,qBAAoBrsB,MAAOktC,OAAQqgB,WAAYmmE,YAAasB,gBAAgBQ,yBAA0BR,gBAAgBtW,mBAAoBsW,gBAAgBrX,4BAA6BqX,gBAAgBzmG,aAAcxxB,SAAU+2H,mBAAsC,KAAWr7E,eAAmC5tC,QAAmB,gBAEzV,CACDlY,KAAK8iI,qBAAqBhB,aAAc5pH,SACxClY,KAAK+iI,wBAAwBf,cAAkC9pH,QAAmB,WAClF,IAAqB8qH,kBAAmB7B,mBAAqB,KAAO/4F,OAAOq4F,mBAAmBgC,mBAC9FD,eAAgB,GAAI5oG,YAAW7rB,SAAUV,MAAO60H,aAAc3nF,OAAQqgB,WAAYynE,gBAAgBQ,yBAA0BR,gBAAgBtW,mBAAoBsW,gBAAgBrX,4BAA6BqX,gBAAgBzmG,aAAcxxB,SAAU+2H,mBAAqB,KAAO6B,iBAAkB9qH,QAAQnO,WAAYmO,QAAQ/N,eAAiB,MAEpV,GAAIg3H,mBAAoB,CACpB,GAAqB8B,yBAA0BjjI,KAAK4pB,oBAC/Bs5G,iBAAmB3uG,2BAA2BwB,iBAAkBkrG,wBACjFkC,uBAAyBnjI,KAAK4hI,iBAAiB5hI,KAAKsgI,gBAAiB4C,kBAAkB96G,WACtEg7G,gCAAkC,GAAIx/G,KACtCy/G,sBAAwBrjI,KAAKiiI,sBAAqB,EAAM/pH,QAAQtZ,KAAMukI,uBAAwBnC,mCAAwD9oH,QAAmB,cAAOkrH,iCAChLE,qBAAuBtjI,KAAKmiI,2BAA2BjqH,QAAQtZ,KAAMoiI,gCAAiCoC,gCAC3HpjI,MAAK4iI,gDAAgDS,sBAAuBC,qBAAyCprH,QAAmB,WACxI,IAAqBqrH,yBAA0B,GAAIhZ,wBAAuBvqH,KAAK2/H,oBAAwCv3F,OAAuB,gBAAGA,OAAOg5F,kBAAmBiC,6BAA+B,EAAMJ,wBAA4C/qH,QAAmB,WAC/QqrH,yBAAwB5X,eACxB6W,cAAgB,GAAI9oG,8BAAgCwnG,oBAAqBqC,wBAAwBV,yBAA0BU,wBAAwBxX,mBAAoBwX,wBAAwBvY,4BAA6BuY,wBAAwB3nG,cAAe4mG,eAAgB18E,eAAmC5tC,QAAmB,YAE7U,MAAOsqH,gBAYX1C,qBAAqBn/H,UAAU4gI,WAU/B,SAAUH,kBAAmB9zH,KAAM6vH,qBAAsBC,YAAaiB,aAAcmF,WAAYnG,YAC5F,GAAqBz+H,MAAOoB,KAAKyhI,wBAAwBn0H,KAAK1O,MACzC2E,MAAQ+J,KAAK/J,MACbkgI,QAAUn2H,KAAKvD,WACf25H,UAAY9kI,KAAK2M,MAAMuzH,kBACvBwC,YAAa,CAClC,IAAkB,OAAdoC,UAEA,GADApC,YAAa,EACiB,MAA1BoC,UApdE,GAqdF1jI,KAAKogI,eAAe1D,qBAAqBgH,UAzctC,GAyc+DngI,OAAO,EAAOkgI,QAAStG,qBAAsBC,iBAE9G,IAAIsG,UArdJ,GAsdD,GAAItC,kBAAmB,CACnB,GAAqB55H,YAAak8H,UA7cnC,EA8cC1jI,MAAK2jI,eAAen8H,WAAYjE,MAAOkgI,QAASpG,gBAGhDr9H,MAAKg0F,aAAa,oDAAuDyvC,aAG5E,IAAIC,UA5dJ,GA4d2B,CAC5B,GAAqBl8H,YAAak8H,UArd/B,EAsdH1jI,MAAK4jI,gBAAgBp8H,WAAYjE,MAAOkgI,QAASD,gBAE5CE,WA9dL,GA+dA1jI,KAAKogI,eAAetD,WAAW4G,UAzd5B,GAydqDngI,MAAOkgI,QAAStG,qBAAsBkB,cAEzFqF,UA/dD,IAgeJ1jI,KAAKogI,eAAe1D,qBAAqBgH,UA5dtC,GA4d+DngI,OAAO,EAAOkgI,QAAStG,qBAAsBC,aAC/Gp9H,KAAK6jI,sBAAsBH,UA7dxB,GA6diDngI,MAAOkgI,QAAStG,qBAAsBkB,eAErFqF,UAjeL,GAkeA1jI,KAAKogI,eAAe5C,iBAAiB5+H,KAAM2E,MAAOkgI,QAAStG,qBAAsBC,aAE5EsG,UAheM,IAieX1jI,KAAKogI,eAAe1D,qBAAqBgH,UAje9B,GAie+DngI,OAAO,EAAOkgI,QAAStG,qBAAsBC,aACvHp9H,KAAK6jI,sBAAsBH,UAlehB,GAkeiDngI,MAAOkgI,QAAStG,qBAAsBkB,eAE7FqF,UAleI,GAmeT1jI,KAAKogI,eAAe1D,qBAAqBgH,UAnehC,GAme+DngI,OAAO,EAAOkgI,QAAStG,qBAAsBC,aAEhHsG,UAneC,KAoeN1jI,KAAKogI,eAAetD,WAAW4G,UApezB,IAoeqDngI,MAAOkgI,QAAStG,qBAAsBkB,kBAIrGiD,YAAathI,KAAKogI,eAAetC,2BAA2Bl/H,KAAM2E,MAAOkgI,QAAStG,qBAAsBC,YAK5G,OAHKkE,aACDthI,KAAKogI,eAAe5C,iBAAiB5+H,KAAM2E,MAAOkgI,QAAStG,qBAAsBC,aAE9EkE,YAMXxB,qBAAqBn/H,UAAU8gI,wBAI/B,SAAU7sG,UACN,MAAO,UAAUxpB,KAAKwpB,UAAYA,SAAS1uB,UAAU,GAAK0uB,UAS9DkrG,qBAAqBn/H,UAAUgjI,eAO/B,SAAUn8H,WAAYjE,MAAOwG,WAAYszH,YACjC71H,WAAWrE,QAAQ,MAAQ,GAC3BnD,KAAKg0F,aAAa,uCAA0CjqF,YAEhEszH,WAAWv2H,KAAK,GAAIgvE,aAAYtuE,WAAYjE,MAAOwG,cASvD+1H,qBAAqBn/H,UAAUijI,gBAO/B,SAAUp8H,WAAYjE,MAAOwG,WAAYy5H,YACjCh8H,WAAWrE,QAAQ,MAAQ,GAC3BnD,KAAKg0F,aAAa,wCAA2CjqF,YAEjEy5H,WAAW18H,KAAK,GAAIg9H,uBAAsBt8H,WAAYjE,MAAOwG,cAUjE+1H,qBAAqBn/H,UAAUkjI,sBAQ/B,SAAUjlI,KAAM8V,WAAY3K,WAAYozH,qBAAsBkB,cAC1Dr+H,KAAKogI,eAAetD,WAAWl+H,KAAO,SAAU8V,WAAa,UAAW3K,WAAYozH,qBAAsBkB,eAO9GyB,qBAAqBn/H,UAAUihI,iBAK/B,SAAUtB,gBAAiBqB,oBACvB,GAAIz/F,OAAQliC,KAISooB,WAAa,GAAI1kB,OAAM1D,KAAKugI,gBAAgB59E,MAE5Cm/E,cAAe,CAKpC,OAJAxB,iBAAgB/0H,MAAMo2H,mBAAoB,SAAU7xG,SAAUtH,WAC1DJ,WAA8B8Z,MAAMq+F,gBAAgBjgH,IAAIkI,YAAgBA,UACxEs5G,aAAeA,cAAgBhyG,SAASmoF,wBAGxC7vF,WAAYA,WAAWxF,OAAO,SAAUgG,KAAO,QAASA,MACxDk5G,aAAcA,eActBhC,qBAAqBn/H,UAAUshI,qBAW/B,SAAUb,kBAAmBh1H,YAAagc,WAAYxmB,MAAOk/H,uBAAwBiD,kBAAmBC,iBAAkBC,+BACtH,GAAI/hG,OAAQliC,KACSkkI,kBAAoB,GAAItgH,KACxByF,UAA6B,KAC7B24G,cAAgB55G,WAAWnoB,IAAI,SAAUuoB,WAC1D,GAAqBze,YAAa,GAAI4L,iBAAgBouH,kBAAkBj6H,MAAOi6H,kBAAkB95H,IAAK,aAAe9C,eAAeqhB,UAAUpiB,MAC1IoiB,WAAUE,cACVW,UAAYb,UAEhB,IAAqB27G,wBACAhuD,eAAoCj0C,MAAMk+F,eAAe5D,gCAAgCh0G,UAAWpc,YAAarC,WAGtIosE,gBAAiBj0C,MAAMkiG,yBAAyBh4H,YAAa+pE,eAC7D,IAAqBC,YAAgCl0C,MAAMk+F,eAAexD,6BAA6Bp0G,UAAWze,WAClHm4B,OAAMmiG,6BAA6B77G,UAAUs0C,OAAQl7D,MAAOuiI,oBAAqBF,+BACjFnD,uBAAuBl6H,QAAQ,SAAU09H,aACJ,IAA5BA,WAAW/gI,MAAMtB,QAAgBumB,UAAUE,aAC3C47G,WAAWC,uBAAuB/7G,cACnCw7G,iBAAiBl9H,KAAK,GAAI+uE,cAAayuD,WAAW1lI,KAAMujB,wBAAwBqG,UAAUpiB,KAAKiB,WAAYi9H,WAAWv6H,aACtHm6H,kBAAkBnoG,IAAIuoG,WAAW1lI,QAGzC,IAAqBgrB,qBAAsBsY,MAAMtY,mBAEjD,OADAsY,OAAMtY,qBAAuBpB,UAAUwB,QAAQ/nB,OACxC,GAAIi0E,cAAa1tD,UAAW27G,oBAAqBhuD,eAAgBC,WAAYxsD,oBAAqB7f,aAgB7G,OAdA+2H,wBAAuBl6H,QAAQ,SAAU09H,YACrC,GAAIA,WAAW/gI,MAAMtB,OAAS,EACrBiiI,kBAAkBvwG,IAAI2wG,WAAW1lI,OAClCsjC,MAAM8xD,aAAa,iDAAsDswC,WAAW/gI,MAAQ,IAAM+gI,WAAWv6H,gBAGhH,KAAKsf,UAAW,CACjB,GAAqBm7G,UAA4B,IAC7CpD,qBACAoD,SAAWpiH,gCAAgC8f,MAAM7f,UAAWuK,YAAYqnD,cAE5E+vD,iBAAiBl9H,KAAK,GAAI+uE,cAAayuD,WAAW1lI,KAAM4lI,SAAUF,WAAWv6H,gBAG9Ei4H,eASXlC,qBAAqBn/H,UAAU0jI,6BAO/B,SAAUF,oBAAqBM,WAAYC,0BAA2BT,+BAClE,GAAIE,oBAAqB,CACrB,GAAqBQ,oBAAqB,GAAIp8G,IAC9Ck8G,YAAW79H,QAAQ,SAAUo3H,WACzB,GAAqBpjG,WAAY+pG,mBAAmBrkH,IAAI09G,UAAUp/H,KAC7Dg8B,aAAaA,UAAUqhG,WAGxB0I,mBAAmBpkH,IAAIy9G,UAAUp/H,KAAMo/H,aAG/Cp+H,OAAOg3B,KAAKutG,qBAAqBv9H,QAAQ,SAAUg+H,SAC/C,GAAqBC,QAASV,oBAAoBS,SAC7B5G,UAAY2G,mBAAmBrkH,IAAIukH,OAEpD7G,aACAiG,8BAA8BloG,IAAIiiG,UAAUp/H,MACvC22B,kBAAkByoG,UAAUtpH,aAC7BgwH,0BAA0B59H,KAAK,GAAIkvE,2BAA0B4uD,QAAS5G,UAAUp/H,KAAMo/H,UAAUtpH,WAAYspH,UAAUj0H,kBAY1I+1H,qBAAqBn/H,UAAUwhI,2BAM/B,SAAU/1H,YAAaxK,MAAOmgI,yBAC1B,GAAI7/F,OAAQliC,KACS8kI,oBAMrB,OALAljI,OAAMgF,QAAQ,SAAUqoB,MACfA,KAAKgtG,WAAc8F,wBAAwBpuG,IAAI1E,KAAKrwB,OACrDkmI,kBAAkBh+H,KAAKo7B,MAAMk+F,eAAezD,yBAAyBvwH,YAAa6iB,SAGnFjvB,KAAKokI,yBAAyBh4H,YAAa04H,oBAMtDhF,qBAAqBn/H,UAAUokI,yBAI/B,SAAU38G,YACN,MAAOA,YAAWxF,OAAO,SAAU4F,WAAa,MAAOA,WAAUA,UAAUE,eAM/Eo3G,qBAAqBn/H,UAAUqkI,6BAI/B,SAAU58G,YACN,MAAOpoB,MAAK+kI,yBAAyB38G,YAChCnoB,IAAI,SAAUuoB,WAAa,MAA0BrhB,gBAAeqhB,UAAUA,UAAUpiB,SAOjG05H,qBAAqBn/H,UAAUoiI,wBAK/B,SAAU36G,WAAYre,YAClB,GAAqBk7H,oBAAqBjlI,KAAKglI,6BAA6B58G,WACxE68G,oBAAmBhjI,OAAS,GAC5BjC,KAAKg0F,aAAa,sJAEgBixC,mBAAmBp/H,KAAK,KAAOkE,aAazE+1H,qBAAqBn/H,UAAUmiI,qBAU/B,SAAUhB,aAAc5pH,SACpB,GAAqBgtH,QAAShtH,QAAQtZ,KAAK6D,QAAQ,WAAY,GAC/D,KAAKq/H,eAAiB9hI,KAAK46G,gBAAgBgb,WAAWsP,OAAQllI,KAAKqgI,UAAW,CAC1E,GAAqBnmC,UAAW,IAAMgrC,OAAS,6BAC/ChrC,WACI,UAAYgrC,OAAS,2EACrBA,OAAO/hI,QAAQ,MAAQ,EACvB+2F,UACI,UAAYgrC,OAAS,gIAGzBhrC,UACI,+FAERl6F,KAAKg0F,aAAakG,SAA6BhiF,QAAmB,cAS1E4nH,qBAAqBn/H,UAAUiiI,gDAM/B,SAAUx6G,WAAY85G,aAAcn4H,YAChC,GAAIm4B,OAAQliC,KACSilI,mBAAqBjlI,KAAKglI,6BAA6B58G,WACxE68G,oBAAmBhjI,OAAS,GAC5BjC,KAAKg0F,aAAa,uCAAyCixC,mBAAmBp/H,KAAK,KAAMkE,YAE7Fm4H,aAAat7H,QAAQ,SAAUqoB,MAC3BiT,MAAM8xD,aAAa,oBAAsB/kE,KAAKrwB,KAAO,2KAA8KmL,eAQ3O+1H,qBAAqBn/H,UAAUgiI,sCAK/B,SAAUv6G,WAAYmyB,QAClB,GAAIrY,OAAQliC,KACSmlI,mBAAqB,GAAIvhH,IAC9CwE,YAAWxhB,QAAQ,SAAU4hB,WACzB5oB,OAAOg3B,KAAKpO,UAAUA,UAAUi/B,SAAS7gD,QAAQ,SAAUqT,GACvD,GAAqB0pC,WAAYn7B,UAAUA,UAAUi/B,QAAQxtC,EAC7DkrH,oBAAmBppG,IAAI4nB,eAG/BpJ,OAAO3zC,QAAQ,SAAUg9C,OACD,MAAhBA,MAAMhwC,QAAmBuxH,mBAAmBxxG,IAAIiwB,MAAMhlD,OACtDsjC,MAAM8xD,aAAa,iBAAmBpwC,MAAMj3C,SAAW,2KAA8Ki3C,MAAM75C,eASvP+1H,qBAAqBn/H,UAAUyjI,yBAK/B,SAAUh4H,YAAaq4H,YACnB,GAAIviG,OAAQliC,IAGZ,OAAOykI,YAAW7hH,OAAO,SAAUo7G,WAC/B,GAAIA,UAAU53H,OAAS6zB,oBAAoBC,WACtCgI,MAAM04E,gBAAgB6a,YAAYrpH,YAAa4xH,UAAUp/H,KAAMsjC,MAAMm+F,UAAW,CACjF,GAAqBnmC,UAAW,kBAAoB8jC,UAAUp/H,KAAO,yCAA2CwN,YAAc,IAC1HA,aAAYiS,WAAW,OACvB67E,UACI,YAAc8jC,UAAUp/H,KAAO,kMAG9BwN,YAAYjJ,QAAQ,MAAQ,IACjC+2F,UACI,YAAc9tF,YAAc,yCAA2C4xH,UAAUp/H,KAAO,gEACrEwN,YAAc,gOAGzC81B,MAAM8xD,aAAakG,SAAU8jC,UAAUj0H,YAE3C,OAAQwrB,kBAAkByoG,UAAUz6H,UAS5Cu8H,qBAAqBn/H,UAAUqzF,aAM/B,SAAU/iF,QAASlH,WAAY+uF,WACb,KAAVA,QAAoBA,MAAQJ,gBAAgBE,OAChD54F,KAAKo8H,cAAct1H,KAAK,GAAI+xF,YAAW9uF,WAAYkH,QAAS6nF,SAEzDgnC,wBAEPsF,mBAAsB,WACtB,QAASA,uBAwFT,MAjFAA,oBAAmBzkI,UAAUk8D,aAK7B,SAAUl2D,IAAKyhC,QACX,GAAqB4kD,kBAAmBjgF,gBAAgBpG,IACxD,IAAIqmF,iBAAiB5mF,OAAS4H,qBAAqBM,QAC/C0+E,iBAAiB5mF,OAAS4H,qBAAqBI,OAC/C4+E,iBAAiB5mF,OAAS4H,qBAAqBS,WAI/C,MAAO,KAEX,IAAqB42H,mBAAoB1+H,IAAI0G,MAAMpN,IAAI,SAAUqN,MAAQ,OAAQA,KAAK1O,KAAM0O,KAAK/J,SAC5EusB,SAAWyE,2BAA2B5tB,IAAI/H,KAAMymI,mBAChDv/E,eAAiB1d,OAAOq4F,mBAAmB3wG,UAC3C1lB,SAAWT,SAAS3J,KAAM2G,IAAIyD,SAAU21H,sBAC7D,OAAO,IAAInmG,YAAWjzB,IAAI/H,KAAM+K,SAAS3J,KAAM2G,IAAI0G,uBAA4B,KAAWjD,SAAU07C,eAAgBn/C,IAAIoD,WAAYpD,IAAIwD,gBAO5Ii7H,mBAAmBzkI,UAAUq/D,aAK7B,SAAU2pC,QAASlmG,SAAW,MAAO,OAMrC2hI,mBAAmBzkI,UAAU0+D,eAK7B,SAAU2D,UAAWv/D,SACjB,MAAO,IAAIgyE,SAAQzS,UAAUpkE,KAAMokE,UAAUz/D,MAAOy/D,UAAUj5D,aAOlEq7H,mBAAmBzkI,UAAU6+D,UAK7B,SAAUlvD,KAAM83B,QACZ,GAAqB0d,gBAAoC1d,OAAOq4F,mBAAmB1B,kBACnF,OAAO,IAAIxpD,SAAQjlE,KAAK/M,MAAOuiD,eAAmCx1C,KAAgB,aAOtF80H,mBAAmBzkI,UAAUs/D,eAK7B,SAAUiyC,UAAWzuG,SAAW,MAAOyuG,YAMvCkzB,mBAAmBzkI,UAAUu/D,mBAK7B,SAAUiyC,cAAe1uG,SAAW,MAAO0uG,gBACpCizB,sBASPtB,sBAAyB,WACzB,QAASA,uBAAsBllI,KAAM2E,MAAOwG,YACxC/J,KAAKpB,KAAOA,KACZoB,KAAKuD,MAAQA,MACbvD,KAAK+J,WAAaA,WAgBtB,MARA+5H,uBAAsBnjI,UAAU4jI,uBAKhC,SAAU/7G,WACN,OAAkE,IAA3D2L,cAAc3L,UAAU4L,UAAUjxB,QAAQnD,KAAKuD,QAEnDugI,yBAiBPvB,eAAkB,WAClB,QAASA,gBAAenB,kBAAmBkE,uBAAwBC,wBAAyBlD,iBACxFriI,KAAKohI,kBAAoBA,kBACzBphI,KAAKslI,uBAAyBA,uBAC9BtlI,KAAKulI,wBAA0BA,wBAC/BvlI,KAAKqiI,gBAAkBA,gBAiD3B,MAzCAE,gBAAe3hI,OAMf,SAAUwgI,kBAAmBh5G,WAAYi6G,iBACrC,GAAqBhzG,SAAU,GAAI6xC,iBACdskE,uBAA0C,KAC1Cn8G,UAAYjB,WAAW3J,KAAK,SAAU+J,WAAa,MAAOA,WAAUA,UAAUE,aACnG,IAAIW,UAEA,IAAK,GADgBgvD,oBAAwChvD,UAAUb,UAAmB,SAAE6vD,mBAClEvtE,EAAI,EAAGA,EAAIutE,mBAAmBp2E,OAAQ6I,IAAK;8HACjE,GAAqBglB,UAAWuoD,mBAAmBvtE,EAClC,OAAbglB,SACA01G,uBAAyB16H,EAGzBukB,QAAQ8xC,eAAehuC,YAAYC,MAAMilD,mBAAmBvtE,IAAKA,GAI7E,MAAO,IAAIy3H,gBAAenB,kBAAmB/xG,QAASm2G,uBAAwBnD,kBAMlFE,eAAe5hI,UAAU8/H,mBAIzB,SAAU3wG,UACN,GAAqB21G,oBAMrB,OALAzlI,MAAKslI,uBAAuB/5H,MAAMukB,SAAU,SAAUA,SAAUg2B,gBAAkB2/E,iBAAiB3+H,KAAKg/C,kBACxG2/E,iBAAiB1xG,OACmB,MAAhC/zB,KAAKulI,yBACLE,iBAAiB3+H,KAAK9G,KAAKulI,yBAExBE,iBAAiBxjI,OAAS,EAAIwjI,iBAAiB,GAAK,MAExDlD,kBAuBPxC,sBAAwB,GAAIwC,iBAAe,EAAM,GAAIrhE,iBAAmB,KAAM,MAC9EohE,qBAAuB,GAAI8C,oBA+D3BM,iBAAoB,WACpB,QAASA,qBAGT,MADAA,kBAAiB9hF,MAAQj+B,SAAS,UAC3B+/G,oBAMP3tG,2BAA8B,WAC9B,QAASA,4BAA2BnT,MAAO+gH,cACvC3lI,KAAK4kB,MAAQA,MACb5kB,KAAK2lI,aAAeA,aAExB,MAAO5tG,+BAyEPS,6BAAgC,WAChC,QAASA,8BAA6B5T,MAAOwT,aACzCp4B,KAAK4kB,MAAQA,MACb5kB,KAAKo4B,YAAcA,YAEvB,MAAOI,iCAiEPvB,OACA3I,UAAW,EACXC,WAAY,EAEhB0I,OAAMA,MAAM3I,WAAa,YACzB2I,MAAMA,MAAM1I,YAAc,YAkC1B,IAAIkK,sBAAwB,SAAUjuB,QAElC,QAASiuB,sBAAqBmtG,mBAC1B,GAAI1jG,OAAQ13B,OAAOklC,KAAK1vC,OAASA,IAEjC,OADAkiC,OAAM0jG,kBAAoBA,kBACnB1jG,MA+CX,MAnDA7hC,WAAUo4B,qBAAsBjuB,QAWhCiuB,qBAAqB93B,UAAU4T,UAK/B,SAAU5N,IAAKlD,SACX,GAAIy+B,OAAQliC,KACS8B,MAAQ6E,IAAI6N,KAAK7L,OAAOhC,IAAI7E,MAAM7B,IAAI,SAAU0G,KAAO,MAAOA,KAAID,MAAMw7B,MAAOz+B,UACpG,OAAO,IAAIoiI,qBAAoBl/H,IAAI+D,KAAM5I,KAAM9B,KAAK4lI,kBAAkB/uG,oBAAoBlwB,IAAI/H,KAAMkD,KAAKG,UAO7Gw2B,qBAAqB93B,UAAUuT,kBAK/B,SAAUvN,IAAKlD,SACX,GAAIy+B,OAAQliC,KACS8B,KAAO6E,IAAI4M,YAAYtT,IAAI,SAAU0G,KAAO,MAAOA,KAAID,MAAMw7B,MAAOz+B,UACzF,OAAO,IAAIoiI,qBAAoBl/H,IAAI+D,KAAM5I,KAAM9B,KAAK4lI,kBAAkBnvG,4BAA4B9vB,IAAI4M,YAAYtR,UAOtHw2B,qBAAqB93B,UAAUwT,gBAK/B,SAAUxN,IAAKlD,SACX,GAAIy+B,OAAQliC,KACS8B,KAAO6E,IAAIzE,OAAOjC,IAAI,SAAU0G,KAAO,MAAOA,KAAID,MAAMw7B,MAAOz+B,UACpF,OAAO,IAAIoiI,qBAAoBl/H,IAAI+D,KAAM5I,KAAM9B,KAAK4lI,kBAAkBjvG,0BAA0BhwB,IAAIiwB,QAEjG6B,sBACTs6D,gBACEj8D,gBAAmB,WACnB,QAASA,iBAAgBgvG,eAAgBC,kBAAmB1vG,WACxDr2B,KAAK8lI,eAAiBA,eACtB9lI,KAAK+lI,kBAAoBA,kBACzB/lI,KAAKq2B,UAAYA,UACjBr2B,KAAKgmI,SAAW,GAAIz9G,KACpBvoB,KAAKimI,WAAa,GAAI19G,KACtBvoB,KAAKkmI,kBAAoB,EACzBlmI,KAAKm3B,eAAiB,EA4vB1B,MArvBAL,iBAAgBn2B,UAAUwS,YAK1B,SAAUxM,IAAKqyB,MACX,GAAqB08D,GACrB,QAAQ/uF,IAAI2rF,WACR,IAAK,IACDoD,GAAK+tB,eAAeM,IACpB,MACJ,KAAK,IACDruB,GAAK+tB,eAAeK,KACpB,MACJ,KAAK,IACDpuB,GAAK+tB,eAAeQ,QACpB,MACJ,KAAK,IACDvuB,GAAK+tB,eAAeO,MACpB,MACJ,KAAK,IACDtuB,GAAK+tB,eAAeS,MACpB,MACJ,KAAK,KACDxuB,GAAK+tB,eAAeU,GACpB,MACJ,KAAK,KACDzuB,GAAK+tB,eAAeW,EACpB,MACJ,KAAK,KACD1uB,GAAK+tB,eAAeC,MACpB,MACJ,KAAK,KACDhuB,GAAK+tB,eAAeE,SACpB,MACJ,KAAK,MACDjuB,GAAK+tB,eAAeG,SACpB,MACJ,KAAK,MACDluB,GAAK+tB,eAAeI,YACpB,MACJ,KAAK,IACDnuB,GAAK+tB,eAAeY,KACpB,MACJ,KAAK,IACD3uB,GAAK+tB,eAAec,MACpB,MACJ,KAAK,KACD7uB,GAAK+tB,eAAea,WACpB,MACJ,KAAK,KACD5uB,GAAK+tB,eAAee,YACpB,MACJ,SACI,KAAM,IAAI//G,OAAM,yBAA2BkC,IAAI2rF,WAEvD,MAAOp5D,4BAA2BF,KAAM,GAAIqsF,oBAAmB3vB,GAAI11F,KAAKmmI,OAAOx/H,IAAIyM,KAAM6jB,MAAM1I,YAAavuB,KAAKmmI,OAAOx/H,IAAI0M,MAAO4jB,MAAM1I,eAO7IuI,gBAAgBn2B,UAAU2S,WAK1B,SAAU3M,IAAKqyB,MAEX,MADAD,qBAAoBC,KAAMryB,KACnB3G,KAAK2J,SAAShD,IAAI4M,YAAaylB,OAO1ClC,gBAAgBn2B,UAAU6S,iBAK1B,SAAU7M,IAAKqyB,MAEX,MAAOE,4BAA2BF,KADLh5B,KAAKmmI,OAAOx/H,IAAIqI,UAAWioB,MAAM1I,YAChBw2F,YAAY/kH,KAAKmmI,OAAOx/H,IAAI8M,QAASwjB,MAAM1I,YAAavuB,KAAKmmI,OAAOx/H,IAAI+M,SAAUujB,MAAM1I,eAO1IuI,gBAAgBn2B,UAAU4T,UAK1B,SAAU5N,IAAKqyB,MACX,KAAM,IAAIv0B,OAAM,yEAA2EkC,IAAI/H,OAOnGk4B,gBAAgBn2B,UAAUgT,kBAK1B,SAAUhN,IAAKqyB,MACX,GACqBotG,UADAC,cAAgBrmI,KAAK2J,SAAShD,IAAI7E,KAAMm1B,MAAM1I,WAQnE,OALI63G,UADAz/H,cAAek/H,qBACJl/H,IAAIunB,UAAUm4G,eAGdrmI,KAAKmmI,OAA0Bx/H,IAAW,OAAGswB,MAAM1I,YAAY1C,OAAOw6G,eAE9EntG,2BAA2BF,KAAMotG,WAO5CtvG,gBAAgBn2B,UAAUkT,sBAK1B,SAAUlN,IAAKqyB,MAEX,MADAC,sBAAqBD,KAAMryB,KACpB3G,KAAK+lI,mBAOhBjvG,gBAAgBn2B,UAAUmT,mBAK1B,SAAUnN,IAAKqyB,MACXC,qBAAqBD,KAAMryB,IAE3B,KAAK,GADgB7E,OAAQolB,QAAQvgB,IAAI4M,YAAYtR,SAC3B6I,EAAI,EAAGA,EAAInE,IAAIyrF,QAAQnwF,OAAS,EAAG6I,IACzDhJ,KAAKgF,KAAKogB,QAAQvgB,IAAIyrF,QAAQtnF,KAC9BhJ,KAAKgF,KAAK9G,KAAKmmI,OAAOx/H,IAAI4M,YAAYzI,GAAImsB,MAAM1I,YAGpD,OADAzsB,MAAKgF,KAAKogB,QAAQvgB,IAAIyrF,QAAQzrF,IAAIyrF,QAAQnwF,OAAS,KAC5C0E,IAAI4M,YAAYtR,QAAU,EAC7B4jB,WAAW+G,YAAY+pF,mBAAmB9qF,OAAO/pB,MACjD+jB,WAAW+G,YAAYgqF,aAAa/qF,QAAQ/pB,KAAK,GAAIskB,WAAWtkB,KAAKsB,MAAM,OAOnF0zB,gBAAgBn2B,UAAUoT,eAK1B,SAAUpN,IAAKqyB,MACX,GAAqBstG,cAAetmI,KAAKumI,iBAAiB5/H,IAC1D,OAAI2/H,cACOtmI,KAAKwmI,kBAAkB7/H,IAAK2/H,aAActtG,MAG1CE,2BAA2BF,KAAMh5B,KAAKmmI,OAAOx/H,IAAIrE,IAAK20B,MAAM1I,YAAYva,IAAIhU,KAAKmmI,OAAOx/H,IAAIqN,IAAKijB,MAAM1I,eAQtHuI,gBAAgBn2B,UAAUsT,gBAK1B,SAAUtN,IAAKqyB,MACX,GAAqB12B,KAAMtC,KAAKmmI,OAAOx/H,IAAIrE,IAAK20B,MAAM1I,YACjCva,IAAMhU,KAAKmmI,OAAOx/H,IAAIqN,IAAKijB,MAAM1I,YACjChrB,MAAQvD,KAAKmmI,OAAOx/H,IAAIpD,MAAO0zB,MAAM1I,WAC1D,OAAO2K,4BAA2BF,KAAM12B,IAAI0R,IAAIA,KAAKuM,IAAIhd,SAO7DuzB,gBAAgBn2B,UAAUuT,kBAK1B,SAAUvN,IAAKqyB,MACX,KAAM,IAAIv0B,OAAM,4EAOpBqyB,gBAAgBn2B,UAAUwT,gBAK1B,SAAUxN,IAAKqyB,MACX,KAAM,IAAIv0B,OAAM,0EAOpBqyB,gBAAgBn2B,UAAUyT,sBAK1B,SAAUzN,IAAKqyB,MACX,MAAOE,4BAA2BF,KAAM9R,QAAQvgB,IAAIpD,SAMxDuzB,gBAAgBn2B,UAAU8lI,UAI1B,SAAU7nI,MAAQ,MAAOoB,MAAK8lI,eAAeY,SAAS9nI,OAMtDk4B,gBAAgBn2B,UAAU0T,gBAK1B,SAAU1N,IAAKqyB,MACX,GAAqBstG,cAAetmI,KAAKumI,iBAAiB5/H,IAC1D,IAAI2/H,aACA,MAAOtmI,MAAKwmI,kBAAkB7/H,IAAK2/H,aAActtG,KAGjD,IAAqBl3B,MAAO9B,KAAK2J,SAAShD,IAAI7E,KAAMm1B,MAAM1I,YACrC5uB,OAAS,KACT2U,SAAWtU,KAAKmmI,OAAOx/H,IAAI2N,SAAU2iB,MAAM1I,WAChE,IAAIja,WAAatU,KAAK+lI,kBAAmB,CACrC,GAAqBY,SAAU3mI,KAAKymI,UAAU9/H,IAAI/H,KAC9C+nI,WACAhnI,OAASgnI,QAAQ96G,OAAO/pB,OAMhC,MAHc,OAAVnC,SACAA,OAAS2U,SAASqwG,WAAWh+G,IAAI/H,KAAMkD,OAEpCo3B,2BAA2BF,KAAMr5B,SAQhDm3B,gBAAgBn2B,UAAU8T,eAK1B,SAAU9N,IAAKqyB,MACX,MAAOE,4BAA2BF,KAAMtS,IAAI1mB,KAAKmmI,OAAOx/H,IAAI+N,WAAYuiB,MAAM1I,eAOlFuI,gBAAgBn2B,UAAUgU,mBAK1B,SAAUhO,IAAKqyB,MACX,MAAOE,4BAA2BF,KAAMpS,cAAc5mB,KAAKmmI,OAAOx/H,IAAI+N,WAAYuiB,MAAM1I,eAO5FuI,gBAAgBn2B,UAAUiU,kBAK1B,SAAUjO,IAAKqyB,MACX,GAAqBstG,cAAetmI,KAAKumI,iBAAiB5/H,IAC1D,IAAI2/H,aACA,MAAOtmI,MAAKwmI,kBAAkB7/H,IAAK2/H,aAActtG,KAGjD,IAAqBr5B,QAAS,KACT2U,SAAWtU,KAAKmmI,OAAOx/H,IAAI2N,SAAU2iB,MAAM1I,WAOhE,OANIja,YAAatU,KAAK+lI,oBAClBpmI,OAASK,KAAKymI,UAAU9/H,IAAI/H,OAElB,MAAVe,SACAA,OAAS2U,SAAS2a,KAAKtoB,IAAI/H,OAExBs6B,2BAA2BF,KAAMr5B,SAQhDm3B,gBAAgBn2B,UAAUkU,mBAK1B,SAAUlO,IAAKqyB,MACX,GAAqB1kB,UAAWtU,KAAKmmI,OAAOx/H,IAAI2N,SAAU2iB,MAAM1I,WAChE,IAAIja,WAAatU,KAAK+lI,kBAAmB,CAErC,GAD+B/lI,KAAKymI,UAAU9/H,IAAI/H,MAE9C,KAAM,IAAI6F,OAAM,6CAGxB,MAAOy0B,4BAA2BF,KAAM1kB,SAAS2a,KAAKtoB,IAAI/H,MAAM2hB,IAAIvgB,KAAKmmI,OAAOx/H,IAAIpD,MAAO0zB,MAAM1I,eAOrGuI,gBAAgBn2B,UAAUqU,sBAK1B,SAAUrO,IAAKqyB,MACX,MAAOh5B,MAAKwmI,kBAAkB7/H,IAAK3G,KAAKumI,iBAAiB5/H,KAAMqyB,OAOnElC,gBAAgBn2B,UAAUoU,oBAK1B,SAAUpO,IAAKqyB,MACX,MAAOh5B,MAAKwmI,kBAAkB7/H,IAAK3G,KAAKumI,iBAAiB5/H,KAAMqyB,OAOnElC,gBAAgBn2B,UAAUgJ,SAK1B,SAAUlD,KAAMuyB,MACZ,GAAIkJ,OAAQliC,IACZ,OAAOyG,MAAKxG,IAAI,SAAU0G,KAAO,MAAOu7B,OAAMikG,OAAOx/H,IAAKqyB,SAO9DlC,gBAAgBn2B,UAAUmU,WAK1B,SAAUnO,IAAKqyB,MACX,KAAM,IAAIv0B,OAAM,gEAAkEkC,IAAI0qF,wBAA0B,eAAiB1qF,IAAI2qF,WAOzIx6D,gBAAgBn2B,UAAUwlI,OAK1B,SAAUx/H,IAAKqyB,MACX,GAAqBr5B,QAASK,KAAKimI,WAAW3lH,IAAI3Z,IAClD,OAAIhH,UAEIK,KAAKgmI,SAAS1lH,IAAI3Z,MAAQA,KAAKD,MAAM1G,KAAMg5B,OAQvDlC,gBAAgBn2B,UAAU6lI,kBAM1B,SAAU7/H,IAAK2/H,aAActtG,MAoCzB,GAAqB4tG,mBAAoB5mI,KAAKmmI,OAAOG,aAAahyH,SAAU2iB,MAAM1I,YAC7Ds4G,cAA6B,EAC9C7mI,MAAK8mI,eAAeR,aAAahyH,YAGjCuyH,UAAY7mI,KAAK+mI,oBAEjBH,kBAAoBC,UAAUtmH,IAAIqmH,mBAElC5mI,KAAKimI,WAAW1lH,IAAI+lH,aAAahyH,SAAUuyH,WAE/C,IAAqB73H,WAAY43H,kBAAkB7gB,SAG/CugB,wBAAwB5zC,gBACxB1yF,KAAKgmI,SAASzlH,IAAI+lH,aAAc,GAAI7zC,YAAW6zC,aAAa57H,KAAM47H,aAAahyH,SAAUgyH,aAAa1nI,KAAM0nI,aAAaxkI,OAGzH9B,KAAKgmI,SAASzlH,IAAI+lH,aAAc,GAAI50C,cAAa40C,aAAa57H,KAAM47H,aAAahyH,SAAUgyH,aAAa1nI,MAG5G,IAAqBooI,QAAShnI,KAAKmmI,OAAOx/H,IAAKswB,MAAM1I,WASrD,OANAvuB,MAAKgmI,SAAShqG,OAAOsqG,cAEjBO,WACA7mI,KAAKinI,iBAAiBJ,WAGnB3tG,2BAA2BF,KAAMhqB,UAAU+1G,YAAY79F,QAAQ,MAAO8/G,UAMjFlwG,gBAAgBn2B,UAAU4lI,iBAI1B,SAAU5/H,KACN,GAAIu7B,OAAQliC,KACS0G,MAAQ,SAAUlD,QAASmD,KAC5C,OAAQu7B,MAAM8jG,SAAS1lH,IAAI3Z,MAAQA,KAAKD,MAAMlD,SAElD,OAAOmD,KAAID,OACPyM,YAIA,SAAUxM,KAAO,MAAO,OACxB2M,WAIA,SAAU3M,KAAO,MAAO,OACxB6M,iBAIA,SAAU7M,KAAO,MAAO,OACxBgN,kBAIA,SAAUhN,KAAO,MAAO,OACxBkN,sBAIA,SAAUlN,KAAO,MAAO,OACxBmN,mBAIA,SAAUnN,KAAO,MAAO,OACxBoN,eAIA,SAAUpN,KAAO,MAAOD,OAAM1G,KAAM2G,IAAIrE,MACxC2R,gBAIA,SAAUtN,KAAO,MAAO,OACxBuN,kBAIA,SAAUvN,KAAO,MAAO,OACxBwN,gBAIA,SAAUxN,KAAO,MAAO,OACxByN,sBAIA,SAAUzN,KAAO,MAAO,OACxB0N,gBAIA,SAAU1N,KAAO,MAAOD,OAAM1G,KAAM2G,IAAI2N,WACxCC,UAIA,SAAU5N,KAAO,MAAO,OACxB8N,eAIA,SAAU9N,KAAO,MAAO,OACxBgO,mBAIA,SAAUhO,KAAO,MAAO,OACxBiO,kBAIA,SAAUjO,KAAO,MAAOD,OAAM1G,KAAM2G,IAAI2N,WACxCO,mBAIA,SAAUlO,KAAO,MAAO,OACxBmO,WAIA,SAAUnO,KAAO,MAAO,OACxBoO,oBAIA,SAAUpO,KAAO,MAAOD,OAAM1G,KAAM2G,IAAI2N,WAAa3N,KACrDqO,sBAIA,SAAUrO,KACN,MAAOD,OAAM1G,KAAM2G,IAAI2N,WAAa3N,QAQhDmwB,gBAAgBn2B,UAAUmmI,eAI1B,SAAUngI,KACN,GAAIu7B,OAAQliC,KACS0G,MAAQ,SAAUlD,QAASmD,KAC5C,MAAOA,OAAQu7B,MAAM8jG,SAAS1lH,IAAI3Z,MAAQA,KAAKD,MAAMlD,UAEpC0jI,UAAY,SAAU1jI,QAASmD,KAChD,MAAOA,KAAIwqB,KAAK,SAAUxqB,KAAO,MAAOD,OAAMlD,QAASmD,OAE3D,OAAOA,KAAID,OACPyM,YAIA,SAAUxM,KAAO,MAAOD,OAAM1G,KAAM2G,IAAIyM,OAAS1M,MAAM1G,KAAM2G,IAAI0M,QACjEC,WAIA,SAAU3M,KAAO,OAAO,GACxB6M,iBAIA,SAAU7M,KACN,MAAOD,OAAM1G,KAAM2G,IAAIqI,YAActI,MAAM1G,KAAM2G,IAAI8M,UACjD/M,MAAM1G,KAAM2G,IAAI+M,WAExBC,kBAIA,SAAUhN,KAAO,OAAO,GACxBkN,sBAIA,SAAUlN,KAAO,OAAO,GACxBmN,mBAIA,SAAUnN,KAAO,MAAOugI,WAAUlnI,KAAM2G,IAAI4M,cAC5CQ,eAIA,SAAUpN,KAAO,OAAO,GACxBsN,gBAIA,SAAUtN,KAAO,OAAO,GACxBuN,kBAIA,SAAUvN,KAAO,OAAO,GACxBwN,gBAIA,SAAUxN,KAAO,OAAO,GACxByN,sBAIA,SAAUzN,KAAO,OAAO,GACxB0N,gBAIA,SAAU1N,KAAO,OAAO,GACxB4N,UAIA,SAAU5N,KAAO,OAAO,GACxB8N,eAIA,SAAU9N,KAAO,MAAOD,OAAM1G,KAAM2G,IAAI+N,aACxCC,mBAIA,SAAUhO,KAAO,MAAOD,OAAM1G,KAAM2G,IAAI+N,aACxCE,kBAIA,SAAUjO,KAAO,OAAO,GACxBkO,mBAIA,SAAUlO,KAAO,OAAO,GACxBmO,WAIA,SAAUnO,KAAO,OAAO,GACxBoO,oBAIA,SAAUpO,KAAO,OAAO,GACxBqO,sBAIA,SAAUrO,KAAO,OAAO,MAMhCmwB,gBAAgBn2B,UAAUomI,kBAG1B,WACI,GAAqBI,YAAannI,KAAKkmI,mBAEvC,OADAlmI,MAAKm3B,eAAiBxa,KAAKC,IAAI5c,KAAKkmI,kBAAmBlmI,KAAKm3B,gBACrD,GAAIvR,aAAY8S,cAAc14B,KAAKq2B,UAAW8wG,cAMzDrwG,gBAAgBn2B,UAAUsmI,iBAI1B,SAAUJ,WAEN,GADA7mI,KAAKkmI,oBACDW,UAAUjoI,MAAQ85B,cAAc14B,KAAKq2B,UAAWr2B,KAAKkmI,mBACrD,KAAM,IAAIzhI,OAAM,aAAeoiI,UAAUjoI,KAAO,2BAGjDk4B,mBAePR,qBAAwB,WACxB,QAASA,yBAgBT,MAVAA,sBAAqB31B,UAAU+lI,SAI/B,SAAU9nI,MACN,MAAIA,QAAS8mI,iBAAiB9hF,MAAMhlD,KACzB8mI,iBAAiB9hF,MAErB,MAEJttB,wBA6BPuvG,oBAAuB,SAAUr7H,QAEjC,QAASq7H,qBAAoBn7H,KAAM5I,KAAMosB,WACrC,GAAIgU,OAAQ13B,OAAOklC,KAAK1vC,KAAM0K,KAAM,KAAM5I,OAAS9B,IAGnD,OAFAkiC,OAAMpgC,KAAOA,KACbogC,MAAMhU,UAAYA,UACXgU,MAEX,MAPA7hC,WAAUwlI,oBAAqBr7H,QAOxBq7H,qBACTlzC,cASEvsD,kBAAqB,WACrB,QAASA,mBAAkBrC,QAAS1hB,WAChCriB,KAAK+jC,QAAUA,QACf/jC,KAAKqiB,UAAYA,UAiDrB,MA1BA+jB,mBAAkBzlC,UAAUm6H,iBAa5B,SAAUzxG,UAAW4iC,SAAUizE,UAAWkI,uBACtC,GAAIllG,OAAQliC,KACSmhC,MAAQ,GAAI5Y,IACjC22G,WAAUt4H,QAAQ,SAAU4X,GAAK,MAAO2iB,OAAM5gB,IAAI/B,EAAE5f,KAAM4f,EAAEpY,KAAKiB,YACjE,IAAqBggI,mBAAoB,EACpBC,mBAAqB,SAAUl/F,QAChD,GAAqBm/F,mBAAoBF,mBACzC,OAAO,IAAIG,aAAYtlG,MAAM6B,QAAS7B,MAAM7f,UAAW+kH,sBAAuBh/F,OAAQ/e,UAAUjjB,KAAKiB,UAAWgiB,UAAUqvD,OAAQ6uD,kBAAmBpmG,MAAOmmG,qBAE3I9jI,QAAU8jI,mBAAmB,KAElD,OADA9jI,SAAQmG,YAAasiD,UACdzoD,QAAQo8F,SAEZx5D,qBAGPohG,YAAe,WACf,QAASA,aAAYzjG,QAAS1hB,UAAW+kH,sBAAuBh/F,OAAQ/e,UAAWo+G,gBAAiBF,kBAAmBpmG,MAAOmmG,oBAC1HtnI,KAAK+jC,QAAUA,QACf/jC,KAAKqiB,UAAYA,UACjBriB,KAAKonI,sBAAwBA,sBAC7BpnI,KAAKooC,OAASA,OACdpoC,KAAKqpB,UAAYA,UACjBrpB,KAAKynI,gBAAkBA,gBACvBznI,KAAKunI,kBAAoBA,kBACzBvnI,KAAKmhC,MAAQA,MACbnhC,KAAKsnI,mBAAqBA,mBAC1BtnI,KAAK0nI,cAAgB,GAAIn/G,KACzBvoB,KAAK+1E,aACL/1E,KAAKoK,YACLpK,KAAK2nI,WACL3nI,KAAK4nI,WAsXT,MAhXAJ,aAAY7mI,UAAUknI,aAItB,SAAUzhI,MACN,GAAqBi8G,QAUrB,MARIA,QADAj8G,OAASpG,KAAKqpB,WAAarpB,KAAKynI,gBA5BrB,OA+BNrhI,eAAgBmB,cACXvH,KAAKonI,sBAAsB9mH,IAAIla,MAhC9B,QAsCX,KAAM,IAAI3B,OAAM,yDAA2DwwC,KAAKtvC,UAAUS,MAE9F,OAAOi8G,UAOXmlB,YAAY7mI,UAAUgJ,SAKtB,SAAUosE,UAAWv8C,UACjBx5B,KAAK+1E,UAAYA,UACjBvvE,iBAAiBxG,KAAMw5B,WAM3BguG,YAAY7mI,UAAUi/F,MAItB,SAAUkoC,kBACN,GAAI5lG,OAAQliC,SACa,KAArB8nI,mBAA+BA,qBACnC9nI,KAAKoK,SAASxD,QAAQ,SAAUi1B,OAAS,MAAOA,OAAM+jE,MAAMkoC,mBAC5D,IAAqBC,YAAapiH,SApEnB,QAoE8CpF,IAAI0L,WAAW2L,WAAWtM,eAClE4oC,aAAe,CACpCl0D,MAAK2nI,QAAQ/gI,QAAQ,SAAU8N,YAC3B,GAAIyE,IAAK+oB,MAAM8lG,2BAA2BtzH,YAAa3K,WAAaoP,GAAGpP,WAAYtG,QAAU0V,GAAG1V,QAASF,MAAQ4V,GAAG5V,MAC/F8yB,UAAY,GAAK69B,eACjB+zE,aAAexkI,UAAYy+B,MAAM7Y,UAAY6Y,MAAQ,KACtE5oB,GAAK4e,uBAAuB+vG,aAActiH,SAASuc,MAAM2lG,aAAapkI,UAAWF,MAAO8yB,WAAYzR,MAAQtL,GAAGsL,MAAOwT,YAAc9e,GAAG8e,WAC3IxT,OAAM9d,KAAK,GAAIwyB,qBAAoBlB,cACnC2vG,UAAUjhI,KAAK/G,MAAMgoI,UAAWnjH,MAAM3kB,IAAI,SAAUmlB,MAAQ,MAAOD,oCAAmCC,KAAMrb,iBAEhH/J,KAAK4nI,QAAQhhI,QAAQ,SAAUuS,IAC3B,GAAIpP,YAAaoP,GAAGpP,WAAYtG,QAAU0V,GAAG1V,QAASF,MAAQ4V,GAAG5V,MAC5C8yB,UAAY,GAAK69B,eACjB+zE,aAAexkI,UAAYy+B,MAAM7Y,UAAY6Y,MAAQ,KACtEtd,MAAQqR,qBAAqBgyG,aAActiH,SAASuc,MAAM2lG,aAAapkI,UAAWF,MAAO8yB,WAAWzR,KACxGmjH,WAAUjhI,KAAK/G,MAAMgoI,UAAWnjH,MAAM3kB,IAAI,SAAUmlB,MAAQ,MAAOD,oCAAmCC,KAAMrb,gBAEhH,IAAqBm+H,UAAW,SAAWloI,KAAKqpB,UAAUzqB,KAAO,IAAMoB,KAAKunI,kBACvDY,YAAc,GAAIpgB,qBAAoBmgB,YAAcH,UAEzE,OADAD,kBAAiBhhI,KAAKqhI,aACfL,kBAOXN,YAAY7mI,UAAUkjE,eAKtB,SAAUl9D,IAAKlD,SACX,GAAIy+B,OAAQliC,IAC2C2G,KAAS,MACA,IAC1D4M,YAAY3M,QAAQ,SAAU6e,MAChC,MAAOyc,OAAMylG,QAAQ7gI,MAAOrD,QAASy+B,MAAM7Y,UAAW9lB,MAAOkiB,KAAM1b,WAAYpD,IAAIoD,gBAQ3Fy9H,YAAY7mI,UAAUg8D,sBAKtB,SAAUh2D,IAAKlD,SAKX,GAJAzD,KAAKooI,uBAAuBzhI,KAIxB3G,KAAK+jC,QAAQskG,sBAAuB,CACpC,GAAqBC,cAAetoI,KAAKsnI,mBAAmBtnI,KAC5DA,MAAKoK,SAAStD,KAAKwhI,cACnBA,aAAa3+H,SAAShD,IAAIovE,UAAWpvE,IAAIyD,YAQjDo9H,YAAY7mI,UAAUk8D,aAKtB,SAAUl2D,IAAKlD,SACX,GAAIy+B,OAAQliC,IACZA,MAAKooI,uBAAuBzhI,IAI5BA,KAAIm2D,OAAOl2D,QAAQ,SAAUmzB,UACzBmI,MAAMylG,QAAQ7gI,MAAOrD,QAASy+B,MAAM7Y,UAAW9lB,MAAOw2B,SAASx2B,MAAOwG,WAAYgwB,SAAShwB,eAE/FvD,iBAAiBxG,KAAM2G,IAAIyD,WAM/Bo9H,YAAY7mI,UAAUynI,uBAItB,SAAUzhI,KACN,GAAIu7B,OAAQliC,IACZ2G,KAAIyhB,WAAWxhB,QAAQ,SAAUozB,QAAUkI,MAAM66B,eAAe/iC,UAChErzB,IAAIi0D,WAAWh0D,QAAQ,SAAUU,KAC7B,GAAqBihI,eAAiC,IAKlDA,eADAjhI,IAAI/D,OAAS+D,IAAI/D,MAAMiE,YAAc06B,MAAM6B,QAAQskG,sBACnC/gI,IAAI/D,MAAMiE,WAAWH,UAGrBw7G,gBAAgB1vC,QAEpCjxC,MAAMwlG,cAAcnnH,IAAIjZ,IAAI1I,KAAM2pI,iBAEtC5hI,IAAI8gD,QAAQ7gD,QAAQ,SAAU4hI,WAC1BtmG,MAAM0lG,QAAQ9gI,MAAOrD,QAASy+B,MAAM7Y,UAAW9lB,MAAOilI,UAAU/kE,QAAS15D,WAAYy+H,UAAUz+H,gBAOvGy9H,YAAY7mI,UAAUo8D,eAItB,SAAU/iC,QACN,GAAIkI,OAAQliC,KACS67G,QAAU7hF,OAAOxR,UAAUpiB,KAAKiB,SACrD2yB,QAAO8iC,OAAOl2D,QAAQ,SAAUpE,OAC5B,MAAO0/B,OAAMylG,QAAQ7gI,MAAOrD,QAASy+B,MAAM7Y,UAAW9lB,MAAOf,MAAMe,MAAOwG,WAAYvH,MAAMuH,eAK5F/J,KAAK+jC,QAAQskG,wBACbruG,OAAOm8C,eAAevvE,QAAQ,SAAUmzB,UACpC,MAAOmI,OAAMylG,QAAQ7gI,MAAOrD,QAASo4G,QAASt4G,MAAOw2B,SAASx2B,MAAOwG,WAAYgwB,SAAShwB,eAE9FiwB,OAAOo8C,WAAWxvE,QAAQ,SAAU6hI,cAChC,MAAOvmG,OAAM0lG,QAAQ9gI,MACjBrD,QAASo4G,QACTt4G,MAAOklI,aAAahlE,QACpB15D,WAAY0+H,aAAa1+H,iBASzCy9H,YAAY7mI,UAAU+lI,SAItB,SAAU9nI,MACN,GAAIA,MAAQ8mI,iBAAiB9hF,MAAMhlD,KAC/B,MAAO+mB,UAAS3lB,KAAK6nI,aAAahlB,gBAAgB1vC,SAEtD,KAAK,GAAqBu1D,aAAc1oI,KAAM0oI,YAAaA,YAAcA,YAAYtgG,OAAQ,CACzF,GAAqBmgG,mBAAgB,EAGrC,IAAqB,OADrBA,cAAgBG,YAAYhB,cAAcpnH,IAAI1hB,OACnB,CAEO8pI,YAAY3yD,UAAUt3D,KAAK,SAAUkqH,QAAU,MAAOA,QAAO/pI,OAASA,SAEhG2pI,cAAgB1lB,gBAAgB1vC,SAGxC,GAAqB,MAAjBo1D,cACA,MAAO5iH,UAAS3lB,KAAK6nI,aAAaU,gBAG1C,MAAO,OAMXf,YAAY7mI,UAAUioI,cAItB,SAAUhqI,MACN,GAAqBi0D,MAAO7yD,KAAKmhC,MAAM7gB,IAAI1hB,KAC3C,KAAKi0D,KACD,KAAM,IAAIpuD,OAAM,sCAAwC7F,KAAO,mBAAqBoB,KAAKqpB,UAE7F,OAAOrpB,MAAK6nI,aAAah1E,OAM7B20E,YAAY7mI,UAAUqnI,2BAItB,SAAUtzH,YACN,GAAIwtB,OAAQliC,IACZ,QACI+J,WAAY2K,WAAW3K,WACvBtG,QAASiR,WAAWjR,QACpBF,MAAOizB,gCACHC,4BAA6B,SAAUC,UACnC,MAAO,UAAU50B,MACb,GAAqBiN,KAAMqX,WAAWtkB,KAGtC,OAAOogC,OAAM6B,QAAQskG,sBAAwBt5H,IAAMA,IAAI2oB,KAAKpM,gBAGpEqL,0BAA2B,SAAUC,MACjC,MAAO,UAAU10B,QACb,GAAqBwrE,SAAU92C,KAAK32B,IAAI,SAAUga,EAAGnP,GACjD,OACIkJ,IAAKiG,EAAEjG,IACPzQ,MAAOrB,OAAO4I,GACd2b,OAAQxM,EAAEwM,UAGGxmB,IAAMqmB,WAAWonD,QAGtC,OAAOxrC,OAAM6B,QAAQskG,sBAAwBpoI,IAAMA,IAAIy3B,KAAKpM,gBAGpEuL,oBAAqB,SAAUj4B,KAAM83B,UACjC,MAAO,UAAU50B,MAMb,MAFI6jB,UAD4Buc,MAAM6B,QAAQskG,sBACjCnmG,MAAM0mG,cAAchqI,MACpBsjC,MAAM2lG,aAAahlB,gBAAgB1vC,UAChCwxC,WAAW,YAAa7iH,SAGjD4S,WAAWnR,SAQtBikI,YAAY7mI,UAAUwiE,eAKtB,SAAUx8D,IAAKlD,WAMf+jI,YAAY7mI,UAAU6+D,UAKtB,SAAU74D,IAAKlD,WAMf+jI,YAAY7mI,UAAUojE,uBAKtB,SAAUp9D,IAAKlD,WAMf+jI,YAAY7mI,UAAU2iE,eAKtB,SAAU38D,IAAKlD,WAMf+jI,YAAY7mI,UAAU4iE,cAKtB,SAAU58D,IAAKlD,WAMf+jI,YAAY7mI,UAAU6iE,WAKtB,SAAU78D,IAAKlD,WAMf+jI,YAAY7mI,UAAUgjE,qBAKtB,SAAUh9D,IAAKlD,WAMf+jI,YAAY7mI,UAAUijE,UAKtB,SAAUj9D,IAAKlD,WACR+jI,eAcPxsG,aAAe,QACfC,WAAa,QAEb4tG,kBAAqB,WACrB,QAASA,mBAAkBC,aAAcC,iBACrC/oI,KAAK8oI,aAAeA,aACpB9oI,KAAK+oI,gBAAkBA,gBAE3B,MAAOF,sBAEP3iG,aAAgB,WAChB,QAASA,cAAainD,YAClBntF,KAAKmtF,WAAaA,WAiDtB,MAvCAjnD,cAAavlC,UAAUm6H,iBAQvB,SAAUj8F,UAAWxV,UAAW4iC,SAAUirB,OAAQgoD,WAC9C,GAAIh9F,OAAQliC,KACSqnI,kBAAoB,EACpB3rG,eAAiBD,mBAAmBwwB,UACpC+8E,2BAA0C,EAC/D,KAAK3/G,UAAUqvD,OAAQ,CACnB,GAAqBuwD,YAAgC5/G,UAAmB,SACnD6/G,mBACjBD,YAAW7wD,YAAc6wD,WAAW7wD,WAAWn2E,QAC/CinI,iBAAiBpiI,KAAK,GAAI0f,iBAAgB,YAAa0D,wBAAwB2U,UAAWoqG,WAAW7wD,aAAa,GAEtH,IAAqB+wD,oBAAqBxjH,SAAS5d,iBAAiBshB,UAAUjjB,KAAKiB,WACnF2hI,wBAA4CG,mBAAwB,KACpEtqG,UAAUhG,WAAW/xB,KAAKqiI,mBACrB5oH,IAAIsF,WAAW+G,YAAY4qF,qBAAqB3rF,QAAQ,GAAItF,iBACzD,GAAIC,iBAAgB,gBAAiBU,QAAQ+hH,WAAWrkF,gBAAgB,GACxE,GAAIp+B,iBAAgB,SAAU0wD,QAAQ,GACtC,GAAI1wD,iBAAgB,OAAQ,GAAID,gBAAe2iH,mBAAmB,QAErEtxG,WAAW5R,WAAW4G,YAAY6qF,gBAAiB5/E,aAAaC,MAAOD,aAAaoH,YAE7F,GAAqBqoG,oBAAqB,SAAUl/F,QAChD,GAAqBm/F,mBAAoBF,mBACzC,OAAO,IAAI+B,eAAclnG,MAAMirD,WAAYtuD,UAAWuJ,OAAQ/e,UAAWk+G,kBAAmBrI,UAAWxjG,eAAgB4rG,qBAEtG9jI,QAAU8jI,mBAAmB,KAGlD,OAFA9jI,SAAQmG,YAAasiD,WACpB9yC,GAAK0lB,UAAUhG,YAAY/xB,KAAK/G,MAAMoZ,GAAI3V,QAAQo8F,SAC5C,GAAIipC,mBAAkBrlI,QAAQ0kI,SAAUc,uBAC/C,IAAI7vH,KAED+sB,gBAEPmjG,UAAY1jH,SAAS,MACrB0V,SAAW1V,SAAS,MACpByV,UAAYzV,SAAS,OACrB2jH,SAAW3jH,SAAS,OACpB4jH,eAAiB5jH,SAAS,MAC1B6jH,kBAAoB7jH,SAAS,MAC7ByjH,cAAiB,WACjB,QAAS5B,aAAYnlH,UAAWwc,UAAWuJ,OAAQ/e,UAAWk+G,kBAAmBrI,UAAWxjG,eAAgB4rG,oBACxGtnI,KAAKqiB,UAAYA,UACjBriB,KAAK6+B,UAAYA,UACjB7+B,KAAKooC,OAASA,OACdpoC,KAAKqpB,UAAYA,UACjBrpB,KAAKunI,kBAAoBA,kBACzBvnI,KAAKk/H,UAAYA,UACjBl/H,KAAK07B,eAAiBA,eACtB17B,KAAKsnI,mBAAqBA,mBAC1BtnI,KAAK4J,SACL5J,KAAKypI,oBAAsB7pI,OAAOgB,OAAO,MACzCZ,KAAK0pI,eAAiB9pI,OAAOgB,OAAO,MACpCZ,KAAK+1E,aACL/1E,KAAKoK,YAILpK,KAAK6H,SAAW7H,KAAKunI,kBAAoB,EACrCj8G,aACmBpF,eAAe2Y,UAAUhZ,WAAW7lB,KAAKqpB,UAAUjjB,KAAKiB,YAC/ErH,KAAKkoI,SAAWtgI,cAAc5H,KAAKqpB,UAAUjjB,KAAKiB,UAAWrH,KAAKunI,mBAi+BtE,MA19BAC,aAAY7mI,UAAUgJ,SAKtB,SAAUosE,UAAWv8C,UACjB,GAAI0I,OAAQliC,IAUZ,IATAA,KAAK+1E,UAAYA,UAEZ/1E,KAAKooC,QACNpoC,KAAKk/H,UAAUt4H,QAAQ,SAAUisD,MACzBA,KAAKod,OACL/tC,MAAMunG,oBAAoB52E,KAAKj0D,MAAQsjC,MAAMynG,YAAY,KAAM92E,UAItE7yD,KAAKooC,OAAQ,CACd,GAAqBwhG,YAAa3tG,mBAAmBj8B,KAAK07B,eAC1D17B,MAAKqpB,UAAUE,YAAY3iB,QAAQ,SAAU4iB,MAAOqgH,YAEhD,GAAqBngH,SAAUmgH,WAAa,EACvB93E,YAAcvoC,MAAMitB,MAAQ,EAAgB,EAC5ClsB,MAAQ,UAAgCgS,4BAA4BqtG,WAAYlgH,QAASF,MAAMitB,MACpHvU,OAAMt4B,MAAM9C,KAAK,WACb,OACIiD,WAAY,KACZsiD,UAAW9hC,MACXm7B,QAAS7/B,WAAW+G,YAAYqlC,UAAUpmC,QACtC3E,QAAQqD,OAAQrD,QAAQwC,SACxB,GAAInD,iBAAgB,GAAIC,iBAAgBgD,MAAMy4F,aAAc/6F,QAAQ6qC,cAAc,YAMtGvrD,iBAAiBxG,KAAMw5B,UACnBx5B,KAAKooC,SAA+B,IAApB5O,SAASv3B,QAAgBs3B,wBAAwBC,YAEjEx5B,KAAK4J,MAAM9C,KAAK,WACZ,OACIiD,WAAY,KACZsiD,UAAW,EACX3G,QAAS7/B,WAAW+G,YAAY+rC,WAAW9sC,QACvC3E,QAAQ,GAAe+E,UAAWA,UAAW/E,QAAQ,SAUzEsgH,YAAY7mI,UAAUi/F,MAItB,SAAUkoC,sBACmB,KAArBA,mBAA+BA,qBACnC9nI,KAAKoK,SAASxD,QAAQ,SAAUi1B,OAAS,MAAOA,OAAM+jE,MAAMkoC,mBAC5D,IAAI3uH,IAAKnZ,KAAK8pI,yBAA0BC,oBAAsB5wH,GAAG4wH,oBAAqBC,sBAAwB7wH,GAAG6wH,sBAAuBC,aAAe9wH,GAAG8wH,aACrIC,iBAAmBlqI,KAAKmqI,gBAAgBJ,qBACxCK,mBAAqBpqI,KAAKmqI,gBAAgBH,uBAC1CK,UAAY,CAC5BrqI,MAAKooC,QAAUpoC,KAAKqpB,UAAU0mD,kBAAoBH,wBAAwBC,SAC3Ew6D,WAAa,EAEjB,IAAqBlC,aAAc,GAAIpgB,qBAAoB/nH,KAAKkoI,UAAW,GAAI78G,SAA2Bg+G,UAAe,QAAM,GAAIv9G,iBAAgBjG,WAAW+G,YAAYw/B,SAASvgC,QAC3K3E,QAAQmjH,WACRjkH,WAAW6jH,cACXG,mBACAF,qBACElkH,WAAW4G,YAAY8qF,gBAA4C,IAA3B13G,KAAKunI,mBAA2B1vG,aAAaoH,aAE/F,OADA6oG,kBAAiBhhI,KAAKqhI,aACfL,kBAMXN,YAAY7mI,UAAUwpI,gBAItB,SAAUG,aACN,GAAqBC,SACrB,IAAID,YAAYroI,OAAS,EAAG,CACxB,GAAqBuoI,cAChBxqI,KAAKqpB,UAAUqvD,QAAU/zD,iBAAiB2lH,aAAa32G,IAAuB21G,SAAc,OAC7FkB,SAAS1jI,KAAKwiI,SAAS/oH,IAAI8a,SAASpM,KAAK,cAAc2I,WAAW53B,KAAK6H,WAE3E0iI,SAAWzjH,IACP,GAAIuE,SAA2B+P,UAAe,KAAGrP,eACjD,GAAIV,SAA2BgQ,SAAc,KAAGtP,gBACjDy+G,SAAS7hI,OAAO2hI,aAAcv+G,mBAGjCw+G,UAAWt+G,SAEf,OAAOs+G,WAOX/C,YAAY7mI,UAAUwiE,eAKtB,SAAUx8D,IAAKlD,SAEXzD,KAAK4J,MAAM9C,KAAK,WACZ,OACIiD,WAAYpD,IAAIoD,WAChBsiD,UAAW,EACX3G,QAAS7/B,WAAW+G,YAAY2qF,cAAc1rF,QAC1C3E,QAAQvgB,IAAIm/C,gBAAiB5+B,QAAQvgB,IAAItB,aAUzDmiI,YAAY7mI,UAAU6+D,UAKtB,SAAU74D,IAAKlD,SAGXzD,KAAK4J,MAAM9C,KAAK,WACZ,OACIiD,WAAYpD,IAAIoD,WAChBsiD,UAAW,EACX3G,QAAS7/B,WAAW+G,YAAYoqF,SAASnrF,QACrC3E,SANsB,GAOtBA,QAAQvgB,IAAIm/C,gBACZ1/B,YAAYc,QAAQvgB,IAAIpD,eAUxCikI,YAAY7mI,UAAUkjE,eAKtB,SAAUl9D,IAAKlD,SACX,GAAIy+B,OAAQliC,KACSm7B,UAAYn7B,KAAK4J,MAAM3H,MAE5CjC,MAAK4J,MAAM9C,KAAsB,KACjC,IAAqB2jI,eAAkC9jI,IAAS,MAC3C+jI,MAA0BD,cAAiB,IAC3CE,0BAA4BD,MAAMn3H,YAAYtT,IAAI,SAAUwlB,KAAMu9B,cACnF,MAAO9gB,OAAM0oG,6BAA8BzvG,UAAWA,UAAW6nB,aAAcA,aAAcj5C,WAAYpD,IAAIoD,WAAYtG,QAAS6lI,SAAU/lI,MAAOkiB,SAIlI6zC,WAAan+B,SAClCn7B,MAAK4J,MAAMuxB,WAAa,WACpB,OACIpxB,WAAYpD,IAAIoD,WAChBsiD,UAAW,EACX3G,QAAS7/B,WAAW+G,YAAYoqF,SAASnrF,QACrC3E,QAAQoyC,YACRpyC,QAAQvgB,IAAIm/C,gBACZ1/B,WAAWskH,MAAMt4C,QAAQnyF,IAAI,SAAU8E,GAAK,MAAOmiB,SAAQniB,QAE/DgwD,eAAgB41E,6BAS5BnD,YAAY7mI,UAAUg8D,sBAKtB,SAAUh2D,IAAKlD,SACX,GAAIy+B,OAAQliC,KACSm7B,UAAYn7B,KAAK4J,MAAM3H,MAE5CjC,MAAK4J,MAAM9C,KAAsB,KACjC,IAAIqS,IAAKnZ,KAAK6qI,wBAAwB1vG,UAAWx0B,KAAM4jB,MAAQpR,GAAGoR,MAAOugH,iBAAmB3xH,GAAG2xH,iBAAkB10D,WAAaj9D,GAAGi9D,WAC5GkyD,aAAetoI,KAAKsnI,mBAAmBtnI,KAC5DA,MAAKoK,SAAStD,KAAKwhI,cACnBA,aAAa3+H,SAAShD,IAAIovE,UAAWpvE,IAAIyD,SACzC,IAAqBw7C,YAAa5lD,KAAK4J,MAAM3H,OAASk5B,UAAY,CAKlEn7B,MAAK4J,MAAMuxB,WAAa,WACpB,OACIpxB,WAAYpD,IAAIoD,WAChBsiD,UAAW,EAAsB9hC,MACjCm7B,QAAS7/B,WAAW+G,YAAY+rC,WAAW9sC,QACvC3E,QAAQqD,OACRugH,iBACA5jH,QAAQvgB,IAAIm/C,gBACZ5+B,QAAQ0+B,YACR1jB,MAAM6oG,4BAA4B5vG,UAAWi7C,YAC7CzwD,SAAS2iH,aAAaJ,eAUtCV,YAAY7mI,UAAUk8D,aAKtB,SAAUl2D,IAAKlD,SACX,GAAIy+B,OAAQliC,KACSm7B,UAAYn7B,KAAK4J,MAAM3H,MAE5CjC,MAAK4J,MAAM9C,KAAsB,KAEjC,IAAqBo+H,QAAS54H,cAAc3F,IAAI/H,MAAQ,KAAO+H,IAAI/H,KAC/Dua,GAAKnZ,KAAK6qI,wBAAwB1vG,UAAWx0B,KAAM4jB,MAAQpR,GAAGoR,MAAOygH,WAAa7xH,GAAG6xH,WAAYF,iBAAmB3xH,GAAG2xH,iBAAkBG,gBAAkB9xH,GAAG+xH,aAAc90D,WAAaj9D,GAAGi9D,WAC3K+0D,aACAR,6BACAS,aACrB,IAAIlG,OAAQ,CACR,GAAqBgG,cAAevkI,IAAIm2D,OACnC78D,IAAI,SAAU85B,UACf,OACIt2B,QAA0B,SAC1Bs2B,SAAUA,SACVC,OAAyB,QAG5BrxB,OAAOsiI,gBACRC,cAAajpI,SACb0oI,0BACIO,aAAajrI,IAAI,SAAU0tF,YAAa3qC,cACpC,MAAO9gB,OAAM0oG,6BACTnnI,QAASkqF,YAAYlqF,QACrB03B,UAAWA,UACX6nB,aAAcA,aACdj5C,WAAY4jF,YAAY5zD,SAAShwB,WACjCxG,MAAOoqF,YAAY5zD,SAASx2B,UAGxC4nI,UAAYD,aAAajrI,IAAI,SAAU0tF,aAAe,MAAO7zD,mBAAkB6zD,YAAY5zD,SAAU4zD,YAAY3zD,WAErHoxG,WAAaJ,WAAW/qI,IAAI,SAAUkZ,IAClC,GAAIvF,QAASuF,GAAG,GAAIwqC,UAAYxqC,GAAG,EACnC,OAAOiN,aAAYc,QAAQtT,QAASsT,QAAQy8B,eAGpDn9C,iBAAiBxG,KAAM2G,IAAIyD,SAC3B,IAAqBw7C,YAAa5lD,KAAK4J,MAAM3H,OAASk5B,UAAY,EAC7CkwG,QAAU1kI,IAAIyhB,WAAW3J,KAAK,SAAUub,QAAU,MAAOA,QAAOxR,UAAUE,cAC1E4iH,iBAAoC,UACpCvlF,SAA4B,SAC7CslF,WACAtlF,SAAW/lD,KAAK6+B,UAAUhZ,WAAWwlH,QAAQ7iH,UAAUowD,mBACvD0yD,iBAAmBtrI,KAAK6+B,UAAUhZ,WAAWwlH,QAAQ7iH,UAAUorC,cAInE,IAAqB0F,YAAan+B,SAClCn7B,MAAK4J,MAAMuxB,WAAa,WACpB,OACIpxB,WAAYpD,IAAIoD,WAChBsiD,UAAW,EAAsB9hC,MACjCm7B,QAAS7/B,WAAW+G,YAAY8kC,YAAY7lC,QACxC3E,QAAQoyC,YACRpyC,QAAQqD,OACRugH,iBACA5jH,QAAQvgB,IAAIm/C,gBACZ5+B,QAAQ0+B,YACR1+B,QAAQg+G,QACRA,OAAS3qG,cAAc5zB,KAAOslB,UAC9Bk/G,UAAUlpI,OAASmkB,WAAW+kH,WAAal/G,UAC3Cm/G,WAAWnpI,OAASmkB,WAAWglH,YAAcn/G,UAC7CiW,MAAM6oG,4BAA4B5vG,UAAWi7C,YAC7CrwB,SACAulF,mBAEJv2E,eAAgB41E,6BAS5BnD,YAAY7mI,UAAUkqI,wBAKtB,SAAU1vG,UAAWx0B,KACjB,GAAIu7B,OAAQliC,KACSuqB,MAAQ,CACzB5jB,KAAIgzB,mBACJpP,OAAS,SAEb,IAAqBygH,YAAa,GAAIziH,IACtC5hB,KAAI8gD,QAAQ7gD,QAAQ,SAAUg9C,OAC1B,GAAIzqC,IAAKgjB,0BAA0BynB,MAAO,MAAOhlD,KAAOua,GAAGva,KAAMgV,OAASuF,GAAGvF,MAC7Eo3H,YAAWzqH,IAAImc,qBAAqB9oB,OAAQhV,OAAQgV,OAAQhV,SAEhE+H,IAAIyhB,WAAWxhB,QAAQ,SAAUozB,QAC7BA,OAAOo8C,WAAWxvE,QAAQ,SAAUg9C,OAChC,GAAIzqC,IAAKgjB,0BAA0BynB,MAAO5pB,QAASp7B,KAAOua,GAAGva,KAAMgV,OAASuF,GAAGvF,MAC/Eo3H,YAAWzqH,IAAImc,qBAAqB9oB,OAAQhV,OAAQgV,OAAQhV,UAGpE,IAAqBssI,iBACA90D,aACrBp2E,MAAKurI,uCAAuC5kI,IAAIyhB,YAChDzhB,IAAImhB,UAAUlhB,QAAQ,SAAU0jB,YAAaU,eACzC,GAAqBgP,YAA0B,GAC1BwxG,aAA4B,EAOjD,IANA7kI,IAAIyhB,WAAWxhB,QAAQ,SAAU6kI,YAAa3gI,GACtC2gI,YAAYjjH,UAAUpiB,KAAKiB,YAAcc,eAAemiB,YAAY1kB,SACpEo0B,OAASyxG,YACTD,SAAW1gI,KAGfkvB,OAAQ,CACR,GAAI7gB,IAAK+oB,MAAMwpG,gBAAgBphH,YAAa0P,OAAQwxG,SAAUrwG,UAAWx0B,IAAIi0D,WAAYj0D,IAAIi1B,aAAcovG,WAA+B9oG,MAAMxG,eAAepb,IAAqB,MAAW2qH,gBAAkB9xH,GAAG+xH,aAAcS,cAAgBxyH,GAAGi9D,UACrP80D,cAAapkI,KAAK/G,MAAMmrI,aAAcD,iBACtC70D,WAAWtvE,KAAK/G,MAAMq2E,WAAYu1D,mBAGlCzpG,OAAM0pG,eAAethH,YAAa3jB,IAAIi1B,eAG9C,IAAqBiwG,mBAoCrB,OAnCAllI,KAAIi1B,aAAah1B,QAAQ,SAAU2E,OAC/B,GAAqB2mD,eAA6B,EAC9C/pD,gBAAeoD,MAAMhI,SACrB2+B,MAAM7f,UAAUC,yBAAyBsK,YAAY6iC,YACrDyC,UAAY,EAEP/pD,eAAeoD,MAAMhI,SAC1B2+B,MAAM7f,UAAUC,yBAAyBsK,YAAYsnD,kBACrDhiB,UAAY,EAEP/pD,eAAeoD,MAAMhI,SAC1B2+B,MAAM7f,UAAUC,yBAAyBsK,YAAYqnD,eACrD/hB,UAAY,GAEC,MAAbA,WACA25E,gBAAgB/kI,KAAKsf,YAAYc,QAAQ3b,MAAMme,SAAUxC,QAAQgrC,gBAGzEvrD,IAAIi0D,WAAWh0D,QAAQ,SAAUU,KAC7B,GAAqB4qD,eAA6B,EAC7C5qD,KAAI/D,MAGA4E,eAAeb,IAAI/D,SACxB2+B,MAAM7f,UAAUC,yBAAyBsK,YAAYqnD,eACrD/hB,UAAY,GAJZA,UAAY,EAMC,MAAbA,YACAhwB,MAAMwnG,eAAepiI,IAAI1I,MAAQu8B,UACjC0wG,gBAAgB/kI,KAAKsf,YAAYc,QAAQ5f,IAAI1I,MAAOsoB,QAAQgrC,iBAGpEvrD,IAAI8gD,QAAQ7gD,QAAQ,SAAU4hI,WAC1BpyD,WAAWtvE,MAAOrD,QAAS6lI,SAAUltG,SAAUosG,UAAWxuG,OAAyB,UAGnFzP,MAAOA,MACPygH,WAAYtnI,MAAMigB,KAAKqnH,WAAW9oI,UAClC4oI,iBAAkBe,gBAAgB5pI,OAASmkB,WAAWylH,iBAAmB5/G,UACzEi/G,aAAcA,aACd90D,WAAYA,aAcpBoxD,YAAY7mI,UAAU+qI,gBAWtB,SAAUphH,YAAa0P,OAAQjQ,eAAgB+hH,iBAAkBnhB,KAAM/uF,aAAcovG,WAAYxuG,UAC7F,GAAI0F,OAAQliC,KACSm7B,UAAYn7B,KAAK4J,MAAM3H,MAE5CjC,MAAK4J,MAAM9C,KAAsB,MACjCkzB,OAAOxR,UAAUwB,QAAQpjB,QAAQ,SAAU4iB,MAAOqgH,YAC9C,GAAqBngH,SAAUsQ,OAAOpQ,oBAAsBigH,WACvCt/G,MAAQ,SAAkCgS,4BAA4BC,SAAU9S,QAASF,MAAMitB,OAC/Fsb,YAAcvoC,MAAMitB,MAAQ,EAAgB,CACjEvU,OAAMt4B,MAAM9C,KAAK,WACb,OACIiD,WAAYiwB,OAAOjwB,WACnBsiD,UAAW9hC,MACXm7B,QAAS7/B,WAAW+G,YAAYqlC,UAAUpmC,QACtC3E,QAAQqD,OAAQrD,QAAQwC,SACxB,GAAInD,iBAAgB,GAAIC,iBAAgBgD,MAAMy4F,aAAc/6F,QAAQ6qC,cAAc,WASlG,IAAqBnM,YAAa5lD,KAAK4J,MAAM3H,OAASk5B,UAAY,EAC9DhiB,GAAKnZ,KAAK+rI,0BAA0BzhH,YAAasR,cAAerR,MAAQpR,GAAGoR,MAAOshH,gBAAkB1yH,GAAG0yH,gBAAiBjhH,aAAezR,GAAGyR,aAAcC,SAAW1R,GAAG0R;6MAC1K8/F,MAAK/jH,QAAQ,SAAUU,KACfA,IAAI/D,OAAS4E,eAAeb,IAAI/D,SAAW4E,eAAemiB,YAAY1kB,SACtEs8B,MAAMwnG,eAAepiI,IAAI1I,MAAQu8B,UACjC0wG,gBAAgB/kI,KAAKsf,YAAYc,QAAQ5f,IAAI1I,MAAOsoB,QAAQ,SAGhE8S,OAAOxR,UAAUE,cACjB6B,OAAS,MAEb,IAAqB4gH,WAAYnxG,OAAO8iC,OAAO78D,IAAI,SAAU85B,SAAUq7D,YACnE,GAAqB42C,UAAW5lH,YAAYc,QAAQkuE,YAAaluE,QAAQ6S,SAASk8C,gBAElF,OAAO,IAAIzvD,iBAAgBuT,SAASk8C,cAAe+1D,UAAU,KAE5CZ,cACA7vB,QAAUvhF,OAAOxR,SACtC5oB,QAAOg3B,KAAK2kF,QAAQ9zD,SAAS7gD,QAAQ,SAAUosB,UAC3C,GAAqB2wB,WAAY43D,QAAQ9zD,QAAQz0B,SAC7Cg4G,YAAWr3G,IAAIgwB,YAEfynF,WAAWtkI,KAAK,GAAI0f,iBAAgBwM,SAAU9L,QAAQy8B,YAAY,KAG1E,IAAqBsoF,gCACjBjyG,OAAO8iC,OAAO76D,SAAmB,OAARsoB,OAAuD,KAChF0hH,2BACIjyG,OAAO8iC,OAAO78D,IAAI,SAAUuC,MAAOwgD,cAC/B,MAAO9gB,OAAM0oG,6BACTzvG,UAAWA,UACX6nB,aAAcA,aACdj5C,WAAYvH,MAAMuH,WAClBtG,QAAS6lI,SACT/lI,MAAOf,MAAMe,UAI7B,IAAqB2oI,gBAAiBrmH,WAAW+G,YAAY0qF,WAAWzrF,QAAQwP,SAAUnU,QAAQiU,aAC7E+vG,aAAelxG,OAAOm8C,eAAel2E,IAAI,SAAU85B,UACpE,OACIt2B,QAASyoI,eACTlyG,OAAQA,OACRD,SAAUA,YAGGq8C,WAAap8C,OAAOo8C,WAAWn2E,IAAI,SAAUwoI,cAC9D,OACIhlI,QAASyoI,eACT9vG,SAAUqsG,aAAczuG,OAAQA,UAKnBs/B,WAAan+B,SAmBlC,OAlBAn7B,MAAK4J,MAAMuxB,WAAa,WACpB,OACIpxB,WAAYiwB,OAAOjwB,WACnBsiD,UAAW,MAA4B9hC,MACvCm7B,QAAS7/B,WAAW+G,YAAYqqF,cAAcprF,QAC1C3E,QAAQoyC,YACRpyC,QAAQqD,OACRshH,gBAAgB5pI,OAASmkB,WAAWylH,iBAAmB5/G,UACvD/E,QAAQ0+B,YACRh7B,aACAC,SACAsgH,UAAUlpI,OAAS,GAAIskB,gBAAe4kH,WAAal/G,UACnDm/G,WAAWnpI,OAAS,GAAIskB,gBAAe6kH,YAAcn/G,YAEzD2oC,iBAAkBq3E,2BAClBzjH,UAAWwR,OAAOxR,UAAUpiB,QAG3B8kI,aAAcA,aAAc90D,WAAYA,aAOrDoxD,YAAY7mI,UAAUirI,eAKtB,SAAUthH,YAAasR,cACnB57B,KAAKmsI,iBAAiBnsI,KAAK+rI,0BAA0BzhH,YAAasR,gBAMtE4rG,YAAY7mI,UAAU4qI,uCAItB,SAAUnjH,YACN,GAAqBgkH,kBAAmBhkH,WAAW3J,KAAK,SAAUub,QAAU,MAAOA,QAAOxR,UAAUE,aACpG,IAAI0jH,kBAAoBA,iBAAiB5jH,UAAUgE,gBAAgBvqB,OAAQ,CACvE,GAAIkX,IAAKoT,oCAAoCvsB,KAAKqiB,UAAWriB,KAAK6+B,UAAW,KAA4ButG,iBAAiB5jH,UAAUgE,iBAAkB5B,aAAezR,GAAGyR,aAAcC,SAAW1R,GAAG0R,SAAUN,MAAQpR,GAAGoR,MAAOO,UAAY3R,GAAG2R,SAC/O9qB,MAAKmsI,kBACDvhH,aAAcA,aACdC,SAAUA,SACVN,MAAOA,MACPO,UAAWA,UACX+gH,mBACA9hI,WAAYqiI,iBAAiBriI,eAQzCy9H,YAAY7mI,UAAUwrI,iBAItB,SAAUhiF,MAC2BnqD,KAAK4J,MAAM3H,MAI5CjC,MAAK4J,MAAM9C,KAAK,WACZ,OACIiD,WAAYogD,KAAKpgD,WACjBsiD,UAAWlC,KAAK5/B,MAChBm7B,QAAS7/B,WAAW+G,YAAYvC,aAAawB,QACzC3E,QAAQijC,KAAK5/B,OACb4/B,KAAK0hF,gBAAgB5pI,OAASmkB,WAAW+jC,KAAK0hF,iBAAmB5/G,UACjEk+B,KAAKr/B,UAAWq/B,KAAKv/B,aAAcu/B,KAAKt/B,eAUxD28G,YAAY7mI,UAAUorI,0BAKtB,SAAUzhH,YAAasR,cACnB,GACqBiwG,mBACrBjwG,cAAah1B,QAAQ,SAAU2E,OACvBpD,eAAeoD,MAAMhI,SAAW4E,eAAemiB,YAAY1kB,QAC3DimI,gBAAgB/kI,KAAKsf,YAAYc,QAAQ3b,MAAMme,SAAUxC,QAAQ,OAGzE,IAAI/N,IAAKkR,YAAYrqB,KAAK6+B,UAAWvU,aAAcM,aAAezR,GAAGyR,aAAcC,SAAW1R,GAAG0R,SAAUwhH,cAAgBlzH,GAAGoR,MAAOO,UAAY3R,GAAG2R,SACpJ,QACIP,MATyB,EASV8hH,cACfR,gBAAiBA,gBACjBjhH,aAAcA,aACdC,SAAUA,SACVC,UAAWA,UACX/gB,WAAYugB,YAAYvgB,aAOhCy9H,YAAY7mI,UAAU+lI,SAItB,SAAU9nI,MACN,GAAIA,MAAQ8mI,iBAAiB9hF,MAAMhlD,KAC/B,MAAO8mI,kBAAiB9hF,KAG5B,KAAK,GADgB0oF,cAAejxG,SACVqtG,YAAc1oI,KAAM0oI,YAAaA,YAAcA,YAAYtgG,OACjFkkG,aAAeA,aAAar9G,KAAK,UAAUyI,KAAKpM,cAAe,CAE/D,GAAqBihH,cAAe7D,YAAYgB,eAAe9qI,KAC/D,IAAoB,MAAhB2tI,aACA,MAAO1mH,YAAW+G,YAAY0qF,WAAWzrF,QAAQygH,aAAcplH,QAAQqlH,eAG3E,IAAqB5D,QAASD,YAAY3yD,UAAUt3D,KAAK,SAAUkqH,QAAU,MAAOA,QAAO/pI,OAASA,MACpG,IAAI+pI,OAAQ,CACR,GAAqB6D,UAAW7D,OAAOplI,OArtB3B,WAstBZ,OAAO+oI,cAAar9G,KAAK,WAAWA,KAAKu9G,WAGjD,MAAO,OAOXhF,YAAY7mI,UAAU8rI,6BAKtB,SAAU1iI,WAAY2sB,UAClB,GAAiB,IAAbA,SAAgB,CAChB,GAAqBg2G,aAAc7mH,WAAW+G,YAAYiqF,YAC1D,OAAO,YAAc,MAAO61B,cAEhC,GAAqBpzE,YAAat5D,KAAK4J,MAAM3H,MAW7C,OAVAjC,MAAK4J,MAAM9C,KAAK,WACZ,OACIiD,WAAYA,WACZsiD,UAAW,GACX3G,QAAS7/B,WAAW+G,YAAYsqF,cAAcrrF,QAC1C3E,QAAQoyC,YACRpyC,QAAQwP,eAIb,SAAU50B,MAAQ,MAAOo5B,eAAco+B,WAAYx3D,QAO9D0lI,YAAY7mI,UAAUgsI,2BAKtB,SAAU5iI,WAAY6sB,MAClB,GAAoB,IAAhBA,KAAK30B,OAAc,CACnB,GAAqB2qI,aAAc/mH,WAAW+G,YAAYkqF,UAC1D,OAAO,YAAc,MAAO81B,cAEhC,GAAqB3sI,KAAMqmB,WAAWsQ,KAAK32B,IAAI,SAAUoZ,EAAGvO,GAAK,MAAQ3I,aAAakX,GAAK9V,MAAO2jB,QAAQpc,QACrFwuD,WAAat5D,KAAK4J,MAAM3H,MAW7C,OAVAjC,MAAK4J,MAAM9C,KAAK,WACZ,OACIiD,WAAYA,WACZsiD,UAAW,GACX3G,QAAS7/B,WAAW+G,YAAYuqF,eAAetrF,QAC3C3E,QAAQoyC,YACRr5D,SAIL,SAAU6B,MAAQ,MAAOo5B,eAAco+B,WAAYx3D,QAQ9D0lI,YAAY7mI,UAAUksI,qBAMtB,SAAUn4H,WAAY9V,KAAM83B,UACxB,GAAqBm8B,MAA0B7yD,KAAKk/H,UAAUzgH,KAAK,SAAUgiG,aAAe,MAAOA,aAAY7hH,OAASA,MACxH,IAAIi0D,KAAKod,KAAM,CACX,GAAqB68D,cAAe9sI,KAAK4J,MAAM3H,MAC/CjC,MAAK4J,MAAM9C,KAAK,WACZ,OACIiD,WAAY2K,WAAW3K,WACvBsiD,UAAW,IACX3G,QAAS7/B,WAAW+G,YAAYwqF,aAAavrF,QACzC3E,QAAQ4lH,cACR5lH,QAAQwP,cAOpB,KAFA,GAAqBq2G,cAAe1xG,SACf2xG,YAAchtI,KAC5BgtI,YAAY5kG,QACf4kG,YAAcA,YAAY5kG,OAC1B2kG,aAAeA,aAAa99G,KAAK,UAAUyI,KAAKpM,aAEpD,IAAqB2hH,eAAgBD,YAAYvD,oBAAoB7qI,MAChDsuI,gBAAkBrnH,WAAW+G,YAAY0qF,WAAWzrF,QAAQkhH,aAAc7lH,QAAQ+lH,gBACvG,OAAO,UAAUnrI,MACb,MAAOw5B,iBAAgB5mB,WAAWymB,UAAWzmB,WAAWsuC,aAAc9nB,cAAc4xG,cAAeI,iBAAiBvkI,OAAO7G,SAI/H,GAAqBq5B,WAAYn7B,KAAK2pI,YAAYj1H,WAAW3K,WAAY8oD,MACpDs6E,gBAAkBtnH,WAAW+G,YAAY0qF,WAAWzrF,QAAQwP,SAAUnU,QAAQiU,YACnG,OAAO,UAAUr5B,MACb,MAAOw5B,iBAAgB5mB,WAAWymB,UAAWzmB,WAAWsuC,aAAcmqF,gBAAgBxoB,WAAW,YAAa7iH,SAS1H0lI,YAAY7mI,UAAUgpI,YAKtB,SAAU5/H,WAAY8oD,MAClB,GAAI3wB,OAAQliC,KACSm7B,UAAYn7B,KAAK4J,MAAM3H,OACvBsoB,MAAQ,CAC7BsoC,MAAKzsD,KAAK8hB,eAAethB,QAAQ,SAAU4jB,eAEnCA,gBAAkB3H,eAAeE,YACjCwH,OAASE,wBAAwBD,iBAGzC,IAAqBkB,UAAWmnC,KAAKzsD,KAAKulB,OAAO1rB,IAAI,SAAU47D,OAAS,MAAOrwC,QAAO0W,MAAMrD,UAAWg9B,QAYvG,OATA77D,MAAK4J,MAAM9C,KAAK,WACZ,OACIiD,WAAYA,WACZsiD,UAAW,GACX3G,QAAS7/B,WAAW+G,YAAYyqF,SAASxrF,QACrC3E,QAAQqD,OAAQ2X,MAAMrD,UAAUhZ,WAAWgtC,KAAKzsD,KAAKiB,WAAY+e,WAAWsF,eAIjFyP,WAWXqsG,YAAY7mI,UAAUiqI,4BAStB,SAAUl2H,YACN,GAAIwtB,OAAQliC,IACZ,QACIm7B,UAAWzmB,WAAWymB,UACtB6nB,aAActuC,WAAWsuC,aACzBj5C,WAAY2K,WAAW3K,WACvBtG,QAASiR,WAAWjR,QACpBF,MAAOizB,gCACHC,4BAA6B,SAAUC,UACnC,MAAOwL,OAAMuqG,6BAA6B/3H,WAAW3K,WAAY2sB,WAErEC,0BAA2B,SAAUC,MACjC,MAAOsL,OAAMyqG,2BAA2Bj4H,WAAW3K,WAAY6sB,OAEnEC,oBAAqB,SAAUj4B,KAAM83B,UACjC,MAAOwL,OAAM2qG,qBAAqBn4H,WAAY9V,KAAM83B,YAEzDhiB,WAAWnR,SAMtBikI,YAAY7mI,UAAUmpI,uBAGtB,WA+BI,QAASsD,wBAAuBjyG,UAAWpxB,WAAYwJ,YAAa85H,iBAChE,GAAqB/C,gBACA7+G,MAAQlY,YAAYtT,IAAI,SAAUkZ,IACnD,GAAIpP,YAAaoP,GAAGpP,WAAYtG,QAAU0V,GAAG1V,QAASF,MAAQ4V,GAAG5V,MAC5C8yB,UAAY,GAAKi3G,qBACjBrF,aAAexkI,UAAY6lI,SAAWxuE,KAAO,KAC9DxhD,GAAK4e,uBAAuB+vG,aAAcxkI,QAASF,MAAO8yB,WAAYzR,MAAQtL,GAAGsL,MAAOwT,YAAc9e,GAAG8e,WAE7G,OADAkyG,aAAYxjI,KAAK/G,MAAMuqI,YAAa1lH,MAAM3kB,IAAI,SAAUmlB,MAAQ,MAAOD,oCAAmCC,KAAMrb,eACzGyb,oCAAoC4S,YAAaruB,aAK5D,QAHIwJ,YAAYtR,QAAUorI,kBACtB/C,YAAYxjI,KAAKqe,mCAAmC+V,cAAcC,UAAW1P,OAAO0N,SAAUpvB,aAE3FugI,YA3CX,GAAqBxvE,MAAO96D,KACPstI,mBAAqB,EACrBvD,uBACAC,yBACAC,aAAejqI,KAAK4J,MAAM3J,IAAI,SAAU4B,QAASs5B,WAClE,GAAIhiB,IAAKtX,UAAW6jD,QAAUvsC,GAAGusC,QAAS2G,UAAYlzC,GAAGkzC,UAAWuI,iBAAmBz7C,GAAGy7C,iBAAkBG,eAAiB57C,GAAG47C,eAAgBhrD,WAAaoP,GAAGpP,UAehK,OAdIgrD,iBACAg1E,oBAAoBjjI,KAAK/G,MAAMgqI,oBAAqBqD,uBAAuBjyG,UAAWpxB,WAAYgrD,gBAAgB,IAElHH,kBACAo1E,sBAAsBljI,KAAK/G,MAAMiqI,sBAAuBoD,uBAAuBjyG,UAAWpxB,WAAY6qD,kBAA+B,OAAZvI,WAA2D,IAUjL7mC,oCAH2C,EAAZ6mC,UAClC,GAAIi8D,YAAW+gB,UAAUx9G,WAAWA,WAAY65B,UAChDA,QACuD37C,aAE/D,QAASggI,oBAAqBA,oBAAqBC,sBAAuBA,sBAAuBC,aAAcA,eA6BnHzC,YAAY7mI,UAAUoqI,4BAKtB,SAAU5vG,UAAWoyG,UACjB,GAAIrrG,OAAQliC,KACSwtI,oBACAC,wBAA0B,CAC/CF,UAAS3mI,QAAQ,SAAUuS,IACvB,GAAI1V,SAAU0V,GAAG1V,QAAS24B,SAAWjjB,GAAGijB,SAAUpC,OAAS7gB,GAAG6gB,OACzC3D,UAAY,GAAKo3G,0BACjBxF,aAAexkI,UAAY6lI,SAAWpnG,MAAQ,KAC/D5oB,GAAK2c,qBAAqBgyG,aAAcxkI,QAAS24B,SAASqnC,QAASptC,WAAYzR,MAAQtL,GAAGsL,MAAO+gH,aAAersH,GAAGqsH,aAClG+H,UAAY9oH,KAC7B+gH,eACA+H,UAAU5mI,KAAK0iI,kBAAkBjpH,IAAIolH,aAAa1pD,IAAIutD,oBAAoBrwG,SAE9E,IAAIrf,IAAKqiB,0BAA0BC,SAAUpC,QAAS2zG,YAAc7zH,GAAGlG,OAAQ+vC,UAAY7pC,GAAGlb,KACzEgvI,cAAgBlxG,qBAAqBixG,YAAahqF,UACvE6pF,kBAAiB1mI,KAAKqe,mCAAmC,GAAIgkG,QAAOjiG,QAAQ0mH,eAAeroB,UAAUgkB,gBAAiBmE,WAAYtxG,SAASryB,cAE/I,IAAqB8jI,cACrB,IAAIL,iBAAiBvrI,OAAS,EAAG,CAC7B,GAAqBuoI,WAAYhB,kBAAkBjpH,IAAI2G,SAAQ,IAAO0Q,WAAW4rF,aAC5ExjH,KAAKqpB,UAAUqvD,QAAU/zD,iBAAiB6oH,kBAAkB75G,IAAuB21G,SAAc,OAClGkB,SAAS1jI,KAAKwiI,SAAS/oH,IAAI8a,SAASpM,KAAK,cAAc2I,WAAW53B,KAAK6H,WAE3EgmI,cAAgB/mH,IACZ,GAAIuE,SAA2BgQ,SAAc,KAAGtP,eAChD,GAAIV,SAA2Bk+G,eAAoB,KAAGx9G,eACtD,GAAIV,SAA2Bq6G,iBAAiB9hF,MAAW,KAAG73B,gBAC/Dy+G,SAAS7hI,OAAO6kI,kBAAmB,GAAI1hH,iBAAgB09G,qBAAsBz9G,mBAGhF8hH,eAAgB5hH,SAEpB,OAAO4hH,gBAOXrG,YAAY7mI,UAAUo8D,eAKtB,SAAUp2D,IAAKlD,WAMf+jI,YAAY7mI,UAAUojE,uBAKtB,SAAUp9D,IAAKlD,WAMf+jI,YAAY7mI,UAAU2iE,eAKtB,SAAU38D,IAAKlD,WAMf+jI,YAAY7mI,UAAU4iE,cAKtB,SAAU58D,IAAKlD,WAMf+jI,YAAY7mI,UAAU6iE,WAKtB,SAAU78D,IAAKlD,WAMf+jI,YAAY7mI,UAAUgjE,qBAKtB,SAAUh9D,IAAKlD,WAMf+jI,YAAY7mI,UAAUijE,UAKtB,SAAUj9D,IAAKlD,WACR+jI,eAgNPsG,cAAiB,WACjB,QAASA,eAAchjD,YAAa8f,cAAeC,eAAgB2G,aAC/C,KAAZA,UAAsBA,QAAU,MACpCxxG,KAAK8qF,YAAcA,YACnB9qF,KAAK4qG,cAAgBA,cACrB5qG,KAAK6qG,eAAiBA,eACtB7qG,KAAKwxG,QAAUA,QACfxxG,KAAKgrG,aA0ET,MAlEA8iC,eAAcntI,UAAUotI,mBAMxB,SAAU54B,KAAMtsG,IAAKoN,qBACjB,GAAqB+3H,kBAAmBhuI,KAAK8qF,YAAY13D,MAAM+hF,KAAMtsG,KAAK,EAAMoN,oBAChF,IAAI+3H,iBAAiBp8G,OAAO3vB,OACxB,MAAO+rI,kBAAiBp8G,MAE5B,IAAqBq8G,kBAAmBtwH,gBAAgBqwH,iBAAiBr8G,UAAW1b,oBAAqBjW,KAAK4qG,cAAe5qG,KAAK6qG,eAClI,OAAIojC,kBAAiBr8G,OAAO3vB,OACjBgsI,iBAAiBr8G,SAE3BzY,GAAKnZ,KAAKgrG,WAAWlkG,KAAK/G,MAAMoZ,GAAI80H,iBAAiBhuH,aAEtD,IAAI9G,KAOR20H,cAAcntI,UAAUutI,YAGxB,WAAc,MAAOluI,MAAKgrG,WAM1B8iC,cAAcntI,UAAU+uG,MAKxB,SAAUuF,WAAYk5B,eAClB,GAAqBluH,aACAmuH,cAAgB,GAAIC,oBAEzCruI,MAAKgrG,UAAUpkG,QAAQ,SAAUqK,SAC7B,GAAqB5H,IAAK4rG,WAAW98F,OAAOlH,QACvCgP,UAAS5Z,eAAegD,KAIxB8P,GAAK8G,SAAS5W,IAAI45F,SAASn8F,KAAK/G,MAAMoZ,GAAIlI,QAAQgyF,SAHnDhjF,SAAS5W,IAAM4H,OAKnB,IAAIkI,KAGR,IAAqBm1H,SAAU1uI,OAAOg3B,KAAK3W,UAAUhgB,IAAI,SAAUoJ,IAC/D,GAAqBusG,QAASX,WAAWpH,iBAAiB5tF,SAAS5W,KAC9CklI,IAAMtuH,SAAS5W,IACfO,MAAQgsG,OAASw4B,cAAcn9B,QAAQs9B,IAAI3kI,MAAOgsG,QAAU24B,IAAI3kI,MAChE4kI,mBAAqB,GAAI1rC,SAAQl5F,YAAe2kI,IAAIj2H,QAASi2H,IAAIhxH,YAAalU,GAKnG,OAJAmlI,oBAAmBvrC,QAAUsrC,IAAItrC,QAC7BkrC,eACAK,mBAAmBvrC,QAAQr8F,QAAQ,SAAUkP,QAAU,MAAOA,QAAOnO,SAAWwmI,cAAcr4H,OAAOnO,YAElG6mI,oBAEX,OAAOv5B,YAAWvF,MAAM4+B,QAAStuI,KAAKwxG,UAEnCs8B,iBAEPO,oBAAuB,SAAU7jI,QAEjC,QAAS6jI,uBACL,MAAkB,QAAX7jI,QAAmBA,OAAOzK,MAAMC,KAAMgC,YAAchC,KA2D/D,MA7DAK,WAAUguI,oBAAqB7jI,QAS/B6jI,oBAAoB1tI,UAAUswG,QAK9B,SAAUrnG,MAAOgsG,QACb,GAAI1zE,OAAQliC,IACZ,OAAO41G,QAAShsG,MAAM3J,IAAI,SAAU6Q,GAAK,MAAOA,GAAEpK,MAAMw7B,MAAO0zE,UAAchsG,OAOjFykI,oBAAoB1tI,UAAU6hG,oBAK9B,SAAUC,GAAImT,QACV,GAAI1zE,OAAQliC,KACS0iG,UAA+BkT,OAAO91F,aAAa2iF,GAAGC,WACtDC,UAAYF,GAAGE,UAA+BiT,OAAO91F,aAAa2iF,GAAGE,WAAeF,GAAGE,UACvFv4F,SAAWq4F,GAAGr4F,SAASnK,IAAI,SAAU6Q,GAAK,MAAOA,GAAEpK,MAAMw7B,MAAO0zE,SACrF,OAAO,IAAInS,gBAAehB,GAAG9iF,IAAK8iF,GAAGp1F,MAAOq1F,UAAWC,UAAWv4F,SAAUq4F,GAAG1B,OAAQ0B,GAAG14F,aAO9FskI,oBAAoB1tI,UAAUiiG,iBAK9B,SAAUH,GAAImT,QACV,MAAO,IAAIlS,aAAYjB,GAAGl/F,MAA0BqyG,OAAO91F,aAAa2iF,GAAG7jG,MAAS6jG,GAAG14F,aAO3FskI,oBAAoB1tI,UAAUkiG,oBAK9B,SAAUJ,GAAImT,QACV,MAAO,IAAIjS,gBAAelB,GAAGl/F,MAA0BqyG,OAAO91F,aAAa2iF,GAAG7jG,MAAS6jG,GAAG14F,aAEvFskI,qBACTzqC,cAaE6qC,cAAiB,WACjB,QAASA,eAAcxxG,WAAYH,WAAY4xG,eAC3C1uI,KAAKi9B,WAAaA,WAClBj9B,KAAK88B,WAAaA,WACW,gBAAlB4xG,gBACP1uI,KAAK8V,OAAS44H,cACd1uI,KAAK4kB,MAAQ,OAGb5kB,KAAK8V,OAAS,KACd9V,KAAK4kB,MAAQ8pH,eAyBrB,MAlBAD,eAAc9tI,UAAU8jB,aAIxB,SAAUD,OACN,MAAIxkB,MAAK88B,aAAetY,MAAMsY,aAG1B98B,KAAK8V,OACE9V,KAAK8V,SAAW0O,MAAM1O,OAEd,MAAf0O,MAAMI,OAKHF,iBAAoC1kB,KAAW,MAAsBwkB,MAAY,SAErFiqH,iBA+FP/wG,iBAAoB,SAAUlzB,QAE9B,QAASkzB,kBAAiBJ,eAAgBD,gBAAiBF,aACvD,GAAI+E,OAAQ13B,OAAOklC,KAAK1vC,OAASA,IAUjC,OATAkiC,OAAM5E,eAAiBA,eACvB4E,MAAM7E,gBAAkBA,gBACxB6E,MAAM/E,YAAcA,YACpB+E,MAAM3E,WACN2E,MAAMysG,cAAgB,GAAIpmH,KAC1B2Z,MAAM0sG,yBAA2B,GAAIrmH,KACrC2Z,MAAM2sG,sBACN3sG,MAAM9D,mCAAqC,GAAI7V,KAC/C2Z,MAAM6H,WAAazM,eAAewxG,mBAAmB3xG,aAC9C+E,MAqMX,MAjNA7hC,WAAUq9B,iBAAkBlzB,QAkB5BkzB,iBAAiB/8B,UAAUi9B,WAI3B,SAAUG,SACN,GAAImE,OAAQliC,KACS+uI,mBAAqB/uI,KAAKo+B,mCAAmC9d,IAAIyd,QAAQF,QACzEmxG,iBAAmBhvI,KAAK4uI,yBAAyBtuH,IAAIyd,QAAQF,OAQlF,IAPKkxG,qBACDA,oBAAuBlxG,OAAQE,QAAQF,OAAQC,aAAU35B,IACzDnE,KAAKo+B,mCAAmC7d,IAAIwd,QAAQF,OAAQkxG,oBAC5DC,kBAAqBnxG,OAAQ79B,KAAKivI,aAAalxG,QAAQF,OAAQ,IAC/D79B,KAAK6uI,mBAAmB/nI,KAAKkoI,kBAC7BhvI,KAAK4uI,yBAAyBruH,IAAIwd,QAAQF,OAAQmxG,oBAEjDD,mBAAmBjxG,UAAYC,QAAQD,SAAU,CAClD,GAAqBoxG,YAAanxG,QAAQD,YAC1C,IAA8B,UAA1BoxG,WAAWxtG,WAAwB,CASnC,GAAqBytG,WACrBvvI,QAAOg3B,KAAKs4G,YAAYtoI,QAAQ,SAAUosB,UACrB,eAAbA,WACAm8G,QAAQn8G,UAAYk8G,WAAWl8G,aAGvCk8G,WAAaC,QAEjBJ,mBAAmBjxG,SAAWoxG,WAC9BF,iBAAiBlxG,SAAW99B,KAAKivI,aAAaC,WAAY,GAE9D,IAAKH,mBAAmB3oI,MAAQ23B,QAAQ33B,OACpC2oI,mBAAmB3oI,KAAO23B,QAAQ33B,KAIlC4oI,iBAAiB5oI,KAAOpG,KAAKivI,aAAalxG,QAAQ33B,KAAM,GAGpD23B,QAAQ33B,KAAK4yE,cAAgBlB,mBAAmBv2E,UAAU,CAC1D,GAAqB6tI,iBAAoCrxG,QAAY,IACrEqxG,iBAAgBj2D,mBAAmBxwE,OAAOymI,gBAAgBh2D,eAAexyE,QAAQ,SAAUyC,IACvF,GAAqBw0B,QAASx0B,GAAGhC,SACjC,IAAI66B,MAAM7E,gBAAgBgB,cAAcR,OAAOl2B,YAC1Cu6B,MAAM9D,mCAAmCzK,IAAIkK,QAAS,CACvD,GAAqBwxG,WAAYntG,MAAM7E,gBAAgBk/E,eAAe1+E,OAClEwxG,YACAntG,MAAMtE,WAAWyxG,gBAUzC3xG,iBAAiB/8B,UAAUye,UAG3B,WACI,GAAI8iB,OAAQliC,KACSo0B,WAsBrB,QAAS4J,KArBmBiX,KAAKtvC,WAC7BokC,WAAY/pC,KAAK+pC,WACjBH,UAAW5pC,KAAK6uI,mBAChBtxG,QAASv9B,KAAKu9B,QAAQt9B,IAAI,SAAU49B,OAAQx4B,OACxCw4B,OAAO24C,iBACP,IAAqB84D,cAA4B,EACjD,IAAIptG,MAAM7E,gBAAgBgB,cAAcR,OAAOl2B,UAAW,CACtD,GAAqBo2B,SAAUmE,MAAM9D,mCAAmC9d,IAAIud,OACvEE,UAAYA,QAAQD,UAA4C,cAAhCC,QAAQD,SAAS4D,aAClD4tG,SAAWzxG,OAAOj/B,KAAO,IAAMyG,MAC/B+uB,SAASttB,MAAO+2B,OAAQA,OAAQzJ,SAAUk7G,YAGlD,OACIC,SAAUlqI,MACVzG,KAAMi/B,OAAOj/B,KACb+I,SAAUu6B,MAAM7E,gBAAgBmyG,kBAAkB3xG,OAAOl2B,SAAUu6B,MAAM/E,aACzEmyG,SAAUA,cAIDl7G,SAAUA,WAOnCsJ,iBAAiB/8B,UAAUsuI,aAK3B,SAAU1rI,MAAOgnB,OACb,MAAOjnB,YAAWC,MAAOvD,KAAMuqB,QAOnCmT,iBAAiB/8B,UAAUqD,WAK3B,SAAUT,MAAOE,SACb,GAAIF,gBAAiBgE,cAAc,CAC/B,GAAqBkoI,YAAazvI,KAAKs9B,eAAeoC,gBAAgBn8B,MAAMoE,SAAUpE,MAAM3E,KAE5F,QAAS2wI,SADoBvvI,KAAK0vI,kBAAkBD,WAAYhsI,SACtC64D,QAAS/4D,MAAM+4D,WAUjD5+B,iBAAiB/8B,UAAU+uI,kBAO3B,SAAUD,WAAYllH,OAClB,GAAqBllB,OAAQrF,KAAK2uI,cAAcruH,IAAImvH,YAC/B1xG,QAAU,IAC/B,IAAY,EAARxT,OACAvqB,KAAKq9B,gBAAgBgB,cAAcoxG,WAAW9nI,UAAW,CACzD,GAAI3H,KAAKo+B,mCAAmCzK,IAAI87G,YAG5C,MAAwB,MAE5B1xG,SAAU/9B,KAAK2vI,YAAYF,YACvB1xG,SAAWA,QAAQD,mBAAoBv2B,gBAEvClC,MAAQrF,KAAK0vI,kBAAkB3xG,QAAQD,SAAUvT,OAEjDwT,QAAU,UAGb,IAAa,MAAT14B,MAGL,MAAOA,MAWX,OARa,OAATA,QACAA,MAAQrF,KAAKu9B,QAAQt7B,OACrBjC,KAAKu9B,QAAQz2B,KAAK2oI,aAEtBzvI,KAAK2uI,cAAcpuH,IAAIkvH,WAAYpqI,OAC/B04B,SACA/9B,KAAK49B,WAAWG,SAEb14B,OAMXq4B,iBAAiB/8B,UAAUgvI,YAI3B,SAAU9xG,QACN,GAAqBE,SAAU/9B,KAAKq9B,gBAAgBk/E,eAAe1+E,OACnE,KAAKE,QAAS,CAIV,GAAqBJ,gBAAiB39B,KAAKs9B,eAAekE,cAAc3D,OACpEF,kBACAI,SAAYF,OAAQF,eAAeE,OAAQC,SAAUH,eAAeG,WAG5E,MAAOC,UAEJL,kBACTg3C,kBACEx2C,iBAAoB,WACpB,QAASA,kBAAiBW,UAAWvB,gBACjCt9B,KAAK6+B,UAAYA,UACjB7+B,KAAKs9B,eAAiBA,eACtBt9B,KAAKmqD,KAAO,GAAI5hC,KAgMpB,MAzLA2V,kBAAiBv9B,UAAUw9B,cAK3B,SAAUJ,QAASD,UACf99B,KAAKmqD,KAAK5pC,IAAIwd,QAAQ33B,KAAKiB,WAAa02B,QAASA,QAASD,SAAUA,SAAU8xG,WAAW,KAM7F1xG,iBAAiBv9B,UAAU29B,WAI3B,SAAUP,SACN/9B,KAAKmqD,KAAK5pC,IAAIwd,QAAQ33B,KAAKiB,WAAa02B,QAASA,QAASD,SAAU,KAAM8xG,WAAW,KAMzF1xG,iBAAiBv9B,UAAUye,UAI3B,SAAUgV,UACN,GAAI8N,OAAQliC,KACS6vI,gBAAkB,GAAIjsH,IAC3ClgB,OAAMigB,KAAK3jB,KAAKmqD,KAAKjoD,UAAU0E,QAAQ,SAAUuS,IAC7C,GAAI4kB,SAAU5kB,GAAG4kB,QAASD,SAAW3kB,GAAG2kB,SAAU8xG,UAAYz2H,GAAGy2H,SACjE,IAAI7xG,QAAQi7C,cAAgBlB,mBAAmBv2E,SAAU,CAKrDsuI,gBAAgB9zG,IAAIgC,QAAQ33B,KAAKiB,UACkB,SACxCrI,QAAQ4H,QAAQ,SAAU84G,KAAOmwB,gBAAgB9zG,IAAI2jF,IAAIr4G,aAExE,IAAKuoI,UAAW,CACkB7tH,kBAAkBgc,QAAQ33B,KAAKiB,UAAUzI,KACvEkgC,6BAA4BoD,MAAMrD,UAAWd,QAAQ33B,KAAKiB,UAAW66B,MAAM4tG,yBAAyB/xG,QAA0B,cAGtI3J,SAASxtB,QAAQ,SAAU6Y,OACvB,GAAqBoe,QAASpe,MAAMoe,MACpC,IAAIgyG,gBAAgBl8G,IAAIkK,QAAS,CAC7B,GAAqBkyG,iBAAkBhuH,kBAAkBtC,MAAM2U,SAC/D8N,OAAMrD,UAAUhG,WAAW/xB,KAAK6e,SAASoqH,iBAAiBxvH,IAAI2hB,MAAM8tG,oBAAoBnyG,SAASjG,WAAW,MACxGC,aAAaoH,gBAU7Bf,iBAAiBv9B,UAAUmvI,yBAK3B,SAAU/xG,QAASD,UACf,GAAIoE,OAAQliC,KACSuT,aAAevT,KAAKiwI,iBAAiBlyG,UACrCjW,YACrB,IAAIgW,mBAAoBo7C,yBACpB3lE,YAAYzM,KAAK/G,MAAMwT,YAIvBuqB,SAAS2E,mBAAmB95B,OAAOm1B,SAAS4E,eACvCziC,IAAI,SAAUmG,MAAQ,MAAOA,MAAKiB,YAClCsB,OAAOm1B,SAASmD,iBAAiBjiC,QAAQiB,IAAI,SAAUmG,MAAQ,MAAOA,MAAKiB,YAC3Eub,OAAO,SAAUtb,KAAO,MAAOA,OAAQw2B,SAAS13B,KAAKiB,aACrDpH,IAAI,SAAUqH,KAAO,MAAO46B,OAAM8tG,oBAAoB1oI,QAG3DwgB,UAAYgW,SAAShW,cAEpB,IAAIiW,QAAQi7C,cAAgBlB,mBAAmB92E,UAAW,CAC3D,GAAqB68G,YAA8B,OACnD/1F,WAAY+1F,WAAW/1F,UAAUnf,OAAOk1G,WAAW/0F,eAWvD,MALAvV,aAAYzM,KAAK/G,MAAMwT,YAAauU,UAAUlF,OAAO,SAAUyE,UAAY,QAASA,SAASI,WAAaxnB,IAAI,SAAUonB,UACpH,MAAO6a,OAAM+tG,kBACTj3D,YAAalB,mBAAmBC,WAAY3xE,KAAMihB,SAASI,cAG5DrB,WAAW7S,cAMtB2qB,iBAAiBv9B,UAAUqvI,oBAI3B,SAAUE,YACN,GAAqBC,mBAAoBnwI,KAAKs9B,eAAeoC,gBAAgB9d,sBAAsBsuH,WAAWvoI,UAAWoa,kBAAkBmuH,WAAWtxI,MACtJ,OAAOoB,MAAK6+B,UAAUhZ,WAAWsqH,oBAMrCjyG,iBAAiBv9B,UAAUsvI,iBAI3B,SAAU9lF,MACN,GAAqBtrB,WAAY7+B,KAAK6+B,SA+DtC,OAAOv7B,YAAW6mD,KAAM,IA9DL,WACf,QAASimF,gBA2DT,MApDAA,aAAYzvI,UAAUiD,WAKtB,SAAUmL,IAAKtL,SACX,GAAIy+B,OAAQliC,IACZ,OAAOomB,YAAWrX,IAAI9O,IAAI,SAAUwf,OAAS,MAAOnc,YAAWmc,MAAOyiB,MAAOz+B,aAOjF2sI,YAAYzvI,UAAUmD,eAKtB,SAAU7D,IAAKwD,SACX,GAAIy+B,OAAQliC,IACZ,OAAO,IAAIumB,gBAAe3mB,OAAOg3B,KAAK32B,KAAKA,IAAI,SAAU+T,KAAO,MAAO,IAAIwS,iBAAgBxS,IAAK1Q,WAAWrD,IAAI+T,KAAMkuB,MAAOz+B,UAAU,OAO1I2sI,YAAYzvI,UAAUoD,eAKtB,SAAUR,MAAOE,SAAW,MAAOyjB,SAAQ3jB,QAM3C6sI,YAAYzvI,UAAUqD,WAKtB,SAAUT,MAAOE,SACb,GAAIF,gBAAiBgE,cACjB,MAAOs3B,WAAUhZ,WAAWtiB,MAG5B,MAAM,IAAIkB,OAAM,oCAAsClB,QAGvD6sI,gBAEgC,OAExClyG,oBAEPQ,qBAAwB,SAAUl0B,QAElC,QAASk0B,sBAAqBF,YAAanB,iBACvC,GAAI6E,OAAQ13B,OAAOklC,KAAK1vC,OAASA,IAGjC,OAFAkiC,OAAM1D,YAAcA,YACpB0D,MAAM7E,gBAAkBA,gBACjB6E,MAgDX,MArDA7hC,WAAUq+B,qBAAsBl0B,QAYhCk0B,qBAAqB/9B,UAAUg+B,YAK/B,SAAUF,gBAAiBT,MACvB,GAAIkE,OAAQliC,KACSmqD,KAAOlV,KAAK7hB,MAAM4K,MAClBsxG,WACrBtvI,MAAKu9B,WACL4sB,KAAK5sB,QAAQ32B,QAAQ,SAAUypI,kBAC3B,GAAqBxyG,QAASqE,MAAM1D,YAAYle,IAAI4hB,MAAM7E,gBAAgBizG,oBAAoBD,iBAAiB1oI,SAAU82B,iBAAkB4xG,iBAAiBzxI,KAC5JsjC,OAAM3E,QAAQz2B,KAAK+2B,QACfwyG,iBAAiBf,UACjBA,SAASxoI,MAAO+2B,OAAQA,OAAQyxG,SAAUe,iBAAiBf,YAGnE,IAAqB1lG,WAAYtmC,WAAW6mD,KAAKvgB,UAAW5pC,KAAM,KAClE,QAAS+pC,WAAYogB,KAAKpgB,WAAYH,UAAWA,UAAW0lG,SAAUA,WAO1E5wG,qBAAqB/9B,UAAUmD,eAK/B,SAAU7D,IAAKwD,SACX,GAAI,YAAcxD,KAAK,CACnB,GAAqBwvI,YAAazvI,KAAKu9B,QAAQt9B,IAAc,UACxCq8D,QAAUr8D,IAAa,OAC5C,OAAOq8D,SAAQr6D,OAASjC,KAAKw+B,YAAYle,IAAImvH,WAAW9nI,SAAU8nI,WAAW7wI,KAAM09D,SAC/EmzE,WAGJ,MAAOjlI,QAAO7J,UAAUmD,eAAe4rC,KAAK1vC,KAAMC,IAAKwD,UAGxDi7B,sBACTg2C,kBAcE67D,eACAC,MAAO,EACPC,UAAW,EACX38D,IAAK,EAETy8D,eAAcA,cAAcC,OAAS,QACrCD,cAAcA,cAAcE,WAAa,YACzCF,cAAcA,cAAcz8D,KAAO,KACnC,IAAIxtC,aAAe,WACf,QAASA,aAAYykD,QAAS2lD,SAAUC,MAAOxjD,WAAYyjD,kBAAmBC,gBAAiBC,eAAgBC,cAAeC,mBAAoBC,kBAAmBC,eAAgBv2B,iBAAkBw2B,iBACnMnxI,KAAK+qF,QAAUA,QACf/qF,KAAK0wI,SAAWA,SAChB1wI,KAAK2wI,MAAQA,MACb3wI,KAAKmtF,WAAaA,WAClBntF,KAAK4wI,kBAAoBA,kBACzB5wI,KAAK6wI,gBAAkBA,gBACvB7wI,KAAK8wI,eAAiBA,eACtB9wI,KAAK+wI,cAAgBA,cACrB/wI,KAAKgxI,mBAAqBA,mBAC1BhxI,KAAKixI,kBAAoBA,kBACzBjxI,KAAKkxI,eAAiBA,eACtBlxI,KAAK26G,iBAAmBA,iBACxB36G,KAAKmxI,gBAAkBA,gBACvBnxI,KAAKoxI,kBAAoB,GAAI7oH,KAC7BvoB,KAAKqxI,eAAiB,GAAI9oH,KA6nB9B,MAxnBA+d,aAAY3lC,UAAUsqF,WAGtB,WAAcjrF,KAAK4wI,kBAAkB3lD,cAKrC3kD,YAAY3lC,UAAU2wI,mBAItB,SAAUC,WACN,GAAIrvG,OAAQliC,KACSwxI,cAAgBnxG,4BAA4BkxG,UAAWvxI,KAAK2wI,MAAO3wI,KAAKmxI,gBAAiBnxI,KAAK4wI,kBAInH,OAHAY,eAAczwG,UAAUn6B,QAAQ,SAAUo6B,UACtC,MAAOkB,OAAM0uG,kBAAkB3yB,qCAAqCj9E,SAAS56B,KAAKiB,WAAW,KAE1FmqI,eAMXlrG,YAAY3lC,UAAU8wI,oBAItB,SAAUF,WACN,GAAIrvG,OAAQliC,KACSwxI,cAAgBnxG,4BAA4BkxG,UAAWvxI,KAAK2wI,MAAO3wI,KAAKmxI,gBAAiBnxI,KAAK4wI,kBACnH,OAAO77D,SACFF,IAAI28D,cAAczwG,UAAU9gC,IAAI,SAAU+gC,UAC3C,MAAOkB,OAAM0uG,kBAAkB3yB,qCAAqCj9E,SAAS56B,KAAKiB,WAAW,MAE5Fd,KAAK,WAAc,MAAOirI,kBAMnClrG,YAAY3lC,UAAU+wI,aAItB,SAAUhwH,UACN,GAAqBmf,cAAe7gC,KAAKqxI,eAAe/wH,IAAIoB,SAM5D,OALKmf,gBACDA,aACIC,YAAY9gC,KAAK2wI,MAAO3wI,KAAKmxI,gBAAiBnxI,KAAK4wI,kBAAmBlvH,UAC1E1hB,KAAKqxI,eAAe9wH,IAAImB,SAAUmf,eAE/BA,cAMXyF,YAAY3lC,UAAUgxI,uBAItB,SAAUjwH,UACN,GAAIwgB,OAAQliC,KACS4xI,gBACAh1G,KAAO58B,KAAK0xI,aAAahwH,WAM1C1hB,KAAK0wI,SAASmB,wBAA0Bj1G,KAAKxU,WAAWnmB,QAAU26B,KAAKuE,MAAMl/B,QAC7E26B,KAAKwE,YAAYn/B,QAAU26B,KAAKmE,UAAU9+B,QAAU26B,KAAK0E,yBACzDswG,aAAa9qI,KAAKia,kBAAkB6b,KAAKlb,UAAU,IAC/C1hB,KAAK0wI,SAASoB,uBACdF,aAAa9qI,KAAK8a,sBAAsBgb,KAAKlb,UAAU,IAG/D,IAAqB6d,YAAare,sBAAsB0b,KAAKlb,UAAU,GAAM,EAoB7E,OAnBAkb,MAAKxU,WAAWxhB,QAAQ,SAAUmrI,WAC9B,GAAqB/oI,UAA8Bk5B,MAAM0uG,kBAAkB/zB,kCAAkCk1B,WAAaj0G,QACrH90B,UAAS0f,aAKd1f,SAAkB,SAAEivE,UAAUrxE,QAAQ,SAAU4lF,UAC5C,GAAqBwlD,eAAgB9vG,MAAMyuG,MAAM/sG,uBAAuB4oD,SAAU5vD,KAAKlb,SACvF,KAAKswH,cACD,KAAM,IAAIvtI,OAAM,6BAA+B+nF,SAAW,gBAAkB5vD,KAAKlb,SAErF,IAAqB4d,YAAgCt2B,SAAkB,SAAE47C,eAAiB1iB,MAAM6oD,QAAQlmD,wBAA0BC,kBAAkBC,QACpJ6sG,cAAa9qI,KAAK64B,iBAAiBqyG,cAAe1yG,UAAWC,aACzD2C,MAAMwuG,SAASmB,wBACfD,aAAa9qI,KAAK64B,iBAAiBqyG,eAAgB1yG,UAAWC,iBAInEqyG,cAOXtrG,YAAY3lC,UAAUsxI,cAKtB,SAAUC,YAAaC,kBACnB,GAAqBtzG,WAAY7+B,KAAKoyI,qBAAqBF,YAC3D,IAAIA,YAAY5wH,SAAS,iBAAkB,CACvC,IAAK6wH,iBACD,KAAM,IAAI1tI,OAAM,6EAA+EytI,YAEnG,IAAqBG,cAAeryI,KAAK0xI,aAAaS,iBACtDnyI,MAAKsyI,qBAAqBzzG,UAAWwzG,aAAc9B,cAAcC,WAEhE,IAAI0B,YAAY5wH,SAAS,kBAC1B,GAAIthB,KAAK0wI,SAASoB,sBAAuB,CACrC,IAAKK,iBACD,KAAM,IAAI1tI,OAAM,6EAA+EytI,YAEnG,IAAqBG,cAAeryI,KAAK0xI,aAAaS,iBACtDjzG,kBAAiBL,WACjBwzG,aAAatxG,UAAUn6B,QAAQ,SAAUo6B,UAErCpC,iBAAiBC,UAAWmC,SAAS56B,KAAKiB,kBAI7C6qI,aAAY5wH,SAAS,gBAC1B4d,iBAAiBL,UAOrB,OAAO7+B,MAAKuyI,qBAAqB,UAAW1zG,YAOhDyH,YAAY3lC,UAAU6xI,kBAKtB,SAAUN,YAAaC,kBACnB,GAAqBE,cAAeryI,KAAK0xI,aAAaS,kBACjCtzG,UAAY7+B,KAAKoyI,qBAAqBF,YAI3D,OAHIA,aAAY5wH,SAAS,kBACrBthB,KAAKsyI,qBAAqBzzG,UAAWwzG,aAAc9B,cAAcE,WAE9D5xG,UAAUhG,WAAW52B,OAAS,EACjCjC,KAAKuyI,qBAAqBF,aAAa3wH,SAAUmd,WACjD,MAMRyH,YAAY3lC,UAAU8xI,eAItB,SAAU1yG,WACN,GAAImC,OAAQliC,KACS0gC,MAAQX,UAAU9/B,IAAI,SAAUyhB,UAAY,MAAOwgB,OAAMwvG,aAAahwH,YACtEgxH,kBAMrB,OALAhyG,OAAM95B,QAAQ,SAAUg2B,MACpB,MAAOA,MAAKmE,UAAUn6B,QAAQ,SAAUo6B,UACpC,MAAO0xG,iBAAgB5rI,KAAKo7B,MAAM0uG,kBAAkB3yB,qCAAqCj9E,SAAS56B,KAAKiB,WAAW,QAGnH0tE,QAAQF,IAAI69D,iBAAiBnsI,KAAK,SAAUia,GAAK,MAAOmiB,yBAAwBjC,UAM3F4F,YAAY3lC,UAAUgyI,cAItB,SAAU5yG,WACN,GAAImC,OAAQliC,KACS0gC,MAAQX,UAAU9/B,IAAI,SAAUyhB,UAAY,MAAOwgB,OAAMwvG,aAAahwH,WAM3F,OALAgf,OAAM95B,QAAQ,SAAUg2B,MACpB,MAAOA,MAAKmE,UAAUn6B,QAAQ,SAAUo6B,UACpC,MAAOkB,OAAM0uG,kBAAkB3yB,qCAAqCj9E,SAAS56B,KAAKiB,WAAW,OAG9Fs7B,wBAAwBjC,QAQnC4F,YAAY3lC,UAAU2xI,qBAMtB,SAAUzzG,UAAWjC,KAAMg2G,WACvB,GAAI1wG,OAAQliC,IACZ48B,MAAKmE,UAAUn6B,QAAQ,SAAUonH,aAAc6kB,eAO3C3wG,MAAM+uG,kBAAkB1iB,WAAW1vF,UAAWmvF,aAAa5nH,KAAKiB,UAKhE,IAAqB6d,oBAAqB8oG,aAAavrF,mBAAmBxiC,IAAI,SAAUK,GAAK,MAAOA,GAAE+G,YAAcsB,OAAOqlH,aAAatrF,cAAcziC,IAAI,SAAUK,GAAK,MAAOA,GAAE+G,YAAe2mH,aAAa30C,gBAAgBp5E,IAAI,SAAU0C,GAAK,MAAOA,GAAEyD,KAAKiB,YAAe2mH,aAAa10C,gBAAgBr5E,IAAI,SAAU0C,GAAK,MAAOA,GAAEyD,KAAKiB,aACvT+/H,sBAAwB,GAAI7+G,IACjDrD,oBAAmBte,QAAQ,SAAUU,IAAKwrI,WAClC5wG,MAAMyuG,MAAM/vG,aAAat5B,IAAIK,WAC7By/H,sBAAsB7mH,IAAIjZ,IAAK,QAAUurI,cAAgB,IAAMC,aAGvE1L,sBAAsBxgI,QAAQ,SAAUy7G,QAASh7G,WAC7Cw3B,UAAUhG,WAAW/xB,KAAK6e,SAAS08F,SAC9B9hG,IAAI0L,UAAUyL,KAAKpM,eACnBsM,WAAW1R,eAAe2Y,UAAUhZ,WAAWxe,gBAEpDurI,UAAYrC,cAAcE,WAE1BziB,aAAavrF,mBAAmB77B,QAAQ,SAAUmsI,OAC9C,GAAqB/pI,UAAWk5B,MAAM0uG,kBAAkBjzB,qBAAqBo1B,MAAM1rI,UAC9E2B,UAAS0f,cAGdwZ,MAAM8wG,sBAAsBn0G,UAAWmvF,aAAc9rF,MAAM0uG,kBAAkBp0B,yBAAyBxzG,WAAYA,SAAS5C,MAAOghI,uBAClIllG,MAAM8wG,sBAAsBn0G,UAAWmvF,aAAchlH,SAAUglH,aAAa/sF,iBAAiB7Y,WAAYg/G,4BAIjF,IAAhCvoG,UAAUhG,WAAW52B,QACrBi9B,iBAAiBL,YAWzByH,YAAY3lC,UAAUqyI,sBAQtB,SAAU7oH,IAAK1gB,WAAYT,SAAUof,WAAYg/G,uBAC7C,GAAIjuH,IAAKnZ,KAAKizI,eAAejqI,SAAUS,WAAY2e,YAAa8qH,eAAiB/5H,GAAG8yC,SAAUizE,UAAY/lH,GAAGgoB,OAC5G7nB,GAAK6Q,IAAI0O,YAAY/xB,KAAK/G,MAAMuZ,GAAItZ,KAAKgxI,mBAAmBlW,iBAAiB9xH,SAAUkqI,eAAgBhU,UAAWkI,uBACnH,IAAI9tH,KAORgtB,YAAY3lC,UAAUwyI,kBAKtB,SAAU3B,cAAehwF,QACrB,GAAItf,OAAQliC,KACS4xB,UACA0S,WAAa,GAAIE,YAEjB4uG,cAAgB,GAAItF,eAAcxpG,iBAAoBkd,OAe3E,IAdAgwF,cAAc9wG,MAAM95B,QAAQ,SAAUg2B,MAClC,GAAqBy2G,aACrBz2G,MAAKxU,WAAWxhB,QAAQ,SAAU8mF,eAC9B,GAAqB6tB,SAAUr5E,MAAM0uG,kBAAkBjzB,qBAAqBjwB,cACxE6tB,UAAWA,QAAQ7yF,aACnB2qH,UAAUvsI,KAAKy0G,WAGvB83B,UAAUzsI,QAAQ,SAAUoC,UACxB,GAAqBmsG,MAA6CnsG,SAAkB,SAAW,SAC1EiN,oBAAsB6kE,oBAAoBC,UAA6B/xE,SAAkB,SAAEsvE,cAChH1mD,QAAO9qB,KAAK/G,MAAM6xB,OAA2BwhH,cAAcrF,mBAAmB54B,KAAMv4E,KAAKlb,SAAUzL,0BAGvG2b,OAAO3vB,OACP,KAAM,IAAIwC,OAAMmtB,OAAO3xB,IAAI,SAAUoZ,GAAK,MAAOA,GAAErT,aAAeH,KAAK,MAE3E,OAAOutI,gBAMX9sG,YAAY3lC,UAAU2yI,aAItB,SAAU9B,eACN,GAAItvG,OAAQliC,KACRsiC,0BAA4BkvG,cAAclvG,yBAI9C,OAAOj6B,WAJ0EmpI,cAAc9wG,MACpDzgC,IAAI,SAAU28B,MACrD,MAAOsF,OAAMqxG,iBAAiB32G,KAAKlb,SAAU4gB,0BAA2B1F,KAAKxU,WAAYwU,KAAKuE,MAAOvE,KAAKmE,UAAWnE,KAAKwE,iBAalIkF,YAAY3lC,UAAU4yI,iBAStB,SAAUt2G,WAAYqF,0BAA2Bla,WAAY+Y,MAAOJ,UAAWK,aAC3E,GAAIc,OAAQliC,KACSu/B,WAAare,sBAAsB+b,YAAY,GAAM,GACrDu2G,kBACA30G,UAAY7+B,KAAKoyI,qBAAqBrxH,kBAAkBkc,YAAY,GA+BzF,IA9BAu2G,eAAe1sI,KAAK/G,MAAMyzI,eAAgBxzI,KAAKyzI,eAAex2G,WAAY7U,WAAY+Y,MAAOJ,UAAWK,YAAavC,YAErHkC,UAAUn6B,QAAQ,SAAUonH,cAAgB,MAAO9rF,OAAMwxG,eAAe70G,UAAWmvF,gBAEnF5lG,WAAWxhB,QAAQ,SAAUi1G,SACzB,GAAqB7yG,UAAWk5B,MAAM0uG,kBAAkBjzB,qBAAsC,QAC9F,IAAK30G,SAAS0f,YAAd,CAGA,GAAqBsY,UAAWsB,0BAA0BhiB,IAAIu7F,QAC9D,KAAK76E,SACD,KAAM,IAAIv8B,OAAM,6DAA+D0C,eAAe6B,SAAS5C,MAAQ;6HAGnH,IAAqButI,qBAAsBzxG,MAAM4uG,eAAehW,iBAAiBj8F,UAAW71B,SAG5FA,UAAkB,SAAEmvE,oBAAoBvxE,QAAQ,SAAUgtI,gBAGtD,GAAqB/zG,MAAOqC,MAAM4uG,eAAe9V,eAAehyH,SAChEwqI,gBAAe1sI,KAAKo7B,MAAM2xG,eAAe52G,WAAYj0B,SAAU4qI,eAAgB/zG,KAAMN,aACjF2C,MAAMwuG,SAASmB,wBACf2B,eAAe1sI,KAAKo7B,MAAM2xG,eAAe52G,WAAYj0B,SAAU4qI,gBAAiB/zG,KAAMN,cAI1D2C,OAAM4xG,kBAAkBj1G,UAAW71B,SAAUg4B,SAAUA,SAASC,iBAAiB7Y,WAAYurH,oBAAqBp0G,WACtJ2C,OAAM6xG,yBAAyBl1G,UAAW71B,SAAUg4B,SAAUzB,eAE9DV,UAAUhG,WAAW52B,OAAS,GAAKjC,KAAK0wI,SAASmB,uBAAwB,CACzE,GAAqBmC,WAAYh0I,KAAKuyI,qBAAqBt1G,WAAY4B,UACvE20G,gBAAe16G,QAAQk7G,WAE3B,MAAOR,iBAWXltG,YAAY3lC,UAAU8yI,eAStB,SAAUt2G,YAAa/U,WAAY+Y,MAAOJ,UAAWK,YAAa6yG,cAC9D,GAAI/xG,OAAQliC,KACSk0I,gBAAkBl0I,KAAKmxI,gBAAgB5vG,aAAapE,aACpEl9B,IAAI,SAAU49B,QAAU,MAAOqE,OAAMivG,gBAAgB3vG,cAAc3D,UACnDs2G,SAAWpzG,UAAU9gC,IAAI,SAAUmJ,MACpD,OACI20B,QAA4BmE,MAAM0uG,kBAAkB7yB,mBAAmB30G,KAAKhD,KAAKiB,WACjFy2B,SAA6BoE,MAAM0uG,kBAAkB7uG,oBAAoB34B,KAAKhD,KAAKiB,cAExFsB,OAAOyf,WAAWnoB,IAAI,SAAUqH,KAC/B,OACIy2B,QAA4BmE,MAAM0uG,kBAAkBhzB,oBAAoBt2G,KACxEw2B,SAA6BoE,MAAM0uG,kBAAkBjzB,qBAAqBr2G,QAE9E65B,MAAMlhC,IAAI,SAAUqH,KACpB,OACIy2B,QAA4BmE,MAAM0uG,kBAAkBpwB,eAAel5G,KACnEw2B,SAA6BoE,MAAM0uG,kBAAkBvwB,gBAAgB/4G,QAEzE85B,YAAYnhC,IAAI,SAAUqH,KAC1B,OACIy2B,QAA4BmE,MAAM0uG,kBAAkB5wB,qBAAqB14G,KACzEw2B,SAA6BoE,MAAM0uG,kBAAkB5wB,qBAAqB14G,KAAOlB,SAGpEguI,gBAAkBp0I,KAAK0wI,SAASoB,sBACjD9xI,KAAKoyI,qBAAqBxwH,sBAAsBub,aAAa,IAC7D,KACAhkB,GAAK+jB,mBAAmBC,YAAai3G,gBAAiBp0I,KAAK26G,iBAAkB36G,KAAKmxI,gBAAiB+C,gBAAiBC,UAAWn2G,KAAO7kB,GAAG6kB,IAAiB7kB,IAAGib,SACxJxtB,QAAQ,SAAU6Y,OACvBw0H,aAAap7G,WAAW/xB,KAAK6e,SAASlG,MAAM2U,UAAU7T,IAAI0zH,aAAapuH,WAAWpG,MAAMoe,SAASjG,WAAW,MACxGC,aAAaoH,aAGrB,IAAqBo1G,aAAc,GAAI5F,eAActxG,YAAa1b,gBAAgB0b,aAAca,MAC3Er+B,QAAU00I,YAI/B,OAHID,kBACAz0I,OAAOmH,KAAK9G,KAAKuyI,qBAAqBp1G,YAAai3G,kBAEhDz0I,QAOX2mC,YAAY3lC,UAAU+yI,eAKtB,SAAU70G,UAAWmC,UACjB,GAAqBlZ,aACrB,IAAI9nB,KAAK0wI,SAASlvF,OAAQ,CACtB,GAAqB8yF,kBAAmBt0I,KAAK0wI,SAASlvF,OAAO/+C,QAAQ,KAAM,IAC3EqlB,WAAUhhB,MACNlB,MAAOwc,gCAAgCpiB,KAAKmtF,WAAYvgE,YAAY6pF,WACpElvF,SAAU+sH,mBAGdt0I,KAAK0wI,SAASjsG,YACd3c,UAAUhhB,MACNlB,MAAOwc,gCAAgCpiB,KAAKmtF,WAAYvgE,YAAY8pF,qBACpEnvF,SAAUvnB,KAAK0wI,SAASjsG,aAGhCzkC,KAAKixI,kBAAkBljB,QAAQlvF,UAAWmC,SAAUlZ,YASxDwe,YAAY3lC,UAAUozI,yBAOtB,SAAUl1G,UAAW71B,SAAUg4B,SAAUzB,YACrC,GAAqBg1G,UAAWv0I,KAAK4wI,kBAAkBp0B,yBAAyBxzG,UAC3DwrI,mBAAqBx0I,KAAK8zI,kBAAkBj1G,UAAW01G,SAAUvzG,UAAWh4B,SAAS5C,MAAO,KAAMm5B,YAClHupG,aACgB2L,eAAiBxsI,qBAAqBe,SAAS5C,KAAKiB,WACpDqtI,cACrB,KAAK,GAAqB1hH,YAAYhqB,UAAS8zD,OAAQ,CACnD,GAAqBsH,cAAep7D,SAAS8zD,OAAO9pC,SAEpD0hH,aAAY5tI,KAAK,GAAI0f,iBAAgBwM,SAAU9L,QAAQk9C,eAAe,IAE1E,GAAqBuwE,gBACrB,KAAK,GAAqB3hH,YAAYhqB,UAASy+C,QAAS,CACpD,GAAqB2c,cAAep7D,SAASy+C,QAAQz0B,SAErD2hH,cAAa7tI,KAAK,GAAI0f,iBAAgBwM,SAAU9L,QAAQk9C,eAAe,IAE3EvlC,UAAUhG,WAAW/xB,KAAK6e,SAAS8uH,gBAC9Bl0H,IAAIsF,WAAW+G,YAAY+qF,wBAAwB9rF,QACpD3E,QAAQle,SAAS8mB,UAAW+O,UAAUhZ,WAAW7c,SAAS5C,KAAKiB,WAC/Dse,SAAS6uH,oBAAqB,GAAIjuH,gBAAemuH,aACjD,GAAInuH,gBAAeouH,cACnBvuH,WAA8Bpd,SAAkB,SAAEqvE,mBAAmBp4E,IAAI,SAAU6vB,UAAY,MAAO5I,SAAQ4I,gBAE7G8H,WAAW5R,WAAW4G,YAAYuS,kBAAsCjZ,eAAe2Y,UAAUhZ,WAAW7c,SAAS5C,KAAKiB,cAAiBm7G,aAAaC,SAAU5qF,aAAaC,MAAOD,aAAaoH,aAW5MqH,YAAY3lC,UAAUmzI,kBAStB,SAAUj1G,UAAW71B,SAAUg4B,SAAU4zG,qBAAsBC,gBAAiBt1G,YAC5E,GAAIpmB,IAAKnZ,KAAKizI,eAAejqI,SAAUg4B,SAAU4zG,sBAAuB1B,eAAiB/5H,GAAG8yC,SAAUizE,UAAY/lH,GAAGgoB,MAChG2zG,WAAaD,gBAAkBlvH,SAASkvH,gBAAgBla,WAAav0G,eACrE2uH,WAAa/0I,KAAK+wI,cAAcjW,iBAAiBj8F,UAAW71B,SAAUkqI,eAAgB4B,WAAY5V,UAIvH,OAHI2V,kBACAz1G,wBAAwBp/B,KAAKmxI,gBAAiB0D,gBAAiB70I,KAAK8wI,eAAe9V,eAAehyH,UAAWu2B,YAE1Gw1G,YAQXzuG,YAAY3lC,UAAUsyI,eAMtB,SAAUjqI,SAAUg4B,SAAU4zG,sBAC1B,GAAI1yG,OAAQliC,IACZ,IAAIA,KAAKoxI,kBAAkBz9G,IAAI3qB,SAAS5C,KAAKiB,WACzC,MAA0BrH,MAAKoxI,kBAAkB9wH,IAAItX,SAAS5C,KAAKiB,UAEvE,IAAqB49B,qBAA0D,SAAsB,SAAEA,oBAClF7c,WAAawsH,qBAAqB30I,IAAI,SAAU2oB,KAAO,MAAOsZ,OAAM0uG,kBAAkBhzB,oBAAoBh1F,IAAIvhB,aAC9G85B,MAAQH,SAASC,iBAAiBE,MAAMlhC,IAAI,SAAU4yD,MAAQ,MAAO3wB,OAAM0uG,kBAAkBpwB,eAAe3tD,KAAKxrD,aACjH1H,OAASK,KAAK6wI,gBAAgBz9G,MAAMpqB,SAAgDA,SAAkB,SAAU,QAAGof,WAAY+Y,MAAOH,SAASu4C,QAASzwE,kBAAkBk4B,SAAS56B,KAAM4C,SAA6BA,SAAkB,UAAIi8B,oBAEjQ,OADAjlC,MAAKoxI,kBAAkB7wH,IAAIvX,SAAS5C,KAAKiB,UAAW1H,QAC7CA,QAMX2mC,YAAY3lC,UAAUyxI,qBAItB,SAAUtoG,aACN,GAAI5H,OAAQliC,IAyBZ,QAAS64B,cAAgBiR,YAAaA,YAAajkB,WAxBd,SAAUgY,OAAQ/X,YAEnD,OADmB,KAAfA,aAAyBA,WAAa,QACpC+X,iBAAkBt2B,eACpB,KAAM,IAAI9C,OAAM,sCAAwCwwC,KAAKtvC,UAAUk4B,QAE3E,IAAqBm3G,OAAQ9yG,MAAMivG,gBAAgB8D,aAAap3G,SAAW,EACvE1kB,GAAK+oB,MAAMivG,gBAAgB+D,YAAYr3G,SAAWA,OAAQl2B,SAAWwR,GAAGxR,SAAU/I,KAAOua,GAAGva,KAAM09D,QAAUnjD,GAAGmjD,QAC9F64E,aAAejzG,MAAMivG,gBAAgBiE,qBAAqBztI,SAAUmiC,aAKpEurG,cAAgBnzG,MAAMivG,gBAAgBiE,qBAAqBtrG,YAAaA,aACxEC,WAAaorG,eAAiBE,cAAgB,KAAOF,aAMrDG,mBAAqBxvH,eACrByvH,uBAAyBP,MAAQM,mBAAmBrzI,OACpDuzI,cAAgBF,mBAAmB3sI,OAAO,GAAIjF,OAAM6xI,wBAAwBE,KAAKnqH,cACtG,OAAOgxC,SAAQ/zD,OAAO,SAAUkd,KAAMiwH,YAAc,MAAOjwH,MAAKwJ,KAAKymH,aAAkC7vH,WAAW,GAAI4hG,mBAAkB19E,WAAYnrC,KAAM,MAAO42I,mBAYzKlvG,YAAY3lC,UAAUkzI,eAQtB,SAAU52G,WAAYj0B,SAAU2sI,mBAAoB/a,UAAWr7F,YAC3D,GAAqBV,WAAY7+B,KAAKoyI,qBAAqBzyG,iBAAoCg2G,mBAA6B,UAAG/a,UAAWr7F,aACrHq2G,mBAAqB51I,KAAK8wI,eAAe7V,cAAcp8F,UAAW71B,SAAU2sI,mBAAoB/a,UAErH,OADAx7F,yBAAwBp/B,KAAKmxI,gBAAiByE,mBAAoBhb,UAAWr7F,YACtEv/B,KAAKuyI,qBAAqBt1G,WAAY4B,YAOjDyH,YAAY3lC,UAAU4xI,qBAKtB,SAAUt1G,WAAY9S,KAClB,MAAO,IAAIskH,eAAcxxG,WAAY9S,IAAI2f,YAAa3f,IAAI0O,aAEvDyN,eAuRPuvG,aAAe,gBAEf3yG,WAAa,WACb4yG,QACAp0G,WAAY,UAEZq0G,UAAY,WACZC,QAAU,UACVC,cAAgB,GAAIryH,MAAKmyH,UAAW,aAAc,SAYlD1xG,gBAAmB,WACnB,QAASA,iBAAgBhH,gBAAiBC,eAAgB44G,qBAAsBC,uBAAwBC,mBACvE,KAAzBF,uBAAmCA,6BACR,KAA3BC,yBAAqCA,0BACzC,IAAIj0G,OAAQliC,IACZA,MAAKq9B,gBAAkBA,gBACvBr9B,KAAKs9B,eAAiBA,eACtBt9B,KAAKo2I,cAAgBA,cACrBp2I,KAAKq2I,gBAAkB,GAAI9tH,KAC3BvoB,KAAKs2I,cAAgB,GAAI/tH,KACzBvoB,KAAKu2I,eAAiB,GAAIhuH,KAC1BvoB,KAAKw2I,YAAc,GAAIjuH,KACvBvoB,KAAKy2I,cAAgB,GAAIluH,KACzBvoB,KAAK02I,wCAA0C,GAAInuH,KACnDvoB,KAAK22I,0BACLT,qBAAqBtvI,QAAQ,SAAUgwI,IACnC,MAAO10G,OAAM20G,gCAAgC30G,MAAMxC,gBAAgBk3G,GAAGjvI,SAAUivI,GAAGh4I,MAAOg4I,GAAG5uG,QAEjGmuG,uBAAuBvvI,QAAQ,SAAUkwI,IAAM,MAAO50G,OAAM60G,kBAAkB70G,MAAMxC,gBAAgBo3G,GAAGnvI,SAAUmvI,GAAGl4I,MAAOk4I,GAAGhwH,MAC9H9mB,KAAK02I,wCAAwCn2H,IAAIu3D,mBAAmB92E,WAAY4N,gBAAiBC,kBACjG7O,KAAK02I,wCAAwCn2H,IAAIu3D,mBAAmB52E,MAAO8uE,aAC3EhwE,KAAK02I,wCAAwCn2H,IAAIu3D,mBAAmBv2E,UAAWivE,iBAC/ExwE,KAAK02I,wCAAwCn2H,IAAIu3D,mBAAmBC,YAAanH,iBAAkBZ,WAAYphE,gBAAiBC,gBAAiB2hE,iBA8uBrJ,MAxuBAnsC,iBAAgB1jC,UAAUs8G,mBAI1B,SAAUrmE,YACN,GAAqBogG,cAAeh3I,KAAKi3I,sBAAsBrgG,WAC/D,OAAO52C,MAAKs9B,eAAe45G,gBAAgBF,eAM/C3yG,gBAAgB1jC,UAAU2hB,yBAI1B,SAAUhb,KACN,GAAqB6vI,WAAYn3I,KAAKs9B,eAAe85G,kBAAqC9vI,IAAe,WAAsBA,IAAS,MACnH+vI,kBAAoBr3I,KAAKi3I,sBAAsBE,UAGpE,OAFAn3I,MAAKs9B,eAAeg6G,4BAA4BH,UAAUxvI,SAA6BL,IAAe,YACtGtH,KAAKs9B,eAAei6G,eAAeF,kBAAmBF,WAC/CE,mBAQXhzG,gBAAgB1jC,UAAU62I,gBAM1B,SAAUjiI,UAAW3W,KAAM64I,gBACvB,MAAOz3I,MAAKi3I,sBAAsBj3I,KAAKs9B,eAAe85G,kBAAkB7hI,UAAW3W,KAAM64I,kBAO7FpzG,gBAAgB1jC,UAAU+2I,mBAK1B,SAAUniI,UAAW3W,MACjB,GAAIsjC,OAAQliC,IACZ,OAAOA,MAAKs9B,eAAeq6G,gBAAgB,WAAc,MAAOz1G,OAAMs1G,gBAAgBjiI,UAAW3W,SAMrGylC,gBAAgB1jC,UAAUs2I,sBAI1B,SAAUp5G,QACN,GAAqBF,gBAAiB39B,KAAKs9B,eAAekE,cAAc3D,OACxE,OAAIF,iBAAkBA,eAAeG,mBAAoBv2B,cAC9CvH,KAAKi3I,sBAAsBt5G,eAAeG,UAG1CD,QAOfwG,gBAAgB1jC,UAAU+zC,YAI1B,SAAUtuC,MACN,GAAqBsuC,aAAc10C,KAAKq2I,gBAAgB/1H,IAAIla,KAC5D,KAAKsuC,YAAa,CACdA,cACA,IAAqBkjG,eAAgB53I,KAAK63I,gBAAgBzxI,MACrC0xI,WAAa93I,KAAK+3I,eAAe3xI,KAAMwxI,cAC5D,IAAIE,WAAY,CACZ,GAAqBE,mBAAoBh4I,KAAK00C,YAAYojG,WAC1DpjG,aAAY5tC,KAAK/G,MAAM20C,YAAasjG,mBAExC,GAAqBC,oBAKrB,IAJIL,cAA0B,aAC1BK,iBAAmBj4I,KAAKk4I,SAAS9xI,KAAMwxI,cAA0B,YACjEljG,YAAY5tC,KAAK/G,MAAM20C,YAAaujG,mBAEpCH,aAAe93I,KAAKq9B,gBAAgBgB,cAAcj4B,KAAKuB,WACvD3H,KAAKq9B,gBAAgBgB,cAAcy5G,WAAWnwI,UAAW,CACzD,GAAqBo2B,SAAU/9B,KAAKq9B,gBAAgBk/E,eAAeu7B,WACnE,IAAI/5G,SAAWA,QAAQ33B,KAAM,CACzB,GAAqB+xI,yBAA6Cn4I,KAAK02I,wCAAwCp2H,IAAuByd,QAAQ33B,KAAiB,YAC9G+xI,yBAAwBhnH,KAAK,SAAUinH,cAAgB,MAAOH,kBAAiB9mH,KAAK,SAAU4uF,KAAO,MAAOq4B,cAAa/1I,SAAS09G,UAE/K//G,KAAKq4I,YAAYh0I,YAAY,SAAW+B,KAAKxH,KAAO,OAASwH,KAAKuB,SAAW,mBAAqBmwE,mBAAuC/5C,QAAQ33B,KAAkB,aAAK,gFACjJ+xI,wBAAwBl4I,IAAI,SAAUmG,MAAQ,MAAOA,MAAKhE,iBAAmByD,KAAK,QAAU,4BAA8BO,OAI7JpG,KAAKq2I,gBAAgB91H,IAAIna,KAAMsuC,YAAY9xB,OAAO,SAAUm9F,KAAO,QAASA,OAEhF,MAAOrrE,cAMXrQ,gBAAgB1jC,UAAU4sF,aAI1B,SAAUnnF,MACN,GAAI87B,OAAQliC,KACSutF,aAAevtF,KAAKs2I,cAAch2H,IAAIla,KAC3D,KAAKmnF,aAAc,CACf,GAAqBqqD,eAAgB53I,KAAK63I,gBAAgBzxI,KAC1DmnF,gBACA,IAAqBuqD,YAAa93I,KAAK+3I,eAAe3xI,KAAMwxI,cAC5D,IAAIE,WAAY,CACZ,GAAqBQ,sBAAuBt4I,KAAKutF,aAAauqD,WAC9Dl4I,QAAOg3B,KAAK0hH,sBAAsB1xI,QAAQ,SAAU2xI,YAC/B,aAAiBA,YAAcD,qBAAqBC,cAG7E,GAAqBC,WAAYZ,cAAuB,WACxDh4I,QAAOg3B,KAAK4hH,WAAW5xI,QAAQ,SAAUosB,UACrC,GAAqBylH,UAAWD,UAAUxlH,UACrB/D,KAAO,SACvBxQ,KAAK,SAAU/F,GAAK,MAA0B,YAAnBA,EAAc,YAAsC,UAAnBA,EAAc,aAC1DggI,aACA,cAAiB1lH,WAClC0lH,WAAW5xI,KAAK/G,MAAM24I,WAA6B,aAAiB1lH,WAExE,aAAiBA,UAAY0lH,WACzBzpH,MAAQA,KAAiB,YACzBypH,WAAW5xI,KAAK/G,MAAM24I,WAAYx2G,MAAMg2G,SAAS9xI,KAAM6oB,KAAiB,eAGhFjvB,KAAKs2I,cAAc/1H,IAAIna,KAAMmnF,cAEjC,MAAOA,eAMXlpD,gBAAgB1jC,UAAUoxC,WAI1B,SAAU3rC,MACN,GAAI87B,OAAQliC,IACZ,MAAMoG,eAAgBmB,eAElB,MADAvH,MAAKq4I,YAAY,GAAI5zI,OAAM,uBAAyBwwC,KAAKtvC,UAAUS,MAAQ,gCAAiCA,QAGhH,KACI,GAAqBuyI,cAAe34I,KAAKu2I,eAAej2H,IAAIla,KAC5D,KAAKuyI,aAAc,CACf,GAAqBf,eAAgB53I,KAAK63I,gBAAgBzxI,MACrC0xI,WAAa93I,KAAK+3I,eAAe3xI,KAAMwxI,eACvCt7E,QAAUs7E,cAAgBA,cAAuB,QAAI,KACrDgB,SAAWt8E,QAAUA,QAAkB,SAAI,IAChE,IAAIs8E,SAAU,CACV,GAAqB5wG,MAAO,SAA8BvpB,KAAK,SAAU/F,GAAK,MAA0B,eAAnBA,EAAc,aAC9EmgI,kBAAsC7wG,KAAkB,eACxD8wG,sBAA0C94I,KAAKk4I,SAAS9xI,KAAM4hC,KAA0B,wBAC7G2wG,iBACAE,kBAAkBjyI,QAAQ,SAAUmyI,aAAc1zI,OAC9C,GAAqB2zI,iBACAC,UAAY/2G,MAAMg3G,YAAY9yI,KAAM2yI,aACrDE,YACAD,aAAalyI,KAAKmyI,UACtB,IAAqBP,YAAaI,sBAAwBA,sBAAsBzzI,OAAS,IACrFqzI,aACAM,aAAalyI,KAAK/G,MAAMi5I,aAAcN,YAE1C,aAAiB5xI,KAAKkyI,oBAGrBlB,cACLa,aAAe34I,KAAK+xC,WAAW+lG,YAE9Ba,gBACDA,iBAEJ34I,KAAKu2I,eAAeh2H,IAAIna,KAAMuyI,cAElC,MAAOA,cAEX,MAAwBt/H,GAEpB,KADAsrB,SAAQngC,MAAM,kBAAoBywC,KAAKtvC,UAAUS,MAAQ,eAAiBiT,GACpEA,IAOdgrB,gBAAgB1jC,UAAUw4I,aAI1B,SAAU/yI,MACN,GAAqBgzI,aAAcp5I,KAAKw2I,YAAYl2H,IAAIla,KACxD,KAAKgzI,YAAa,CACd,GAAqBxB,eAAgB53I,KAAK63I,gBAAgBzxI,KAC1DgzI,eACA,IAAqBtB,YAAa93I,KAAK+3I,eAAe3xI,KAAMwxI,cAC5D,IAAIE,WAAY,CACZ,GAAqBuB,qBAAsBr5I,KAAKm5I,aAAarB,WAC7Dl4I,QAAOg3B,KAAKyiH,qBAAqBzyI,QAAQ,SAAU2xI,YAC9B,YAAgBA,YAAcc,oBAAoBd,cAG3E,GAAqBe,WAAY1B,cAAuB,WACxDh4I,QAAOg3B,KAAK0iH,WAAW1yI,QAAQ,SAAUosB,UACrC,GAAqBylH,UAAWa,UAAUtmH,UACrBumH,SAAW,SAA8BpoH,KAAK,SAAUzY,GAAK,MAA0B,UAAnBA,EAAc,YACvG,aAAgBsa,UAA6B,YAAgBA,WAAaumH,WAE9Ev5I,KAAKw2I,YAAYj2H,IAAIna,KAAMgzI,aAE/B,MAAOA,cAOX/0G,gBAAgB1jC,UAAUo3I,eAK1B,SAAU3xI,KAAMwxI,eACZ,GAAqBE,YAAa93I,KAAKk5I,YAAY9yI,KAAMwxI,cAAuB,QAChF,IAAIE,qBAAsBvwI,cACtB,MAAOuwI,aAQfzzG,gBAAgB1jC,UAAU4hB,iBAK1B,SAAUnc,KAAMozI,YACNpzI,eAAgBmB,eAClBvH,KAAKq4I,YAAY,GAAI5zI,OAAM,6BAA+BwwC,KAAKtvC,UAAUS,MAAQ,gCAAiCA,KAEtH,KACI,QAASpG,KAAKm5I,aAAa/yI,MAAMozI,YAErC,MAAwBngI,GAEpB,KADAsrB,SAAQngC,MAAM,kBAAoBywC,KAAKtvC,UAAUS,MAAQ,eAAiBiT,GACpEA,IAQdgrB,gBAAgB1jC,UAAUk2I,gCAK1B,SAAUzwI,KAAM4hC,MACZhoC,KAAKy2I,cAAcl2H,IAAIna,KAAM,SAAU3C,QAAS3B,MAAQ,MAAO,KAAKkmC,KAAKe,KAAKhpC,MAAMioC,UAAO,IAAQr/B,OAAO7G,WAO9GuiC,gBAAgB1jC,UAAUo2I,kBAK1B,SAAU3wI,KAAM0gB,IACZ9mB,KAAKy2I,cAAcl2H,IAAIna,KAAM,SAAU3C,QAAS3B,MAAQ,MAAOglB,IAAG/mB,UAAMoE,GAAWrC,SAKvFuiC,gBAAgB1jC,UAAUg2I,wBAG1B,WACI32I,KAAKy5I,eAAiBz5I,KAAKw3I,gBAAgB3B,aAAc,kBACzD71I,KAAK05I,YAAc15I,KAAKw3I,gBAAgB3B,aAAc,eACtD71I,KAAK25I,OAAS35I,KAAK03I,mBA9VN,kBA8VyC,UACtD13I,KAAKi2G,6BACDj2G,KAAKw3I,gBAAgB3B,aAAc,gCACvC71I,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,QAAS9kE,YACjF/wE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,cAAejlE,kBACvF5wE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,QAAShlE,YACjF7wE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,YAAa/kE,gBACrF9wE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,UAAW9mE,cACnF/uE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,YAAallE,gBACrF3wE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,aAAc1mE,iBACtFnvE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,gBAAiBrmE,oBACzFxvE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,mBAAoBxmE,uBAC5FrvE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,aAAcnmE,iBACtF1vE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,gBAAiBpmE,oBACzFzvE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,SAAU3lE,aAClFlwE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,UAAWzlE,cACnFpwE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,QAAS7lE,YACjFhwE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,eAAgBxlE,mBACxFrwE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,gBAAiBtlE,oBACzFvwE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,aAAcjnI,iBACtF5O,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,aAAchnI,iBACtF7O,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,YAAarlE,gBAErFxwE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,QAAS9kE,YACjF/wE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,QAAShlE,YACjF7wE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,YAAa/kE,gBACrF9wE,KAAK62I,gCAAgC72I,KAAKw3I,gBAAgB3B,aAAc,YAAallE,iBAkBzFtsC,gBAAgB1jC,UAAU++B,gBAS1B,SAAUg3C,gBAAiB93E,KAAM09D,SAC7B,MAAOt8D,MAAKs9B,eAAeoC,gBAAgBg3C,gBAAiB93E,KAAM09D,UAQtEj4B,gBAAgB1jC,UAAU03I,YAM1B,SAAU7zI,MAAOf,QAAS8G,SACtB,IAAIvK,KAAKo2I,cAIL,KAAM5xI,MAHNxE,MAAKo2I,cAAc5xI,MAAQf,SAAWA,QAAQkE,UAAa4C,UAYnE85B,gBAAgB1jC,UAAUu4I,YAM1B,SAAUz1I,QAASF,OACf,GAAqBq2I,kBAAmB55I,KAAKo2I,aAC7Cp2I,MAAKo2I,cAAgB,SAAU5xI,MAAOkd,WACtC,IAAqB/hB,QAASK,KAAKk4I,SAASz0I,QAASF,MAErD,OADAvD,MAAKo2I,cAAgBwD,iBACdj6I,QAQX0kC,gBAAgB1jC,UAAUu3I,SAM1B,SAAUz0I,QAASF,OAYf,QAASs2I,mBAAkBp2I,QAASF,MAAOu2I,MAAOl/E,YAK9C,QAASm/E,uBAAsB/C,cAC3B,GAAqBr5G,gBAAiBm9B,KAAKx9B,eAAekE,cAAcw1G,aACxE,OAAOr5G,gBAAiBA,eAAeG,SAAW,KAQtD,QAASk8G,cAAaC,eAAgBC,eAAgBp4I,MAClD,GAAIo4I,gBAAkD,YAAhCA,eAA2B,WAAiB,CAC9D,GAAIC,QAAQ75H,IAAI25H,gBACZ,KAAM,IAAIx1I,OAAM,0BAEpB,KACI,GAAqB21I,SAAUF,eAAsB,KACrD,IAAIE,UAAqB,GAATN,OAAoC,SAAtBM,QAAQ14G,YAAwB,CAC1D,GAAqBqQ,YAAamoG,eAA2B,WACxCG,SAAWH,eAAeG,QAC/Cv4I,MAAOA,KAAK7B,IAAI,SAAUm5B,KAAO,MAAOygH,mBAAkBp2I,QAAS21B,IAAK0gH,MAAQ,EAAGl/E,cAC9E36D,IAAI,SAAUm5B,KAAO,MAAOwJ,cAAaxJ,SAAOj1B,GAAYi1B,MAC7DihH,UAAYA,SAASp4I,OAASH,KAAKG,QACnCH,KAAKgF,KAAK/G,MAAM+B,KAAMu4I,SAASj3I,MAAMtB,KAAKG,QAAQhC,IAAI,SAAUsD,OAAS,MAAO20I,UAAS30I,UAE7F42I,QAAQ55H,IAAI05H,gBAAgB,EAE5B,KAAK,GADgBK,eAAgBC,aAAa36C,QACxB90F,EAAI,EAAGA,EAAIinC,WAAW9vC,OAAQ6I,IACpDwvI,cAAcv7I,OAAOgzC,WAAWjnC,GAAIhJ,KAAKgJ,GAE7C,IACqB0vI,UADAC,SAAWhgG,KAEhC,KACIA,MAAQ6/F,cAAcxrG,OACtB0rG,SAAWX,kBAAkBI,eAAgBG,QAASN,MAAQ,EAAGl/E,YAErE,QACIngB,MAAQggG,SAEZ,MAAOD,WAGf,QACIL,QAAQn+G,OAAOi+G,iBAGvB,MAAc,KAAVH,MAIOhE,OAEJoC,UAAWx2G,WAAY,QAASzwB,QAAS,8BAA+BxN,QAASw2I,iBAM5F,QAAS/B,UAASxjI,YACd,GAAIyuB,YAAYzuB,YACZ,MAAOA,WAEX,IAAIA,qBAAsBhR,OAAO,CAE7B,IAAK,GADgBg3I,aACZ34I,GAAK,EAAGoX,GAAK,WAAiCpX,GAAKoX,GAAGlX,OAAQF,KAAM,CACzE,GAAI0G,MAAO0Q,GAAGpX,GAEd,IAAI0G,MAA4B,WAApBA,KAAKi5B,WAAyB,CAGtC,GAAqBi5G,aAAcd,kBAAkBp2I,QAASgF,KAAKiM,WAAYolI,MAAO,EACtF,IAAIp2I,MAAMC,QAAQg3I,aAAc,CAC5B,IAAK,GAAIrhI,IAAK,EAAGshI,cAAgBD,YAAarhI,GAAKshI,cAAc34I,OAAQqX,KAAM,CAC3E,GAAIuhI,YAAaD,cAActhI,GAC/BohI,UAAS5zI,KAAK+zI,YAElB,UAGR,GAAqBC,SAAU5C,SAASzvI,KACpCm6B,cAAak4G,UAGjBJ,SAAS5zI,KAAKg0I,SAElB,MAAOJ,UAEX,GAAIhmI,qBAAsBnN,cAAc,CAGpC,GAAImN,aAAeomD,KAAK2+E,gBAAkB3+E,KAAK27E,cAAc9iH,IAAIjf,aAC5DkmD,WAAa,IAAMlmD,WAAW4nD,QAAQr6D,OACvC,MAAOyS,WAGP,IAAqBsiI,cAAetiI,WACfqmI,iBAAmBhB,sBAAsB/C,aAC9D,OAAwB,OAApB+D,iBACOlB,kBAAkB7C,aAAc+D,iBAAkBjB,MAAQ,EAAGl/E,YAG7Do8E,aAInB,GAAItiI,WAAY,CACZ,GAAIA,WAAuB,WAAG,CAC1B,GAAqBsiI,kBAAe,EACpC,QAAQtiI,WAAuB,YAC3B,IAAK,QACD,GAAqBtB,MAAO8kI,SAASxjI,WAAiB,KACtD,IAAIkuB,aAAaxvB,MACb,MAAOA,KACX,IAAqBC,OAAQ6kI,SAASxjI,WAAkB,MACxD,IAAIkuB,aAAavvB,OACb,MAAOA,MACX,QAAQqB,WAAqB,UACzB,IAAK,KACD,MAAOtB,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,MACD,MAAOD,QAASC,KACpB,KAAK,MACD,MAAOD,QAASC,KACpB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,MAEtB,MAAO,KACX,KAAK,KAED,MAAmB6kI,UADcA,SAASxjI,WAAsB,WACpCA,WAA2B,eAC1CA,WAA2B,eAC5C,KAAK,MACD,GAAqBsmI,SAAU9C,SAASxjI,WAAoB,QAC5D,IAAIkuB,aAAao4G,SACb,MAAOA,QACX,QAAQtmI,WAAqB,UACzB,IAAK,IACD,MAAOsmI,QACX,KAAK,IACD,OAAQA,OACZ,KAAK,IACD,OAAQA,OACZ,KAAK,IACD,OAAQA,QAEhB,MAAO,KACX,KAAK,QACD,GAAqBC,aAAcpB,kBAAkBp2I,QAASiR,WAAuB,WAAGolI,MAAO,GAC1Ez0I,MAAQw0I,kBAAkBp2I,QAASiR,WAAkB,MAAGolI,MAAO,EACpF,OAAImB,cAAe93G,YAAY99B,OACpB41I,YAAY51I,OAChB,IACX,KAAK,SACD,GAAqB61I,QAASxmI,WAAmB,OAC5BymI,cAAgB13I,QAChB23I,aAAelD,SAASxjI,WAAuB,WACpE,IAAI0mI,uBAAwB7zI,cAAc,CACtC,GAAqB+0D,SAAU8+E,aAAa9+E,QAAQ3zD,OAAOuyI,OAC3DC,eACIrgF,KAAKp7B,gBAAgB07G,aAAazzI,SAAUyzI,aAAax8I,KAAM09D,QACnE,IAAqBy+E,kBAAmBhB,sBAAsBoB,cAC9D,OAAwB,OAApBJ,iBACOlB,kBAAkBsB,cAAeJ,iBAAkBjB,MAAQ,EAAGl/E,YAG9DugF,cAGf,MAAIC,eAAgBj4G,YAAY+3G,QACrBrB,kBAAkBsB,cAAeC,aAAaF,QAASpB,MAAQ,EAAGl/E,YACtE,IACX,KAAK,YAID,GAAqBuD,QAASzpD,WAAiB,KAC1B2mI,WAAa5gG,MAAMxuC,QAAQkyD,OAChD,IAAIk9E,YAAcd,aAAae,QAC3B,MAAOD,WAEX,MACJ,KAAK,QAEL,IAAK,WACD,MAAO53I,QACX,KAAK,MACL,IAAK,OAGD,IADAuzI,aAAe6C,kBAAkBp2I,QAASiR,WAAuB,WAAGolI,MAAQ,EAAoB,aACpEvyI,cAAc,CACtC,GAAIyvI,eAAiBl8E,KAAK2+E,gBAAkBzC,eAAiBl8E,KAAK4+E,YAK9D,MAAOj2I,QAEX,IAAqB83I,gBAAiB7mI,WAAsB,cACvCwZ,UAAY4sC,KAAK27E,cAAcn2H,IAAI02H,aACxD,IAAI9oH,UAAW,CACX,GAAqBpsB,MAAOy5I,eACvBt7I,IAAI,SAAUm5B,KAAO,MAAOygH,mBAAkBp2I,QAAS21B,IAAK0gH,MAAQ,EAAGl/E,cACvE36D,IAAI,SAAUm5B,KAAO,MAAOwJ,cAAaxJ,SAAOj1B,GAAYi1B,KACjE,OAAOlL,WAAUzqB,QAAS3B,MAK1B,MAAOk4I,cAAahD,aADkB+C,sBAAsB/C,cACVuE,gBAG1D,MAAOzF,OACX,KAAK,QACD,GAAqB7kI,SAAU8xB,oBAAoBruB,WASnD,OARIA,YAAiB,MACjBzD,QACIA,QAAU,eAAiByD,WAAiB,KAAI,GAAK,KAAOA,WAAsB,UAAI,GAAK,6BAC/FomD,KAAKu9E,YAAYh1G,gBAAgBpyB,QAASxN,QAAQkE,SAAU+M,WAAiB,KAAGA,WAAsB,WAAIjR,UAG1Gq3D,KAAKu9E,YAAY,GAAI5zI,OAAMwM,SAAUxN,SAElCqyI,MACX,KAAK,SACD,MAAOphI,YAEf,MAAO,MAEX,MAAOsuB,cAAatuB,WAAY,SAAUnR,MAAO3E,MAC7C,GAAIq3I,cAActiH,IAAI/0B,MAAO,CACzB,GAAIA,OAASm3I,WAAaC,UAAWthI,YAAY,CAG7C,GAAqB2+B,SAAU6kG,SAASxjI,WAAW2+B,QACnD,IAAIA,UAAYynB,KAAK6+E,QAAUtmG,SAAWynB,KAAKm7C,6BAC3C,MAAOiiC,UAAS30I,OAGxB,MAAOs2I,mBAAkBp2I,QAASF,MAAOu2I,MAAOl/E,WAAa,GAEjE,MAAOs9E,UAAS30I,SAGxB,MAAOuyI,QAEX,IACI,MAAOoC,UAAS30I,OAEpB,MAAwB8V,GACpB,GAAqBijD,SAAU74D,QAAQ64D,QAAQr6D,OAAS,IAAMwB,QAAQ64D,QAAQz2D,KAAK,KAAO,GACrEoL,QAAUoI,EAAEpI,QAAU,sBAAwBxN,QAAQ7E,KAAO09D,QAAU,OAAS74D,QAAQkE,QAC7G,IAAI0R,EAAEqI,SACF,KAAM2hB,iBAAgBpyB,QAASoI,EAAEqI,SAAUrI,EAAEiqB,KAAMjqB,EAAEkqB,OAEzD,MAAMl/B,aAAY4M,UA9S1B,GAAIixB,OAAQliC,KACS86D,KAAO96D,KACPy6C,MAAQ8/F,aAAahtG,MACrB4sG,QAAU,GAAI5xH,KAsTd5oB,OAASK,KAAKo2I,cARc,SAAU3yI,QAASF,OAChE,IACI,MAAOs2I,mBAAkBp2I,QAASF,MAAO,EAAG,GAEhD,MAAwB8V,GACpB6oB,MAAMm2G,YAAYh/H,EAAG5V,WAGgDA,QAASF,OAClFs2I,kBAAkBp2I,QAASF,MAAO,EAAG,EACzC,KAAIq/B,aAAajjC,QAGjB,MAAOA,SAMX0kC,gBAAgB1jC,UAAUk3I,gBAI1B,SAAUzxI,MACN,GAAqBu3B,gBAAiB39B,KAAKs9B,eAAekE,cAAcp7B,KACxE,OAAOu3B,iBAAkBA,eAAeG,SAAWH,eAAeG,UAC5D4D,WAAY,UAEf2C,mBAyEPk2G,aAAgB,WAChB,QAASA,iBAsBT,MAjBAA,cAAa36C,MAGb,WACI,GAAqBntD,SAAU,GAAIlqB,IACnC,QACIxpB,OAAQ,SAAUH,KAAM2E,OAEpB,MADAkvC,SAAQlyB,IAAI3hB,KAAM2E,OACXvD,MAEX8uC,KAAM,WACF,MAAO2D,SAAQkQ,KAAO,EAAI,GAAI64F,gBAAe/oG,SAAW8nG,aAAahtG,SAIjFgtG,aAAae,WACbf,aAAahtG,OAAUthC,QAAS,SAAUrN,MAAQ,MAAO27I,cAAae,UAC/Df,gBAEPiB,eAAkB,SAAUhxI,QAE5B,QAASgxI,gBAAe3yF,UACpB,GAAI3mB,OAAQ13B,OAAOklC,KAAK1vC,OAASA,IAEjC,OADAkiC,OAAM2mB,SAAWA,SACV3mB,MAaX,MAjBA7hC,WAAUm7I,eAAgBhxI,QAU1BgxI,eAAe76I,UAAUsL,QAIzB,SAAUrN,MACN,MAAOoB,MAAK6oD,SAASl1B,IAAI/0B,MAAQoB,KAAK6oD,SAASvoC,IAAI1hB,MAAQ27I,aAAae,SAErEE,gBACTjB,cAoBEkB,qBAAwB,WACxB,QAASA,sBAAqB59G,OAAQC,UAClC99B,KAAK69B,OAASA,OACd79B,KAAK89B,SAAWA,SAEpB,MAAO29G,yBAkBPt3G,qBAAwB,WACxB,QAASA,sBAAqBnE,KAAM07G,kBAAmBr+G,gBAAiB+4G,eACpEp2I,KAAKggC,KAAOA,KACZhgC,KAAK07I,kBAAoBA,kBACzB17I,KAAKq9B,gBAAkBA,gBACvBr9B,KAAKo2I,cAAgBA,cACrBp2I,KAAK27I,cAAgB,GAAIpzH,KACzBvoB,KAAK47I,gBAAkB,GAAIrzH,KAC3BvoB,KAAK67I,kBAAoB,GAAIj4H,KAC7B5jB,KAAKsvI,SAAW,GAAI/mH,KACpBvoB,KAAK87I,oBAAsB,GAAIvzH,KAC/BvoB,KAAK+7I,eAAiB,GAAIxzH,KAC1BvoB,KAAKg8I,2BAA6B,GAAIzzH,KAsqB1C,MAhqBA4b,sBAAqBxjC,UAAU6gC,cAI/B,SAAUw1G,cACN,GAAIA,aAAa16E,QAAQr6D,OAAS,EAC9B,MAA0BjC,MAAKi8I,sBAAsBjF,aAKzD,IAAqBkF,mBAAuCl8I,KAAKm8I,0BAA0BnF,aAC3F,IAAIkF,kBACA,MAAOA,kBAEX,IAAqBE,iBAAkBp8I,KAAK47I,gBAAgBt7H,IAAI02H,aAChE,OAAIoF,mBAMJp8I,KAAKq8I,iBAAiBrF,aAAarvI,UACT3H,KAAK47I,gBAAgBt7H,IAAI02H,gBAqBvD7yG,qBAAqBxjC,UAAUu0I,YAU/B,SAAU8B,cACN,GAAIA,aAAa16E,QAAQr6D,OAAQ,CAC7B,GAAqBwtI,YAAazvI,KAAK0/B,gBAAgBs3G,aAAarvI,SAAUqvI,aAAap4I,MACtE09I,aAAet8I,KAAKk1I,YAAYzF,WACrD,OAAO6M,cACHt8I,KAAK0/B,gBAAgB48G,aAAa30I,SAAU20I,aAAa19I,KAAMo4I,aAAa16E,SAC5E,KAER,GAAqBigF,oBAAqB16H,6BAA6Bm1H,aAAarvI,SACpF,IAAI40I,qBAAuBvF,aAAarvI,SAAU,CAC9C,GAAqB60I,gBAAiBv6H,6BAA6B+0H,aAAap4I,MAC3D6wI,WAAazvI,KAAK0/B,gBAAgB68G,mBAAoBC,eAAgBxF,aAAa16E,SACnFggF,aAAet8I,KAAKk1I,YAAYzF,WACrD,OAAO6M,cACHt8I,KAAK0/B,gBAAgB9d,sBAAsB06H,aAAa30I,UAAWoa,kBAAkBu6H,aAAa19I,MAAO6wI,WAAWnzE,SACpH,KAER,GAAqB38D,QAASK,KAAKq9B,gBAAgB63G,YAAY8B,aAI/D,OAHKr3I,UACDA,OAA4BK,KAAKsvI,SAAShvH,IAAI02H,eAE3Cr3I,QAcXwkC,qBAAqBxjC,UAAUu2I,gBAO/B,SAAUF,cACN,MAAOh3I,MAAK87I,oBAAoBx7H,IAAI02H,eAAiBA,aAAarvI,UAYtEw8B,qBAAqBxjC,UAAUs0I,aAM/B,SAAU+B,cAKN,GAAI31H,gBAAgB21H,aAAarvI,UAC7B,MAAO,KAGX,KADA,GAAqBg2B,gBAAiB39B,KAAKwhC,cAAcw1G,cAClDr5G,gBAAkBA,eAAeG,mBAAoBv2B,eACxDo2B,eAAiB39B,KAAKwhC,cAAc7D,eAAeG,SAEvD,OAAQH,iBAAkBA,eAAeG,UAAYH,eAAeG,SAASk3G,OAAU,MAW3F7wG,qBAAqBxjC,UAAUy0I,qBAM/B,SAAUqH,iBAAkBC,oBACxB,MAAO18I,MAAKq9B,gBAAgByxG,mBAAmB2N,mBAC3Cz8I,KAAKg8I,2BAA2B17H,IAAIm8H,mBACpCz8I,KAAKggC,KAAKo1G,qBAAqBqH,iBAAkBC,qBAMzDv4G,qBAAqBxjC,UAAUmuI,mBAI/B,SAAUnnI,UACN,MAAO3H,MAAKg8I,2BAA2B17H,IAAI3Y,WAAa,MAO5Dw8B,qBAAqBxjC,UAAU42I,eAK/B,SAAUoF,aAAcC,cACpBD,aAAanmE,kBACbomE,aAAapmE,kBACbx2E,KAAKsvI,SAAS/uH,IAAIo8H,aAAcC,eAOpCz4G,qBAAqBxjC,UAAU22I,4BAK/B,SAAU51H,SAAUqoB,YAChB/pC,KAAKg8I,2BAA2Bz7H,IAAImB,SAAUqoB,aAalD5F,qBAAqBxjC,UAAUk8I,eAM/B,SAAUn7H,UACN1hB,KAAK27I,cAAc3/G,OAAOta,UAC1B1hB,KAAK67I,kBAAkB7/G,OAAOta,SAC9B,IAAqB6b,SAAUv9B,KAAK+7I,eAAez7H,IAAIoB,SACvD,IAAI6b,QAAS,CACTv9B,KAAK+7I,eAAe//G,OAAOta,SAC3B,KAAK,GAAI3f,IAAK,EAAG+6I,UAAYv/G,QAASx7B,GAAK+6I,UAAU76I,OAAQF,KAAM,CAC/D,GAAI87B,QAASi/G,UAAU/6I,GACvB/B,MAAK47I,gBAAgB5/G,OAAO6B,QAC5B79B,KAAKsvI,SAAStzG,OAAO6B,QACrB79B,KAAK87I,oBAAoB9/G,OAAO6B,WAU5CsG,qBAAqBxjC,UAAUg3I,gBAK/B,SAAU14I,IACN,GAAqB89I,UAAW/8I,KAAKo2I,aACrCp2I,MAAKo2I,cAAgB,YACrB,KACI,MAAOn3I,MAEX,QACIe,KAAKo2I,cAAgB2G,WAO7B54G,qBAAqBxjC,UAAUs7I,sBAI/B,SAAUjF,cACN,GAAqB16E,SAAU06E,aAAa16E,QACvB0gF,mBAAqBh9I,KAAKwhC,cAAcxhC,KAAK0/B,gBAAgBs3G,aAAarvI,SAAUqvI,aAAap4I,MACtH,KAAKo+I,mBACD,MAAO,KAEX,IAAqBC,cAAeD,mBAAmBl/G,QACvD,IAAIm/G,uBAAwB11I,cACxB,MAAO,IAAIk0I,sBAAqBzE,aAAch3I,KAAK0/B,gBAAgBu9G,aAAat1I,SAAUs1I,aAAar+I,KAAM09D,SAE5G,KAAI2gF,cAA4C,UAA5BA,aAAav7G,WAKjC,CAED,IAAK,GADgBn+B,OAAQ05I,aACHnyI,EAAI,EAAGA,EAAIwxD,QAAQr6D,QAAUsB,MAAOuH,IAC1DvH,MAAQA,MAAM+4D,QAAQxxD,GAE1B,OAAO,IAAI2wI,sBAAqBzE,aAAczzI,OAT9C,MAAI05I,cAAaC,SAA8B,IAAnB5gF,QAAQr6D,OACzB,GAAIw5I,sBAAqBzE,aAAciG,aAAaC,QAAQ5gF,QAAQ,KAU5E,MAMXn4B,qBAAqBxjC,UAAUw7I,0BAI/B,SAAUnF,cACN,GAAqBj5G,SAAU/9B,KAAKq9B,gBAAgBk/E,eAAey6B,aACnE,OAAOj5G,SAAU,GAAI09G,sBAAqBzE,aAAcj5G,QAAQD,UAAY,MAmBhFqG,qBAAqBxjC,UAAU++B,gBAS/B,SAAUg3C,gBAAiB93E,KAAM09D,SAC7B,MAAOt8D,MAAK07I,kBAAkBp7H,IAAIo2D,gBAAiB93E,KAAM09D,UAgB7Dn4B,qBAAqBxjC,UAAU0gC,cAO/B,SAAU15B,UACN,GAAqBm2B,UAAW99B,KAAKm9I,kBAAkBx1I,SACvD,SAAIm2B,SAAmB,UACZl+B,OAAOg3B,KAAKkH,SAAmB,UAAG3M,KAAK,SAAUisH,aACpD,GAAqB39H,OAAQqe,SAAmB,SAAEs/G,YAClD,OAAO39H,QAA8B,UAArBA,MAAMiiB,YAA0BjiB,MAAMi5H,cASlEv0G,qBAAqBxjC,UAAU4gC,aAI/B,SAAU55B,UACN,GAAqB01I,gBAAiBr9I,KAAKq9B,gBAAgBkE,aAAa55B,SACxE,IAAI01I,eACA,MAAOA,eAIXr9I,MAAKq8I,iBAAiB10I,SACtB,IAAqB21I,mBAMrB,OALAt9I,MAAK47I,gBAAgBh1I,QAAQ,SAAU+2B,gBAC/BA,eAAeE,OAAOl2B,WAAaA,UACnC21I,gBAAgBx2I,KAAK62B,eAAeE,UAGrCy/G,iBAMXn5G,qBAAqBxjC,UAAU07I,iBAI/B,SAAU10I,UACN,GAAIu6B,OAAQliC,IACZ,KAAIA,KAAK67I,kBAAkBloH,IAAIhsB,UAA/B,CAGA3H,KAAK67I,kBAAkB9/G,IAAIp0B,SAC3B,IAAqBi0I,oBACA99G,SAAW99B,KAAKm9I,kBAAkBx1I,SAOvD,IANIm2B,SAAmB,UAGnB99B,KAAKg8I,2BAA2Bz7H,IAAI5Y,SAAUm2B,SAAmB,UAGjEA,SAAkB,QAsClB,IAAK,GADDy/G,QAASv9I,KACJ+B,GAAK,EAAGoX,GAAK2kB,SAAkB,QAAG/7B,GAAKoX,GAAGlX,OAAQF,KAAM,CAC7D,GAAIy7I,cAAerkI,GAAGpX,KAtCZ,SAAUy7I,cAEpB,GAAIA,aAAaC,OACbD,aAAaC,OAAO72I,QAAQ,SAAU82I,cAClC,GAAqB17H,WAEjBA,YADwB,gBAAjB07H,cACMA,aAGAA,aAAatqB,GAE9BpxG,WAAawhB,mBAAmBxhB,WAChC,IAAqB27H,SAAU37H,UACH,iBAAjB07H,gBACPC,QAAUn6G,mBAAmBk6G,aAAa9+I;+EAE9C,IAAqBg/I,gBAAiB17G,MAAM27G,cAAcL,aAAa75H,KAAMhc,SAC7E,IAAIi2I,eAAgB,CAChB,GAAqBhB,cAAe16G,MAAMxC,gBAAgBk+G,eAAgBD,SACrDhB,aAAez6G,MAAMxC,gBAAgB/3B,SAAUqa,WACpE45H,iBAAgB90I,KAAKo7B,MAAM47G,aAAanB,aAAcC,sBAI7D,CAED,GAAqBgB,gBAAiBL,OAAOM,cAAcL,aAAa75H,KAAMhc,SAC9E,IAAIi2I,eAAgB,CACqBL,OAAOh8G,aAAaq8G,gBAC3Ch3I,QAAQ,SAAUg2I,cAC5B,GAAqBD,cAAez6G,MAAMxC,gBAAgB/3B,SAAUi1I,aAAah+I,KACjFg9I,iBAAgB90I,KAAKo7B,MAAM47G,aAAanB,aAAcC,oBAQ1DY,cAMhB,GAAI1/G,SAAmB,SAAG,CAEtB,GAAqBigH,uBAAwB,GAAIn6H,KAAIhkB,OAAOg3B,KAAKkH,SAAmB,UAAG79B,IAAIujC,qBACtEw6G,UAAYlgH,SAAkB,WACnDl+B,QAAOg3B,KAAKkH,SAAmB,UAAGl3B,QAAQ,SAAUw2I,aAChD,GAAqB37G,YAAa3D,SAAmB,SAAEs/G,aAClCx+I,KAAO4kC,mBAAmB45G,aAC1Bv/G,OAASqE,MAAMxC,gBAAgB/3B,SAAU/I,MACzCq/I,OAASD,UAAU33I,eAAe+2I,cAAgBY,UAAUZ,YACjF,IAAIa,OAAQ,CAIR,GAAqBC,gBAAiBh8G,MAAM27G,cAAcI,OAAQt2I,SAC7Du2I,gBAIDh8G,MAAM45G,oBAAoBv7H,IAAIsd,OAAQqgH,gBAHtCh8G,MAAMm2G,YAAY,GAAI5zI,OAAM,wCAA0Cw5I,OAAS,SAAWt2I,WAMlGi0I,gBAAgB90I,KAAKo7B,MAAMi8G,qBAAqBtgH,OAAQl2B,SAAUo2I,sBAAuBt8G,eAGjGm6G,gBAAgBh1I,QAAQ,SAAU+2B,gBAAkB,MAAOuE,OAAM05G,gBAAgBr7H,IAAIod,eAAeE,OAAQF,kBAC5G39B,KAAK+7I,eAAex7H,IAAI5Y,SAAUi0I,gBAAgB37I,IAAI,SAAU09B,gBAAkB,MAAOA,gBAAeE,YAS5GsG,qBAAqBxjC,UAAUw9I,qBAO/B,SAAUxB,aAAcyB,aAAcC,oBAAqBvgH,UAMvD,GAAI99B,KAAKq9B,gBAAgBgB,cAAcs+G,aAAah1I,WAAam2B,UAClC,UAA3BA,SAAqB,WAAe,CACpC,GAAqBwgH,oBAAsB58G,WAAY,QAASszG,MAAOl3G,SAASk3G,MAChF,OAAO,IAAIyG,sBAAqBkB,aAAc2B,mBAElD,GAAqBxjF,MAAO96D,KACxBu+I,qBAAwB,SAAU/zI,QAElC,QAAS+zI,wBACL,MAAkB,QAAX/zI,QAAmBA,OAAOzK,MAAMC,KAAMgC,YAAchC,KAsD/D,MAxDAK,WAAUk+I,qBAAsB/zI,QAShC+zI,qBAAqB59I,UAAUmD,eAK/B,SAAU7D,IAAKu+I,gBACX,GAAqBC,UAAWx+I,IAAgB,UAChD,IAAiB,aAAbw+I,SAAyB,CACzB,GAAqBC,QAASF,eAAev8I,MAC7Cu8I,gBAAe13I,KAAK/G,MAAMy+I,eAAiBv+I,IAAgB,eAC3D,IAAqBN,QAAS6K,OAAO7J,UAAUmD,eAAe4rC,KAAK1vC,KAAMC,IAAKu+I,eAE9E,OADAA,gBAAev8I,OAASy8I,OACjB/+I,OAEN,GAAiB,cAAb8+I,SA8BL,MAAOj0I,QAAO7J,UAAUmD,eAAe4rC,KAAK1vC,KAAMC,IAAKu+I,eA7BvD,IAAqBh/I,QAASS,IAAY,OACrBk+D,OAASl+D,IAAU,KAAIujC,mBAAmBvjC,IAAU,MAAKA,IAAU,IACxF,KAAKk+D,OACD,MAAO,KAEX,IAAqBx2D,cAAW,EAChC,OAAInI,SACAmI,SAA8BmzD,KAAK+iF,cAAcr+I,OAAQm9I,aAAah1I,UACjEA,SAMEmzD,KAAKp7B,gBAAgB/3B,SAAUw2D,SAJ9Bz8B,WAAY,QACZzwB,QAAS,qBAAuBzR,OAAS,gBAAkBm9I,aAAah1I,SAAW,MAKtF62I,eAAer7I,QAAQg7D,SAAW,GAE9Bz8B,WAAY,YAAa9iC,KAAMu/D,QAGpCkgF,oBAAoB1qH,IAAIwqC,QACjBrD,KAAKp7B,gBAAgB0+G,aAAcjgF,YAD9C,IAWLogF,sBACT7pE,kBACmBiqE,gBAAkBr7I,WAAWw6B,SAAU,GAAIygH,yBAChE,OAAII,2BAA2Bp3I,cACpBvH,KAAK89I,aAAanB,aAAcgC,iBAEpC,GAAIlD,sBAAqBkB,aAAcgC,kBAOlDx6G,qBAAqBxjC,UAAUm9I,aAK/B,SAAUnB,aAAcC,cAWpB,MAVAD,cAAanmE,kBACbomE,aAAapmE,kBACTx2E,KAAKq9B,gBAAgBgB,cAAcs+G,aAAah1I,WAChD3H,KAAKq9B,gBAAgBgB,cAAcu+G,aAAaj1I,WAKhD3H,KAAKsvI,SAAS/uH,IAAIq8H,aAAc58I,KAAKk1I,YAAYyH,eAAiBA,cAE/D,GAAIlB,sBAAqBkB,aAAcC,eAQlDz4G,qBAAqBxjC,UAAU03I,YAM/B,SAAU7zI,MAAOf,QAAS8G,SACtB,IAAIvK,KAAKo2I,cAIL,KAAM5xI,MAHNxE,MAAKo2I,cAAc5xI,MAAQf,SAAWA,QAAQkE,UAAa4C,UAUnE45B,qBAAqBxjC,UAAUw8I,kBAI/B,SAAU39I,QACN,GAAqBo/I,gBAAiB5+I,KAAK27I,cAAcr7H,IAAI9gB,OAC7D,KAAKo/I,eAAgB,CACjB,GAAqBC,iBAAkB7+I,KAAKggC,KAAK8+G,eAAet/I,OAChE,IAAIq/I,gBAAiB,CACjB,GAAqBE,eAAgB,CACrCF,iBAAgBj4I,QAAQ,SAAUo4I,IAC1BA,GAAY,QAAID,eAChBA,aAAeC,GAAY,QAC3BJ,eAAiBI,MAQ7B,GAJKJ,iBACDA,gBACMl9G,WAAY,SAAU6uE,QAvoBb,EAuoBgD/wG,OAAQA,OAAQs+B,cAvoBhE,GAyoBf8gH,eAAwB,QAA+B,CACvD,GAAqBK,cAA4C,GAA7BL,eAAwB,QACxD,gCAAkCA,eAAwB,QAAI,eAAiBp/I,OAAS,+DACxF,wCAA0CA,OAAS,mBAAqBo/I,eAAwB,QAAI,cACxG5+I,MAAKq4I,YAAY,GAAI5zI,OAAMw6I,eAE/Bj/I,KAAK27I,cAAcp7H,IAAI/gB,OAAQo/I,gBAEnC,MAAOA,iBAQXz6G,qBAAqBxjC,UAAUy2I,kBAM/B,SAAU53I,OAAQwiB,WAAYy1H,gBAC1B,GAAqB9vI,UAAW3H,KAAK69I,cAAcr+I,OAAQi4I,eAC3D,OAAK9vI,UAIE3H,KAAK0/B,gBAAgB/3B,SAAUqa,aAHlChiB,KAAKq4I,YAAY,GAAI5zI,OAAM,4BAA8BjF,QAAUi4I,eAAiB,6DAA+D,MAC5Iz3I,KAAK0/B,gBAAgB,SAAWlgC,OAAQwiB,cASvDmiB,qBAAqBxjC,UAAUk9I,cAK/B,SAAUr+I,OAAQi4I,gBACd,IACI,MAAOz3I,MAAKggC,KAAKk/G,qBAAqB1/I,OAAQi4I,gBAElD,MAAwBp+H,GACpBsrB,QAAQngC,MAAM,6BAA+BhF,OAAS,sBAAwBi4I,gBAC9Ez3I,KAAKq4I,YAAYh/H,MAAGlV,GAAWszI,gBAEnC,MAAO,OAEJtzG,wBAkBPD,mBAAsB,WACtB,QAASA,oBAAmBlE,KAAM07G,mBAC9B17I,KAAKggC,KAAOA,KACZhgC,KAAK07I,kBAAoBA,kBACzB17I,KAAKm/I,aAAe,GAAI52H,KACxBvoB,KAAKo/I,gBAAkB,GAAI72H,KAC3BvoB,KAAKsvI,SAAW,GAAI/mH,KACpBvoB,KAAKg8I,2BAA6B,GAAIzzH,KAqJ1C,MA/IA2b,oBAAmBvjC,UAAU09B,cAI7B,SAAU12B,UAIN,OAAQ3H,KAAKggC,KAAKY,aAAazf,yBAAyBxZ,YAO5Du8B,mBAAmBvjC,UAAU6uI,kBAK7B,SAAU7nI,SAAU03I,sBAChB,MAAOr/I,MAAKggC,KAAKwvG,kBAAkB7nI,SAAU03I,uBAOjDn7G,mBAAmBvjC,UAAU2vI,oBAK7B,SAAU5uH,SAAU49H,sBAChB,MAAOt/I,MAAKggC,KAAKswG,oBAAoB5uH,SAAU49H,uBAMnDp7G,mBAAmBvjC,UAAU47G,eAI7B,SAAUy6B,cACNA,aAAaxgE,iBACb,IAAqBz4C,SAAU/9B,KAAKm/I,aAAa7+H,IAAI02H,aAKrD,OAJKj5G,WACD/9B,KAAKu/I,iBAAiBvI,aAAarvI,UACnCo2B,QAA6B/9B,KAAKm/I,aAAa7+H,IAAI02H,eAEhDj5G,SAAW,MAMtBmG,mBAAmBvjC,UAAU4gC,aAI7B,SAAU55B,UACN,MAAI3H,MAAKu/I,iBAAiB53I,UACfjE,MAAMigB,KAAK3jB,KAAKm/I,aAAavoH,QAAQhU,OAAO,SAAUib,QAAU,MAAOA,QAAOl2B,WAAaA,WAE/F,MAMXu8B,mBAAmBvjC,UAAUu0I,YAI7B,SAAU8B,cAEN,MADAA,cAAaxgE,kBACax2E,KAAKsvI,SAAShvH,IAAI02H,eAUhD9yG,mBAAmBvjC,UAAUmuI,mBAK7B,SAAU2N,kBACN,MAAOz8I,MAAKg8I,2BAA2B17H,IAAIm8H,mBAAqB,MAMpEv4G,mBAAmBvjC,UAAUi9B,WAI7B,SAAUG,SAAW/9B,KAAKm/I,aAAa5+H,IAAIwd,QAAQF,OAAQE,UAK3DmG,mBAAmBvjC,UAAU4+I,iBAI7B,SAAU53I,UACN,GAAIu6B,OAAQliC,KACSw/I,WAAax/I,KAAKo/I,gBAAgB9+H,IAAI3Y,SAC3D,IAAkB,MAAd63I,WACA,MAAOA,WAEX,IAAqBxhH,MAAO,IAC5B,IAAIh+B,KAAKq+B,cAAc12B,UAAW,CAC9B,GAAqB83I,iBAAkBh+H,gBAAgB9Z,SACvD,KACIq2B,KAAOh+B,KAAKggC,KAAK2vG,YAAY8P,iBAEjC,MAAwBpmI,GAEpB,KADAsrB,SAAQngC,MAAM,8BAAgCi7I,iBACxCpmI,GAKd,GAFAmmI,WAAqB,MAARxhH,KACbh+B,KAAKo/I,gBAAgB7+H,IAAI5Y,SAAU63I,YAC/BxhH,KAAM,CACN,GAAI7kB,IAAKolB,qBAAqBv+B,KAAK07I,kBAAmB17I,KAAM2H,SAAUq2B,MAAO+L,WAAa5wB,GAAG4wB,WAAYH,UAAYzwB,GAAGywB,UAAW0lG,SAAWn2H,GAAGm2H,QACjJ1lG,WAAUhjC,QAAQ,SAAUm3B,SAAW,MAAOmE,OAAMi9G,aAAa5+H,IAAIwd,QAAQF,OAAQE,WACjFgM,YACA/pC,KAAKg8I,2BAA2Bz7H,IAAI5Y,SAAUoiC,YAElDulG,SAAS1oI,QAAQ,SAAU0oI,UACvBptG,MAAMotG,SAAS/uH,IAAI+uH,SAASzxG,OAAQqE,MAAMw5G,kBAAkBp7H,IAAIS,kBAAkBpZ,UAAW2nI,SAASA,aAG9G,MAAOkQ,aAEJt7G,sBA0EPw7G,gBAAmB,WACnB,QAASA,oBAET,MAAOA,oBAEPC,mBAAsB,WACtB,QAASA,sBACL3/I,KAAK4/I,WAAa,GAAIr3H,KAwE1B,MAnEAo3H,oBAAmBh/I,UAAU09B,cAG7B,WAAc,OAAO,GAKrBshH,mBAAmBh/I,UAAU6uI,kBAI7B,SAAU9tH,UAAY,MAAOA,WAK7Bi+H,mBAAmBh/I,UAAU2vI,oBAI7B,SAAU5uH,UAAY,MAAOA,WAK7Bi+H,mBAAmBh/I,UAAU47G,eAI7B,SAAUl1G,WACN,MAAOrH,MAAK4/I,WAAWt/H,IAAIjZ,YAAc,MAK7Cs4I,mBAAmBh/I,UAAU4gC,aAG7B,WAAc,UAKdo+G,mBAAmBh/I,UAAUu0I,YAI7B,SAAU7tI,WAAa,MAAOA,YAK9Bs4I,mBAAmBh/I,UAAUmuI,mBAI7B,SAAUptH,UAAY,MAAO,OAK7Bi+H,mBAAmBh/I,UAAUi9B,WAI7B,SAAUG,SAAW/9B,KAAK4/I,WAAWr/H,IAAIwd,QAAQF,OAAQE,UAClD4hH,sBAoCPj5G,kBAAqB,WACrB,QAASA,mBAAkB0B,OAAQgjB,SAAUn2B,UAAW4R,MACpD7mC,KAAKooC,OAASA,OACdpoC,KAAKorD,SAAWA,SAChBprD,KAAKi1B,UAAYA,UACjBj1B,KAAK6mC,KAAOA,KACZ7mC,KAAKP,WAWT,MANAinC,mBAAkB/lC,UAAUsmC,yBAG5B,WACI,MAAO,IAAIP,mBAAkB1mC,KAAMA,KAAKorD,SAAUprD,KAAKi1B,UAAW,GAAI1M,OAEnEme,qBAEPm5G,YAAe,WACf,QAASA,aAAYt8I,OACjBvD,KAAKuD,MAAQA,MAEjB,MAAOs8I,gBAoDPl5G,qBAAwB,WACxB,QAASA,sBAAqBtkB,WAC1BriB,KAAKqiB,UAAYA,UA2jBrB,MArjBAskB,sBAAqBhmC,UAAUm/I,SAI/B,SAAUn5I,KAAO,MAAOsnB,4BAA2BtnB,MAMnDggC,qBAAqBhmC,UAAU8nH,oBAK/B,SAAUrjG,KAAM+E,KAKZ,MAJAA,KAAI0c,KAAKtmB,IAAI6E,KAAKxmB,KAAMwmB,KAAK7hB,MAAMmiB,gBAAgB1lB,KAAMmqB,MACrD/E,KAAKu9F,YAAY9qF,aAAaoH,WAC9B9U,IAAI1qB,QAAQqH,KAAKse,KAAKxmB,MAEnB,MAOX+nC,qBAAqBhmC,UAAU+lH,kBAK/B,SAAUjhG,KAAM0E,KAGZ,IAFA,GAAqB5mB,OAAQkiB,KAAKliB,MAAMmiB,gBAAgB1lB,KAAMmqB,KACzC41H,QAAU51H,IACb,MAAX41H,SAAiB,CACpB,GAAIA,QAAQl5G,KAAKlT,IAAIlO,KAAK7mB,MAEtB,MADAmhJ,SAAQl5G,KAAKtmB,IAAIkF,KAAK7mB,KAAM2E,OACrBA,KAEXw8I,SAA6BA,QAAe,OAEhD,KAAM,IAAIt7I,OAAM,yBAA2BghB,KAAK7mB,OAOpD+nC,qBAAqBhmC,UAAU6lH,iBAK/B,SAAU7/G,IAAKwjB,KACX,GAAqBk4F,SAA6B17G,IAAS,IAC3D,IAAmB,MAAfA,IAAI4/G,QACJ,OAAQ5/G,IAAI4/G,SACR,IAAKL,YAAWE,MACZ,MAAOj8F,KAAIihC,SAAS0jB,SACxB,KAAKo3C,YAAWC,KACZ,MAAOh8F,KAAIihC,QACf,KAAK86D,YAAWG,WACZhE,QAAU29B,iBACV,MACJ,KAAK95B,YAAWI,WACZjE,QAAU49B,iBACV,MACJ,SACI,KAAM,IAAIx7I,OAAM,4BAA8BkC,IAAI4/G,SAI9D,IADA,GAAqBw5B,SAAU51H,IACb,MAAX41H,SAAiB,CACpB,GAAIA,QAAQl5G,KAAKlT,IAAI0uF,SACjB,MAAO09B,SAAQl5G,KAAKvmB,IAAI+hG,QAE5B09B,SAA6BA,QAAe,OAEhD,KAAM,IAAIt7I,OAAM,yBAA2B49G,UAO/C17E,qBAAqBhmC,UAAUimH,kBAK/B,SAAUnhG,KAAM0E,KACZ,GAAqB7V,UAAWmR,KAAKnR,SAASoR,gBAAgB1lB,KAAMmqB,KAC/C9kB,MAAQogB,KAAKpgB,MAAMqgB,gBAAgB1lB,KAAMmqB,KACzC5mB,MAAQkiB,KAAKliB,MAAMmiB,gBAAgB1lB,KAAMmqB,IAE9D,OADA7V,UAASjP,OAAS9B,MACXA,OAOXojC,qBAAqBhmC,UAAUmmH,mBAK/B,SAAUrhG,KAAM0E,KACZ,GAAqB7V,UAAWmR,KAAKnR,SAASoR,gBAAgB1lB,KAAMmqB,KAC/C5mB,MAAQkiB,KAAKliB,MAAMmiB,gBAAgB1lB,KAAMmqB,IAE9D,OADA7V,UAASmR,KAAK7mB,MAAQ2E,MACfA,OAOXojC,qBAAqBhmC,UAAUwmH,sBAK/B,SAAU1hG,KAAM0E,KACZ,GAEqBxqB,QAFA2U,SAAWmR,KAAKnR,SAASoR,gBAAgB1lB,KAAMmqB,KAC/CroB,KAAO9B,KAAKgqH,oBAAoBvkG,KAAK3jB,KAAMqoB,IAEhE,IAAoB,MAAhB1E,KAAK8gG,QACL,OAAQ9gG,KAAK8gG,SACT,IAAKQ,eAAcC,YACfrnH,OAAS2U,SAAS3L,OAAO5I,MAAMuU,SAAUxS,KACzC,MACJ,KAAKilH,eAAcE,oBACftnH,OAAS2U,SAASq5B,WAAYY,KAAMzsC,KAAK,IACzC,MACJ,KAAKilH,eAAcG,KACfvnH,OAAS2U,SAASy0B,KAAKhpC,MAAMuU,SAAUxS,KACvC,MACJ,SACI,KAAM,IAAI2C,OAAM,0BAA4BghB,KAAK8gG,aAIzD5mH,QAAS2U,SAA4BmR,KAAU,MAAG1lB,MAAMuU,SAAUxS,KAEtE,OAAOnC,SAOXgnC,qBAAqBhmC,UAAUymH,wBAK/B,SAAUhiG,KAAM+E,KACZ,GAAqBroB,MAAO9B,KAAKgqH,oBAAoB5kG,KAAKtjB,KAAMqoB,KAC3C+1H,OAAS96H,KAAK0B,EACnC,OAAIo5H,kBAAkBt6H,cAAes6H,OAAO35B,UAAYL,WAAWE,OAC/Dj8F,IAAIihC,SAAS3qD,YAAYE,UAAUF,YAAYV,MAAMoqB,IAAIihC,SAAUtpD,MAC5D,MAGsBsjB,KAAK0B,GAAGpB,gBAAgB1lB,KAAMmqB,KAC9CpqB,MAAM,KAAM+B,OAQjC6kC,qBAAqBhmC,UAAUioH,gBAK/B,SAAUxjG,KAAM+E,KACZ,MAAO,IAAI01H,aAAYz6H,KAAK7hB,MAAMmiB,gBAAgB1lB,KAAMmqB,OAO5Dwc,qBAAqBhmC,UAAUuoH,sBAK/B,SAAU9jG,KAAM+E,KACZ,GAAqBgnG,OAAQjqF,mBAAmB9hB,KAAM+E,IAAKnqB,KAK3D,OAJAmqB,KAAI0c,KAAKtmB,IAAI6E,KAAKxmB,KAAMuyH,OACpB/rG,KAAKu9F,YAAY9qF,aAAaoH,WAC9B9U,IAAI1qB,QAAQqH,KAAKse,KAAKxmB,MAEnB,MAOX+nC,qBAAqBhmC,UAAUgoH,oBAK/B,SAAUvjG,KAAM+E,KACZ,MAAO/E,MAAKK,KAAKC,gBAAgB1lB,KAAMmqB,MAO3Cwc,qBAAqBhmC,UAAUyoH,YAK/B,SAAUhkG,KAAM+E,KAEZ,MADiC/E,MAAKpW,UAAU0W,gBAAgB1lB,KAAMmqB,KAE3DnqB,KAAK8kB,mBAAmBM,KAAK4/F,SAAU76F,KAEvB,MAAlB/E,KAAK6/F,UACHjlH,KAAK8kB,mBAAmBM,KAAK6/F,UAAW96F,KAE5C,MAOXwc,qBAAqBhmC,UAAU+oH,kBAK/B,SAAUtkG,KAAM+E,KACZ,IACI,MAAOnqB,MAAK8kB,mBAAmBM,KAAKokG,UAAWr/F,KAEnD,MAAwB9Q,GACpB,GAAqB2tB,UAAW7c,IAAI8c,0BAGpC,OAFAD,UAASH,KAAKtmB,IAAIy/H,kBAAmB3mI,GACrC2tB,SAASH,KAAKtmB,IAAI0/H,kBAAmB5mI,EAAEpB,OAChCjY,KAAK8kB,mBAAmBM,KAAKqkG,WAAYziF,YAQxDL,qBAAqBhmC,UAAUipH,eAK/B,SAAUxkG,KAAM+E,KACZ,KAAM/E,MAAK5gB,MAAMkhB,gBAAgB1lB,KAAMmqB,MAO3Cwc,qBAAqBhmC,UAAU2oH,iBAK/B,SAAUlkG,KAAM3hB,SAAW,MAAO,OAMlCkjC,qBAAqBhmC,UAAU2mH,qBAK/B,SAAU3gH,IAAKwjB,KACX,GAAqBroB,MAAO9B,KAAKgqH,oBAAoBrjH,IAAI7E,KAAMqoB,KAC1CgnG,MAAQxqH,IAAI0gH,UAAU3hG,gBAAgB1lB,KAAMmqB,IACjE,OAAO,KAAKgnG,MAAMpoF,KAAKhpC,MAAMoxH,WAAQ,IAAQxoH,OAAO7G,SAOxD6kC,qBAAqBhmC,UAAU4mH,iBAK/B,SAAU5gH,IAAKwjB,KAAO,MAAOxjB,KAAIpD,OAMjCojC,qBAAqBhmC,UAAU6mH,kBAK/B,SAAU7gH,IAAKwjB,KACX,MAAOnqB,MAAKqiB,UAAUC,yBAAyB3b,IAAIpD,QAOvDojC,qBAAqBhmC,UAAU+mH,qBAK/B,SAAU/gH,IAAKwjB,KACX,MAAIxjB,KAAIqI,UAAU0W,gBAAgB1lB,KAAMmqB,KAC7BxjB,IAAIq+G,SAASt/F,gBAAgB1lB,KAAMmqB,KAEpB,MAAjBxjB,IAAIs+G,UACFt+G,IAAIs+G,UAAUv/F,gBAAgB1lB,KAAMmqB,KAExC,MAOXwc,qBAAqBhmC,UAAUgnH,aAK/B,SAAUhhH,IAAKwjB,KACX,OAAQxjB,IAAIqI,UAAU0W,gBAAgB1lB,KAAMmqB,MAOhDwc,qBAAqBhmC,UAAUinH,uBAK/B,SAAUjhH,IAAKwjB,KACX,MAAOxjB,KAAIqI,UAAU0W,gBAAgB1lB,KAAMmqB,MAO/Cwc,qBAAqBhmC,UAAUknH,cAK/B,SAAUlhH,IAAKwjB,KACX,MAAOxjB,KAAIpD,MAAMmiB,gBAAgB1lB,KAAMmqB,MAO3Cwc,qBAAqBhmC,UAAUmnH,kBAK/B,SAAUnhH,IAAKwjB,KAEX,MAAOke,YAD2B1hC,IAAIogB,OAAO9mB,IAAI,SAAU2nC,OAAS,MAAOA,OAAMhpC,OACnD+H,IAAIkyB,WAAY1O,IAAKnqB,OAOvD2mC,qBAAqBhmC,UAAU+nH,yBAK/B,SAAUtjG,KAAM+E,KACZ,GAAqBwd,YAAaviB,KAAK2B,OAAO9mB,IAAI,SAAU2nC,OAAS,MAAOA,OAAMhpC,MAKlF,OAJAurB,KAAI0c,KAAKtmB,IAAI6E,KAAKxmB,KAAMypC,WAAWV,WAAYviB,KAAKyT,WAAY1O,IAAKnqB,OACjEolB,KAAKu9F,YAAY9qF,aAAaoH,WAC9B9U,IAAI1qB,QAAQqH,KAAKse,KAAKxmB,MAEnB,MAOX+nC,qBAAqBhmC,UAAUsnH,wBAK/B,SAAUthH,IAAKwjB,KACX,GAAI+X,OAAQliC,KACSgoH,IAAM,WAAc,MAAOrhH,KAAIqhH,IAAItiG,gBAAgBwc,MAAO/X,MAC1Di7F,IAAM,WAAc,MAAOz+G,KAAIy+G,IAAI1/F,gBAAgBwc,MAAO/X,KAC/E,QAAQxjB,IAAIivF,UACR,IAAK6tB,gBAAeC,OAChB,MAAOsE,QAAS5C,KACpB,KAAK3B,gBAAeG,UAChB,MAAOoE,SAAU5C,KACrB,KAAK3B,gBAAeE,UAChB,MAAOqE,QAAS5C,KACpB,KAAK3B,gBAAeI,aAChB,MAAOmE,SAAU5C,KACrB,KAAK3B,gBAAeU,IAChB,MAAO6D,QAAS5C,KACpB,KAAK3B,gBAAeW,GAChB,MAAO4D,QAAS5C,KACpB,KAAK3B,gBAAeM,KAChB,MAAOiE,OAAQ5C,KACnB,KAAK3B,gBAAeK,MAChB,MAAOkE,OAAQ5C,KACnB,KAAK3B,gBAAeO,OAChB,MAAOgE,OAAQ5C,KACnB,KAAK3B,gBAAeQ,SAChB,MAAO+D,OAAQ5C,KACnB,KAAK3B,gBAAeS,OAChB,MAAO8D,OAAQ5C,KACnB,KAAK3B,gBAAeY,MAChB,MAAO2D,OAAQ5C,KACnB,KAAK3B,gBAAea,YAChB,MAAO0D,QAAS5C,KACpB,KAAK3B,gBAAec,OAChB,MAAOyD,OAAQ5C,KACnB,KAAK3B,gBAAee,aAChB,MAAOwD,QAAS5C,KACpB,SACI,KAAM,IAAI3gH,OAAM,oBAAsBkC,IAAIivF,YAQtDjvD,qBAAqBhmC,UAAUunH,kBAK/B,SAAUvhH,IAAKwjB,KAIX,MAFgCxjB,KAAI2N,SAASoR,gBAAgB1lB,KAAMmqB,KACjDxjB,IAAI/H,OAQ1B+nC,qBAAqBhmC,UAAUwnH,iBAK/B,SAAUxhH,IAAKwjB,KAGX,MAFgCxjB,KAAI2N,SAASoR,gBAAgB1lB,KAAMmqB,KACvCxjB,IAAItB,MAAMqgB,gBAAgB1lB,KAAMmqB,OAQhEwc,qBAAqBhmC,UAAUynH,sBAK/B,SAAUzhH,IAAKwjB,KACX,MAAOnqB,MAAKgqH,oBAAoBrjH,IAAI+mE,QAASvjD,MAOjDwc,qBAAqBhmC,UAAU0nH,oBAK/B,SAAU1hH,IAAKwjB,KACX,GAAI+X,OAAQliC,KACSL,SAErB,OADAgH,KAAI+mE,QAAQ9mE,QAAQ,SAAU6Y,OAAS,MAAO9f,QAAO8f,MAAMzL,KAAOyL,MAAMlc,MAAMmiB,gBAAgBwc,MAAO/X,OAC9FxqB,QAOXgnC,qBAAqBhmC,UAAU4nH,eAK/B,SAAU5hH,IAAKlD,SACX,GAAqBvB,QAASlC,KAAKgqH,oBAAoBrjH,IAAIoR,MAAOtU,QAClE,OAAOvB,QAAOA,OAAOD,OAAS,IAOlC0kC,qBAAqBhmC,UAAUqpH,oBAK/B,SAAUz2G,YAAa4W,KACnB,GAAI+X,OAAQliC,IACZ,OAAOuT,aAAYtT,IAAI,SAAUwlB,MAAQ,MAAOA,MAAKC,gBAAgBwc,MAAO/X,QAOhFwc,qBAAqBhmC,UAAUmkB,mBAK/B,SAAU+T,WAAY1O,KAClB,IAAK,GAAqBrf,GAAI,EAAGA,EAAI+tB,WAAW52B,OAAQ6I,IAAK,CACzD,GAAqBsa,MAAOyT,WAAW/tB,GAClB5G,IAAMkhB,KAAKG,eAAevlB,KAAMmqB,IACrD,IAAIjmB,cAAe27I,aACf,MAAO37I,KAGf,MAAO,OAEJyiC,wBAkBPq5G,kBAAoB,QACpBC,kBAAoB,QAgBpBE,yBAA4B,SAAU31I,QAEtC,QAAS21I,4BACL,MAAO31I,QAAOklC,KAAK1vC,MAAM,IAAUA,KAuRvC,MAzRAK,WAAU8/I,yBAA0B31I,QASpC21I,yBAAyBx/I,UAAUuoH,sBAKnC,SAAU9jG,KAAM+E,KACZ,GAAI+X,OAAQliC,IAWZ,OAVAmqB,KAAI+mG,UAAU9rG,MACdplB,KAAK8zH,uBAAuB1uG,KAAM+E,KACf,MAAf/E,KAAKgjB,SACLje,IAAIumG,MAAMtrG,KAAMA,KAAKxmB,KAAO,+BAC5BwmB,KAAKgjB,OAAO1iB,gBAAgB1lB,KAAMmqB,KAClCA,IAAIqmG,QAAQprG,KAAM,iBAEtBA,KAAKkiB,QAAQ1gC,QAAQ,SAAU2gC,QAAU,MAAOrF,OAAM6xF,kBAAkB3uG,KAAMmiB,OAAQpd,OACtF/E,KAAKqiB,QAAQ7gC,QAAQ,SAAU8gC,QAAU,MAAOxF,OAAM8xF,kBAAkB5uG,KAAMsiB,OAAQvd,OACtFA,IAAIinG,WACG,MAOX+uB,yBAAyBx/I,UAAUmzH,uBAKnC,SAAU1uG,KAAM+E,KACZA,IAAIumG,MAAMtrG,KAAM,YAAcA,KAAKxmB,KAAO,KACZ,MAA1BwmB,KAAK2iB,mBACL/nC,KAAKi0H,aAAa7uG,KAAK2iB,kBAAkBhhB,OAAQoD,KAErDA,IAAIqmG,QAAQprG,KAAM,OAClB+E,IAAI6mG,YAC0B,MAA1B5rG,KAAK2iB,mBACD3iB,KAAK2iB,kBAAkB/gB,KAAK/kB,OAAS,IACrCkoB,IAAIqmG,QAAQprG,KAAM,oBAClBplB,KAAK8kB,mBAAmBM,KAAK2iB,kBAAkB/gB,KAAMmD,MAG7DA,IAAI8mG,YACJ9mG,IAAIqmG,QAAQprG,KAAM,MAQtB+6H,yBAAyBx/I,UAAUozH,kBAMnC,SAAU3uG,KAAMmiB,OAAQpd,KACpBA,IAAIqmG,QAAQprG,KAAM,yBAA2BA,KAAKxmB,KAAO,gBAAkB2oC,OAAO3oC,KAAO,0BACzFurB,IAAI6mG,YACAzpF,OAAOvgB,KAAK/kB,OAAS,IACrBkoB,IAAIqmG,QAAQprG,KAAM,oBAClBplB,KAAK8kB,mBAAmByiB,OAAOvgB,KAAMmD,MAEzCA,IAAI8mG,YACJ9mG,IAAIqmG,QAAQprG,KAAM,SAQtB+6H,yBAAyBx/I,UAAUqzH,kBAMnC,SAAU5uG,KAAMsiB,OAAQvd,KACpBA,IAAIumG,MAAMtrG,KAAMA,KAAKxmB,KAAO,cAAgB8oC,OAAO9oC,KAAO,gBAC1DoB,KAAKi0H,aAAavsF,OAAO3gB,OAAQoD,KACjCA,IAAIqmG,QAAQprG,KAAM,OAClB+E,IAAI6mG,YACAtpF,OAAO1gB,KAAK/kB,OAAS,IACrBkoB,IAAIqmG,QAAQprG,KAAM,oBAClBplB,KAAK8kB,mBAAmB4iB,OAAO1gB,KAAMmD,MAEzCA,IAAI8mG,YACJ9mG,IAAIqmG,QAAQprG,KAAM,OAOtB+6H,yBAAyBx/I,UAAU6lH,iBAKnC,SAAU7/G,IAAKwjB,KACX,GAAIxjB,IAAI4/G,UAAYL,WAAWC,KAC3Bh8F,IAAIumG,MAAM/pH,IAAK,YAEd,CAAA,GAAIA,IAAI4/G,UAAYL,WAAWE,MAChC,KAAM,IAAI3hH,OAAM,+EAGhB+F,QAAO7J,UAAU6lH,iBAAiB92E,KAAK1vC,KAAM2G,IAAKwjB,KAEtD,MAAO,OAOXg2H,yBAAyBx/I,UAAU8nH,oBAKnC,SAAUrjG,KAAM+E,KAIZ,MAHAA,KAAIumG,MAAMtrG,KAAM,OAASA,KAAKxmB,KAAO,OACrCwmB,KAAK7hB,MAAMmiB,gBAAgB1lB,KAAMmqB,KACjCA,IAAIqmG,QAAQprG,KAAM,KACX,MAOX+6H,yBAAyBx/I,UAAUknH,cAKnC,SAAUlhH,IAAKwjB,KAEX,MADAxjB,KAAIpD,MAAMmiB,gBAAgB1lB,KAAMmqB,KACzB,MAOXg2H,yBAAyBx/I,UAAUymH,wBAKnC,SAAU3hG,KAAM0E,KACZ,GAAqB+1H,QAASz6H,KAAKqB,EAanC,OAZIo5H,kBAAkBt6H,cAAes6H,OAAO35B,UAAYL,WAAWE,OACzBj8F,IAAiB,aAAS,OAAEzE,gBAAgB1lB,KAAMmqB,KACxFA,IAAIumG,MAAMjrG,KAAM,cACZA,KAAK3jB,KAAKG,OAAS,IACnBkoB,IAAIumG,MAAMjrG,KAAM,MAChBzlB,KAAKgqH,oBAAoBvkG,KAAK3jB,KAAMqoB,IAAK,MAE7CA,IAAIumG,MAAMjrG,KAAM,MAGhBjb,OAAO7J,UAAUymH,wBAAwB13E,KAAK1vC,KAAMylB,KAAM0E,KAEvD,MAOXg2H,yBAAyBx/I,UAAUmnH,kBAKnC,SAAUnhH,IAAKwjB,KAQX,MAPAA,KAAIumG,MAAM/pH,IAAK,aACf3G,KAAKi0H,aAAattH,IAAIogB,OAAQoD,KAC9BA,IAAIqmG,QAAQ7pH,IAAK,OACjBwjB,IAAI6mG,YACJhxH,KAAK8kB,mBAAmBne,IAAIkyB,WAAY1O,KACxCA,IAAI8mG,YACJ9mG,IAAIumG,MAAM/pH,IAAK,KACR,MAOXw5I,yBAAyBx/I,UAAU+nH,yBAKnC,SAAUtjG,KAAM+E,KAQZ,MAPAA,KAAIumG,MAAMtrG,KAAM,YAAcA,KAAKxmB,KAAO,KAC1CoB,KAAKi0H,aAAa7uG,KAAK2B,OAAQoD,KAC/BA,IAAIqmG,QAAQprG,KAAM,OAClB+E,IAAI6mG,YACJhxH,KAAK8kB,mBAAmBM,KAAKyT,WAAY1O,KACzCA,IAAI8mG,YACJ9mG,IAAIqmG,QAAQprG,KAAM,KACX,MAOX+6H,yBAAyBx/I,UAAU+oH,kBAKnC,SAAUtkG,KAAM+E,KACZA,IAAIqmG,QAAQprG,KAAM,SAClB+E,IAAI6mG,YACJhxH,KAAK8kB,mBAAmBM,KAAKokG,UAAWr/F,KACxCA,IAAI8mG,YACJ9mG,IAAIqmG,QAAQprG,KAAM,YAAc0qG,kBAAkBlxH,KAAO,OACzDurB,IAAI6mG,WACJ,IAAqBvH,aAAgCsG,kBAAkBxvG,IAAIuvG,kBAAkB7gG,KAAK,UAAU2I,WAAW,MAC/GC,aAAaC,SACZnvB,OAAOyc,KAAKqkG,WAIrB,OAHAzpH,MAAK8kB,mBAAmB2kG,WAAYt/F,KACpCA,IAAI8mG,YACJ9mG,IAAIqmG,QAAQprG,KAAM,KACX,MAOX+6H,yBAAyBx/I,UAAUszH,aAKnC,SAAUltG,OAAQoD,KACdnqB,KAAKwyH,gBAAgB,SAAU5qF,OAAS,MAAOzd,KAAIumG,MAAM,KAAM9oF,MAAMhpC,OAAUmoB,OAAQoD,IAAK,MAMhGg2H,yBAAyBx/I,UAAU2xH,qBAInC,SAAU5qF,QACN,GAAqB9oC,KACrB,QAAQ8oC,QACJ,IAAKq/E,eAAcC,YACfpoH,KAAO,QACP,MACJ,KAAKmoH,eAAcE,oBACfroH,KAAO,WACP,MACJ,KAAKmoH,eAAcG,KACftoH,KAAO,MACP,MACJ,SACI,KAAM,IAAI6F,OAAM,2BAA6BijC,QAErD,MAAO9oC,OAEJuhJ,0BACTjuB,wBAsDE7oF,kBAAqB,SAAU7+B,QAE/B,QAAS6+B,mBAAkBhnB,WACvB,GAAI6f,OAAQ13B,OAAOklC,KAAK1vC,OAASA,IAKjC,OAJAkiC,OAAM7f,UAAYA,UAClB6f,MAAMk+G,iBACNl+G,MAAMm+G,kBACNn+G,MAAMo+G,qBACCp+G,MAiGX,MAxGA7hC,WAAUgpC,kBAAmB7+B,QAa7B6+B,kBAAkB1oC,UAAU2oC,iBAI5B,SAAUnf,KACsB,GAAI2B,iBAAgB,GAAIvF,gBAAevmB,KAAKsgJ,kBAAkBrgJ,IAAI,SAAUsgJ,WAAa,MAAO,IAAI/5H,iBAAgB+5H,UAAW56H,SAAS46H,YAAY,OAC3Kh7H,eAAevlB,KAAMmqB,MAK9Bkf,kBAAkB1oC,UAAU4oC,QAG5B,WAEI,IAAK,GADgB5pC,WACKmL,EAAI,EAAGA,EAAI9K,KAAKogJ,cAAcn+I,OAAQ6I,IAC5DnL,OAAOK,KAAKogJ,cAAct1I,IAAM9K,KAAKqgJ,eAAev1I,EAExD,OAAOnL,SAOX0pC,kBAAkB1oC,UAAU6mH,kBAK5B,SAAU7gH,IAAKwjB,KACX,GAAqB5mB,OAAQvD,KAAKqiB,UAAUC,yBAAyB3b,IAAIpD,OACpD8F,GAAKrJ,KAAKqgJ,eAAel9I,QAAQI,MACtD,KAAY,IAAR8F,GAAW,CACXA,GAAKrJ,KAAKqgJ,eAAep+I,OACzBjC,KAAKqgJ,eAAev5I,KAAKvD,MACzB,IAAqB46D,QAASh3D,gBAAiBE,UAAW9D,SAAY,KACtEvD,MAAKogJ,cAAct5I,KAAK,OAASq3D,OAAS,IAAM90D,IAGpD,MADA8gB,KAAIumG,MAAM/pH,IAAK3G,KAAKogJ,cAAc/2I,KAC3B,MAOXggC,kBAAkB1oC,UAAU8nH,oBAK5B,SAAUrjG,KAAM+E,KAIZ,MAHI/E,MAAKu9F,YAAY9qF,aAAaoH,WAC9Bj/B,KAAKsgJ,kBAAkBx5I,KAAKse,KAAKxmB,MAE9B4L,OAAO7J,UAAU8nH,oBAAoB/4E,KAAK1vC,KAAMolB,KAAM+E,MAOjEkf,kBAAkB1oC,UAAU+nH,yBAK5B,SAAUtjG,KAAM+E,KAIZ,MAHI/E,MAAKu9F,YAAY9qF,aAAaoH,WAC9Bj/B,KAAKsgJ,kBAAkBx5I,KAAKse,KAAKxmB,MAE9B4L,OAAO7J,UAAU+nH,yBAAyBh5E,KAAK1vC,KAAMolB,KAAM+E,MAOtEkf,kBAAkB1oC,UAAUuoH,sBAK5B,SAAU9jG,KAAM+E,KAIZ,MAHI/E,MAAKu9F,YAAY9qF,aAAaoH,WAC9Bj/B,KAAKsgJ,kBAAkBx5I,KAAKse,KAAKxmB,MAE9B4L,OAAO7J,UAAUuoH,sBAAsBx5E,KAAK1vC,KAAMolB,KAAM+E,MAE5Dkf,mBACT82G,0BA0BEK,YAAe,WACf,QAASA,aAAY5P,kBAAmBC,gBAAiBC,eAAgBC,cAAeE,kBAAmBt2B,iBAAkBxtB,WAAYszD,gBAAiBlrC,SAAUmrC,2BAChK1gJ,KAAK4wI,kBAAoBA,kBACzB5wI,KAAK6wI,gBAAkBA,gBACvB7wI,KAAK8wI,eAAiBA,eACtB9wI,KAAK+wI,cAAgBA,cACrB/wI,KAAKixI,kBAAoBA,kBACzBjxI,KAAK26G,iBAAmBA,iBACxB36G,KAAKmtF,WAAaA,WAClBntF,KAAKygJ,gBAAkBA,gBACvBzgJ,KAAKu1G,SAAWA,SAChBv1G,KAAK0gJ,0BAA4BA,0BACjC1gJ,KAAK2gJ,uBAAyB,GAAIp4H,KAClCvoB,KAAK4gJ,2BAA6B,GAAIr4H,KACtCvoB,KAAK6gJ,+BAAiC,GAAIt4H,KAC1CvoB,KAAK8gJ,uBAAyB,GAAIv4H,KAClCvoB,KAAK+gJ,uBAAyB,EA4ZlC,MAtZAP,aAAY7/I,UAAUqgJ,kBAItB,SAAUpzF,YACN,MAAO+mB,WAAUC,WAAW50E,KAAKihJ,4BAA4BrzF,YAAY,KAM7E4yF,YAAY7/I,UAAUugJ,mBAItB,SAAUtzF,YACN,MAAOmnB,SAAQ9oE,QAAQjM,KAAKihJ,4BAA4BrzF,YAAY,KAMxE4yF,YAAY7/I,UAAUwgJ,kCAItB,SAAUvzF,YACN,MAAO+mB,WAAUC,WAAW50E,KAAKohJ,+BAA+BxzF,YAAY,KAMhF4yF,YAAY7/I,UAAU0gJ,mCAItB,SAAUzzF,YACN,MAAOmnB,SAAQ9oE,QAAQjM,KAAKohJ,+BAA+BxzF,YAAY,KAM3E4yF,YAAY7/I,UAAUw7G,oBAItB,SAAU9yF,WAEN,MAD+BrpB,MAAK4wI,kBAAkBhzB,oBAAoBv0F,WACzB,kBAMrDm3H,YAAY7/I,UAAU2gJ,iBAItB,SAAU13G,WACN,GAAI1H,OAAQliC,IACZA,MAAKirF,aACLxhD,iBAAiBG,WAAWhjC,QAAQ,SAAUm3B,SAC1CmE,MAAMy4E,iBAAiB/8E,YAAaC,OAAQE,QAAQ33B,KAAKiB,UAAWy2B,SAAU,KAAM13B,KAAM23B,aAOlGyiH,YAAY7/I,UAAU4gJ,cAItB,SAAUj6I,KAAO,QAAStH,KAAK26G,iBAAiB4B,eAAej1G,MAK/Dk5I,YAAY7/I,UAAU6gJ,sBAItB,SAAUC,KACN,GAAIv/G,OAAQliC,IACZ,OAAOyhJ,KAAIxhJ,IAAI,SAAUy/G,KAAO,MAAOA,KAAIr4G,YAAcub,OAAO,SAAUtb,KAAO,OAAQ46B,MAAMq/G,cAAcj6I,QAOjHk5I,YAAY7/I,UAAUsgJ,4BAKtB,SAAUrzF,WAAYgvD,QAClB,GAAI16E,OAAQliC,IACZ,OAAO20E,WAAUpuE,KAAKvG,KAAK0hJ,aAAa9zF,WAAYgvD,QAAS,WAEzD,MADA16E,OAAMy/G,mBAAmB/zF,WAAY,MAC9B1rB,MAAMwxG,eAAe9lF,eAQpC4yF,YAAY7/I,UAAUygJ,+BAKtB,SAAUxzF,WAAYgvD,QAClB,GAAI16E,OAAQliC,IACZ,OAAO20E,WAAUpuE,KAAKvG,KAAK0hJ,aAAa9zF,WAAYgvD,QAAS,WACzD,GAAqBglC,sBAErB,OADA1/G,OAAMy/G,mBAAmB/zF,WAAYg0F,qBAEjCC,gBAAiB3/G,MAAMwxG,eAAe9lF,YACtCg0F,mBAAoBA,uBAShCpB,YAAY7/I,UAAU+gJ,aAKtB,SAAUI,WAAYllC,QAClB,GAAI16E,OAAQliC,KACSk+G,WACA6jC,aAAkC/hJ,KAAK4wI,kBAAkB7uG,oBAAoB+/G,WAelG,OAZA9hJ,MAAKwhJ,sBAAsBO,aAAa9gH,iBAAiBjiC,SAAS4H,QAAQ,SAAUo7I,gBAEhF,GAAqBv4I,YAAgCy4B,MAAM0uG,kBAAkB7uG,oBAAoBigH,eACjG9/G,OAAMs/G,sBAAsB/3I,WAAWg5B,oBAAoB77B,QAAQ,SAAUU,KACzE,GAAqB62G,SAAUj8E,MAAM0uG,kBAAkBj0B,sBAAsBlzG,WAAWrD,KAAKiB,UAAWC,IAAKs1G,OACzGuB,UACAD,QAAQp3G,KAAKq3G,WAGrBj8E,MAAMs/G,sBAAsB/3I,WAAWi5B,eAClC97B,QAAQ,SAAUU,KAAO,MAAO46B,OAAM0uG,kBAAkBlwB,sBAAsBp5G,SAEhFqtE,UAAUE,IAAIqpC,UAMzBsiC,YAAY7/I,UAAU+yI,eAItB,SAAU9lF,YACN,GAAqBi0F,iBAAqC7hJ,KAAK8gJ,uBAAuBxgI,IAAIstC,WAC1F,KAAKi0F,gBAAiB,CAClB,GAAqBp4I,YAAgCzJ,KAAK4wI,kBAAkB7uG,oBAAoB6rB,YAE3E2/D,eAAiBvtH,KAAK0gJ,0BAA0Bj3I,WAAWrD,KAAKiB,WAChEw3B,UAAYgL,sBACZxK,cAAgBr/B,KAAKixI,kBAAkBljB,QAAQlvF,UAAWp1B,WAAY8jH,eAC3Fs0B,iBAAkB7hJ,KAAKiiJ,gBAAgBz4I,eAAeC,YAAao1B,UAAUhG,YAAYwG,cAAcwuF,oBACvG7tH,KAAK8gJ,uBAAuBvgI,IAAI9W,WAAWrD,KAAKiB,UAAWw6I,iBAE/D,MAAOA,kBAWXrB,YAAY7/I,UAAUghJ,mBAMtB,SAAUG,WAAYI,uBAClB,GAAIhgH,OAAQliC,KACSghC,SAA8BhhC,KAAK4wI,kBAAkB7uG,oBAAoB+/G,YACzEK,qBAAuB,GAAI55H,KAC3B+5C,UAAY,GAAI1+C,KAChBw+H,gBAAkBpiJ,KAAKwhJ,sBAAsBxgH,SAASC,iBAAiBjiC,QAC5FojJ,iBAAgBx7I,QAAQ,SAAUy7I,UAC9B,GAAqBC,iBAAqCpgH,MAAM0uG,kBAAkB7uG,oBAAoBsgH,SACtGngH,OAAMs/G,sBAAsBc,gBAAgB7/G,oBAAoB77B,QAAQ,SAAU27I,QAC9EJ,qBAAqB5hI,IAAIgiI,OAAQD,gBACjC,IAAqB/mC,SAAUr5E,MAAM0uG,kBAAkBjzB,qBAAqB4kC,OAC5E,IAAIhnC,QAAQ7yF,cACR45C,UAAUvmC,IAAImG,MAAMsgH,wBAAwBjnC,QAAS+mC,kBACjDJ,uBAAuB,CACvB,GAAqBj2F,UAAW/pB,MAAMugH,4BAA4BlnC,QAAQn1G,KAAKiB,UAAWi7I,gBAC1FhgF,WAAUvmC,IAAIkwB,UACdi2F,sBAAsBp7I,KAAuBy0G,QAAwB,uBAKrF6mC,gBAAgBx7I,QAAQ,SAAUy7I,UAC9B,GAAqBC,iBAAqCpgH,MAAM0uG,kBAAkB7uG,oBAAoBsgH,SACtGngH,OAAMs/G,sBAAsBc,gBAAgB7/G,oBAAoB77B,QAAQ,SAAU27I,QAC9E,GAAqBhnC,SAAUr5E,MAAM0uG,kBAAkBjzB,qBAAqB4kC,OACxEhnC,SAAQ7yF,aACR6yF,QAAQ/uF,gBAAgB5lB,QAAQ,SAAU87I,oBACtC,GAAqBj5I,YAAgC04I,qBAAqB7hI,IAAIoiI,mBAAmBnoE,cACjGjY,WAAUvmC,IAAImG,MAAMugH,4BAA4BC,mBAAmBnoE,cAAe9wE,iBAI9F64I,gBAAgB91H,gBAAgB5lB,QAAQ,SAAU87I,oBAC9C,IAAKxgH,MAAMq/G,cAAcmB,mBAAmBnoE,cAAclzE,WAAY,CAClE,GAAqBoC,YAAgC04I,qBAAqB7hI,IAAIoiI,mBAAmBnoE,cACjGjY,WAAUvmC,IAAImG,MAAMugH,4BAA4BC,mBAAmBnoE,cAAe9wE,kBAI9F64D,UAAU17D,QAAQ,SAAUqlD,UAAY,MAAO/pB,OAAMygH,iBAAiB12F,aAM1Eu0F,YAAY7/I,UAAUuqF,cAItB,SAAU9kF,MACNpG,KAAK8gJ,uBAAuB9kH,OAAO51B,MACnCpG,KAAK4wI,kBAAkB1lD,cAAc9kF,MACrCpG,KAAK4gJ,2BAA2B5kH,OAAO51B,MACCpG,KAAK2gJ,uBAAuBrgI,IAAIla,OAEpEpG,KAAK2gJ,uBAAuB3kH,OAAO51B,OAM3Co6I,YAAY7/I,UAAUsqF,WAGtB,WACIjrF,KAAK4wI,kBAAkB3lD,aACvBjrF,KAAK2gJ,uBAAuB1nF,QAC5Bj5D,KAAK4gJ,2BAA2B3nF,QAChCj5D,KAAK8gJ,uBAAuB7nF,SAOhCunF,YAAY7/I,UAAU8hJ,4BAKtB,SAAU56I,SAAUm5B,UAChB,IAAKA,SACD,KAAM,IAAIv8B,OAAM,aAAekB,UAAUkC,UAAY,qFAEzD,IAAqB+6I,kBAAmB5iJ,KAAK4gJ,2BAA2BtgI,IAAIzY,SAC5E,KAAK+6I,iBAAkB,CACnB,GAAqB55I,UAAWhJ,KAAK4wI,kBAAkBjzB,qBAAqB91G,SAC5E2hC,iBAAgBxgC,SAChB,IAAqBurI,UAAWv0I,KAAK4wI,kBAAkBp0B,yBAAyBxzG,SAA6BA,SAA0B,iBAAE65I,eACzID,kBACI,GAAIE,mBAAiB,EAAM95I,SAAS5C,KAAMmuI,SAAUvzG,UAAWh4B,SAAS5C,OAC5EpG,KAAK4gJ,2BAA2BrgI,IAAI1Y,SAAU+6I,kBAElD,MAAOA,mBAOXpC,YAAY7/I,UAAU6hJ,wBAKtB,SAAUx5I,SAAUg4B,UAChB,GAAqB4hH,kBAAmB5iJ,KAAK2gJ,uBAAuBrgI,IAAItX,SAAS5C,KAAKiB,UAMtF,OALKu7I,oBACDp5G,gBAAgBxgC,UAChB45I,iBAAmB,GAAIE,mBAAiB,EAAO95I,SAAS5C,KAAM4C,SAAUg4B,SAAUA,SAASC,iBAAiB7Y,YAC5GpoB,KAAK2gJ,uBAAuBpgI,IAAIvX,SAAS5C,KAAKiB,UAAWu7I,mBAEtDA,kBAMXpC,YAAY7/I,UAAUgiJ,iBAItB,SAAU12F,UACN,GAAI/pB,OAAQliC,IACZ,KAAIisD,SAAS82F,WAAb,CAGA,GAAqB/5I,UAAWijD,SAASjjD,SACpBg6I,+BAAiC,GAAIz6H,KACrC06H,cAAgBp5G,sBAChB8pG,oBAAsB3zI,KAAK8wI,eAAehW,iBAAiBmoB,cAAej6I,SAC7FA,UAAkB,SAAEmvE,oBAAoBvxE,QAAQ,SAAUgtI,gBACxD,GAAqBgC,oBAAqB1zG,MAAM4uG,eAAe7V,cAAcpxF,sBAAuB7gC,SAAU4qI,eAC9GoP,gCAA+BziI,IAAuBqzH,eAAyB,UAAGgC,sBAEtF51I,KAAKkjJ,4BAA4BvP,oBAAqBqP,+BACtD,IACI7pI,KADyB8yC,SAASjrB,SAASC,iBAAiBE,MAAMlhC,IAAI,SAAU4yD,MAAQ,MAAO3wB,OAAM0uG,kBAAkBpwB,eAAe3tD,KAAKxrD,aACtIrH,KAAKizI,eAAejqI,SAAUijD,SAASjrB,SAAUirB,SAAS7jC,aAAa8qH,eAAiB/5H,GAAG8yC,SAAUizE,UAAY/lH,GAAGgoB,MACxG9B,cAAgBr/B,KAAK+wI,cAAcjW,iBAAiBmoB,cAAej6I,SAAUkqI,eAAgBvtH,SAASguH,oBAAoBhZ,WAAYuE,WACtIikB,WAAanjJ,KAAKiiJ,gBAAgBv4I,eAAeuiD,SAASjrB,SAAS56B,KAAM6lD,SAASjjD,UAAWi6I,cAAcpqH,YAC3GuqH,UAAYD,WAAW9jH,cAAcypG,cACrCl1E,aAAeuvF,WAAW9jH,cAAc0pG,gBAC7D98E,UAASo3F,SAASD,UAAWxvF,gBAQjC4sF,YAAY7/I,UAAUsyI,eAMtB,SAAUjqI,SAAUg4B,SAAU4zG,sBAC1B,GAAI1yG,OAAQliC,KAESilC,oBAAyCj8B,SAAkB,SAAEi8B,oBAC7D7c,WAAawsH,qBAAqB30I,IAAI,SAAU2oB,KAAO,MAAOsZ,OAAM0uG,kBAAkBhzB,oBAAoBh1F,IAAIvhB,aAC9G85B,MAAQH,SAASC,iBAAiBE,MAAMlhC,IAAI,SAAU4yD,MAAQ,MAAO3wB,OAAM0uG,kBAAkBpwB,eAAe3tD,KAAKxrD;+DACtI,OAAOrH,MAAK6wI,gBAAgBz9G,MAAMpqB,SAAgDA,SAAkB,SAAU,QAAGof,WAAY+Y,MAAOH,SAASu4C,QAASzwE,kBAAkBk4B,SAAS56B,KAAM4C,SAA6BA,SAAkB,UAAIi8B,sBAO9Ou7G,YAAY7/I,UAAUuiJ,4BAKtB,SAAUvjJ,OAAQqjJ,gCACd,GAAI9gH,OAAQliC,IACZL,QAAO6/B,aAAa54B,QAAQ,SAAUqkB,IAAKngB,GACvC,GAAqBw4I,qBAAyCN,+BAA+B1iI,IAAI2K,IAAI1V,WAChFguI,gBAAkBrhH,MAAMshH,mCAAmCF,oBAAqBN,+BACrG/3H,KAAIwU,SAAS8jH,oBAQrB/C,YAAY7/I,UAAU6iJ,mCAKtB,SAAU7jJ,OAAQqjJ,gCAEd,MADAhjJ,MAAKkjJ,4BAA4BvjJ,OAAQqjJ,gCAClChjJ,KAAKiiJ,gBAAgB94I,uBAAuBxJ,OAAOyJ,KAAMpJ,KAAK+gJ,0BAA2BphJ,OAAOk/B,UAAUhG,YAAYl5B,OAAOg7H,YAOxI6lB,YAAY7/I,UAAUshJ,gBAKtB,SAAU15G,aAAc1P,YACpB,MAAK74B,MAAKygJ,gBAAgBz7G,OAIfmE,cAAcZ,aAAc1P,WAAY74B,KAAKmtF,WAAYntF,KAAKygJ,gBAAgBlqE,YAH9E9vC,oBAAoB5N,WAAY74B,KAAKmtF,aAM7CqzD,eAEPsC,iBAAoB,WACpB,QAASA,kBAAiBpqE,OAAQ7wE,SAAUmB,SAAUg4B,SAAU5Y,YAC5DpoB,KAAK04E,OAASA,OACd14E,KAAK6H,SAAWA,SAChB7H,KAAKgJ,SAAWA,SAChBhJ,KAAKghC,SAAWA,SAChBhhC,KAAKooB,WAAaA,WAClBpoB,KAAKyjJ,WAA8B,KACnCzjJ,KAAK+iJ,YAAa,EAoBtB,MAbAD,kBAAiBniJ,UAAU0iJ,SAK3B,SAAUD,UAAWxvF,cACjB5zD,KAAKyjJ,WAAaL,UACCpjJ,KAAKgJ,SAA2B,kBAAE2yG,YAAYynC,UACjE,KAAK,GAAqBn0H,QAAQ2kC,cACX5zD,KAAKgJ,SAAsB,aAAEimB,MAAQ2kC,aAAa3kC,KAEzEjvB,MAAK+iJ,YAAa,GAEfD,oBAsDPY,iBAAoB,WACpB,QAASA,qBAET,MAAOA,qBAwBPx5G,YAAe,WACf,QAASy5G,iBAAgBC,oBACE,KAAnBA,iBAA6BA,eAAiB,MAClD5jJ,KAAK4jJ,eAAiBA,eAgD1B,MA3BAD,iBAAgBhjJ,UAAUsL,QAW1B,SAAUN,QAAS9C,KACf,GAAqBg7I,aAAch7I,GACpB,OAAX8C,SAAmBA,QAAQ1J,OAAS,IACpC4hJ,YAAc53G,YAAYtgC,QAASk4I,aAEvC,IAAqBC,eAAgBz5G,OAAOw5G,aACvBh3I,OAAS7M,KAAK4jJ,cACnC,IAAc,MAAV/2I,QAAmC,MAAjBi3I,eACuB,WAAzCA,cAAcx5G,gBAAgBC,QAAsB,CACpD,GAAqBhgC,SAAUu5I,cAAcx5G,gBAAgBqB,KAG7D,OAFA9+B,QAASA,OAAOpK,QAAQ,OAAQ,IAChC8H,QAAUA,QAAQ9H,QAAQ,OAAQ,IAC3BoK,OAAS,IAAMtC,QAE1B,MAAOs5I,cAEJF,mBAmHP14G,SAAW,GAAI71B,QAAO,4HActBk1B,iBACAC,OAAQ,EACRqB,SAAU,EACVC,OAAQ,EACRC,KAAM,EACNH,KAAM,EACNI,UAAW,EACXC,SAAU,EAEd1B,iBAAgBA,gBAAgBC,QAAU,SAC1CD,gBAAgBA,gBAAgBsB,UAAY,WAC5CtB,gBAAgBA,gBAAgBuB,QAAU,SAC1CvB,gBAAgBA,gBAAgBwB,MAAQ,OACxCxB,gBAAgBA,gBAAgBqB,MAAQ,OACxCrB,gBAAgBA,gBAAgByB,WAAa,YAC7CzB,gBAAgBA,gBAAgB0B,UAAY,UAiH5C,IAAI+3G,gBAAkB,WAClB,QAASA,mBAWT,MALAA,gBAAepjJ,UAAU2f,IAIzB,SAAUzX,KAAO,MAAO,IACjBk7I,kBAuBPC,UAAa,WACb,QAASA,WAAUhkH,KAAMC,qBAAsBmzG,cAAelzG,kBAC1DlgC,KAAKggC,KAAOA,KACZhgC,KAAKigC,qBAAuBA,qBAC5BjgC,KAAKozI,cAAgBA,cACrBpzI,KAAKkgC,iBAAmBA,iBAiE5B,MA3DA8jH,WAAUrjJ,UAAUod,QAIpB,SAAUwzH,WACN,GAAIrvG,OAAQliC,KACRmZ,GAAKknB,4BAA4BkxG,UAAWvxI,KAAKggC,KAAMhgC,KAAKigC,qBAAsBjgC,KAAKkgC,kBAAmBQ,MAAQvnB,GAAGunB,MAAOK,UAAY5nB,GAAG4nB,SAC/I,OAAOg0C,SACFF,IAAI9zC,UAAU9gC,IAAI,SAAU+gC,UAC7B,MAAOkB,OAAMhC,iBAAiB+9E,qCAAqCj9E,SAAS56B,KAAKiB,WAAW,MAE3Fd,KAAK,WACN,GAAqBqrB,UAerB,IAdA8O,MAAM95B,QAAQ,SAAUg2B,MACpB,GAAqBy2G,aACrBz2G,MAAKxU,WAAWxhB,QAAQ,SAAU8mF,eAC9B,GAAqB6tB,SAAUr5E,MAAMhC,iBAAiBy9E,qBAAqBjwB,cACvE6tB,UAAWA,QAAQ7yF,aACnB2qH,UAAUvsI,KAAKy0G,WAGvB83B,UAAUzsI,QAAQ,SAAUoC,UACxB,GAAqBmsG,MAA6CnsG,SAAkB,SAAW,SAC1EiN,oBAAsB6kE,oBAAoBC,UAA6B/xE,SAAkB,SAAEsvE,cAChH1mD,QAAO9qB,KAAK/G,MAAM6xB,OAA2BsQ,MAAMkxG,cAAcrF,mBAAmB54B,KAAMv4E,KAAKlb,SAAUzL,0BAG7G2b,OAAO3vB,OACP,KAAM,IAAIwC,OAAMmtB,OAAO3xB,IAAI,SAAUoZ,GAAK,MAAOA,GAAErT,aAAeH,KAAK,MAE3E,OAAOq8B,OAAMkxG,iBAQrB4Q,UAAUpjJ,OAKV,SAAUo/B,KAAMwhB,QACZ,GAAqBld,YAAa,GAAIE,YACjBR,YAAcN,qBAAqB1D,MACnCxB,YAAc,GAAIyF,mBAClB5G,gBAAkB,GAAI6G,oBAAmBlE,KAAMxB,aAC/CyB,qBAAuB,GAAIkE,sBAAqBnE,KAAMxB,YAAanB,iBACnE+G,gBAAkB,GAAIC,iBAAgBhH,gBAAiB4C,sBACvD/qB,OAAS,GAAI0vB,iBAAiBC,qBAAsBC,kBAAkBC,SAAUC,QAAQ,IACxFG,WAAa,GAAIC,sBAAsB9kB,IAAK,SAAUzX,KAAO,MAAOm3B,MAAKqF,aAAax8B,OAAWm7B,YAAaM,WAAYpvB,QAC1HuwB,sBAAwB,GAAIC,0BAC5Bh6B,SAAW,GAAIm6B,yBAAwB3wB,OAAQovB,WAAY,GAAIwB,kBAAiB1B,iBAAkB,GAAI2B,mBAAkB3B,iBAAkB,GAAI4B,cAAa5B,iBAAkB/G,gBAAiBoI,sBAAuBN,WAAYR,QAASnG,YAAa4F,iBAEvPgvG,cAAgB,GAAItF,eAAcxpG,iBAAoBkd,OAE3E,QAASyiG,UADwB,GAAID,WAAUhkH,KAAMC,qBAAsBmzG,cAAe1nI,UAC3D04B,gBAAiBA,kBAE7C4/G,aAOP39G,SAAWzmC,OAAO60E,QACrBD,KAAMA,KACN5vC,eAAgBA,eAChB79B,2BAA4BA,2BAC5B6lB,YAAaA,YACb4zH,YAAaA,YACbz6G,kBAAmBA,kBACnBC,aAAcA,aACdF,iBAAkBA,iBAClB5vB,6BAA8BA,6BAC9B4kE,oBAAqBA,oBACrBt0C,iBAAkBA,iBAClB3f,cAAeA,cACf48F,eAAgBA,eAChB4B,mBAAoBA,mBACpB0B,cAAeA,cACfb,WAAYA,WACZD,SAAUA,SACVgD,UAAWA,UACXX,UAAWA,UACXe,YAAaA,YACbnE,gBAAiBA,gBACjB6C,oBAAqBA,oBACrBnvF,eAAgBA,eAChBU,oBAAqBA,oBACrBvT,aAAcA,aACd0hG,kBAAmBA,kBACnBxgG,aAAcA,aACdkiG,OAAQA,OACRrE,gBAAiBA,gBACjBD,mBAAoBA,mBACpBD,iBAAkBA,iBAClBv+F,iBAAkBA,iBAClBc,YAAaA,YACbZ,eAAgBA,eAChBI,QAASA,QACT+9F,YAAaA,YACbD,aAAcA,aACd7+F,YAAaA,YACbkG,gBAAiBA,gBACjB69F,UAAWA,UACXJ,aAAcA,aACd5C,aAAcA,aACdE,cAAeA,cACfJ,aAAcA,aACd5uF,aAAcA,aACdvJ,UAAWA,UACXtJ,0BAA2BA,0BAC3BoJ,sBAAuBA,sBACvB8X,aAAcA,aACdrhC,eAAgBA,eAChBD,cAAeA,cACfP,YAAaA,YACb2wE,QAASA,QACTkvE,QAAS5uE,UACTC,QAASA,QACTC,aAAcA,aACdC,QAASA,QACTC,wBAAyBA,wBACzBC,cAAeA,cACfE,aAAcA,aACdC,YAAaA,YACbl8C,WAAYA,WACZF,oBAAqBA,oBACrBs8C,0BAA2BA,0BAC3BE,aAAcA,aACdnuD,YAAaA,YACbY,gBAAiBA,gBACjBkR,aAAcA,aACdI,oBAAqBA,oBACrBq8C,oBAAqBA,oBACrBtZ,4BAA6BA,4BAC7Bx2D,iBAAkBA,iBAClBqwE,8BAA+BA,8BAC/BE,8BAA+BA,8BAC/BC,yCAA0CA,yCAC1CG,wCAAyCA,wCACzCG,yBAA0BA,yBAC1BC,0CAA2CA,0CAC3CC,8BAA+BA,8BAC/BC,gCAAiCA,gCACjCE,kCAAmCA,kCACnCC,iCAAkCA,iCAClCC,8BAA+BA,8BAC/B1wE,eAAgBA,eAChBO,oBAAqBA,oBACrBE,cAAeA,cACfG,iBAAkBA,iBAClBC,kBAAmBA,kBACnBC,qBAAsBA,qBACtB6vE,mBAAoBA,mBACpB5vE,UAAWA,UACXC,eAAgBA,eAChB6vE,0BAA2BA,0BAC3BE,wBAAyBA,wBACzBO,yBAA0BA,yBAC1BQ,oBAAqBA,oBACrBC,wBAAyBA,wBACzBM,kCAAmCA,kCACnCgB,aAAcA,aACdxe,QAAS3zD,UACTO,UAAWA,UACXE,kBAAmBA,kBACnBK,uBAAwBA,uBACxBK,eAAgBA,eAChBE,eAAgBA,eAChBg6B,qBAAsBA,qBACtBG,kBAAmBA,kBACnByC,YAAaA,YACbxG,iBAAkBA,iBAClBO,4BAA6BA,4BAC7BS,YAAaA,YACbX,mBAAoBA,mBACpBsuG,cAAeA,cACf9xG,aAAcA,aACd0H,gBAAiBA,gBACjB98B,aAAcA,aACd08B,kBAAmBA,kBACnBw3G,qBAAsBA,qBACtBt3G,qBAAsBA,qBACtBX,mBAAoBA,mBACpBU,mBAAoBA,mBACpBt5B,QAASA,QACT80I,gBAAiBA,gBACjBC,mBAAoBA,mBACpB+D,iBAAkBA,iBAClBz5G,sCAAuCA,sCACvCE,gCAAiCA,gCACjCD,YAAaA,YACbE,aAAcA,aACd25G,eAAgBA,eAChB3vB,sBAAuBA,sBACvB4vB,UAAWA,UACXz/G,eAAgBA,eAChBupG,cAAeA,cACflgC,WAAYA,WACZ9sF,MAAOA,MACPD,OAAQA,OACRF,IAAKA,IACLC,IAAKA,IACLwkB,oBAAqBA,oBACrB2rD,YAAaA,YACbG,UAAWA,UACXC,IAAKA,IACLC,MAAOA,MACP37D,UAAWA,UACX87D,iBAAkBA,iBAClBC,MAAOA,MACPC,YAAaA,YACbC,aAAcA,aACdC,cAAeA,cACfC,iBAAkBA,iBAClBC,UAAWA,UACXC,WAAYA,WACZC,YAAaA,YACbC,iBAAkBA,iBAClBC,aAAcA,aACdC,WAAYA,WACZC,cAAeA,cACfE,OAAQA,OACRE,UAAWA,UACXC,cAAeA,cACfC,WAAYA,WACZC,eAAgBA,eAChBC,aAAcA,aACdn9D,cAAeA,cACfo9D,gBAAiBA,gBACjBz1B,eAAgBA,eAChB21B,oBAAqBA,oBACrBC,eAAgBA,eAChB7/E,iBAAkBA,iBAClB/C,UAAWA,UACXq1B,MAAOA,MACPt1B,MAAOA,MACP2/E,IAAKA,IACLx+E,aAAcA,aACda,QAASA,QACT8gF,mBAAoBA,mBACpBE,2BAA4BA,2BAC5B3tD,OAAQA,OACRkuD,UAAWA,UACXpvE,qBAAsBA,qBACtBwhB,wBAAyBA,wBACzBzQ,KAAMA,KACNslD,UAAWA,UACXC,cAAeA,cACf75E,UAAW0xB,YACXtoB,QAASA,QACTkU,QAASA,QACTzU,SAAUA,SACVgB,iBAAkBA,iBAClBN,SAAUA,SACVonB,gBAAiBA,gBACjB6tE,UAAWA,UACX96D,WAAYA,WACZu/D,kBAAmBA,kBACnB9mF,qBAAsBA,qBACtB4iD,eAAgBA,eAChB1zD,YAAaA,YACbG,cAAeA,cACfE,YAAaA,YACbC,aAAcA,aACdC,YAAaA,YACbE,eAAgBA,eAChBs1D,eAAgBA,eAChB5wC,aAAcA,aACdrD,2BAA4BA,2BAC5B8O,kBAAmBA,kBACnBnnB,cAAeA,cACfF,gBAAiBA,gBACjBC,gBAAiBA,gBACjB+iF,gBAAiBA,gBACjBG,WAAYA,WACZxjF,eAAgBA,eAChBqwB,yBAA0BA,yBAC1BvS,YAAaA,YACb+tC,gBAAiBA,gBACjBg4C,oBAAqBA,oBACrBG,gBAAiBA,gBACjBohB,wBAAyBA,wBACzBC,mBAAoBA,mBACpBn0F,cAAeA,cACfy4F,mBAAoBA,mBACpBC,oBAAqBA,oBACrBr5F,eAAgBA,eAChBvR,aAAcA,aACd4sC,yBAA0B1sC,2BAC1Bc,wBAAyBA,0BAGtB8uH,eAAmC,mBAAXC,QAAyBA,OAA2B,mBAAX9kJ,QAAyBA,OAAyB,mBAATw7D,MAAuBA,QAUjI66D,OAASvpF,qBAAqB,SAAU5sC,OAAQC,SAkBpD,QAAS4kJ,kBAAiB9gJ,OACtB,MAAOA,QAA8B,WAArBA,MAAMm+B,WAG1B,QAAS4iH,iBAAgB/gJ,OACrB,MAAOA,QAA8B,UAArBA,MAAMm+B,WAG1B,QAAS6iH,qBAAoBhhJ,OACzB,MAAOA,QAA8B,cAArBA,MAAMm+B,WAG1B,QAAS8iH,kBAAiBjhJ,OACtB,GAAIA,MACA,OAAQA,MAAMm+B,YACV,IAAK,cACL,IAAK,SACL,IAAK,WACD,OAAO,EAGnB,OAAO,EAGX,QAAS+iH,kBAAiBlhJ,OACtB,MAAOA,SAA+B,gBAArBA,MAAMm+B,YAAqD,WAArBn+B,MAAMm+B,YAGjE,QAASgjH,uBAAsBnhJ,OAC3B,MAAOA,QAA8B,gBAArBA,MAAMm+B,WAG1B,QAASijH,oBAAmBphJ,OACxB,MAAOA,QAA8B,aAArBA,MAAMm+B,WAG1B,QAASkjH,8BAA6BrhJ,OAClC,GAAIA,MACA,OAAQA,MAAMm+B,YACV,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,MACL,IAAK,MACL,IAAK,YACL,IAAK,SACL,IAAK,SACL,IAAK,KACD,OAAO,EAGnB,OAAO,EAGX,QAASmjH,oCAAmCthJ,OACxC,MAAOA,QAA8B,WAArBA,MAAMm+B,WAG1B,QAASojH,mCAAkCvhJ,OACvC,MAAOA,QAA8B,UAArBA,MAAMm+B,WAG1B,QAASqjH,kCAAiCxhJ,OACtC,MAAOA,SAA+B,SAArBA,MAAMm+B,YAA8C,QAArBn+B,MAAMm+B,YAG1D,QAASsjH,oCAAmCzhJ,OACxC,MAAOA,QAA8B,QAArBA,MAAMm+B,WAG1B,QAASujH,gCAA+B1hJ,OACpC,MAAOA,QAA8B,OAArBA,MAAMm+B,WAG1B,QAASwjH,qCAAoC3hJ,OACzC,MAAOA,QAASA,MAAM3E,OAAS2E,MAAM/D,QAAU2lJ,sCAAsC5hJ,OAGzF,QAAS6hJ,qCAAoC7hJ,OACzC,MAAOA,QAASA,MAAM/D,SAAW+D,MAAM3E,OAAS2E,MAAM8hJ,SAClDF,sCAAsC5hJ,OAG9C,QAAS+hJ,6CAA4C/hJ,OACjD,MAAOA,QAASA,MAAM/D,UAAY+D,MAAM3E,MAAQumJ,sCAAsC5hJ,OAG1F,QAASgiJ,kCAAiChiJ,OACtC,MAAOA,OAAM/D,QAAU+D,MAAM8hJ,SAAWF,sCAAsC5hJ,OAGlF,QAAS4hJ,uCAAsC5hJ,OAC3C,MAAOA,QAA8B,cAArBA,MAAMm+B,WAG1B,QAAS8jH,oCAAmCjiJ,OACxC,MAAOA,QAA8B,WAArBA,MAAMm+B,WAG1B,QAAS+jH,oCAAmCliJ,OACxC,MAAOA,QAA8B,WAArBA,MAAMm+B,WAG1B,QAASgkH,iBAAgBniJ,OACrB,MAAOA,QAA8B,UAArBA,MAAMm+B;;;;;;;AAjH1B9hC,OAAOugB,eAAe1gB,QAAS,cAAgB8D,OAAO,IAQtD9D,QAAQkmJ,iBAAmB,EAI3BlmJ,QAAQ4kJ,iBAAmBA,iBAI3B5kJ,QAAQ6kJ,gBAAkBA,gBAI1B7kJ,QAAQ8kJ,oBAAsBA,oBAY9B9kJ,QAAQ+kJ,iBAAmBA,iBAI3B/kJ,QAAQglJ,iBAAmBA,iBAI3BhlJ,QAAQilJ,sBAAwBA,sBAIhCjlJ,QAAQklJ,mBAAqBA,mBAkB7BllJ,QAAQmlJ,6BAA+BA,6BAIvCnlJ,QAAQolJ,mCAAqCA,mCAI7CplJ,QAAQqlJ,kCAAoCA,kCAI5CrlJ,QAAQslJ,iCAAmCA,iCAI3CtlJ,QAAQulJ,mCAAqCA,mCAI7CvlJ,QAAQwlJ,+BAAiCA,+BAIzCxlJ,QAAQylJ,oCAAsCA,oCAK9CzlJ,QAAQ2lJ,oCAAsCA,oCAI9C3lJ,QAAQ6lJ,4CAA8CA,4CAItD7lJ,QAAQ8lJ,iCAAmCA,iCAI3C9lJ,QAAQ0lJ,sCAAwCA,sCAIhD1lJ,QAAQ+lJ,mCAAqCA,mCAI7C/lJ,QAAQgmJ,mCAAqCA,mCAI7ChmJ,QAAQimJ,gBAAkBA,kBAItBE,UAAYx5G,qBAAqB,SAAU5sC,OAAQC,SAcvD,QAASomJ,gBAAeC,eAAgBpQ,YACpC,GAAIhhI,YAAaoxI,eAAepxI,UAChC,IAAIA,WAAWY,OAASs5D,YAAYrH,WAAWw+E,yBAA0B,CACrE,GAAIC,0BAA2BtxI,WAC3BypD,OAAS6nF,yBAAyBpnJ,IACtC,IAAIu/D,OAAO7oD,MAAQs5D,YAAYrH,WAAWh3D,WACtC,MAAO4tD,QAAO7tD,OAASolI,WAG/B,OAAO,EAEX,QAASuQ,UAASH,eAAgBI,OAC9B,GAAIxxI,YAAaoxI,eAAepxI,UAChC,IAAIA,WAAWY,OAASs5D,YAAYrH,WAAWh3D,WAAY,CAEvD,MADiBmE,YACCpE,OAAS41I,MAE/B,OAAO,EAOX,QAASC,gBAAe9mI,KAAMpgB,IAC1B,OAAQ2vE,YAAYnH,aAAapoD,KAAM,SAAUA,MAAQ,OAAQpgB,GAAGogB,QAExE,QAAS8jB,aAAY5/B,OACjB,MAAO3D,QAAO2D,SAAWA,MAG7B,QAASU,WAAU3B,KACf,WAAe6B,KAAR7B,IAEX,QAAS8jJ,qBAAoB/mI,MACzB,KAAOA,MAAQA,KAAK/J,MAAQs5D,YAAYrH,WAAW8+E,YAC/ChnI,KAAOA,KAAK+oB,MAEhB,OAAO/oB,MAGX,QAASinI,aAAYr1I,QAASoO,KAAM5b,QAASgS,YACzC,GAAI9V,YAASwE,EACb,IAAIkb,OACA5J,WAAaA,YAAc2wI,oBAAoB/mI,OAC/B,CACZ,GAAIlG,IAAKy1D,YAAY23E,8BAA8B9wI,WAAY4J,KAAK2nD,SAASvxD,YAC7E9V,SAAW+hC,WAAY,QAASzwB,QAASA,QAASqyB,KADgDnqB,GAAGmqB,KACvCrgC,UADyDkW,GAAGlW,WAUlI,MANKtD,UACDA,QAAW+hC,WAAY,QAASzwB,QAASA,UAEzCxN,UACA9D,OAAO8D,QAAUA,SAEd9D,OAmjBX,QAAS6mJ,sBAAqBnnI,MAC1B,MAAOA,MAAK/J,MAAQs5D,YAAYrH,WAAWk/E,mBAG/C,QAASC,cAAavkH,GAClB,MAAOA,IAAKoL;;;;;;;AArnBhB3tC,OAAOugB,eAAe1gB,QAAS,cAAgB8D,OAAO,GAItD,IAAIojJ,yBAA0B/3E,YAAYrH,WAAWq/E,eAAiBh4E,YAAYrH,WAAWs/E,uBA+B7FpnJ,SAAQ0jC,YAAcA,YA4BtB1jC,QAAQ6mJ,YAAcA,WAKtB,IAAIQ,WAAa,WACb,QAASA,WAAUvpH,QAASwpH,QAAShjH,QAASijH,kBAC1B,KAAZjjH,UAAsBA,YAC1B/jC,KAAKu9B,QAAUA,QACfv9B,KAAK+mJ,QAAUA,QACf/mJ,KAAK+jC,QAAUA,QACf/jC,KAAKgnJ,aAAeA,aAmiBxB,MAjiBAF,WAAUnmJ,UAAUsmJ,OAAS,SAAU5nI,MACnC,GAAIA,MAAQA,KAAK/J,MAAQs5D,YAAYrH,WAAWh3D,WAC5C,MAAO8O,MAAK/O,IAEhB,IAAI3Q,QAAS0f,MAAQrf,KAAKknJ,aAAa7nI,KACvC,OAAIs2G,QAAO+vB,gBAAgB/lJ,SAA6B,gBAAXA,QAClCA,OAGA2mJ,YAAY,gBAAiBjnI,MAAQ8nI,SAAW9nI,MAAQA,KAAK+nI,WAAc,eAmB1FN,UAAUnmJ,UAAU0mJ,WAAa,SAAUhoI,MACvC,MAAOrf,MAAKsnJ,iBAAiBjoI,KAAM,GAAIkJ,OAE3Cu+H,UAAUnmJ,UAAU2mJ,iBAAmB,SAAUjoI,KAAMkoI,SACnD,GAAIrlH,OAAQliC,IACZ,IAAIqf,KACA,OAAQA,KAAK/J,MACT,IAAKs5D,aAAYrH,WAAWigF,wBACxB,MAAOrB,gBAAe9mI,KAAM,SAAUwc,OAClC,GAAIA,MAAMvmB,OAASs5D,YAAYrH,WAAWk/E,mBAAoB,CAC1D,GAAIgB,oBAAqB5rH,KACzB,OAAOqG,OAAMolH,iBAAiBG,mBAAmBC,YAAaH,SAElE,OAAO,GAEf,KAAK34E,aAAYrH,WAAWogF,uBACxB,MAAOxB,gBAAe9mI,KAAM,SAAUwc,OAAS,MAAOqG,OAAMolH,iBAAiBzrH,MAAO0rH,UACxF,KAAK34E,aAAYrH,WAAWqgF,eACxB,GAAI9B,gBAAiBzmI,IAErB,IAAIwmI,eAAeC,eAAgB,WACmB,IAAlDY,aAAaZ,eAAe9jJ,WAAWC,OAAc,CACrD,GAAI4lJ,WAAY/B,eAAepxI,WAAWA,UAC1C,IAAI1U,KAAKsnJ,iBAAiBO,UAAWN,UACjCvnJ,KAAKsnJ,iBAAiBxB,eAAe9jJ,UAAU,GAAIulJ,SAAU,CAE7D,GAAIO,YAAa9nJ,KAAKknJ,aAAaW,UACnC,IAAIC,YAAcpkJ,MAAMC,QAAQmkJ,YAC5B,OAAO,GAKnB,SAAI7B,SAASH,eAAgB,eACyB,IAAlDY,aAAaZ,eAAe9jJ,WAAWC,SAChCjC,KAAKsnJ,iBAAiBxB,eAAe9jJ,UAAU,GAAIulJ,QAElE,KAAK34E,aAAYrH,WAAWwgF,8BAC5B,IAAKn5E,aAAYrH,WAAWygF,cAC5B,IAAKp5E,aAAYrH,WAAW0gF,eAC5B,IAAKr5E,aAAYrH,WAAW2gF,YAC5B,IAAKt5E,aAAYrH,WAAW4gF,YAC5B,IAAKv5E,aAAYrH,WAAW6gF,aAC5B,IAAKx5E,aAAYrH,WAAW8gF,aAC5B,IAAKz5E,aAAYrH,WAAW+gF,eAC5B,IAAK15E,aAAYrH,WAAWghF,aACxB,OAAO,CACX,KAAK35E,aAAYrH,WAAWihF,wBACxB,GAAIC,yBAA0BppI,IAC9B,OAAOrf,MAAKsnJ,iBAAiBmB,wBAAwB/zI,WAAY6yI,QACrE,KAAK34E,aAAYrH,WAAWmhF,iBACxB,GAAIC,kBAAmBtpI,IACvB,QAAQspI,iBAAiBC,cAActzI,MACnC,IAAKs5D,aAAYrH,WAAWshF,UAC5B,IAAKj6E,aAAYrH,WAAWuhF,WAC5B,IAAKl6E,aAAYrH,WAAWwhF,cAC5B,IAAKn6E,aAAYrH,WAAWyhF,WAC5B,IAAKp6E,aAAYrH,WAAW0hF,aAC5B,IAAKr6E,aAAYrH,WAAW2hF,wBAC5B,IAAKt6E,aAAYrH,WAAW4hF,YACxB,MAAOnpJ,MAAKsnJ,iBAAiBqB,iBAAiBv1I,KAAMm0I,UAChDvnJ,KAAKsnJ,iBAAiBqB,iBAAiBt1I,MAAOk0I,QACtD,SACI,OAAO,EAEnB,IAAK34E,aAAYrH,WAAWw+E,yBACxB,GAAIC,0BAA2B3mI,IAC/B,OAAOrf,MAAKsnJ,iBAAiBtB,yBAAyBtxI,WAAY6yI,QACtE,KAAK34E,aAAYrH,WAAW6hF,wBACxB,GAAIC,yBAA0BhqI,IAC9B,OAAOrf,MAAKsnJ,iBAAiB+B,wBAAwB30I,WAAY6yI,UAC7DvnJ,KAAKsnJ,iBAAiB+B,wBAAwBC,mBAAoB/B,QAC1E,KAAK34E,aAAYrH,WAAWh3D,WACxB,GAAI/I,YAAa6X,KACbhY,UAAYrH,KAAKu9B,QAAQtxB,QAAQzE,WAAW8I,KAChD,QAAkBnM,KAAdkD,WAA2B87B,YAAY97B,WACvC,OAAO,CAEX,MACJ,KAAKunE,aAAYrH,WAAWgiF,mBAExB,MADyBlqI,MACCmqI,cAAc9mB,MAAM,SAAUh4H,MAAQ,MAAOw3B,OAAMolH,iBAAiB58I,KAAKgK,WAAY6yI,WAG3H,OAAO,GAMXT,UAAUnmJ,UAAUumJ,aAAe,SAAU7nI,KAAMoqI,iBAI/C,QAASC,aAAYjqI,MAAOJ,MACxB,GAAI+5B,EAAErV,QAAQ4lH,qBAAsB,CAChC,GAAIC,UAAWxwG,EAAErV,QAAQ4lH,qBAAqBlqI,MAAOJ,KACjD+5B,GAAE4tG,cAAgB4C,UAAYnqI,OAASk2G,OAAOuvB,oCAAoC0E,WAClFxwG,EAAE4tG,aAAa4C,SAAShrJ,KAAM6gB,OAElCA,MAAQmqI,SAGZ,MADAxwG,GAAE2tG,QAAQxmI,IAAId,MAAOJ,MACdI,MAEX,QAASoqI,iBAAgBtmJ,OACrB,OAAQ61C,EAAErV,QAAQ+lH,0BAA4Bn0B,OAAO+vB,gBAAgBniJ,OAfzE,GAEIiB,OAFA09B,MAAQliC,KACRo5C,EAAIp5C,KAgBJ+pJ,YAAc,SAAUnrJ,KAAM6qJ,iBAC9B,GAAIpiJ,WAAY66B,MAAM3E,QAAQtxB,QAAQrN,KAAM6qJ,gBAC5C,YAAkBtlJ,KAAdkD,UAEOqiJ,aAAchoH,WAAY,YAAa9iC,KAAMA,MAAQygB,MAEzDhY,UAEX,QAAQgY,KAAK/J,MACT,IAAKs5D,aAAYrH,WAAWigF,wBACxB,GAAIwC,UACAC,WA6BJ,OA5BAr7E,aAAYnH,aAAapoD,KAAM,SAAUwc,OACrC,OAAQA,MAAMvmB,MACV,IAAKs5D,aAAYrH,WAAW2iF,4BAC5B,IAAKt7E,aAAYrH,WAAWk/E,mBACxB,GAAI0D,YAAatuH,KACjB,IAAIsuH,WAAWvrJ,KAAK0W,MAAQs5D,YAAYrH,WAAWygF,cAAe,CAC9D,GAAI1gG,QAAS6iG,WAAWvrJ,KAAK0R,IAC7B25I,UAASnjJ,KAAKwgD,QAElB,GAAI26D,cAAe//E,MAAM+kH,OAAOkD,WAAWvrJ,KAC3C,IAAIirJ,gBAAgB5nC,cAEhB,MADAz9G,OAAQy9G,cACD,CAEX,IAAImoC,eAAgB5D,qBAAqB2D,YACrCjoH,MAAMglH,aAAaiD,WAAWzC,aAAmC,GACjEqC,YAAY9nC,cAAoC,EACpD,IAAI4nC,gBAAgBO,eAEhB,MADA5lJ,OAAQ4lJ,eACD,CAGPJ,OAAM/nC,cAAgBukC,qBAAqB2D,YACvCT,YAAYU,cAAeD,WAAWzC,aACtC0C,iBAIhB5lJ,MACOA,OACPxE,KAAK+jC,QAAQsmH,aAAeJ,SAAShoJ,SACrC+nJ,MAAgB,SAAIC,UAEjBP,YAAYM,MAAO3qI,MAC9B,KAAKuvD,aAAYrH,WAAWogF,uBACxB,GAAI2C,SAoBJ,OAnBA17E,aAAYnH,aAAapoD,KAAM,SAAUwc,OACrC,GAAIt4B,OAAQ2+B,MAAMglH,aAAarrH,OAA6B,EAE5D,IAAIguH,gBAAgBtmJ,OAEhB,MADAiB,OAAQjB,OACD,CAGX,IAAIoyH,OAAO8vB,mCAAmCliJ,QACtCG,MAAMC,QAAQJ,MAAMmR,YACpB,IAAK,GAAI3S,IAAK,EAAGoX,GAAK5V,MAAMmR,WAAY3S,GAAKoX,GAAGlX,OAAQF,KAAM,CAC1D,GAAIwoJ,aAAcpxI,GAAGpX,GACrBuoJ,OAAMxjJ,KAAKyjJ,iBAKvBD,OAAMxjJ,KAAKvD,SAEXiB,OAEGklJ,YAAYY,MAAOjrI,KAC9B,KAAKsnI,yBAED,MAAO+C,cAAchoH,WAAY,SAAUhtB,WADpB1U,KAAKknJ,aAAa7nI,KAAK3K,aAC6B2K,KAC/E,KAAKuvD,aAAYrH,WAAWqgF,eACxB,GAAI9B,gBAAiBzmI,IACrB,IAAI4mI,SAASH,eAAgB,eACyB,IAAlDY,aAAaZ,eAAe9jJ,WAAWC,OAAc,CACrD,GAAIuoJ,eAAgB1E,eAAe9jJ,UAAU,EAC7C,IAAIwoJ,cAAcl1I,MAAQs5D,YAAYrH,WAAWkjF,cAAe,CAC5D,GAAIC,eAAgBF,aACpB,OAAOd,aAAY1pJ,KAAKknJ,aAAawD,cAAc1jI,MAAO3H,OAGlE,GAAIvd,MAAO4kJ,aAAaZ,eAAe9jJ,WAAW/B,IAAI,SAAUm5B,KAAO,MAAO8I,OAAMglH,aAAa9tH,MACjG,KAAKp5B,KAAK+jC,QAAQ+lH,0BAA4BhoJ,KAAKqvB,KAAKwkG,OAAO+vB,iBAC3D,MAAO5jJ,MAAK2c,KAAKk3G,OAAO+vB,gBAE5B,IAAI1lJ,KAAKqnJ,WAAWvB,iBACZD,eAAeC,eAAgB,UAAW,CAC1C,GAAIgC,YAAa9nJ,KAAKknJ,aAAapB,eAAepxI,WAAWA,WAC7D,OAAIm1I,iBAAgB/B,YACTA,WACJA,WAAWn/I,OAAO7G,KAAK,IAItC,GAAImkJ,SAASH,eAAgB,eACyB,IAAlDY,aAAaZ,eAAe9jJ,WAAWC,OACvC,MAAOynJ,aAAY5nJ,KAAK,GAAIud,KAEhC,IAAI3K,YAAa1U,KAAKknJ,aAAapB,eAAepxI,WAClD,IAAIm1I,gBAAgBn1I,YAChB,MAAOg1I,aAAYh1I,WAAY2K,KAEnC,IAAI1f,SAAW+hC,WAAY,OAAQhtB,WAAYA,WAI/C,OAHI5S,OAAQA,KAAKG,SACbtC,OAAOqC,UAAYF,MAEhB4nJ,YAAY/pJ,OAAQ0f,KAC/B,KAAKuvD,aAAYrH,WAAWojF,cACxB,GAAIC,eAAgBvrI,KAChBwrI,QAAUnE,aAAakE,cAAc5oJ,WAAW/B,IAAI,SAAUm5B,KAAO,MAAO8I,OAAMglH,aAAa9tH,MACnG,KAAKp5B,KAAK+jC,QAAQ+lH,0BAA4Be,QAAQ15H,KAAKwkG,OAAO+vB,iBAC9D,MAAOgE,aAAYmB,QAAQpsI,KAAKk3G,OAAO+vB,iBAAkBrmI,KAE7D,IAAIyrI,WAAY9qJ,KAAKknJ,aAAa0D,cAAcl2I,WAChD,IAAIihH,OAAO+vB,gBAAgBoF,WACvB,MAAOpB,aAAYoB,UAAWzrI,KAElC,IAAIqwB,OAAShO,WAAY,MAAOhtB,WAAYo2I,UAI5C,OAHID,SAAQ5oJ,SACRytC,KAAK1tC,UAAY6oJ,SAEdnB,YAAYh6G,KAAMrwB,KAC7B,KAAKuvD,aAAYrH,WAAWw+E,yBACxB,GAAIC,0BAA2B3mI,KAC3B0rI,aAAe/qJ,KAAKknJ,aAAalB,yBAAyBtxI,WAC9D,IAAIm1I,gBAAgBkB,cAChB,MAAOrB,aAAYqB,aAAc1rI,KAErC,IAAI67H,QAASl7I,KAAKinJ,OAAOjB,yBAAyBpnJ,KAClD,OAAIirJ,iBAAgB3O,QACTwO,YAAYxO,OAAQ77H,MAE3B0rI,cAAgB/qJ,KAAKqnJ,WAAWrB,yBAAyBtxI,YAClDq2I,aAAa7P,QACpBvlB,OAAOyvB,oCAAoC2F,cAGpCrB,aAAchoH,WAAY,YAAaliC,OAAQurJ,aAAavrJ,OAAQZ,KAAMs8I,QAAU77H,MAExFqqI,aAAchoH,WAAY,SAAUhtB,WAAYq2I,aAAc7P,OAAQA,QAAU77H,KAE3F,KAAKuvD,aAAYrH,WAAW6hF,wBACxB,GAAIC,yBAA0BhqI,KAC1B2rI,aAAehrJ,KAAKknJ,aAAamC,wBAAwB30I,WAC7D,IAAIm1I,gBAAgBmB,cAChB,MAAOtB,aAAYsB,aAAc3rI,KAErC,KAAKgqI,wBAAwBC,mBACzB,MAAOI,aAAYpD,YAAY,gCAAiCjnI,MAAOA,KAE3E,IAAIha,OAAQrF,KAAKknJ,aAAamC,wBAAwBC,mBACtD,OAAIO,iBAAgBmB,cACTtB,YAAYsB,aAAc3rI,MAEjCrf,KAAKqnJ,WAAWgC,wBAAwB30I,aACxC1U,KAAKqnJ,WAAWgC,wBAAwBC,oBACjC0B,aAAa3lJ,OACjBqkJ,aAAchoH,WAAY,QAAShtB,WAAYs2I,aAAc3lJ,MAAOA,OAASga,KAExF,KAAKuvD,aAAYrH,WAAWh3D,WACxB,GAAI/I,YAAa6X,KACb66F,OAAS1yG,WAAW8I,IACxB,OAAOy5I,aAAY7vC,OAAQuvC,gBAC/B,KAAK76E,aAAYrH,WAAW0jF,cACxB,GAAIC,mBAAoB7rI,KACpB8rI,eAAiBD,kBAAkBpoH,SAwBnCsoH,cAvBe,SAAU/rI,MACzB,GAAI8rI,eAAe71I,OAASs5D,YAAYrH,WAAW8jF,cAAe,CAC9D,GAAIC,eAAgBjsI,KAChBksI,OAASrpH,MAAMglH,aAAaoE,cAAcl4I,KAC9C,OAAIuiH,QAAOyvB,oCAAoCmG,QACpC7B,aACHhoH,WAAY,YACZliC,OAAQ+rJ,OAAO/rJ,OACfZ,KAAM0sJ,cAAcj4I,MAAM/C,MAC3B+O,OAGEqiB,WAAY,SAAUhtB,WAAY62I,OAAQrQ,OAAQoQ,cAAcj4I,MAAM/C,MAG/E,GAAIk7I,cAAeL,eACfttH,OAASqE,MAAM3E,QAAQtxB,QAAQu/I,aAAal7I,KAChD,OAAIu5I,iBAAgBhsH,SAAW83F,OAAOwvB,sCAAsCtnH,QACjE6rH,YAAY7rH,OAAQxe,MAExBqqI,YAAYpD,YAAY,yBAA0BjnI,MAAQyjB,SAAU0oH,aAAal7I,OAAS+O,OAGxE8rI,eACjC,IAAItB,gBAAgBuB,eAChB,MAAO1B,aAAY0B,cAAe/rI,KAEtC,KAAKs2G,OAAOyvB,oCAAoCgG,gBAC5CF,kBAAkBO,eAAiBP,kBAAkBO,cAAcxpJ,OAAQ,CAC3E,GAAIypJ,QAASR,kBAAkBO,cAAcxrJ,IAAI,SAAUiY,SAAW,MAAOgqB,OAAMglH,aAAahvI,UAGhGkzI,eAAcppJ,UAAY0pJ,OAE9B,MAAOhC,aAAY0B,cAAe/rI,KACtC,KAAKuvD,aAAYrH,WAAWokF,UAUxB,IAAK,GATDC,WAAYvsI,KAEZu7C,WAAagxF,UAAUpuH,MACtB5a,OAAO,SAAU9R,GAAK,MAAOA,GAAEwE,MAAQs5D,YAAYrH,WAAW2gF,aAC/Dp3I,EAAEwE,MAAQs5D,YAAYrH,WAAWskF,mBAChC5rJ,IAAI,SAAU6Q,GAAK,MAAOoxB,OAAMglH,aAAap2I,KAG9C+1D,UAAY,KACP/7D,EAAI,EAAGA,EAAI8vD,WAAW34D,OAAQ6I,IAAK,CACxC,GAAIzD,WAAYuzD,WAAW9vD,EAC3B,KAAI6qH,OAAOwvB,sCAAsC99I,WAY7C,MAAOA,UAXHw/D,WACIx/D,UAAUzI,MAAQioE,UAAUjoE,MAC5ByI,UAAU7H,QAAUqnE,UAAUrnE,QAAW6H,UAAUrF,YACnD6kE,UAAYx/D,WAIhBw/D,UAAYx/D,UAOxB,GAAIw/D,UACA,MAAOA,UACX,MACJ,KAAK+H,aAAYrH,WAAWwgF,8BAC5B,IAAKn5E,aAAYrH,WAAWygF,cAC5B,IAAKp5E,aAAYrH,WAAW8gF,aAC5B,IAAKz5E,aAAYrH,WAAWghF,aAC5B,IAAK35E,aAAYrH,WAAW+gF,eACxB,MAAOjpI,MAAK/O,IAChB,KAAKs+D,aAAYrH,WAAW0gF,eACxB,MAAOv3D,YAAWrxE,KAAK/O,KAC3B,KAAKs+D,aAAYrH,WAAWukF,WACxB,MAAOpC,cAAchoH,WAAY,YAAa9iC,KAAM,OAASygB,KACjE,KAAKuvD,aAAYrH,WAAWwkF,cACxB,MAAOrC,cAAchoH,WAAY,YAAa9iC,KAAM,UAAYygB,KACpE,KAAKuvD,aAAYrH,WAAWykF,cACxB,MAAOtC,cAAchoH,WAAY,YAAa9iC,KAAM,UAAYygB,KACpE,KAAKuvD,aAAYrH,WAAW0kF,eACxB,MAAOvC,cAAchoH,WAAY,YAAa9iC,KAAM,WAAaygB,KACrE,KAAKuvD,aAAYrH,WAAWvoC,UACxB,GAAIktH,eAAgB7sI,IACpB,OAAOqqI,cACHhoH,WAAY,YACZ9iC,KAAM,QACNoD,WAAYhC,KAAKknJ,aAAagF,cAAcC,eAC7C9sI,KACP,KAAKuvD,aAAYrH,WAAW2gF,YACxB,MAAO,KACX,KAAKt5E,aAAYrH,WAAW4gF,YACxB,OAAO,CACX,KAAKv5E,aAAYrH,WAAW6gF,aACxB,OAAO,CACX,KAAKx5E,aAAYrH,WAAWihF,wBACxB,GAAIC,yBAA0BppI,IAC9B,OAAOrf,MAAKknJ,aAAauB,wBAAwB/zI,WACrD,KAAKk6D,aAAYrH,WAAW6kF,wBACxB,GAAIC,eAAgBhtI,IACpB,OAAOrf,MAAKknJ,aAAamF,cAAc33I,WAC3C,KAAKk6D,aAAYrH,WAAW+kF,sBACxB,GAAIC,uBAAwBltI,KACxB27H,QAAUh7I,KAAKknJ,aAAaqF,sBAAsBvR,QACtD,IAAI/2I,UAAU+2I,UAAY73G,YAAY63G,SAClC,OAAQuR,sBAAsB32D,UAC1B,IAAKhnB,aAAYrH,WAAWshF,UACxB,OAAQ7N,OACZ,KAAKpsE,aAAYrH,WAAWuhF,WACxB,OAAQ9N,OACZ,KAAKpsE,aAAYrH,WAAWilF,WACxB,OAAQxR,OACZ,KAAKpsE,aAAYrH,WAAWklF,iBACxB,OAAQzR,QAGpB,GAAI0R,kBAAe,EACnB,QAAQH,sBAAsB32D,UAC1B,IAAKhnB,aAAYrH,WAAWshF,UACxB6D,aAAe,GACf,MACJ,KAAK99E,aAAYrH,WAAWuhF,WACxB4D,aAAe,GACf,MACJ,KAAK99E,aAAYrH,WAAWilF,WACxBE,aAAe,GACf,MACJ,KAAK99E,aAAYrH,WAAWklF,iBACxBC,aAAe,GACf,MACJ,SACI,OAER,MAAOhD,cAAchoH,WAAY,MAAOk0D,SAAU82D,aAAc1R,QAASA,SAAW37H,KACxF,KAAKuvD,aAAYrH,WAAWmhF,iBACxB,GAAIC,kBAAmBtpI,KACnBjM,KAAOpT,KAAKknJ,aAAayB,iBAAiBv1I,MAC1CC,MAAQrT,KAAKknJ,aAAayB,iBAAiBt1I,MAC/C,IAAIpP,UAAUmP,OAASnP,UAAUoP,OAAQ,CACrC,GAAI8vB,YAAY/vB,OAAS+vB,YAAY9vB,OACjC,OAAQs1I,iBAAiBC,cAActzI,MACnC,IAAKs5D,aAAYrH,WAAW4hF,YACxB,MAAO/1I,OAAQC,KACnB,KAAKu7D,aAAYrH,WAAW2hF,wBACxB,MAAO91I,OAAQC,KACnB,KAAKu7D,aAAYrH,WAAWolF,eACxB,MAAOv5I,MAAOC,KAClB,KAAKu7D,aAAYrH,WAAWqlF,SACxB,MAAOx5I,MAAOC,KAClB,KAAKu7D,aAAYrH,WAAWslF,WACxB,MAAOz5I,MAAOC,KAClB,KAAKu7D,aAAYrH,WAAWulF,kBACxB,MAAO15I,OAAQC,KACnB,KAAKu7D,aAAYrH,WAAWwlF,uBACxB,MAAO35I,OAAQC,KACnB,KAAKu7D,aAAYrH,WAAWylF,wBACxB,MAAO55I,QAASC,KACpB,KAAKu7D,aAAYrH,WAAW0lF,6BACxB,MAAO75I,QAASC,KACpB,KAAKu7D,aAAYrH,WAAW2lF,cACxB,MAAO95I,MAAOC,KAClB,KAAKu7D,aAAYrH,WAAW4lF,iBACxB,MAAO/5I,MAAOC,KAClB,KAAKu7D,aAAYrH,WAAW6lF,oBACxB,MAAOh6I,OAAQC,KACnB,KAAKu7D,aAAYrH,WAAW8lF,uBACxB,MAAOj6I,OAAQC,KACnB,KAAKu7D,aAAYrH,WAAW+lF,sBACxB,MAAOl6I,OAAQC,KACnB,KAAKu7D,aAAYrH,WAAWgmF,4BACxB,MAAOn6I,OAAQC,KACnB,KAAKu7D,aAAYrH,WAAWimF,uCACxB,MAAOp6I,QAASC,KACpB,KAAKu7D,aAAYrH,WAAWshF,UACxB,MAAOz1I,MAAOC,KAClB,KAAKu7D,aAAYrH,WAAWuhF,WACxB,MAAO11I,MAAOC,KAClB,KAAKu7D,aAAYrH,WAAWwhF,cACxB,MAAO31I,MAAOC,KAClB,KAAKu7D,aAAYrH,WAAWyhF,WACxB,MAAO51I,MAAOC,KAClB,KAAKu7D,aAAYrH,WAAW0hF,aACxB,MAAO71I,MAAOC,MAE1B,MAAOq2I,cACHhoH,WAAY,QACZk0D,SAAU+yD,iBAAiBC,cAAcxB,UACzCh0I,KAAMA,KACNC,MAAOA,OACRgM,MAEP,KACJ,KAAKuvD,aAAYrH,WAAWkmF,sBACxB,GAAIC,uBAAwBruI,KACxBrQ,UAAYhP,KAAKknJ,aAAawG,sBAAsB1+I,WACpD2+I,eAAiB3tJ,KAAKknJ,aAAawG,sBAAsBE,UACzDC,eAAiB7tJ,KAAKknJ,aAAawG,sBAAsBI,UAC7D,OAAI3qH,aAAYn0B,WACLA,UAAY2+I,eAAiBE,eAEjCnE,aAAchoH,WAAY,KAAM1yB,UAAWA,UAAW2+I,eAAgBA,eAAgBE,eAAgBA,gBAAkBxuI,KACnI,KAAKuvD,aAAYrH,WAAWwmF,mBAC5B,IAAKn/E,aAAYrH,WAAWkjF,cACxB,MAAOf,aAAYpD,YAAY,8BAA+BjnI,MAAOA,KACzE,KAAKuvD,aAAYrH,WAAWymF,yBACxB,MAAOtE,aAAYpD,YAAY,4DAA6DjnI,MAAOA,KACvG,KAAKuvD,aAAYrH,WAAWgiF,mBACxB,GAAI0E,oBAAqB5uI,IACzB,OAAIrf,MAAKqnJ,WAAWhoI,MACT4uI,mBAAmBzE,cAAcjhJ,OAAO,SAAU2lJ,SAAUz7G,SAAW,MAAOy7G,UAAWhsH,MAAMglH,aAAaz0G,QAAQ/9B,YACvHwtB,MAAMglH,aAAaz0G,QAAQvrB,UAAalnB,KAAKknJ,aAAa+G,mBAAmBE,OAG1EF,mBAAmBzE,cAAcjhJ,OAAO,SAAU2lJ,SAAUz7G,SAC/D,GAAIhtB,MAAOyc,MAAMglH,aAAaz0G,QAAQ/9B,YAClCwS,QAAUgb,MAAMglH,aAAaz0G,QAAQvrB,QACzC,IAAI2iI,gBAAgBpkI,MAChB,MAAOA,KACX,IAAIokI,gBAAgB3iI,SAChB,MAAOA,QACX,IAAwB,gBAAbgnI,WAAyC,gBAATzoI,OACpB,gBAAZyB,SACP,MAAOgnI,UAAWzoI,KAAOyB,OAE7B,IAAIvnB,QAAS8lB,IAOb,OANiB,KAAbyoI,WACAvuJ,QAAW+hC,WAAY,QAASk0D,SAAU,IAAKxiF,KAAM86I,SAAU76I,MAAOoS,OAE3D,IAAXyB,UACAvnB,QAAW+hC,WAAY,QAASk0D,SAAU,IAAKxiF,KAAMzT,OAAQ0T,MAAO6T,UAEjEvnB,QACRK,KAAKknJ,aAAa+G,mBAAmBE,MAEhD,KAAKv/E,aAAYrH,WAAW6mF,aACxB,GAAIC,cAAehvI,IACnB,OAAOrf,MAAKknJ,aAAamH,aAAa35I,WAC1C,KAAKk6D,aAAYrH,WAAW+mF,gBACxB,OAAS5sH,WAAY,SAE7B,MAAOgoH,aAAYpD,YAAY,gCAAiCjnI,MAAOA,OAEpEynI,YAEXrnJ,SAAQqnJ,UAAYA,SAIpB,IAAIv5G,OAAQqhC,YAAY2/E,oBAOpBhxH,QAAU6O,qBAAqB,SAAU5sC,OAAQC,SAkHrD,QAAS+uJ,kBAAiBjxH,UAErB,SAAU,WAAY,SAAU,SAAU,QAAS,UAAW,MAAO,MAAO,WAAY,OACrF,OAAQ,SAAU,QAAS,QAAS,YAAa,aAAc,iBAAkB,cACjF,YAAa,WAAY,OAAQ,cAAe,WAAY,YAAa,aACzE,oBAAqB,cAAe,aAAc,aAAc,cAAe,eAC/E,gBACC32B,QAAQ,SAAUhI,MAAQ,MAAO2+B,SAAQhd,IAAI3hB,MAAQ8iC,WAAY,YAAa9iC,KAAMA;;;;;;;AAhH7FgB,OAAOugB,eAAe1gB,QAAS,cAAgB8D,OAAO,GAEtD,IAAIkrJ,SAAW,WACX,QAASA,SAAQh5I,YACbzV,KAAKyV,WAAaA,WAClBzV,KAAK46D,WAAa,GAAIryC,KAiG1B,MA/FAkmI,SAAQ9tJ,UAAUsL,QAAU,SAAUrN,KAAM6qJ,iBACxC,MAAQA,kBAAmBzpJ,KAAK46D,WAAWt6C,IAAI1hB,OAAUoB,KAAKu9B,QAAQjd,IAAI1hB,OAE9E6vJ,QAAQ9tJ,UAAU5B,OAAS,SAAUH,KAAM2E,OAASvD,KAAKu9B,QAAQhd,IAAI3hB,KAAM2E,QAC3EkrJ,QAAQ9tJ,UAAU+tJ,gBAAkB,SAAU9vJ,KAAM2E,OAChDvD,KAAK46D,WAAWr6C,IAAI3hB,KAAM2E,QAE9BkrJ,QAAQ9tJ,UAAUgzB,IAAM,SAAU/0B,MAAQ,MAAOoB,MAAKu9B,QAAQ5J,IAAI/0B,OAClEgB,OAAOugB,eAAesuI,QAAQ9tJ,UAAW,WACrC2f,IAAK,WACD,GAAI3gB,QAASK,KAAK2uJ,QAMlB,OALKhvJ,UACDA,OAASK,KAAK2uJ,SAAW,GAAIpmI,KAC7BimI,iBAAiB7uJ,QACjBK,KAAK4uJ,gBAEFjvJ,QAEX0gB,YAAY,EACZD,cAAc,IAElBquI,QAAQ9tJ,UAAUiuJ,aAAe,WAC7B,GAAI1sH,OAAQliC,KACRu9B,QAAUv9B,KAAK2uJ,SAEfE,YAAc,SAAU9pJ,GAAK,MAAOA,GAAEtC,QAAQ,eAAgB,KAC9DiE,MAAQ,SAAU2Y,MAClB,OAAQA,KAAK/J,MACT,IAAKs5D,aAAYrH,WAAWunF,wBACxB,GAAIC,yBAA0B1vI,IAC9B,IAAI0vI,wBAAwBC,gBAAgB15I,OACxCs5D,YAAYrH,WAAW0nF,wBAAyB,CAChD,GAAIC,mBAAoBH,wBAAwBC,eAChD,IAAIE,kBAAkBx6I,WAAY,CAEzBw6I,kBAAkBx6I,WAAW0zB,SAM9B8mH,kBAAkBx6I,WAAW0zB,OAAS8mH,kBACtCA,kBAAkB9mH,OAASlG,MAAMzsB,WAErC,IAAI05I,QAASN,YAAYK,kBAAkBx6I,WAAW0yI,UACtD7pH,SAAQhd,IAAIwuI,wBAAwBnwJ,KAAK0R,MAAQoxB,WAAY,YAAaliC,OAAQ2vJ,QAClF,QAGR5xH,QAAQhd,IAAIwuI,wBAAwBnwJ,KAAK0R,MAAQoxB,WAAY,QAASzwB,QAAS,6BAC/E,MACJ,KAAK29D,aAAYrH,WAAW6nF,kBACxB,GAAIC,YAAahwI,IACjB,KAAKgwI,WAAWC,aAEZ,KAECD,YAAWE,gBAAgBnnH,SAE5BinH,WAAWE,gBAAgBnnH,OAASinH,WACpCA,WAAWjnH,OAASlG,MAAMzsB,WAE9B,IAAIkO,MAAOkrI,YAAYQ,WAAWE,gBAAgBnI,UAC9CiI,YAAWC,aAAa1wJ,MAExB2+B,QAAQhd,IAAI8uI,WAAWC,aAAa1wJ,KAAK0R,MAAQoxB,WAAY,YAAaliC,OAAQmkB,KAAM0hI,SAAS,GAErG,IAAIx8F,UAAWwmG,WAAWC,aAAaE,aACvC,IAAI3mG,SACA,OAAQA,SAASvzC,MACb,IAAKs5D,aAAYrH,WAAWkoF,aAExB,IAAK,GAAI1tJ,IAAK,EAAGoX,GAAK0vC,SAASsT,SAAUp6D,GAAKoX,GAAGlX,OAAQF,KAAM,CAC3D,GAAIknD,SAAU9vC,GAAGpX,GACjBw7B,SAAQhd,IAAI0oC,QAAQrqD,KAAK0R,MACrBoxB,WAAY,YACZliC,OAAQmkB,KACR/kB,KAAMqqD,QAAQg5D,aAAeh5D,QAAQg5D,aAAa3xG,KAAO24C,QAAQrqD,KAAK0R,OAG9E,KACJ,KAAKs+D,aAAYrH,WAAWmoF,gBAExBnyH,QAAQhd,IAAIsoC,SAASjqD,KAAK0R,MAAQoxB,WAAY,YAAaliC,OAAQmkB,QAMvFirD,YAAYnH,aAAapoD,KAAM3Y,OAE/B1G,MAAKyV,YACLm5D,YAAYnH,aAAaznE,KAAKyV,WAAY/O,QAG3C+nJ,UAEXhvJ,SAAQgvJ,QAAUA,UAad/vB,UAAYtyF,qBAAqB,SAAU5sC,OAAQC,SA2gBvD,QAASkwJ,kBAAiBl6I,WAAYsxI,QAASjpH,UAE3C,QAAS8xH,oBAAmBl7I,YACxB,GAAKA,WAGA,GAAIhR,MAAMC,QAAQ+Q,YACnBA,WAAW9N,QAAQgpJ,wBAElB,IAA0B,gBAAfl7I,aAA4BA,WAAWrO,eAAe,eAGjE,GAAIsvH,OAAO+vB,gBAAgBhxI,YAC5B2jI,YAAY3jI,gBAEX,IAAIihH,OAAOuvB,oCAAoCxwI,aAChD,IAAKm7I,OAAOl8H,IAAIjf,WAAW9V,MAAO,CAC9B,GAAIyI,WAAYy2B,SAASppB,WAAW9V,KAChCyI,YACAuoJ,mBAAmBvoJ,gBAI1B,IAAIsuH,OAAOgvB,mBAAmBjwI,YAC/Bo7I,iBAAiBp7I,gBAEhB,IAAIihH,OAAOivB,6BAA6BlwI,YACzC,OAAQA,WAAWgtB,YACf,IAAK,SACD,GAAIinH,kBAAmBj0I,UACvBk7I,oBAAmBjH,iBAAiBv1I,MACpCw8I,mBAAmBjH,iBAAiBt1I,MACpC,MACJ,KAAK,OACL,IAAK,MACD,GAAIyyI,gBAAiBpxI,UACrBk7I,oBAAmB9J,eAAepxI,YAC9BoxI,eAAe9jJ,WACf8jJ,eAAe9jJ,UAAU4E,QAAQgpJ,mBACrC,MACJ,KAAK,QACD,GAAIG,iBAAkBr7I,UACtBk7I,oBAAmBG,gBAAgBr7I,YACnCk7I,mBAAmBG,gBAAgB1qJ,MACnC,MACJ,KAAK,MACD,GAAI2qJ,kBAAmBt7I,UACvBk7I,oBAAmBI,iBAAiBhV,QACpC,MACJ,KAAK,SACD,GAAIiV,kBAAmBv7I,UACvBk7I,oBAAmBK,iBAAiBv7I,WACpC,MACJ,KAAK,SACD,GAAIw7I,kBAAmBx7I,UACvBk7I,oBAAmBM,iBAAiBx7I,WACpC,MACJ,KAAK,KACD,GAAIy7I,cAAez7I,UACnBk7I,oBAAmBO,aAAanhJ,WAChC4gJ,mBAAmBO,aAAatC,gBAChC+B,mBAAmBO,aAAaxC,qBAnDxC/tJ,QAAO0yC,oBAAoB59B,YAAY9N,QAAQ,SAAUu7B,GAAK,MAAOytH,oBAAmBl7I,WAAWytB,MAwD3G,QAASiuH,gBAAeC,UAAWnV,QAC3BA,OAAOxC,YACPwC,OAAOxC,WAAW9xI,QAAQgpJ,oBAE1Bj6B,OAAO8uB,iBAAiBvJ,SAAWA,OAAOoV,qBAC1CpV,OAAOoV,oBAAoB1pJ,QAAQgpJ,oBAGnCS,UAAU3X,YAAc/iB,OAAO+uB,sBAAsBxJ,SAAWA,OAAOnpG,YACvEmpG,OAAOnpG,WAAWnrC,QAAQgpJ,oBAGlC,QAASW,eAAcF,WACfA,UAAU3X,YACV2X,UAAU3X,WAAW9xI,QAAQgpJ,oBAE7BS,UAAU/zF,SACV18D,OAAO0yC,oBAAoB+9G,UAAU/zF,SAChC11D,QAAQ,SAAUhI,MAAQ,MAAOyxJ,WAAU/zF,QAAQ19D,MAAMgI,QAAQ,SAAUjE,GAAK,MAAOytJ,gBAAeC,UAAW1tJ,OAEtH0tJ,UAAUnT,SACVt9I,OAAO0yC,oBAAoB+9G,UAAUnT,SAASt2I,QAAQ,SAAUhI,MAC5D,GAAI4xJ,cAAeH,UAAUnT,QAAQt+I,KAEjCgxJ,oBADAj6B,OAAOgvB,mBAAmB6L,cACPA,aAAajtJ,MAGbitJ,gBAKnC,QAASV,kBAAiBW,qBACtB,GAAIA,oBAAoBltJ,MAAO,CAC3B,GAAImtJ,WAAYb,MACZY,qBAAoB1+G,aACpB89G,OAAS,GAAIjsI,KAAI8sI,UAAUxuJ,UACvBuuJ,oBAAoB1+G,YACpB0+G,oBAAoB1+G,WAAWnrC,QAAQ,SAAUkK,GAAK,MAAO++I,QAAO9zH,IAAIjrB,MAEhF8+I,mBAAmBa,oBAAoBltJ,OACvCssJ,OAASa,WAGjB,QAASC,kBAAiBtxI,MACtB,GAAIA,KAAM,CACN,GAAIuxI,WAAYvxI,KAAK2nD,UACrB,SAAS3nD,KAAKksB,KAAOqlH,WACjBn7I,WAAWnF,KAAKpK,UAAUmZ,KAAKksB,IAAKqlH,WAAWztJ,QAAQ,aAAe,GAE9E,OAAO,EAEX,QAASk1I,aAAY7zI,OAEjB,GAAImsJ,iBADO5J,QAAQzmI,IAAI9b,QACK,CACxB,GAAIqsJ,cAAyB1sJ,IAAdK,MAAM8+B,SACEn/B,IAAnBK,MAAMvB,UAAyB,KAAOuB,MAAM8+B,KAAO,GAAK,KAAO9+B,MAAMvB,UAAY,GAC7E,KAAOuB,MAAM8+B,KAAO,GACxB,EACJ,MAAM,IAAI7+B,OAAM,GAAKgR,WAAWiM,SAAWmvI,SAAW,4EAA8EhuH,gBAAgBr+B,OAAS,QAAUywC,KAAKtvC,UAAUnB,SA5H9L,GAAIqrJ,QAAS,GAAIjsI,MAAK,QAAS,SAAU,MAAO,MAAO,SAAU,SAAU,OA+H3EhkB,QAAO0yC,oBAAoBxU,UAAUl3B,QAAQ,SAAUhI,MACnD,GAAI6gB,OAAQqe,SAASl/B,KACrB,KACQ+2H,OAAO2uB,gBAAgB7kI,QACvB8wI,cAAc9wI,OAGtB,MAAOpG,GACH,GAAIgG,MAAO0nI,QAAQzmI,IAAIb,MACvB,IAAIkxI,iBAAiBtxI,MAAO,CACxB,GAAIA,KAAM,CACN,GAAIlG,IAAK1D,WAAW8wI,8BAA8BlnI,KAAK2nD,YAAa1jC,KAAOnqB,GAAGmqB,KAAMrgC,UAAYkW,GAAGlW,SACnG,MAAM,IAAIwB,OAAMgR,WAAWiM,SAAW,KAAO4hB,KAAO,GAAK,KAAOrgC,UAAY,GAAK,kEAAoErE,KAAO,SAAWya,EAAEpI,SAE7K,KAAM,IAAIxM,OAAM,+DAAiE7F,KAAO,QAAUya,EAAEpI,aAMpH,QAAS6/I,SAAQ/+G,YAEb,QAASg/G,YAAWnyJ,MAChB,GAAIA,KAAK0W,MAAQs5D,YAAYrH,WAAWh3D,WAAY,CAChD,GAAI/I,YAAa5I,IACjBe,QAAOmH,KAAKU,WAAW8I,UAIvB,KAAK,GADD0gJ,gBAAiBpyJ,KACZmD,GAAK,EAAGoX,GAAK63I,eAAe70F,SAAUp6D,GAAKoX,GAAGlX,OAAQF,KAAM,CACjE,GAAImW,SAAUiB,GAAGpX,IACbkvJ,QAAU/4I,QAAQtZ,IAClBqyJ,UACAF,WAAWE,UAK3B,IAAK,GAjBDtxJ,WAiBKoC,GAAK,EAAGmvJ,aAAen/G,WAAYhwC,GAAKmvJ,aAAajvJ,OAAQF,KAAM,CAExEgvJ,WADgBG,aAAanvJ,IACRnD,MAEzB,MAAOe,QAEX,QAASkjC,iBAAgBr+B,OACrB,OAAQA,MAAMyM,SACV,IAAK,kCACD,GAAIzM,MAAMf,SAAWe,MAAMf,QAAQwxB,UAC/B,MAAO,qCAAuCzwB,MAAMf,QAAQwxB,UAAY,gCAE5E,MACJ,KAAK,2BACD,MAAO,kIACX,KAAK,8BACD,MAAO,uJACX,KAAK,yBACD,GAAIzwB,MAAMf,SAAWe,MAAMf,QAAQq/B,SAC/B,MAAO,0BAA4Bt+B,MAAMf,QAAQq/B,QAErD,MACJ,KAAK,8BAED,OADat+B,MAAMf,SAAWe,MAAMf,QAAQ7E,KAAO,qBAAuB4F,MAAMf,QAAQ7E,KAAO,OAAS,KAEpG,qHACR,KAAK,8BACD,GAAI4F,MAAMf,SAAWe,MAAMf,QAAQ7E,KAC/B,MAAO,+CAAiD4F,MAAMf,QAAQ7E,KAAO,mCAGzF,MAAO4F,OAAMyM;;;;;;;AAvsBjB,GAAI9O,UAAYgiJ,gBAAkBA,eAAehiJ,UAAavC,OAAOC,QAAU,SAASu5C,GACpF,IAAK,GAAIr0C,GAAG+F,EAAI,EAAGgG,EAAI9O,UAAUC,OAAQ6I,EAAIgG,EAAGhG,IAAK,CACjD/F,EAAI/C,UAAU8I,EACd,KAAK,GAAI0T,KAAKzZ,GAAOnF,OAAOe,UAAU0F,eAAeqpC,KAAK3qC,EAAGyZ,KACzD46B,EAAE56B,GAAKzZ,EAAEyZ,IAEjB,MAAO46B,GAEXx5C,QAAOugB,eAAe1gB,QAAS,cAAgB8D,OAAO,GAKtD,IAAI4tJ,UAAW,SAAU9xI,MAAQ,MAAOuvD,aAAYwiF,yBAAyB/xI,MAAQuvD,YAAYyiF,cAAcC,QAI3GC,kBAAqB,WACrB,QAASA,mBAAkBxtH,aACP,KAAZA,UAAsBA,YAC1B/jC,KAAK+jC,QAAUA,QA0enB,MApeAwtH,mBAAkB5wJ,UAAU6wJ,YAAc,SAAU/7I,WAAY6iH,OAAQqxB,sBAmBpE,QAAS8H,kBAAiBC,eACtB,MAAOC,cAAazK,aAAawK,cAAch9I,YAEnD,QAASg1I,aAAYjqI,MAAOJ,MAExB,MADA0nI,SAAQxmI,IAAId,MAAOJ,MACZI,MAEX,QAASmyI,UAAS3gJ,QAASoO,KAAM5b,SAC7B,MAAOmiJ,WAAUU,YAAYr1I,QAASoO,KAAM5b,QAASgS,YAEzD,QAASo8I,wBAAuBpB,qBAC5B,GAAIA,oBAAoB7xJ,MAAQ6xJ,oBAAoB7xJ,KAAK0W,MAAQs5D,YAAYrH,WAAWh3D,WAAY,CAChG,GAAIuhJ,UAAWrB,oBAAoB7xJ,KAC/BmzJ,aAAeD,SAASxhJ,KACxB0hJ,aAAevB,oBAAoBzpI,IACvC,IAAIgrI,cAAkD,GAAlCA,aAAan5H,WAAW52B,OAAa,CACrD,GAAIgwJ,WAAYD,aAAan5H,WAAW,EACxC,IAAIo5H,UAAU38I,OAASs5D,YAAYrH,WAAWz7C,gBAAiB,CAC3D,GAAIomI,iBAAkBD,SACtB,IAAIC,gBAAgBx9I,WAAY,CAC5B,GAAIy9I,OACAzwH,WAAY,WACZqQ,WAAY++G,QAAQL,oBAAoB1+G,YACxCxuC,MAAOouJ,aAAazK,aAAagL,gBAAgBx9I,YAKrD,OAHI+7I,qBAAoB1+G,WAAW5gB,KAAK,SAAU3S,GAAK,MAAwB,OAAjBA,EAAEkpI,gBAC5DyK,KAAK9X,SAAWoW,oBAAoB1+G,WAAW9xC,IAAI,SAAUue,GAAK,MAAOA,GAAEkpI,aAAeiK,aAAazK,aAAa1oI,EAAEkpI,gBAEnHgC,aAAcyI,KAAMA,KAAMvzJ,KAAMmzJ,cAAgBtB,yBAM3E,QAAS2B,iBAAgBC,kBAErB,QAASC,eAAc5Z,YACnB,GAAIA,YAAcA,WAAWz2I,OACzB,MAAOy2I,YAAWz4I,IAAI,SAAUsyJ,WAAa,MAAOd,kBAAiBc,aAG7E,QAASC,eAAcnzI,MACnB,GAAI1f,QAASgyJ,aAAazK,aAAa7nI,KACvC,OAAIs2G,QAAO+vB,gBAAgB/lJ,SAAWg2H,OAAOwvB,sCAAsCxlJ,SAC/Eg2H,OAAO6vB,mCAAmC7lJ,QACnCA,OAGAiyJ,SAAS,4BAA6BvyI,MAsBrD,QAASozI,cAAa7zJ,KAAMk/B,UACnBw+B,UACDA,WACJ,IAAInS,MAAOmS,QAAQj2D,eAAezH,MAAQ09D,QAAQ19D,QAClDurD,MAAKrjD,KAAKg3B,UACVw+B,QAAQ19D,MAAQurD,KAIpB,QAASuoG,oBAAmB9zJ,KAAM2E,OACzB25I,UACDA,YACJA,QAAQt+I,MAAQ2E,MA/CpB,GAAI5D,SAAW+hC,WAAY,QAiBvB2wH,kBAAiBM,iBACjBN,iBAAiBM,gBAAgB/rJ,QAAQ,SAAUgsJ,IAC3CA,GAAGhtJ,QAAUgpE,YAAYrH,WAAWsrF,gBAAkBD,GAAGp1H,OACzDo1H,GAAGp1H,MAAM52B,QAAQ,SAAUR,MAAQ,MAAOzG,QAAOmzJ,QAAUN,cAAcpsJ,KAAKsO,eAK1F,IAAIq+I,gBAAiBV,iBAAiBU,cAClCA,iBAAkBA,eAAe9wJ,SACjCtC,OAAOq1I,MAAQ+d,eAAe9wJ,QAG9BowJ,iBAAiB3Z,aACjB/4I,OAAO+4I,WAAa4Z,cAAcD,iBAAiB3Z,YAkBvD,KAAK,GAfDp8E,SAAU,KASV4gF,QAAU,KAMLn7I,GAAK,EAAGoX,GAAKk5I,iBAAiB/1F,QAASv6D,GAAKoX,GAAGlX,OAAQF,KAAM,CAClE,GAAIm5I,QAAS/hI,GAAGpX,IACZixJ,eAAgB,CACpB,QAAQ9X,OAAO5lI,MACX,IAAKs5D,aAAYrH,WAAW0rF,YAC5B,IAAKrkF,aAAYrH,WAAW2rF,kBACxBF,cAAgB9X,OAAO5lI,OAASs5D,YAAYrH,WAAW0rF,WACvD,IAAIvrH,QAASwzG,MACb,IAAIiW,SAASzpH,QAAS,CAClB,GAAIyrH,WAAYtB,uBAAuBnqH,OACnCyrH,YACAT,mBAAmBS,UAAUv0J,KAAMu0J,UAAUhB,KAEjD,UAQJ,IAAK,GANDiB,kBAAmBd,cAAc5qH,OAAOgxG,YACxC3mG,WAAarK,OAAOqK,WACpBshH,0BACAC,kBACAC,kBAAmB,EACnBC,kBAAmB,EACdl6I,GAAK,EAAGq/H,aAAe5mG,WAAYz4B,GAAKq/H,aAAa12I,OAAQqX,KAAM,CACxE,GAAIy9B,WAAY4hG,aAAar/H,IACzBm6I,cAAgBnB,cAAcv7G,UAAU2hG,WAC5C2a,wBAAuBvsJ,KAAK2sJ,eAC5BF,iBAAmBA,oBAAsBE,cACrCT,gBACIj8G,UAAU3wC,KACVktJ,eAAexsJ,KAAK0rJ,cAAcz7G,UAAU3wC,OAG5CktJ,eAAexsJ,KAAK,MAExB0sJ,kBAAmB,GAG3B,GAAIrpG,OAASzoB,WAAYsxH,cAAgB,cAAgB,UACrD70F,OAAS60F,cAAgB,WAAarB,aAAa1K,OAAO/L,OAAOt8I,KACjEw0J,oBACAjpG,KAAKuuF,WAAa0a,kBAElBG,mBACAppG,KAAKmmG,oBAAsB+C,wBAE3BG,mBACArpG,KAAKpY,WAAauhH,gBAEjB39B,OAAO+vB,gBAAgBvnF,SACxBs0F,aAAat0F,OAAQhU,KAEzB,MACJ,KAAKykB,aAAYrH,WAAWmsF,oBAC5B,IAAK9kF,aAAYrH,WAAWosF,YAC5B,IAAK/kF,aAAYrH,WAAWqsF,YACxB,GAAIp+B,UAAW0lB,MACf,IAAIiW,SAAS37B,UAAW,CACpB,GAAIluE,QAASqqG,aAAa1K,OAAOzxB,SAAS52H,KAC1C,KAAK+2H,OAAO+vB,gBAAgBp+F,QACxB,GAAIkuE,SAASkyB,YAAa,CACtB,GAAInkJ,OAAQouJ,aAAazK,aAAa1xB,SAASkyB,YAC/CgL,oBAAmBprG,OAAQ/jD,WAG3BmvJ,oBAAmBprG,OAAQsqG,SAAS,2BAA4Bp8B,SAAS52H,OAIrF,GAAIi1J,oBAAqBvB,cAAc98B,SAASkjB,WAChD,IAAImb,mBAAoB,CACpB,GAAI35C,QAASy3C,aAAa1K,OAAOzxB,SAAS52H,KACrC+2H,QAAO+vB,gBAAgBxrC,SACxBu4C,aAAav4C,QAAUx4E,WAAY,WAAYg3G,WAAYmb,uBAY/E,MANIv3F,WACA38D,OAAO28D,QAAUA,SAEjB4gF,UACAv9I,OAAOu9I,QAAUA,SAEdwM,YAAY/pJ,OAAQ0yJ,kBAzL/B,GAAInwH,OAAQliC,SACG,KAAXs4H,SAAqBA,QAAS,EAClC,IASIx6F,UATA+xH,OAAS,GAAItyH,SAAQkxH,QAAQh5I,YAC7BsxI,QAAU,GAAIx+H,KACdurI,oBAAsBnK,sBAAwB3pJ,KAAK+jC,QAAQ4lH,qBAC3D,SAAUpmJ,MAAO8b,MACb,MAAO6iB,OAAM6B,QAAQ4lH,qBAAqBA,qBAAqBpmJ,MAAO8b,MAAOA,OAEjFsqI,qBACAoK,iBAAmBpK,qBAAuBxnJ,YAAanC,KAAK+jC,SAAW4lH,qBAAsBmK,sBAC7F9zJ,KAAK+jC,QAEL4tH,aAAe,GAAI/L,WAAUkB,UAAU+I,OAAQ9I,QAASgN,iBAAkB,SAAUn1J,KAAM2E,OACrFu6B,WACDA,aACJA,SAASl/B,MAAQ2E,QAEjB9D,YAAU0E,GA2KV6vJ,UAAY,GAAIzrI,IACpBqmD,aAAYnH,aAAahyD,WAAY,SAAU4J,MAC3C,OAAQA,KAAK/J,MACT,IAAKs5D,aAAYrH,WAAW0sF,kBACxB,GAAIC,mBAAoB70I,KACpBkwI,gBAAkB2E,kBAAkB3E,gBAAiB4E,aAAeD,kBAAkBC,YACrF5E,kBAED4E,aAAah4F,SAASv1D,QAAQ,SAAUkoB,MACpC,GAAIslI,YAAatlI,KAAKlwB,KAAK0R,KACvB1R,MAAQkwB,KAAKmzF,cAAgBnzF,KAAKlwB,MAAM0R,IAC5C0jJ,WAAUzzI,IAAI3hB,KAAMw1J,gBAKxC,IAAIC,UAAW,SAAUh1I,MACrB,MAAO5J,YAAW6+I,mBAAqB1lF,YAAYwiF,yBAAyB/xI,MAAQuvD,YAAYyiF,cAAckD,QAE9GC,qBAAuB,SAAUhtJ,YACjC,MAAOA,aAAcwsJ,UAAUrgI,IAAInsB,WAAW8I,OAE9CmkJ,WAAa,SAAUp1I,MACvB,MAAOg1I,UAASh1I,OAASm1I,qBAAqBn1I,KAAKzgB,OAEnD81J,uBAAyB,SAAUltJ,YACnC,MAAOA,cAAewsJ,UAAU1zI,IAAI9Y,WAAW8I,OAAS9I,WAAW8I,OAEnEqkJ,aAAe,SAAUt1I,MAAQ,MAAOq1I,wBAAuBr1I,KAAKzgB,MA4PxE,IA1PAgwE,YAAYnH,aAAahyD,WAAY,SAAU4J,MAC3C,OAAQA,KAAK/J,MACT,IAAKs5D,aAAYrH,WAAWqtF,iBACxB,GAAIvC,kBAAmBhzI,IACvB,IAAIgzI,iBAAiBzzJ,KAAM,CACvB,GAAIq2B,WAAYo9H,iBAAiBzzJ,KAAK0R,IAClCmkJ,YAAWpC,kBACXxC,OAAO9wJ,OAAOk2B,WAAayM,WAAY,YAAa9iC,KAAM+1J,aAAatC,oBAGvExC,OAAO9wJ,OAAOk2B,UAAW28H,SAAS,kCAAmCvyI,MAAQ4V,UAAWA,aAGhG,KACJ,KAAK25C,aAAYrH,WAAWstF,qBACxB,GAAIC,sBAAuBz1I,IAC3B,IAAIy1I,qBAAqBl2J,KAAM,CAC3B,GAAIm2J,eAAgBD,qBAAqBl2J,KAAK0R,IAE9Cu/I,QAAO9wJ,OAAOg2J,eAAiBrzH,WAAY,YAAa9iC,KAAM,QAElE,KACJ,KAAKgwE,aAAYrH,WAAWytF,oBACxB,GAAIvE,qBAAsBpxI,IAC1B,KAAKo1I,WAAWhE,qBAAsB,CAElC,GAAIqB,UAAWrB,oBAAoB7xJ,IAC/BkzJ,WAAYA,SAASxhJ,MACrBu/I,OAAO9wJ,OAAO+yJ,SAASxhJ,KAAMshJ,SAAS,uCAAwCE,UAAYlzJ,KAAMkzJ,SAASxhJ,YAM7Hs+D,YAAYnH,aAAahyD,WAAY,SAAU4J,MAC3C,OAAQA,KAAK/J,MACT,IAAKs5D,aAAYrH,WAAW0sF,kBAExB,GAAIC,mBAAoB70I,KACpBkwI,gBAAkB2E,kBAAkB3E,gBAAiB4E,aAAeD,kBAAkBC,YAkB1F,IAjBK5E,iBAEG4E,cACAA,aAAah4F,SAASv1D,QAAQ,SAAUkoB,MACpC,GAAIlwB,MAAOkwB,KAAKlwB,KAAK0R,IAGrB,KAAKwtB,WAAaA,SAASl/B,MAAO,CAC9B,GAAIq2J,UAAWnmI,KAAKmzF,cAAgBnzF,KAAKlwB,KACrC2E,MAAQouJ,aAAazK,aAAa+N,SACjCn3H,YACDA,aACJA,SAASl/B,MAAQ8qJ,YAAYnmJ,MAAO8b,SAKhDkwI,iBAAmBA,gBAAgBj6I,MAAQs5D,YAAYrH,WAAWygF,cAAe,CAGjF,GAAIrkI,MAAO4rI,gBAAgBj/I,KACvBktI,cAAiB75H,KAAMA,KACvBwwI,gBACA3W,aAAaC,OAAS0W,aAAah4F,SAASl8D,IAAI,SAAU6uB,MAAQ,MAAOA,MAAKmzF,cAAiBrjH,KAAMkwB,KAAKmzF,aAAa3xG,KAAM8iH,GAAItkG,KAAKlwB,KAAK0R,MACvIwe,KAAKlwB,KAAK0R,QAEb7Q,UACDA,YACJA,QAAQqH,KAAK02I,cAEjB,KACJ,KAAK5uE,aAAYrH,WAAWqtF,iBACxB,GAAIvC,kBAAmBhzI,IACvB,IAAIgzI,iBAAiBzzJ,MACb61J,WAAWpC,kBAAmB,CAC9B,GAAI6C,QAASP,aAAatC,iBACtB6C,UACKp3H,WACDA,aACJA,SAASo3H,QAAU9C,gBAAgBC,mBAK/C,KACJ,KAAKzjF,aAAYrH,WAAW4tF,qBACxB,GAAIC,iBAAkB/1I,IACtB,IAAI+1I,gBAAgBx2J,MAAQ61J,WAAWW,iBAAkB,CACrD,GAAIC,QAASV,aAAaS,gBACtBC,UACKv3H,WACDA,aACJA,SAASu3H,SAAY3zH,WAAY,cAGzC,KACJ,KAAKktC,aAAYrH,WAAWstF,qBACxB,GAAIC,sBAAuBz1I,IAC3B,IAAIy1I,qBAAqBl2J,MAAQ61J,WAAWK,sBAAuB,CAC/D,GAAIQ,QAASX,aAAaG,qBACtBQ,UACKx3H,WACDA,aACJA,SAASw3H,SAAY5zH,WAAY,cAGzC,KACJ,KAAKktC,aAAYrH,WAAWytF,oBAGxB,GAAIvE,qBAAsBpxI,IAC1B,IAAIo1I,WAAWhE,sBAAwBA,oBAAoB7xJ,KAAM,CAC7D,GAAI22J,QAASZ,aAAalE,qBACtB0C,UAAYtB,uBAAuBpB,oBACnC8E,UACKz3H,WACDA,aACJA,SAASy3H,QACLpC,UAAYzJ,YAAYyJ,UAAUhB,KAAM9yI,OAAUqiB,WAAY,aAG1E,KACJ,KAAKktC,aAAYrH,WAAWiuF,gBACxB,GAAIC,iBAAkBp2I,IACtB,IAAIo1I,WAAWgB,iBAAkB,CAK7B,IAAK,GAJDC,oBACAC,SAAWhB,aAAac,iBACxBG,iBAAmB,EACnBC,eAAiB,EACZ9zJ,GAAK,EAAGoX,GAAKs8I,gBAAgBn5F,QAASv6D,GAAKoX,GAAGlX,OAAQF,KAAM,CACjE,GAAIm5I,QAAS/hI,GAAGpX,IACZ+zJ,cAAY,EAKZA,WAJC5a,OAAOwM,YAIIiK,aAAazK,aAAahM,OAAOwM,aAHjCkO,gBAKhB,IAAIG,YAAS5xJ,EACb,IAAI+2I,OAAOt8I,KAAK0W,MAAQs5D,YAAYrH,WAAWh3D,WAAY,CAEvDwlJ,OADiB7a,OAAOt8I,KACJ0R,KACpBolJ,gBAAgBK,QAAUD,UAC1BD,iBAGAD,iBADqB,gBAAdE,WACYA,UAAY,EAE1BC,QAEDr0H,WAAY,SACZk0D,SAAU,IACVxiF,MACIsuB,WAAY,SACZhtB,WAAYg1I,aAAchoH,WAAY,YAAa9iC,KAAM+2J,UAAYt2I,MAAOzgB,KAAMm3J,SAMtFrM,YAAYkI,SAAS,gCAAiC1W,OAAOt8I,MAAOygB,MAG5Ew2I,gBACIF,WACK73H,WACDA,aACJA,SAAS63H,UAAYjM,YAAYgM,gBAAiBr2I,OAI9D,KACJ,KAAKuvD,aAAYrH,WAAWyuF,kBAuExB,IAAK,GAtEDC,mBAAoB52I,KAsEf/F,GAAK,EAAGQ,GAAKm8I,kBAAkBC,gBAAgBhxF,aAAc5rD,GAAKQ,GAAG7X,OAAQqX,KAAM,CACxF,GAAI68I,qBAAsBr8I,GAAGR,KAtEnB,SAAU68I,qBACpB,GAAIA,oBAAoBv3J,KAAK0W,MAAQs5D,YAAYrH,WAAWh3D,WAAY,CACpE,GAAIuhJ,UAAWqE,oBAAoBv3J,KAC/B4tI,aAAW,EAEXA,UADA2pB,oBAAoBzO,YACTiK,aAAazK,aAAaiP,oBAAoBzO,aAG9CgC,YAAYkI,SAAS,2BAA4BE,UAAWA,SAE3E,IAAIsE,WAAW,CACf,IAAI/B,SAAS4B,oBAAsB5B,SAAS8B,sBACxC3B,qBAAqB1C,UAAW,CAChC,GAAIuE,QAAS3B,uBAAuB5C,SAChCuE,UACKv4H,WACDA,aACJA,SAASu4H,QAAU3M,YAAYld,SAAUntH,OAE7C+2I,UAAW,EAEQ,gBAAZ5pB,WAA2C,gBAAZA,WACnB,iBAAZA,WACPqjB,OAAO9wJ,OAAO+yJ,SAASxhJ,KAAMk8H,UACzB4pB,UACAvG,OAAOnB,gBAAgBoD,SAASxhJ,MAAQoxB,WAAY,YAAa9iC,KAAMkzJ,SAASxhJ,QAG9E8lJ,WACF5pB,WAAa7W,OAAO+vB,gBAAgBlZ,UACpCqjB,OAAO9wJ,OAAO+yJ,SAASxhJ,KAAMo5I,YAAYld,SAAUntH,OAGnDwwI,OAAO9wJ,OAAO+yJ,SAASxhJ,KAAMo5I,YAAYkI,SAAS,8BAA+BE,UAAYlzJ,KAAMkzJ,SAASxhJ,OAAS+O,YAI5H,CAMD,GAAIi3I,UAAW,SAAUxE,UACrB,OAAQA,SAASx8I,MACb,IAAKs5D,aAAYrH,WAAWh3D,WACxB,GAAIgmJ,SAAUzE,SACVtlB,SAAWolB,SAAS,8BAA+B2E,QACvD1G,QAAO9wJ,OAAOw3J,QAAQjmJ,KAAMk8H,UACxB6nB,SAASh1I,QACJye,WACDA,aACJA,SAASy4H,QAAQjmJ,MAAQk8H,SAE7B,MACJ,KAAK59D,aAAYrH,WAAWivF,eAExBF,SADqBxE,SACGlzJ,KACxB,MACJ,KAAKgwE,aAAYrH,WAAWkvF,qBAC5B,IAAK7nF,aAAYrH,WAAWmvF,oBACT5E,SACN31F,SAASv1D,QAAQ0vJ,WAItCA,UAASH,oBAAoBv3J,QAKzBu3J,yBAKpBr4H,UAAYr+B,QAAS,CAChBq+B,SAEIw6F,QACLq3B,iBAAiBl6I,WAAYsxI,QAASjpH,UAFtCA,WAIJ,IAAIn+B,SACA+hC,WAAY,SACZ6uE,QAASvwG,KAAK+jC,QAAQwsE,SAAWolB,OAAOgwB,iBAAkB7nH,SAAUA,SAIxE,OAFIr+B,WACAE,OAAOF,QAAUA,SACdE,SAGR4xJ,oBAEX9xJ,SAAQ8xJ,kBAAoBA,oBA4MxBoF,QAAUvqH,qBAAqB,SAAU5sC,OAAQC,SA0frD,QAASo+I,eAAc+Y,WAAYjzI,MAC/B,GAAIizI,WAAWv4I,WAAW,MAAQsF,KAAM,CACpC,GAAIkzI,YAAaloF,cAAcmoF,UAAUnoF,cAAc9oE,KAAK8oE,cAAchI,QAAQhjD,MAAOizI,YAOzF,QANKC,WAAWx4I,WAAW,MAAQsF,KAAKtF,WAAW,OAE/Cw4I,WAAa,IAAMloF,cAAcmrD,IAAM+8B,YAIpCA,WAAWp0J,QAAQ,MAAO,KAErC,MAAOm0J,YAEX,QAASzzH,aAAYC,GACjB,MAAa,QAANA,GAA4B,kBAANA,IAAiC,gBAANA,GAE5D,QAAS2zH,eAAcl5H,QACnB,MAAOA,QAAOm5H,aAAeD,cAAcl5H,OAAOm5H,cAAgBn5H,OAEtE,QAASo5H,sBAAqBp5H,QAC1B,MAAOA,QAAOp+B,QAAUw3J,qBAAqBp5H,OAAOp+B,SAAWo+B,OA5gBnEj+B,OAAOugB,eAAe1gB,QAAS,cAAgB8D,OAAO;;;;;;;AAatD,GAAI2zJ,oBAAqB,6BACrBC,gBAAmB,WACnB,QAASA,iBAAgBzoH,KAAM4gG,SAAUtvG,MACrChgC,KAAK0uC,KAAOA,KACZ1uC,KAAKsvI,SAAWA,SAChBtvI,KAAKggC,KAAOA,KACZhgC,KAAKo3J,UAAY,GAAI7uI,KACrBvoB,KAAK27I,cAAgB,GAAIpzH,KACzBvoB,KAAKP,QAAU,GAAI8oB,KACnBvoB,KAAKq3J,WAAa,KAAO1oF,cAAc2oF,SAAS5oH,MAmdpD,MAjdAyoH,iBAAgBx2J,UAAU42J,kBAAoB,WAG1C,GAAIC,iBAAkBx3J,KAAKy3J,UAAUz3J,KAAKq3J,WAC1Cr3J,MAAK03J,oBAAoBF,gBAEzB,IAAI15H,UAAW99B,KAAK23J,WAAWH,iBAC3BI,SAAWl0J,MAAMigB,KAAK3jB,KAAKo3J,UAAUl1J,UACpC0gB,OAAO,SAAU7d,GAAK,MAAOA,GAAE8yJ,YAAc9yJ,EAAE+yJ,YAC/C73J,IAAI,SAAU8E,GAAK,OACpBgzJ,YAAahzJ,EAAEgzJ,YACfn5J,KAAMmG,EAAEqgE,YAAYxmE,KACpBY,OAAQuF,EAAEqgE,YAAY5lE,UAEtBw4J,QAAUt0J,MAAMigB,KAAK3jB,KAAKo3J,UAAUl1J,UACnC0gB,OAAO,SAAU7d,GAAK,MAAOA,GAAE8yJ,aAAe9yJ,EAAEouH,WAChD5qH,OAAO,SAAUiW,EAAGzZ,GAErB,MADAyZ,GAAEzZ,EAAE+yJ,UAAY/yJ,EAAEgzJ,YAAchzJ,EAAEnG,MAAQmG,EAAEqgE,YAAY5lE,OACjDgf,OAEP/e,QAAUO,KAAKi4J,aAAaT,gBAChC,QACI15H,UACI4D,WAAY,SACZ6uE,QAASolB,OAAOgwB,iBAChBlmJ,QAASA,QAAQwC,OAASxC,YAAU0E,GAAW25B,SAAUA,SAAUk6H,QAASA,QAC5E1oB,SAAUtvI,KAAKsvI,UAEnBsoB,SAAUA,WAGlBT,gBAAgBtZ,cAAgB,SAAU+Y,WAAYjzI,MAClD,MAAOk6H,eAAc+Y,WAAYjzI,OAErCwzI,gBAAgBx2J,UAAU6wJ,YAAc,SAAUznH,YAC9C,GAAIpqC,QAASK,KAAK27I,cAAcr7H,IAAIypB,WACpC,KAAKpqC,OAAQ,CACT,GAAIoqC,WAAW1rB,WAAW,KAAM,CAC5B,GAAI65I,gBAAiBra,cAAc9zG,WAAY/pC,KAAK0uC,KACpD/uC,QAASK,KAAKggC,KAAK8+G,eAAeoZ,gBAEtCl4J,KAAK27I,cAAcp7H,IAAIwpB,WAAYpqC,QAEvC,MAAOA,SAEXw3J,gBAAgBx2J,UAAU82J,UAAY,SAAU1tH,YAC5C,GAAI7H,OAAQliC,KACRR,OAASQ,KAAKwxJ,YAAYznH,YAC1BpqC,OAASK,KAAKP,QAAQ6gB,IAAIypB,WAC9B,IAAIpqC,OACA,MAAOA,OAEXA,UACA,IAAI+9I,cAAe,SAAUya,eAAgB/jI,UACzC,GAAIyJ,QAASqE,MAAMk2H,SAASruH,WAAY3V,SACxCz0B,QAAOmH,KAAK+2B,QACZs6H,eAAenB,aAAen5H,OAC9BA,OAAOp+B,QAAU04J,eAGrB,IAAI34J,QAAUA,OAAOs+B,SACjB,IAAK,GAAI9pB,OAAOxU,QAAOs+B,SAAU,CAC7B,GAAIqsB,MAAO3qD,OAAOs+B,SAAS9pB,IAC3B,IAAI2hH,OAAO2vB,4CAA4Cn7F,MAAO,CAE1D,GAAIkuG,YAAaxa,cAAc1zF,KAAK3qD,OAAQuqC,WAC5C/pC,MAAKy3J,UAAUY,WACf,IAAIx6H,QAAS79B,KAAKo4J,SAASC,WAAYluG,KAAKvrD,KAC5C8+I,cAAa7/G,OAAQ7pB,SAIrBrU,QAAOmH,KAAK9G,KAAKo4J,SAASruH,WAAY/1B,MAKlD,GAAIxU,QAAUA,OAAOC,QACjB,IAAK,GAAIsC,IAAK,EAAGoX,GAAK3Z,OAAOC,QAASsC,GAAKoX,GAAGlX,OAAQF,KAAM,CACxD,GAAImyJ,mBAAoB/6I,GAAGpX,IACvBs2J,WAAaxa,cAAcqW,kBAAkBvwI,KAAMomB,YAEnDytH,gBAAkBx3J,KAAKy3J,UAAUY,WACrC,IAAInE,kBAAkBzW,OAElB,IAAK,GAAInkI,IAAK,EAAGQ,GAAKo6I,kBAAkBzW,OAAQnkI,GAAKQ,GAAG7X,OAAQqX,KAAM,CAClE,GAAIg/I,YAAax+I,GAAGR,IAChB6kD,OAA8B,gBAAdm6F,YAAyBA,WAAaA,WAAW15J,KACjEw1B,SAAgC,gBAAdkkI,YAAyBA,WAAaA,WAAWllC,GACnEv1F,OAAS79B,KAAKo4J,SAASC,WAAYl6F,OACnCq5F,kBAA6C,GAA1BA,gBAAgBv1J,QAAeu1J,gBAAgB,GAAGrkC,UAC1C,KAA3BqkC,gBAAgB,GAAG54J,OAGnBi/B,OAAOs1F,UAAW,GAEtBuqB,aAAa19I,KAAKo4J,SAASC,WAAYl6F,QAAS/pC,cAMpD,KAAK,GADDmkI,mBAAoBv4J,KAAKy3J,UAAUY,YAC9Bj+I,GAAK,EAAGo+I,kBAAoBD,kBAAmBn+I,GAAKo+I,kBAAkBv2J,OAAQmY,KAAM,CACzF,GAAI+9I,gBAAiBK,kBAAkBp+I,IACnCktC,OAAS6wG,eAAev5J,IAC5B8+I,cAAaya,eAAgB7wG,SAK7C,IAAK9nD,OAAQ,CAIT,GAAIq+B,QAAS79B,KAAKo4J,SAASruH,WAAY,IACvClM,QAAOs1F,UAAW,EAClBxzH,OAAOmH,KAAK+2B,QAGhB,MADA79B,MAAKP,QAAQ8gB,IAAIwpB,WAAYpqC,QACtBA,QAOXw3J,gBAAgBx2J,UAAU+2J,oBAAsB,SAAUF,iBACtD,GAAIj6H,SAAU75B,MAAMigB,KAAK3jB,KAAKo3J,UAAUl1J,SACxClC,MAAKo2J,SAAW,GAAIxyI,KAAI4zI,iBACxBj6H,QAAQ32B,QAAQ5G,KAAKy4J,mBAAoBz4J,OAE7Cm3J,gBAAgBx2J,UAAU83J,mBAAqB,SAAU56H,QACrD,GAAI66H,YAAa3B,cAAcl5H,QAC3BunC,YAAc6xF,qBAAqBp5H,QACnCi6H,WAAa93J,KAAKo2J,SAASziI,IAAI+kI,YAC/BC,gBAAkBb,UAAY1yF,YAAcszF,UAChD76H,QAAOi6H,UAAYA,UACnBj6H,OAAOunC,YAAcA,YACrBvnC,OAAO86H,gBAAkBA,gBACzB96H,OAAOs1F,SAAW/tD,YAAY+tD,UAElCgkC,gBAAgBx2J,UAAUg3J,WAAa,SAAUH,iBAK7C,QAASoB,kBACL,OAAa,CAIT,IAHA,GAAIC,WACAxzJ,MAAQ0yJ,cACRxzI,KAAO2yI,oBACH2B,OAAO52J,QAAUoD,MAAQ,GAC7BwzJ,OAAO//H,QAAQvU,KAAKlf,MAAQkf,KAAKtiB,SACjCoD,MAAQsX,KAAKs9B,MAAM50C,MAAQkf,KAAKtiB,OAEpC42J,QAAO//H,QAAQ,IACf,IAAI0hH,UAAWqe,OAAOhzJ,KAAK,GAC3B,KAAKizJ,cAAcnlI,IAAI6mH,UACnB,MAAOA,WAhBnB,GAAIt4G,OAAQliC,KACRL,UACAm5J,cAAgB,GAAIl1I,KAAI4zI,gBAAgBv3J,IAAI,SAAU8E,GAAK,MAAOA,GAAEnG,QACpEm5J,YAAc,CAgBlBP,iBAAgB5wJ,QAAQ,SAAUi3B,QAAU,MAAOqE,OAAM62H,cAAcl7H,SACvE,IAAIm7H,YAAa,GAAIzwI,IAoCrB,OAnCA7kB,OAAMigB,KAAK3jB,KAAKo3J,UAAUl1J,UAAU0E,QAAQ,SAAUi3B,QAClD,GAAIA,OAAOg6H,aAAeh6H,OAAOs1F,SAAU,CACvC,GAAIjZ,QAASr8E,OAAOj/B,KAChB4I,WAAaq2B,OAAOunC,YAAY5lE,OAAS,IAAMq+B,OAAOunC,YAAYxmE,IAKtE,IAJIi/B,OAAOi6H,YAAcj6H,OAAOk6H,cAC5B79C,OAAS0+C,iBACT/6H,OAAOk6H,YAAc79C,QAErB8+C,WAAWrlI,IAAInsB,YAAa,CAChBwxJ,WAAW14I,IAAI9Y,YACrBV,KAAKozG,YAGX8+C,YAAWz4I,IAAI/Y,YAAa0yG,QAEhCv6G,QAAOu6G,QAAUr8E,OAAOt6B,SAIhCy1J,WAAWpyJ,QAAQ,SAAUqnF,MAAOzmF,YAChC,GAAIymF,MAAMhsF,OAAS,EAAG,CAClB,GAAIkX,IAAK3R,WAAW+B,MAAM,KAAwB0vJ,cAAP9/I,GAAG,GAAmBA,GAAG,IAEhE+/I,YAAcjrE,MAAM9qF,QAAQ81J,eACX,IAAjBC,cACAA,YAAc,GAGlBjrE,MAAMrnF,QAAQ,SAAUhI,KAAMkM,GACtBA,IAAMouJ,cACNv5J,OAAOf,OAAU8iC,WAAY,YAAa9iC,KAAMqvF,MAAMirE,oBAK/Dv5J,QAEXw3J,gBAAgBx2J,UAAUs3J,aAAe,SAAUT,iBAG/C,IAAK,GAFDx4J,SAAU,GAAIupB,KACd4wI,WAAa,GAAIv1I,KACZ7hB,GAAK,EAAGq3J,kBAAoB5B,gBAAiBz1J,GAAKq3J,kBAAkBn3J,OAAQF,KAAM,CACvF,GAAI87B,QAASu7H,kBAAkBr3J,GAC/B,IAAI87B,OAAOs1F,SAAU,CAEjB,GAAI/tD,aAAcvnC,OAAOunC,YACrBi0F,SAAWj0F,YAAY5lE,MAC3B,IAAwB,KAApB4lE,YAAYxmE,KAEZu6J,WAAWp9H,IAAIqpC,YAAY5lE,YAE1B,CAED,GAAIigB,OAAQzgB,QAAQshB,IAAI+4I,SACnB55I,SACDA,SACAzgB,QAAQuhB,IAAI84I,SAAU55I,OAE1B,IAAI2zG,IAAKv1F,OAAOj/B,KACZs2J,OAAS9vF,YAAYxmE,IACzB6gB,OAAM3Y,MAAOlI,KAAMs2J,OAAQ9hC,GAAIA,OAI3C,MAAO1vH,OAAMigB,KAAKw1I,WAAWj3J,UAAUjC,IAAI,SAAU0jB,MAAQ,OAAUA,KAAMA,QAAYhb,OAAOjF,MAAMigB,KAAK3kB,QAAQ0uE,WAAWztE,IAAI,SAAUkZ,IACxI,GAAIwK,MAAOxK,GAAG,EACd,QAAUskI,OADkBtkI,GAAG,GACJwK,KAAMA,UAGzCwzI,gBAAgBx2J,UAAUo4J,cAAgB,SAAUl7H,QAEhD,GAAI86H,iBAAkB96H,OAAO86H,eAC7B,KAAKA,gBAAgBd,WAAY,CAC7Bc,gBAAgBd,YAAa,CAE7B,IAAIzyF,aAAcuzF,gBAAgBvzF,YAC9Bk0F,SAAWt5J,KAAKwxJ,YAAYpsF,YAAY5lE,OAC5C,IAAI85J,SAAU,CACV,GAAI/1J,OAAQ+1J,SAASx7H,SAASsnC,YAAYxmE,KACtC2E,SAAU6hE,YAAYxmE,KAAKyf,WAAW,SACtCs6I,gBAAgBp1J,MAAQvD,KAAKu5J,aAAan0F,YAAY5lE,OAAQ+D,WAK9E4zJ,gBAAgBx2J,UAAU44J,aAAe,SAAUxvH,WAAYxmC,OAC3D,MAAIoyH,QAAO2uB,gBAAgB/gJ,OAChBvD,KAAKw5J,aAAazvH,WAAYxmC,OAErCoyH,OAAOgvB,mBAAmBphJ,OACnBvD,KAAKy5J,gBAAgB1vH,WAAYxmC,OAExCoyH,OAAO4uB,oBAAoBhhJ,OACpBA,MAEJvD,KAAK05J,aAAa3vH,WAAYxmC,QAEzC4zJ,gBAAgBx2J,UAAU64J,aAAe,SAAUzvH,WAAYxmC,OAC3D,GAAI2+B,OAAQliC,IACZ,QACI0hC,WAAY,QACZszG,MAAOzxI,MAAMyxI,MACb8d,QAAS9yJ,KAAK25J,kBAAkB5vH,WAAYxmC,MAAMuvJ,SAClDpa,WAAYn1I,MAAMm1I,YAAcn1I,MAAMm1I,WAAWz4I,IAAI,SAAUK,GAAK,MAAO4hC,OAAMy3H,kBAAkB5vH,WAAYzpC,KAC/Gg8D,QAASt8D,KAAK45J,eAAe7vH,WAAYxmC,MAAM+4D,SAC/C4gF,QAAS35I,MAAM25I,SAAWl9I,KAAK65J,eAAe9vH,WAAYxmC,MAAM25I,WAGxEia,gBAAgBx2J,UAAUi5J,eAAiB,SAAU7vH,WAAYuyB,SAC7D,GAAIp6B,OAAQliC,KACRL,SACJ,KAAK,GAAI01J,UAAU/4F,SAAS,CACxB,GAAI/4D,OAAQ+4D,QAAQ+4F,OACpB11J,QAAO01J,QAAU9xJ,MAAMtD,IAAI,SAAUkiC,GAAK,MAAOD,OAAM43H,cAAc/vH,WAAY5H,KAErF,MAAOxiC,SAEXw3J,gBAAgBx2J,UAAUm5J,cAAgB,SAAU/vH,WAAYmxG,QAC5D,GAAIh5G,OAAQliC,KACRL,QAAW+hC,WAAYw5G,OAAOx5G,WAalC,OAZA/hC,QAAO+4I,WACHwC,OAAOxC,YAAcwC,OAAOxC,WAAWz4I,IAAI,SAAUK,GAAK,MAAO4hC,OAAMy3H,kBAAkB5vH,WAAYzpC,KACrGq1H,OAAO8uB,iBAAiBvJ,UACxBv7I,OAAO2wJ,oBAAsBpV,OAAOoV,qBAChCpV,OAAOoV,oBAAoBrwJ,IAAI,SAAUK,GAAK,MAAOA,IAAKA,EAAEL,IAAI,SAAUue,GAAK,MAAO0jB,OAAMy3H,kBAAkB5vH,WAAYvrB,OAC1Hm3G,OAAO+uB,sBAAsBxJ,SACzBA,OAAOnpG,aACPpyC,OAAOoyC,WACHmpG,OAAOnpG,WAAW9xC,IAAI,SAAUue,GAAK,MAAO0jB,OAAMy3H,kBAAkB5vH,WAAYvrB,OAIzF7e,QAEXw3J,gBAAgBx2J,UAAUk5J,eAAiB,SAAU9vH,WAAYmzG,SAC7D,GAAIv9I,UACJ,KAAK,GAAIqU,OAAOkpI,SAAS,CACrB,GAAI35I,OAAQ25I,QAAQlpI,IACpBrU,QAAOqU,KAAO2hH,OAAOgvB,mBAAmBphJ,OAASvD,KAAKy5J,gBAAgB1vH,WAAYxmC,OAASA,MAE/F,MAAO5D,SAEXw3J,gBAAgBx2J,UAAU84J,gBAAkB,SAAU1vH,WAAYxmC,OAC9D,GAAI2+B,OAAQliC,IACZ,QACI0hC,WAAY,WACZqQ,WAAYxuC,MAAMwuC,WAClBsoG,SAAU92I,MAAM82I,UAAY92I,MAAM82I,SAASp6I,IAAI,SAAUkiC,GAAK,MAAOD,OAAMw3H,aAAa3vH,WAAY5H,KACpG5+B,MAAOvD,KAAK05J,aAAa3vH,WAAYxmC,MAAMA,SAGnD4zJ,gBAAgBx2J,UAAU+4J,aAAe,SAAU3vH,WAAYxmC,OAC3D,GAAI2+B,OAAQliC,IACZ,IAAImjC,YAAY5/B,OACZ,MAAOA,MAEX,IAAIoyH,OAAO+vB,gBAAgBniJ,OACvB,MAAOvD,MAAK+5J,aAAahwH,WAAYxmC,MAEzC,IAAIoyH,OAAOivB,6BAA6BrhJ,OACpC,MAAOvD,MAAK25J,kBAAkB5vH,WAAYxmC,MAE9C,IAAIG,MAAMC,QAAQJ,OACd,MAAOA,OAAMtD,IAAI,SAAUkiC,GAAK,MAAOD,OAAMw3H,aAAa3vH,WAAY5H,IAG1E,IAAI63H,QAASz2J,MACT5D,SACJ,KAAK,GAAIqU,OAAOgmJ,QACZr6J,OAAOqU,KAAOhU,KAAK05J,aAAa3vH,WAAYiwH,OAAOhmJ,KAEvD,OAAOrU,SAEXw3J,gBAAgBx2J,UAAUg5J,kBAAoB,SAAU5vH,WAAYxmC,OAChE,GAAIA,MACA,OAAQA,MAAMm+B,YACV,IAAK,QACD,MAAO1hC,MAAK+5J,aAAahwH,WAAYxmC,MACzC,KAAK,YACD,MAAOvD,MAAKi6J,iBAAiBlwH,WAAYxmC,MAC7C,SACI,MAAOvD,MAAKk6J,sBAAsBnwH,WAAYxmC,OAG1D,MAAOA,QAEX4zJ,gBAAgBx2J,UAAUo5J,aAAe,SAAUv6J,OAAQ+D,OACvD,OACIm+B,WAAY,QACZzwB,QAAS1N,MAAM0N,QACfqyB,KAAM//B,MAAM+/B,KACZrgC,UAAWM,MAAMN,UACjBQ,QAASF,MAAME,QAASjE,OAAQA,SAGxC23J,gBAAgBx2J,UAAUs5J,iBAAmB,SAAUlwH,WAAYxmC,OAC/D,GAAI2+B,OAAQliC,KACRm6J,gBAAkB,SAAUt8H,QAC5B,GAAIunC,aAAcvnC,OAAOunC,WACzB,OAAIA,aAAY5lE,OAAO6e,WAAW,MAG9B6jB,MAAM62H,cAAcl7H,SAEhB6D,WAAY,YACZ9iC,WAEI,GAAI+5J,iBAAkB96H,OAAO86H,eAC7B,IAAiC,MAA7BA,gBAAgBb,UAChB,KAAMrzJ,OAAM,+CAEhB,OAAOk0J,iBAAgBb,UAAYa,gBAAgBZ,YAAcY,gBAAgB/5J,SAOhF8iC,WAAY,YAAa9iC,KAAMwmE,YAAYxmE,KAAMY,OAAQ4lE,YAAY5lE,QAGtF,IAAIm2H,OAAOuvB,oCAAoC3hJ,OAAQ,CACnD,GAAIu6B,UAAW99B,KAAKwxJ,YAAYznH,WAChC,OAAIjM,WAAYA,SAASA,UAAYA,SAASA,SAASv6B,MAAM3E,MAElDu7J,gBAAgBn6J,KAAKo6J,kBAAkBrwH,WAAYxmC,MAAM3E,OAGhE2E,MAAMvB,WAEF0/B,WAAY,YACZ9iC,KAAM2E,MAAM3E,KACZoD,UAAWuB,MAAMvB,UAAU/B,IAAI,SAAUyY,GAAK,MAAOwpB,OAAMw3H,aAAa3vH,WAAYrxB,MAIrFnV,MAEX,GAAIoyH,OAAO2vB,4CAA4C/hJ,OAAQ,CAO3D,GAAIA,MAAM/D,OAAO6e,WAAW,KAAM,CAG9B,GAAIg8I,kBAAmBxc,cAAct6I,MAAM/D,OAAQuqC,YAC/CuwH,eAAiB/2J,MAAM3E,IAC3B,OAAOu7J,iBAAgBn6J,KAAKo6J,kBAAkBC,iBAAkBC,iBAGpE,MAAI/2J,OAAMvB,WAGF0/B,WAAY,YACZ9iC,KAAM2E,MAAM3E,KACZY,OAAQ+D,MAAM/D,OACdwC,UAAWuB,MAAMvB,UAAU/B,IAAI,SAAUyY,GAAK,MAAOwpB,OAAMw3H,aAAa3vH,WAAYrxB,MAGrFnV,MAEX,GAAIoyH,OAAOyvB,oCAAoC7hJ,OAG3C,MAAIA,OAAM/D,OAAO6e,WAAW,MAEpBqjB,WAAY,QACZzwB,QAAS,uCACTxN,SAAWjE,OAAQ+D,MAAM/D,SAI1B+D,OAGf4zJ,gBAAgBx2J,UAAUu5J,sBAAwB,SAAUnwH,WAAYxmC,OACpE,GAAI5D,SAAW+hC,WAAYn+B,MAAMm+B,WACjC,KAAK,GAAI1tB,OAAOzQ,OACZ5D,OAAOqU,KAAOhU,KAAK05J,aAAa3vH,WAAYxmC,MAAMyQ,KAEtD,OAAOrU,SAEXw3J,gBAAgBx2J,UAAUy3J,SAAW,SAAU54J,OAAQZ,MACnD,GAAI27J,WAAY/6J,OAAS,IAAMZ,KAC3Bi/B,OAAS79B,KAAKo3J,UAAU92I,IAAIi6I,UAKhC,OAJK18H,UACDA,QAAWr+B,OAAQA,OAAQZ,KAAMA,MACjCoB,KAAKo3J,UAAU72I,IAAIg6I,UAAW18H,SAE3BA,QAEXs5H,gBAAgBx2J,UAAUy5J,kBAAoB,SAAU56J,OAAQZ,MAE5DoB,KAAKy3J,UAAUj4J,OACf,IAAIq+B,QAAS79B,KAAKo4J,SAAS54J,OAAQZ,KAInC,OAHKi/B,QAAO86H,iBACR34J,KAAKy4J,mBAAmB56H,QAErBA,QAEJs5H,kBAEX13J,SAAQ03J,gBAAkBA,eAC1B,IAAIqD,qBAAuB,WACvB,QAASA,qBAAoBx6H,MACzBhgC,KAAKggC,KAAOA,KACZhgC,KAAK0+H,UAAY,GAAIA,WAAU6yB,kBAMnC,MAJAiJ,qBAAoB75J,UAAUm+I,eAAiB,SAAUp9H,UACrD,GAAIjM,YAAazV,KAAKggC,KAAK2rC,cAAcjqD,SAAW,MAAOktD,YAAY6rF,aAAaC,OACpF,OAAO16J,MAAK0+H,UAAU8yB,YAAY/7I,aAE/B+kJ,sBAEX/6J,SAAQ+6J,oBAAsBA,sBA0B1BG,aAAevuH,qBAAqB,SAAU5sC,OAAQC,SAW1D,QAASm7J,uBAAsBv1J,MAAOuyJ,UAClC,GAAIjzF,UAAWk2F,aAEfl2F,SAAQ79D,KAAK,kBAAoBzB,MAAQ,KAAM,GAG/C,KAAK,GADD5F,SAAU,GAAI8oB,KACTxmB,GAAK,EAAG+4J,WAAalD,SAAU71J,GAAK+4J,WAAW74J,OAAQF,KAAM,CAClE,GAAI0d,OAAQq7I,WAAW/4J,IACnB2rE,QAAUjuE,QAAQ6gB,IAAIb,MAAMjgB,OAC3BkuE,WACDA,WACAjuE,QAAQ8gB,IAAId,MAAMjgB,OAAQkuE,UAE9BA,QAAQ5mE,KAAK2Y,OAUjB,IAAK,GARDs7I,gBAAiBC,QAAQ,SAAU3hJ,GAAK,MAAOA,GAAEza,OACjDq8J,eAAiBD,QAAQ,SAAU3hJ,GAAK,MAAOA,GAAE,KACjD6hJ,eAAiBx3J,MAAMigB,KAAKlkB,SAC3BQ,IAAI,SAAUkZ,IAEf,OADaA,GAAG,GAAcA,GAAG,GACT4a,KAAKgnI,mBAE5BhnI,KAAKknI,gBACD9hJ,GAAK,EAAGgiJ,iBAAmBD,eAAgB/hJ,GAAKgiJ,iBAAiBl5J,OAAQkX,KAAM,CACpF,GAAIG,IAAK6hJ,iBAAiBhiJ,IAAK+sD,SAAW5sD,GAAG,GAAIo0D,QAAUp0D,GAAG,GAC1DikB,QAAUmwC,QAAQztE,IAAI,SAAUoZ,GAAK,MAAOA,GAAEza,KAAO,OAASya,EAAE0+I,aACpEpzF,SAAQ79D,KAAK,WAAay2B,QAAU,WAAa2oC,SAAW,MAEhE,MAAOvB,SAAQ9+D,KAAK,MAGxB,QAASm1J,SAAQI,QACb,MAAO,UAAU1iJ,EAAGnY,GAChB,GAAI86J,IAAKD,OAAO1iJ,GACZ4iJ,GAAKF,OAAO76J,EAChB,OAAO86J,IAAKC,GAAK,EAAID,GAAKC,IAAM,EAAI;;;;;;;AArC5C17J,OAAOugB,eAAe1gB,QAAS,cAAgB8D,OAAO,GACtD,IAAIs3J,cAAe,qDA+BnBp7J,SAAQm7J,sBAAwBA,wBAW5BW,kBAAoBnvH,qBAAqB,SAAU5sC,OAAQC,SAiB/D,QAAS+7J,0BAAyBx/G,SAAUy/G,gBACxC,GAAIC,0BAA2B/sF,cAAcmoF,UAAU2E,eAAe78J,MAClE+8J,aAAeF,eAAe1rI,QAC9B6rI,cAAgBH,eAAe39H,SAC/B+9H,QAAUj8J,OAAOgB,OAAOo7C,SAyB5B,OAxBA6/G,SAAQC,WAAa,SAAUp6I,UAC3B,MAAOitD,eAAcmoF,UAAUp1I,WAAag6I,0BAA4B1/G,SAAS8/G,WAAWp6I,WAEhGm6I,QAAQE,SAAW,SAAUr6I,UACzB,MAAOitD,eAAcmoF,UAAUp1I,WAAag6I,yBAA2BC,aACnE3/G,SAAS+/G,SAASr6I,WAE1Bm6I,QAAQlwF,cACJ,SAAUjqD,SAAUs6I,gBAAiB7+G,SACjC,MAAIwxB,eAAcmoF,UAAUp1I,WAAag6I,yBAC9B9sF,YAAYqtF,iBAAiBv6I,SAAUi6I,aAAcK,iBAAiB,GAE1EhgH,SAAS2vB,cAAcjqD,SAAUs6I,gBAAiB7+G,UAEjE0+G,QAAQK,UACJ,SAAUx6I,SAAUyoC,KAAMgyG,mBAAoBh/G,QAASi/G,aAEnD,GADApgH,SAASkgH,UAAUx6I,SAAUyoC,KAAMgyG,mBAAoBh/G,QAASi/G,aAC5D16I,SAASnW,MAAM8wJ,MAAQD,aAAqC,GAAtBA,YAAYn6J,QAClD0sE,cAAcmoF,UAAUsF,YAAY,GAAG16I,WAAag6I,yBAA0B,CAE9E,GAAIY,cAAe56I,SAASjf,QAAQ45J,IAAK,iBACzC3tF,aAAY6tF,cAAcD,aAAcV,eAAiBnrD,SAAU,WAGxEorD,QAEX,QAASW,uBAAsBC,UAAWlrB,UAAWvxG,MACjD,GAAIU,OAAQ6wG,UAAU3uH,OAAO,SAAU5I,GAAK,OAAQqiJ,IAAIjxJ,KAAK4O,IAC7D,IAAoB,GAAhB0mB,MAAMz+B,OACN,OACI+9B,KAAMA,KACNpO,SACQgL,KAAM,KACN9yB,MAAO,KACP7H,OAAQ,KACRwqE,YAAa,qGACbC,SAAUkC,YAAYjC,mBAAmBloE,MACzCyK,KAAM,IAItB,IAAI0tB,MAAO8D,MAAM,GACbg8H,YAAc9/H,KAAKn6B,QAAQ,QAAS,IACpCk6J,WAAa,GAAIhG,SAAQQ,gBAAgBuF,YAAaD,UAAUG,aAAc,GAAIjG,SAAQ6D,oBAAoBx6H,OAC9G68H,eAAiBF,WAAWpF,oBAC5Bz5H,SAAWmX,KAAKtvC,UAAUk3J,eAAe/+H,UACzCl/B,KAAO+vE,cAAc9oE,KAAK8oE,cAAchI,QAAQ+1F,aAAcD,UAAUK,kBAAkBr6J,QAAQs6J,OAAQ,QAC1GC,aAAe,KAAOruF,cAAc2oF,SAASoF,YAGjD,OADA18H,MAAOw7H,yBAAyBx7H,MAAQphC,KAAMA,KAAMmxB,QADtC4qI,aAAaC,sBAAsBoC,aAAcH,eAAejF,UACR95H,SAAUA,YACvEkC,KAAMA,KAAMi9H,UAAWr+J;;;;;;;AA/DpCgB,OAAOugB,eAAe1gB,QAAS,cAAgB8D,OAAO,GAMtD,IAAI84J,KAAM,WACNU,OAAS,UA0Dbt9J,SAAQ+8J,sBAAwBA,wBAI5Bn3J,MAAQ+mC,qBAAqB,SAAU5sC,OAAQC;;;;;;;AASnD,QAASy9J,UAASv6J,GACd,IAAK,GAAI6b,KAAK7b,GAAQlD,QAAQ4G,eAAemY,KAAI/e,QAAQ+e,GAAK7b,EAAE6b,IAEpE5e,OAAOugB,eAAe1gB,QAAS,cAAgB8D,OAAO,IACtD25J,SAASx+B,WACTw+B,SAASvnC,QACTunC,SAAS3B,qBAIL4B,WAAe92H,cAAYliC,IAAekiC,SAE1C+2H,cAAgBhxH,qBAAqB,SAAU5sC,OAAQC;;;;;;;AAS3D,GAAIY,WAAa8jJ,gBAAkBA,eAAe9jJ,WAAc,WAC5D,GAAIK,eAAgBd,OAAOivE,iBACpBC,uBAA2BprE,QAAS,SAAUpD,EAAGC,GAAKD,EAAEwuE,UAAYvuE,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIie,KAAKje,GAAOA,EAAE8F,eAAemY,KAAIle,EAAEke,GAAKje,EAAEie,IACzE,OAAO,UAAUle,EAAGC,GAEhB,QAASC,MAAOR,KAAKS,YAAcH,EADnCI,cAAcJ,EAAGC,GAEjBD,EAAEK,UAAkB,OAANJ,EAAaX,OAAOgB,OAAOL,IAAMC,GAAGG,UAAYJ,EAAEI,UAAW,GAAIH,SAGnF2B,SAAYgiJ,gBAAkBA,eAAehiJ,UAAavC,OAAOC,QAAU,SAASu5C,GACpF,IAAK,GAAIr0C,GAAG+F,EAAI,EAAGgG,EAAI9O,UAAUC,OAAQ6I,EAAIgG,EAAGhG,IAAK,CACjD/F,EAAI/C,UAAU8I,EACd,KAAK,GAAI0T,KAAKzZ,GAAOnF,OAAOe,UAAU0F,eAAeqpC,KAAK3qC,EAAGyZ,KACzD46B,EAAE56B,GAAKzZ,EAAEyZ,IAEjB,MAAO46B,GAEXx5C,QAAOugB,eAAe1gB,QAAS,cAAgB8D,OAAO,GAMtD,IAAI85J,KAAM,mCACNhB,IAAM,WAENiB,aAAe,mCACfC,gBAAkB,mDAClBC,uBAAyB,4DACzBC,eAAiB,qCACjBC,oBAAuB,WACvB,QAASA,qBAAoB35H,QAAStgC,SAClCzD,KAAK+jC,QAAUA,QACf/jC,KAAKyD,QAAUA,QACfzD,KAAK29J,cAAgB,GAAIp1I,KACzBvoB,KAAK49J,qBAAuB,GAAIr1I,KAChCvoB,KAAK69J,qBAAuB,GAAIj6I,KAChC5jB,KAAK89J,6BAA+B,GAAIl6I,KAmL5C,MAjLA85I,qBAAoB/8J,UAAUm+I,eAAiB,SAAUn3I,UACrD,GAAK3H,KAAKyD,QAAQq4J,WAAWn0J,UAA7B,CAMA,GAAI00J,IAAIjxJ,KAAKzD,UAAW,CACpB,GAAIo2J,WAAY/9J,KAAKg+J,aAAar2J,SAOlC,OANKo2J,aAIDA,WAAa/9J,KAAKi+J,4BAA6Bv8H,WAAc,SAAU6uE,QAAW,EAAGzyE,aAAkBn2B,YAEpGo2J,UAIX,GAAIjgI,UAAW99B,KAAKk+J,yBAAyBv2J,SAC7C,OAAOm2B,WAAYA,eAEvB4/H,oBAAoB/8J,UAAUq9J,aAAe,SAAUG,aACnD,GAAIJ,WAAY/9J,KAAK29J,cAAcr9I,IAAI69I,YACvC,IAAIJ,UACA,MAAOA,UAEX,IAAIK,cAAeD,YAAY17J,QAAQ45J,IAAK,iBAC5C,IAAKr8J,KAAKyD,QAAQq4J,WAAWsC,cAG7B,IACI,GAAIC,qBAAsBppH,KAAK7hB,MAAMpzB,KAAKyD,QAAQs4J,SAASqC,eACvDE,YAAcD,oBACb36J,MAAMC,QAAQ06J,qBAAuBA,qBAAuBA,uBAEjE,IAAIC,YAAYr8J,OAAQ,CACpB,GAAIs8J,aAAcD,YAAY/1J,OAAO,SAAUiW,EAAGpF,GAAK,MAAOoF,GAAE+xF,QAAUn3F,EAAEm3F,QAAU/xF,EAAIpF,GACtFmlJ,aAAYhuD,QAAUlrG,MAAMsgJ,kBAC5B2Y,YAAYx3J,KAAK9G,KAAKi+J,2BAA2BM,YAAaJ,cAItE,MADAn+J,MAAK29J,cAAcp9I,IAAI49I,YAAaG,aAC7BA,YAEX,MAAOjlJ,GAEH,KADAsrB,SAAQngC,MAAM,4BAA8B45J,cACtC/kJ,IAGdqkJ,oBAAoB/8J,UAAUs9J,2BAA6B,SAAUO,YAAaL,aAG9E,GAAIM,cACA/8H,WAAc,SACd6uE,QAAWlrG,MAAMsgJ,iBACjB7nH,SAAY37B,YAAaq8J,YAAY1gI,UAErC0gI,aAAY/+J,UACZg/J,YAAYh/J,QAAU++J,YAAY/+J,SAElC++J,YAAYlvB,WACZmvB,YAAYnvB,SAAWkvB,YAAYlvB,UAEnCkvB,YAAYxG,UACZyG,YAAYzG,QAAUwG,YAAYxG,QAEtC,IAAI0G,aAAc1+J,KAAKk+J,yBAAyBC,YAChD,IAAIO,YAAa,CACb,IAAK,GAAIzvI,QAAQyvI,aAAY5gI,SACpB2gI,YAAY3gI,SAAS7O,QACtBwvI,YAAY3gI,SAAS7O,MAAQyvI,YAAY5gI,SAAS7O,SAUpDuvI,YAAYjuD,SAAWiuD,YAAYjuD,QAAU,IAAMmuD,YAAYj/J,UACjEg/J,YAAYh/J,QAAUi/J,YAAYj/J,SAG1C,MAAOg/J,cAEXf,oBAAoB/8J,UAAU0kC,aAAe,SAAU19B,UACnD,GAAI3H,KAAKyD,QAAQk7J,aACb,MAAO3+J,MAAKyD,QAAQk7J,aAAah3J,SACrC,KAAK3H,KAAKyD,QAAQq4J,WAAWn0J,UACzB,KAAMw1J,YAAW94J,YAAY,mCAAqCsD,SAEtE,OAAO3H,MAAKyD,QAAQs4J,SAASp0J,WAEjC+1J,oBAAoB/8J,UAAUgvI,YAAc,SAAUhoI,UAClD,MAAI3H,MAAKyD,QAAQq4J,WAAWn0J,UACjB3H,KAAKyD,QAAQs4J,SAASp0J,UAE1B,MAEX+1J,oBAAoB/8J,UAAUigC,aAAe,SAAUj5B,UAEnD,KAD6D,IAA1C3H,KAAK+jC,QAAQ66H,yBAAqCpB,uBAAyBD,iBAC7EnyJ,KAAKzD,UAClB,OAAO,CAEX,IAAI00J,IAAIjxJ,KAAKzD,WAEL3H,KAAK6+J,eAAel3J,UAAW,CAC/B,GAAIm3J,gBAAiBnwF,cAAcmoF,UAAUnvJ,SAC7C,OAAO3H,MAAK69J,qBAAqBlqI,IAAImrI,iBACjC9+J,KAAK89J,6BAA6BnqI,IAAImrI,gBAGlD,OAAO,GAEXpB,oBAAoB/8J,UAAUk+J,eAAiB,SAAUl3J,UACrD,GAAIu6B,OAAQliC,KACR++J,iBAAmB,SAAUC,WAC7B,GAAIr/J,QAASuiC,MAAM07H,qBAAqBt9I,IAAI0+I,UAC5C,IAAc,MAAVr/J,OAAgB,CAChB,GAAyC,eAArCgvE,cAAc2oF,SAAS0H,WAEvBr/J,QAAS,MAKT,KACI,GAAIs/J,aAActwF,cAAc9oE,KAAKm5J,UAAW,eAChD,IAAI98H,MAAMz+B,QAAQq4J,WAAWmD,aAAc,CAEvCt/J,QAAS,CACT,IAAIu/J,gBAAiBjqH,KAAK7hB,MAAM8O,MAAMz+B,QAAQs4J,SAASkD,aACvD,IAAIC,eAAeC,QAAS,CACxB,GAAIA,SAAUxwF,cAAcmoF,UAAUnoF,cAAc9oE,KAAKm5J,UAAWE,eAAeC,SACnF,IAAI9C,IAAIjxJ,KAAK+zJ,SAAU,CACnB,GAAIC,cAAeD,QAAQ18J,QAAQ45J,IAAK,iBACxC,IAAIn6H,MAAMz+B,QAAQq4J,WAAWsD,cAAe,CACxC,GAAIthI,UAAWmX,KAAK7hB,MAAM8O,MAAMz+B,QAAQs4J,SAASqD,cAC7CthI,UAASuhI,wBACTn9H,MAAM47H,6BAA6B/hI,IAAIojI,SAMlCrhI,SAASwxG,WACdptG,MAAM27H,qBAAqB9hI,IAAIojI,SAC/Bx/J,QAAS,UAMxB,CACD,GAAI2wD,UAAWqe,cAAchI,QAAQq4F,UAGjCr/J,QAFA2wD,UAAY0uG,WAEHD,iBAAiBzuG,WAOtC,MAAOj3C,GAEH1Z,QAAS,EAGjBuiC,MAAM07H,qBAAqBr9I,IAAIy+I,UAAWr/J,QAE9C,MAAOA,QAEX,OAAOo/J,kBAAiBpwF,cAAchI,QAAQh/D,YAE3C+1J,sBAEXj+J,SAAQi+J,oBAAsBA,mBAE9B,IAAI4B,cAAgB,SAAU90J,QAE1B,QAAS80J,cAAaC,QAASx7H,QAAStgC,QAAS+7J,kBAC7C,GAAIt9H,OAAQ13B,OAAOklC,KAAK1vC,KAAM+jC,QAAStgC,UAAYzD,IACnDkiC,OAAMq9H,QAAUA,QAChBr9H,MAAMu9H,gBAAkB,GAAIl3I,KAC5B2Z,MAAMw9H,iBAAmB,GAAIr6J,OAAMksJ,kBAAkBiO,kBAErDt9H,MAAMyB,SAAWgrC,cAAcmoF,UAAUnoF,cAAc9oE,KAAKq8B,MAAM6B,QAAQJ,SAAU,MAAMlhC,QAAQ,MAAO,KACzGy/B,MAAMy9H,OAAShxF,cAAcmoF,UAAUnoF,cAAc9oE,KAAKq8B,MAAM6B,QAAQ47H,OAAQ,MAAMl9J,QAAQ,MAAO,IACrG,IAAIm9J,SAAUjxF,cAAckxF,SAAS39H,MAAMyB,SAAUzB,MAAMy9H,OAqB3D,OApBAz9H,OAAM49H,uBAAqC,KAAZF,UAAmBA,QAAQvhJ,WAAW,MACrE6jB,MAAM69H,sBAAwBngK,OAAOgB,OAAOshC,MAAMz+B,SAQlDy+B,MAAM69H,sBAAsBjE,WAAa,SAAUp6I,UAC/C,GAAIwgB,MAAMz+B,QAAQq4J,WAAWp6I,UACzB,OAAO,CAEX,IAAI26I,IAAIjxJ,KAAKsW,UAAW,CACpB,GAAI6C,MAAO7C,SAASxb,UAAU,EAAGwb,SAASzf,OAAS,EACnD,OAAOigC,OAAMz+B,QAAQq4J,WAAWv3I,KAAO,mBAE3C,OAAO,GAEX2d,MAAM8B,YAAcm5H,WAAWhzH,kCACxBjI,MAiJX,MA/KA7hC,WAAUi/J,aAAc90J,QAgCxB80J,aAAa3+J,UAAUgrE,cAAgB,SAAUhkE,UAC7C,GAAIq4J,IAAKhgK,KAAKu/J,QAAQ5zF,cAAchkE,SACpC,KAAKq4J,GAAI,CACL,IAAIhgK,KAAKyD,QAAQq4J,WAAWn0J,UAKxB,KAAM,IAAIlD,OAAM,eAAiBkD,SAAW,2BAJ5C,IAAI6rH,YAAaxzH,KAAKyD,QAAQs4J,SAASp0J,SACvCq4J,IAAKpxF,YAAYqtF,iBAAiBt0J,SAAU6rH,WAAY5kD,YAAY6rF,aAAaC,QAAQ,GAMjG,MAAOsF,KAEXV,aAAa3+J,UAAUu9J,yBAA2B,SAAUv2J,UACxD,MAAO3H,MAAK0/J,iBAAiBlO,YAAYxxJ,KAAK2rE,cAAchkE,YAEhE23J,aAAa3+J,UAAU6uI,kBAAoB,SAAU9tH,SAAU29H,sBAC3D,MAAO39H,UAASjf,QAAQ46J,IAAK,IAAM,SAEvCiC,aAAa3+J,UAAU2vI,oBAAsB,SAAU5uH,SAAU49H,sBAAwB,MAAO59H,WAChG49I,aAAa3+J,UAAUs/J,kBAAoB,SAAUt4J,UAGjD,IAAK,GADD+mC,MAAO1uC,KAAK+jC,QAAQJ,SACf5hC,GAAK,EAAGoX,GAAKnZ,KAAK+jC,QAAQm8H,aAAgBn+J,GAAKoX,GAAGlX,OAAQF,KAAM,CACrE,GAAIo+J,aAAchnJ,GAAGpX,GACjB/B,MAAK+jC,QAAQ4W,OACbhW,QAAQngC,MAAM,YAAcmD,SAAW,8BAAgCw4J,aAER,IAA/DxxF,cAAckxF,SAASM,YAAax4J,UAAUxE,QAAQ,OACtDurC,KAAOyxH,aAKf,IADA,GAAIC,cAAezxF,cAAckxF,SAASnxH,KAAM/mC,UACzCy4J,aAAa/hJ,WAAW,KAAOswD,cAAcmrD,MAGhDsmC,aAAeA,aAAa38H,OAAO,EAEvC,OAAOkrC,eAAc9oE,KAAK7F,KAAK+jC,QAAQ47H,OAAQS,eAGnDd,aAAa3+J,UAAU0/J,qBAAuB,SAAU3+I,UAAY,MAAOA,WAC3E49I,aAAa3+J,UAAUu+I,qBAAuB,SAAUv8I,EAAG80I,gBACvD,GAAIzjI,KAAMrR,EAAI,KAAO80I,gBAAkB,IACnC93I,OAASK,KAAKy/J,gBAAgBn/I,IAAItM,MAAQ,IAC9C,KAAKrU,OAAQ,CACT,IAAK83I,iBAAmBA,eAAex1I,OAAQ,CAC3C,GAAuB,IAAnBU,EAAEQ,QAAQ,KACV,KAAM,IAAIsB,OAAM,2DAGpBgzI,gBAAiBz3I,KAAKqgK,qBAAqB1xF,cAAc9oE,KAAK7F,KAAK2jC,SAAU,aAEjFhhC,EAAIA,EAAEF,QAAQ46J,IAAK,GACnB,IAAIzkH,UAAWg2B,YAAY0xF,kBAAkB39J,EAAG80I,eAAeh1I,QAAQ,MAAO,KAAMzC,KAAK+jC,QAAS/jC,KAAK+/J,uBAClGniB,cACLj+I,QAASi5C,SAAW54C,KAAKqgK,qBAAqBznH,SAAS2nH,kBAAoB,KAC3EvgK,KAAKy/J,gBAAgBl/I,IAAIvM,IAAKrU,QAElC,MAAOA,SAiBX2/J,aAAa3+J,UAAUy0I,qBAAuB,SAAUorB,aAAc/oB,gBAG9D+oB,eAAiB/oB,gBAAmBz3I,KAAKyD,QAAQq4J,WAAW0E,eAC5DxgK,KAAKyD,QAAQg9J,iBAAiBD,cAElC/oB,eAAiBz3I,KAAK0gK,kBAAkBjpB,eACxC,IAAIkpB,eAAgBhyF,cAAchI,QAAQ8wE,eAE1C+oB,cAAeA,aAAa/9J,QAAQ46J,IAAK,GACzC,IAAIuD,kBAAmBJ,aAAar9J,QA3TzB,kBA4TPgyI,cAAqC,IAAtByrB,iBACf,KACAJ,aAAat6J,UAAU06J,iBA9ThB,iBA8TgD3+J,OAE3D,OADsBq7J,cAAalyJ,KAAKo1J,cAGhCrrB,aAEOn1I,KAAK6gK,YAAYF,cAAe3gK,KAAK2/J,OApUzC,iBAoUiExqB,eAIpEqrB,aAAexgK,KAAK0gK,kBAAkBF,cAC/BxgK,KAAK6gK,YAAYF,cAAeH,eAKvCrrB,eAIKn1I,KAAK8/J,yBAENU,aAAeA,aAAa/9J,QAAQzC,KAAK2jC,SAAU3jC,KAAK2/J,SAExDlC,eAAeryJ,KAAKo1J,cACbA,aAEJxgK,KAAK6gK,YAAYF,cAAeH,gBAInDlB,aAAa3+J,UAAUijC,uBAAyB,SAAUjhC,EAAG80I,gBACzD,MAAOz3I,MAAKgkC,YAAY/3B,QAAQwrI,eAAgB90I,IAKpD28J,aAAa3+J,UAAU+/J,kBAAoB,SAAUI,UACjD,GAAIF,kBAAmBE,SAAS39J,QApWrB,iBAqWX,QAA0B,IAAtBy9J,iBAEOjyF,cAAc9oE,KAAK7F,KAAK2/J,OAAQmB,SAAS56J,UAAU06J,mBAKnDE,SAASr+J,QAAQzC,KAAK2jC,SAAU3jC,KAAK2/J,SAGpDL,aAAa3+J,UAAUkgK,YAAc,SAAUl9I,KAAMo9I,IACjD,GAAIC,OAAQryF,cAAckxF,SAASl8I,KAAMo9I,IAAIt+J,QAAQ,MAAO,IAC5D,OAAOu+J,OAAM3iJ,WAAW,KAAO2iJ,MAAQ,KAAOA,OAE3C1B,cACT5B,oBACFj+J,SAAQ6/J,aAAeA,YACvB,IAAI2B,4BAA8B,WAC9B,QAASA,8BACLjhK,KAAKkhK,iBAGT,MADAD,4BAA2BtgK,UAAU8/J,iBAAmB,SAAU/+I,UAAY1hB,KAAKkhK,cAAcx/I,WAAY,GACtGu/I,6BAEXxhK,SAAQwhK,2BAA6BA,0BACrC,IAAIE,6BAA+B,SAAU32J,QAEzC,QAAS22J,6BAA4BnhI,MACjC,GAAIkC,OAAQ13B,OAAOklC,KAAK1vC,OAASA,IAKjC,OAJAkiC,OAAMlC,KAAOA,KACTA,KAAKohI,kBACLl/H,MAAMk/H,gBAAkB,SAAUC,eAAiB,MAAOrhI,MAAKohI,gBAAgBC,iBAE5En/H,MAaX,MApBA7hC,WAAU8gK,4BAA6B32J,QASvC22J,4BAA4BxgK,UAAUm7J,WAAa,SAAUp6I,UACzD,MAAO1hB,MAAKkhK,cAAcx/I,WAAa1hB,KAAKggC,KAAK87H,WAAWp6I,WAEhEy/I,4BAA4BxgK,UAAUo7J,SAAW,SAAUr6I,UAAY,MAAO1hB,MAAKggC,KAAK+7H,SAASr6I,WACjGy/I,4BAA4BxgK,UAAUg+J,aAAe,SAAU55J,GAC3D,IAAK/E,KAAKggC,KAAK87H,WAAW/2J,GAEtB,KAAM,IAAIN,OAAM,gDAAkDM,EAEtE,OAAOgwE,SAAQ9oE,QAAQjM,KAAKggC,KAAK+7H,SAASh3J,KAEvCo8J,6BACTF,2BACFxhK,SAAQ0hK,4BAA8BA,2BACtC,IAAIG,yBAA2B,SAAU92J,QAErC,QAAS82J,2BACL,MAAkB,QAAX92J,QAAmBA,OAAOzK,MAAMC,KAAMgC,YAAchC,KAqB/D,MAvBAK,WAAUihK,wBAAyB92J,QAInC82J,wBAAwB3gK,UAAUm7J,WAAa,SAAUp6I,UACrD,MAAO1hB,MAAKkhK,cAAcx/I,WAAagtD,YAAY9H,WAAWllD,WAElE4/I,wBAAwB3gK,UAAUygK,gBAAkB,SAAUC,eAC1D,IACI,MAAO3yF,aAAY6yF,SAASF,eAAeG,cAE/C,MAAOnoJ,GACH,OAAO,IAGfioJ,wBAAwB3gK,UAAUo7J,SAAW,SAAUr6I,UAAY,MAAOgtD,aAAY+yF,aAAa//I,SAAU,SAC7G4/I,wBAAwB3gK,UAAUg+J,aAAe,SAAU55J,GACvD,IAAK/E,KAAK87J,WAAW/2J,GAEjB,KAAM,IAAIN,OAAM,gDAAkDM,EAEtE,OAAOgwE,SAAQ9oE,QAAQjM,KAAK+7J,SAASh3J,KAElCu8J,yBACTL,2BACFxhK,SAAQ6hK,wBAA0BA,0BAI9BI,UAAYt1H,qBAAqB,SAAU5sC,OAAQC;;;;;;;AASvDG,OAAOugB,eAAe1gB,QAAS,cAAgB8D,OAAO,KAOtD,SAAW0/G,aAIPA,YAAYA,YAAiB,IAAI,GAAK,MAItCA,YAAYA,YAAoB,OAAI,GAAK,SAIzCA,YAAYA,YAAoB,OAAI,GAAK,SAIzCA,YAAYA,YAAqB,QAAI,GAAK,UAI1CA,YAAYA,YAAuB,UAAI,GAAK,YAI5CA,YAAYA,YAAkB,KAAI,GAAK,OAIvCA,YAAYA,YAAqB,QAAI,GAAK,UAI1CA,YAAYA,YAAmB,MAAI,GAAK,SAC3BxjH,QAAQwjH,cAAgBxjH,QAAQwjH,mBAI7C0+C,gBAAkBv1H,qBAAqB,SAAU5sC,OAAQC;;;;;;;AAS7DG,OAAOugB,eAAe1gB,QAAS,cAAgB8D,OAAO,GAGtD,IAAIuhE,iBACJ,SAAWA,gBACPA,eAAeA,eAAsB,MAAI,GAAK,QAC9CA,eAAeA,eAAwB,QAAI,GAAK,WACjDA,eAAiBrlE,QAAQqlE,iBAAmBrlE,QAAQqlE,mBACvD,IAAI88F,gBAAkB,WAClB,QAASA,gBAAetsJ,KAAMrE,QAAStK,KACnC3G,KAAKsV,KAAOA,KACZtV,KAAKiR,QAAUA,QACfjR,KAAK2G,IAAMA,IAEf,MAAOi7J,kBAEXniK,SAAQmiK,eAAiBA,cAEzB,IAAIC,SAAW,WACX,QAASA,SAAQpnH,MAAOjxB,MAAO/lB,SAC3BzD,KAAKy6C,MAAQA,MACbz6C,KAAKwpB,MAAQA,MACbxpB,KAAKyD,QAAUA,QAwXnB,MAtXAo+J,SAAQlhK,UAAU08D,QAAU,SAAU12D,KAAO,MAAOA,KAAID,MAAM1G,OAC9D6hK,QAAQlhK,UAAUwtE,eAAiB,SAAUxnE,KACzC3G,KAAK8hK,cACL,IAAI17J,MAAOO,IAAID,MAAM1G,KAIrB,OAHIA,MAAKyD,QAAQmgD,OAASx9C,KAAK27J,UAC3B/hK,KAAKgiK,cAAc,yDAA0Dr7J,KAE1E3G,KAAK8hK,aAEhBD,QAAQlhK,UAAUwS,YAAc,SAAUxM,KAGtC,QAASmwJ,WAAUxhJ,KAAMkP,OACrB,OAAQlP,MACJ,IAAKosJ,WAAUz+C,YAAYg/C,UAC3B,IAAKP,WAAUz+C,YAAYi/C,KACvB,MAAOpL,WAAUtyI,MAAOk9I,UAAUz+C,YAAYk/C,OAEtD,MAAO7sJ,MARX,GAAI4sB,OAAQliC,KAURq9D,QAAU,SAAU12D,IAAK2rF,WACzB,GAAIlsF,MAAO87B,MAAMm7B,QAAQ12D,IACzB,IAAIP,KAAKg8J,SAAU,CACf,OAAQ9vE,WACJ,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,MACL,IAAK,MAED,KACJ,SACIpwD,MAAMm2G,YAAY,+BAAgC1xI,KAG1D,MAAOu7B,OAAM1Y,MAAM64I,mBAAmBj8J,MAE1C,MAAOA,OAEPk8J,SAAWjlG,QAAQ12D,IAAIyM,KAAMzM,IAAI2rF,WACjCiwE,UAAYllG,QAAQ12D,IAAI0M,MAAO1M,IAAI2rF,WACnCkwE,YAAcxiK,KAAKwpB,MAAMi5I,YAAYH,UACrCI,aAAe1iK,KAAKwpB,MAAMi5I,YAAYF,WACtCI,SAAW7L,UAAU0L,YAAaE,cAClCE,UAAY9L,UAAU4L,aAAcF,aAIpCK,SAAWF,UAAY,EAAIC,SAC/B,QAAQj8J,IAAI2rF,WACR,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,MACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,OAAQuwE,UACJ,IAAKnB,WAAUz+C,YAAYrlD,KAAO,EAAI8jG,UAAUz+C,YAAYrlD,IAC5D,IAAK8jG,WAAUz+C,YAAYlyG,QAAU,EAAI2wJ,UAAUz+C,YAAYrlD,IAC/D,IAAK8jG,WAAUz+C,YAAYrlD,KAAO,EAAI8jG,UAAUz+C,YAAYlyG,OAC5D,IAAK2wJ,WAAUz+C,YAAYlyG,QAAU,EAAI2wJ,UAAUz+C,YAAYlyG,OAC3D,MAAO/Q,MAAKwpB,MAAMk0C,eAAegkG,UAAUz+C,YAAYlyG,OAC3D,SACI,GAAI+xJ,UAAWn8J,IAAIyM,IACnB,QAAQuvJ,UACJ,IAAKjB,WAAUz+C,YAAYrlD,IAC3B,IAAK8jG,WAAUz+C,YAAYlyG,OACvB+xJ,SAAWn8J,IAAI0M,MAGvB,MAAOrT,MAAKq4I,YAAY,0BAA2ByqB,UAE/D,IAAK,IACD,OAAQD,UACJ,IAAKnB,WAAUz+C,YAAYrlD,KAAO,EAAI8jG,UAAUz+C,YAAYrlD,IAC5D,IAAK8jG,WAAUz+C,YAAYrlD,KAAO,EAAI8jG,UAAUz+C,YAAY8/C,QAC5D,IAAKrB,WAAUz+C,YAAYrlD,KAAO,EAAI8jG,UAAUz+C,YAAYlyG,OAC5D,IAAK2wJ,WAAUz+C,YAAYrlD,KAAO,EAAI8jG,UAAUz+C,YAAYk/C,MAC5D,IAAKT,WAAUz+C,YAAY8/C,SAAW,EAAIrB,UAAUz+C,YAAYrlD,IAChE,IAAK8jG,WAAUz+C,YAAYlyG,QAAU,EAAI2wJ,UAAUz+C,YAAYrlD,IAC/D,IAAK8jG,WAAUz+C,YAAYk/C,OAAS,EAAIT,UAAUz+C,YAAYrlD,IAC1D,MAAO59D,MAAKgjK,OAChB,KAAKtB,WAAUz+C,YAAYrlD,KAAO,EAAI8jG,UAAUz+C,YAAYx9G,OAC5D,IAAKi8J,WAAUz+C,YAAY8/C,SAAW,EAAIrB,UAAUz+C,YAAYx9G,OAChE,IAAKi8J,WAAUz+C,YAAYlyG,QAAU,EAAI2wJ,UAAUz+C,YAAYx9G,OAC/D,IAAKi8J,WAAUz+C,YAAYx9G,QAAU,EAAIi8J,UAAUz+C,YAAYrlD,IAC/D,IAAK8jG,WAAUz+C,YAAYx9G,QAAU,EAAIi8J,UAAUz+C,YAAY8/C,QAC/D,IAAKrB,WAAUz+C,YAAYx9G,QAAU,EAAIi8J,UAAUz+C,YAAYlyG,OAC/D,IAAK2wJ,WAAUz+C,YAAYx9G,QAAU,EAAIi8J,UAAUz+C,YAAYx9G,OAC/D,IAAKi8J,WAAUz+C,YAAYx9G,QAAU,EAAIi8J,UAAUz+C,YAAYk/C,MAC/D,IAAKT,WAAUz+C,YAAYk/C,OAAS,EAAIT,UAAUz+C,YAAYx9G,OAC1D,MAAOzF,MAAKwpB,MAAMk0C,eAAegkG,UAAUz+C,YAAYx9G,OAC3D,KAAKi8J,WAAUz+C,YAAYlyG,QAAU,EAAI2wJ,UAAUz+C,YAAYlyG,OAC3D,MAAO/Q,MAAKwpB,MAAMk0C,eAAegkG,UAAUz+C,YAAYlyG,OAC3D,KAAK2wJ,WAAUz+C,YAAY8/C,SAAW,EAAIrB,UAAUz+C,YAAYlyG,OAChE,IAAK2wJ,WAAUz+C,YAAYk/C,OAAS,EAAIT,UAAUz+C,YAAYlyG,OAC1D,MAAO/Q,MAAKq4I,YAAY,yBAA0B1xI,IAAIyM,KAC1D,KAAKsuJ,WAAUz+C,YAAYlyG,QAAU,EAAI2wJ,UAAUz+C,YAAY8/C,QAC/D,IAAKrB,WAAUz+C,YAAYlyG,QAAU,EAAI2wJ,UAAUz+C,YAAYk/C,MAC3D,MAAOniK,MAAKq4I,YAAY,yBAA0B1xI,IAAI0M,MAC1D,SACI,MAAOrT,MAAKq4I,YAAY,kDAAmD1xI,KAEvF,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,MACL,IAAK,MACD,OAAQk8J,UACJ,IAAKnB,WAAUz+C,YAAYrlD,KAAO,EAAI8jG,UAAUz+C,YAAYrlD,IAC5D,IAAK8jG,WAAUz+C,YAAYrlD,KAAO,EAAI8jG,UAAUz+C,YAAY8/C,QAC5D,IAAKrB,WAAUz+C,YAAYrlD,KAAO,EAAI8jG,UAAUz+C,YAAYlyG,OAC5D,IAAK2wJ,WAAUz+C,YAAYrlD,KAAO,EAAI8jG,UAAUz+C,YAAYx9G,OAC5D,IAAKi8J,WAAUz+C,YAAYrlD,KAAO,EAAI8jG,UAAUz+C,YAAYk/C,MAC5D,IAAKT,WAAUz+C,YAAY8/C,SAAW,EAAIrB,UAAUz+C,YAAYrlD,IAChE,IAAK8jG,WAAUz+C,YAAY8/C,SAAW,EAAIrB,UAAUz+C,YAAY8/C,QAChE,IAAKrB,WAAUz+C,YAAYlyG,QAAU,EAAI2wJ,UAAUz+C,YAAYrlD,IAC/D,IAAK8jG,WAAUz+C,YAAYlyG,QAAU,EAAI2wJ,UAAUz+C,YAAYlyG,OAC/D,IAAK2wJ,WAAUz+C,YAAYx9G,QAAU,EAAIi8J,UAAUz+C,YAAYrlD,IAC/D,IAAK8jG,WAAUz+C,YAAYx9G,QAAU,EAAIi8J,UAAUz+C,YAAYx9G,OAC/D,IAAKi8J,WAAUz+C,YAAYk/C,OAAS,EAAIT,UAAUz+C,YAAYrlD,IAC9D,IAAK8jG,WAAUz+C,YAAYk/C,OAAS,EAAIT,UAAUz+C,YAAYk/C,MAC1D,MAAOniK,MAAKwpB,MAAMk0C,eAAegkG,UAAUz+C,YAAY8/C,QAC3D,SACI,MAAO/iK,MAAKq4I,YAAY,qDAAsD1xI,KAE1F,IAAK,KACD,MAAO47J,UACX,KAAK,KACD,MAAOviK,MAAKwpB,MAAMy5I,aAAaX,SAAUC,WAEjD,MAAOviK,MAAKq4I,YAAY,yBAA2B1xI,IAAI2rF,UAAW3rF,MAEtEk7J,QAAQlhK,UAAU2S,WAAa,SAAU3M,KAMrC,MALI3G,MAAK8hK,aAEL3E,WAAWjqJ,iBAAiBvM,IAAK3G,MAG9BA,KAAKwpB,MAAMk0C,eAAegkG,UAAUz+C,YAAYg/C,YAE3DJ,QAAQlhK,UAAU6S,iBAAmB,SAAU7M,KAK3C,MAHI3G,MAAK8hK,aACL3E,WAAWjqJ,iBAAiBvM,IAAK3G,MAE9BA,KAAKwpB,MAAMy5I,aAAajjK,KAAKq9D,QAAQ12D,IAAI8M,SAAUzT,KAAKq9D,QAAQ12D,IAAI+M,YAE/EmuJ,QAAQlhK,UAAUgT,kBAAoB,SAAUhN,KAC5C,GAAIu7B,OAAQliC,KAKR8B,KAAO6E,IAAI7E,KAAK7B,IAAI,SAAUm5B,KAAO,MAAO8I,OAAMm7B,QAAQjkC,OAC1DxlB,OAAS5T,KAAKq9D,QAAQ12D,IAAIiN,OAC9B,KAAKA,SAAWA,OAAOmuJ,SACnB,MAAO/hK,MAAKq4I,YAAY,8BAA+B1xI,IAC3D,IAAIkwC,WAAYjjC,OAAOsvJ,gBAAgBphK,KACvC,OAAI+0C,WACOA,UAAUl3C,OAEdK,KAAKq4I,YAAY,gDAAiD1xI,MAE7Ek7J,QAAQlhK,UAAUkT,sBAAwB,SAAUlN,KAChD,GAAIu7B,OAAQliC,IAIZ,QACIpB,KAAM,WACN0W,KAAM,YACNowD,SAAU,cACVt/D,SAAMjC,GACNwhE,cAAWxhE,GACX49J,UAAU,EACVK,UAAU,EACVe,QAAQ,EACR3+F,eAAYrgE,GACZm4D,QAAS,WAAc,MAAOp6B,OAAMuY,OACpC2oH,WAAY,WAAc,UAC1BF,gBAAiB,SAAU1lI,SAC3B6lI,QAAS,SAAUC,cAG3BzB,QAAQlhK,UAAUmT,mBAAqB,SAAUnN,KAK7C,MAHI3G,MAAK8hK,aACL3E,WAAWjqJ,iBAAiBvM,IAAK3G,MAE9BA,KAAKujK,eAEhB1B,QAAQlhK,UAAUoT,eAAiB,SAAUpN,KACzC,GAAI68J,YAAaxjK,KAAKq9D,QAAQ12D,IAAIrE,KAC9BmhK,QAAUzjK,KAAKq9D,QAAQ12D,IAAIqN,IAE/B,OADawvJ,YAAWH,QAAQI,UACfzjK,KAAKgjK,SAE1BnB,QAAQlhK,UAAUsT,gBAAkB,SAAUtN,KAE1C,MAAO3G,MAAKq9D,QAAQ12D,IAAIpD,QAE5Bs+J,QAAQlhK,UAAUuT,kBAAoB,SAAUvN,KAC5C,GAAIu7B,OAAQliC,IAEZ,OAAOA,MAAKwpB,MAAMk6I,cAAcvqJ,GAAKnZ,KAAKwpB,OAAOy5I,aAAaljK,MAAMoZ,GAAIxS,IAAI4M,YAAYtT,IAAI,SAAUiY,SAAW,MAAOgqB,OAAMm7B,QAAQnlD,YACtI,IAAIiB,KAER0oJ,QAAQlhK,UAAUwT,gBAAkB,SAAUxN,KAM1C,MAJI3G,MAAK8hK,aACL3E,WAAWjqJ,iBAAiBvM,IAAK3G,MAG9BA,KAAKgjK,SAEhBnB,QAAQlhK,UAAUyT,sBAAwB,SAAUzN,KAEhD,OAAQA,IAAIpD,OACR,KAAK,EACL,KAAK,EACD,MAAOvD,MAAKwpB,MAAMk0C,eAAegkG,UAAUz+C,YAAY8/C,QAC3D,KAAK,MACD,MAAO/iK,MAAKwpB,MAAMk0C,eAAegkG,UAAUz+C,YAAYi/C,KAC3D,UAAK/9J,GACD,MAAOnE,MAAKwpB,MAAMk0C,eAAegkG,UAAUz+C,YAAYg/C,UAC3D,SACI,aAAet7J,KAAIpD,OACf,IAAK,SACD,MAAOvD,MAAKwpB,MAAMk0C,eAAegkG,UAAUz+C,YAAYx9G,OAC3D,KAAK,SACD,MAAOzF,MAAKwpB,MAAMk0C,eAAegkG,UAAUz+C,YAAYlyG,OAC3D,SACI,MAAO/Q,MAAKq4I,YAAY,yBAA0B1xI,QAItEk7J,QAAQlhK,UAAU0T,gBAAkB,SAAU1N,KAC1C,MAAO3G,MAAK2jK,kBAAkB3jK,KAAKq9D,QAAQ12D,IAAI2N,UAAW3N,MAE9Dk7J,QAAQlhK,UAAU4T,UAAY,SAAU5N,KACpC,GAAIu7B,OAAQliC,KAGR6yD,KAAO7yD,KAAKwpB,MAAMg0C,WAAWl9C,IAAI3Z,IAAI/H,KACzC,KAAKi0D,KACD,MAAO7yD,MAAKq4I,YAAY,uBAAyB1xI,IAAI/H,KAAO,SAAU+H,IAC1E,IAAIi9J,SAAU5jK,KAAKq9D,QAAQ12D,IAAI6N,KAC3BqiC,UAAYgc,KAAKqwG,iBAAiBU,SAASj7J,OAAOhC,IAAI7E,KAAK7B,IAAI,SAAUm5B,KAAO,MAAO8I,OAAMm7B,QAAQjkC,QACzG,OAAKyd,WAEEA,UAAUl3C,OADNK,KAAKq4I,YAAY,kDAAmD1xI,MAGnFk7J,QAAQlhK,UAAU8T,eAAiB,SAAU9N,KAEzC,MAAO3G,MAAKwpB,MAAMk0C,eAAegkG,UAAUz+C,YAAY8/C,UAE3DlB,QAAQlhK,UAAUgU,mBAAqB,SAAUhO,KAC7C,GAAIuf,gBAAiBlmB,KAAKq9D,QAAQ12D,IAAI+N,WACtC,OAAO1U,MAAKwpB,MAAM64I,mBAAmBn8I,iBAEzC27I,QAAQlhK,UAAUiU,kBAAoB,SAAUjO,KAC5C,MAAO3G,MAAK6jK,oBAAoB7jK,KAAKq9D,QAAQ12D,IAAI2N,UAAW3N,MAEhEk7J,QAAQlhK,UAAUkU,mBAAqB,SAAUlO,KAE7C,MAAO3G,MAAKq9D,QAAQ12D,IAAIpD,QAE5Bs+J,QAAQlhK,UAAUmU,WAAa,SAAUnO,KAErC,MAAO3G,MAAKwpB,MAAMk0C,eAAegkG,UAAUz+C,YAAYrlD,MAE3DikG,QAAQlhK,UAAUoU,oBAAsB,SAAUpO,KAC9C,MAAO3G,MAAK2jK,kBAAkB3jK,KAAKwpB,MAAM64I,mBAAmBriK,KAAKq9D,QAAQ12D,IAAI2N,WAAY3N,MAE7Fk7J,QAAQlhK,UAAUqU,sBAAwB,SAAUrO,KAChD,MAAO3G,MAAK6jK,oBAAoB7jK,KAAKwpB,MAAM64I,mBAAmBriK,KAAKq9D,QAAQ12D,IAAI2N,WAAY3N,MAE/F/G,OAAOugB,eAAe0hJ,QAAQlhK,UAAW,WACrC2f,IAAK,WACD,GAAI3gB,QAASK,KAAK8jK,QAIlB,OAHKnkK,UACDA,OAASK,KAAK8jK,SAAW9jK,KAAKwpB,MAAMk0C,eAAegkG,UAAUz+C,YAAYrlD,MAEtEj+D,QAEX0gB,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe0hJ,QAAQlhK,UAAW,iBACrC2f,IAAK,WACD,GAAI3gB,QAASK,KAAK+jK,cAIlB,OAHKpkK,UACDA,OAASK,KAAK+jK,eAAiB/jK,KAAKwpB,MAAMk0C,eAAegkG,UAAUz+C,YAAYg/C,YAE5EtiK,QAEX0gB,YAAY,EACZD,cAAc,IAElByhJ,QAAQlhK,UAAUgjK,kBAAoB,SAAUlmG,aAAc92D,KAC1D,GAAIu7B,OAAQliC,IACZ,IAAIA,KAAKgkK,MAAMvmG,cACX,MAAOz9D,MAAKgjK,OAGhB,IAAIt7H,QAAS+1B,aAAanB,UAAUh8C,IAAI3Z,IAAI/H,KAC5C,KAAK8oC,OACD,MAAO1nC,MAAKq4I,YAAY,mBAAqB1xI,IAAI/H,KAAO,IAAK+H,IACjE,KAAK+gC,OAAOthC,KACR,MAAOpG,MAAKq4I,YAAY,8BAAgC1xI,IAAI/H,KAAO,IAAK+H,IAC5E,KAAK+gC,OAAOthC,KAAK27J,SACb,MAAO/hK,MAAKq4I,YAAY,WAAa1xI,IAAI/H,KAAO,oBAAqB+H,IACzE,IAAIkwC,WAAYnP,OAAOthC,KAAK88J,gBAAgBv8J,IAAI7E,KAAK7B,IAAI,SAAUm5B,KAAO,MAAO8I,OAAMm7B,QAAQjkC,OAC/F,OAAKyd,WAEEA,UAAUl3C,OADNK,KAAKq4I,YAAY,kDAAoD1xI,IAAI/H,KAAM+H,MAG9Fk7J,QAAQlhK,UAAUkjK,oBAAsB,SAAUpmG,aAAc92D,KAC5D,GAAI3G,KAAKgkK,MAAMvmG,cACX,MAAOz9D,MAAKgjK,OAGhB,IAAI9nB,QAASz9E,aAAanB,UAAUh8C,IAAI3Z,IAAI/H,KAC5C,KAAKs8I,OAAQ,CACT,GAAI+oB,cAAexmG,aAAa7+D,IAChC,IAAoB,YAAhBqlK,aACAA,aACI,2FAEH,CAAA,GAAIxmG,aAAa2kG,SAClB,MAAOpiK,MAAKq4I,YAAY,+BAAgC1xI,IAAI2N,SAG5D2vJ,cAAe,IAAMA,aAAe,SAExC,MAAOjkK,MAAKq4I,YAAY,eAAiB1xI,IAAI/H,KAAO,qBAAuBqlK,aAAe,6BAA8Bt9J,KAE5H,IAAKu0I,OAAOioB,OAAQ,CAChB,GAAIc,cAAexmG,aAAa7+D,IAE5BqlK,cADgB,YAAhBA,aACe,gBAGA,IAAMA,aAAe,IAExCjkK,KAAKgiK,cAAc,eAAiBr7J,IAAI/H,KAAO,mCAAqCqlK,aAAct9J,KAEtG,MAAOu0I,QAAO90I,MAElBy7J,QAAQlhK,UAAU03I,YAAc,SAAUpnI,QAAStK,KAI/C,MAHI3G,MAAK8hK,aACL9hK,KAAK8hK,YAAYh7J,KAAK,GAAI86J,gBAAe98F,eAAergE,MAAOwM,QAAStK,MAErE3G,KAAKgjK,SAEhBnB,QAAQlhK,UAAUqhK,cAAgB,SAAU/wJ,QAAStK,KAIjD,MAHI3G,MAAK8hK,aACL9hK,KAAK8hK,YAAYh7J,KAAK,GAAI86J,gBAAe98F,eAAewP,QAASrjE,QAAStK,MAEvE3G,KAAKgjK,SAEhBnB,QAAQlhK,UAAUqjK,MAAQ,SAAUnmI,QAChC,OAAQA,QAAU79B,KAAKwpB,MAAMi5I,YAAY5kI,SAAW6jI,UAAUz+C,YAAYrlD,OACnE//B,OAAOz3B,MAAQpG,KAAKgkK,MAAMnmI,OAAOz3B,OAErCy7J,UAEXpiK,SAAQoiK,QAAUA,UAIdqC,uBAAyB93H,qBAAqB,SAAU5sC,OAAQC,SAuBpE,QAAS0kK,kCAAiCpoG,MACtC,GAAIv4D,SAAU,GAAI4gK,8BAA6BroG,KAAM,SAAUxxD,QAAS85J,cACpE,MAAOC,oBAAmBvoG,KAAMxxD,QAAS85J,eAG7C,OADAlH,YAAW32J,iBAAiBhD,QAASu4D,KAAKS,aACnCh5D,QAAQs+J,YAGnB,QAASyC,0BAAyB9pH,MAAO9zC,IAAK6iB,MAAO/lB,aACjC,KAAZA,UAAsBA,WAC1B,IAAI+gK,UAAW,GAAI7C,iBAAgBE,QAAQpnH,MAAOjxB,MAAO/lB,QAEzD,OADA+gK,UAASr2F,eAAexnE,KACjB69J,SAAS1C,YAGpB,QAAS2C,eAAc1oG,MAEnB,QAAS2oG,mBAAkB9pG,YAavB,IAAK,GAAI74D,IAAK,EAAG4iK,aAAe/pG,WAAY74D,GAAK4iK,aAAa1iK,OAAQF,KAAM,CACxE,GAAIsF,WAAYs9J,aAAa5iK,KAbnB,SAAUsF,WACpB,GAAIjB,UAAOjC,EACPkD,WAAU9D,QACV6C,KAAO21D,KAAKvyC,MAAM45C,cAAc+5F,WAAWh1J,eAAed,UAAU9D,SAExE5D,OAAOmH,MACHlI,KAAMyI,UAAUzI,KAChB0W,KAAM,YACNlP,KAAMA,MAAQ21D,KAAKvyC,MAAMk0C,eAAegkG,UAAUz+C,YAAYrlD,KAC9D4G,iBAAmB,MAAOogG,iBAAgB7oG,KAAM10D,eAK5CA,YAhBhB,GAAI1H,WAmBA6D,QAAU,IAAK,SAAUgH,QAEzB,QAASC,WACL,MAAkB,QAAXD,QAAmBA,OAAOzK,MAAMC,KAAMgC,YAAchC,KAU/D,MAZAK,WAAUoK,QAASD,QAInBC,QAAQ9J,UAAUg8D,sBAAwB,SAAUh2D,IAAKlD,SACrD+G,OAAO7J,UAAUg8D,sBAAsBjtB,KAAK1vC,KAAM2G,IAAKlD,SACvDihK,kBAAkB/9J,IAAIi0D,aAE1BnwD,QAAQ9J,UAAUk8D,aAAe,SAAUl2D,IAAKlD,SAC5C+G,OAAO7J,UAAUk8D,aAAantB,KAAK1vC,KAAM2G,IAAKlD,SAC9CihK,kBAAkB/9J,IAAIi0D,aAEnBnwD,SACT0yJ,WAAWngG,6BAEb,OADAmgG,YAAW32J,iBAAiBhD,QAASu4D,KAAKS,aACnC78D,OAEX,QAASilK,iBAAgB7oG,KAAMp1D,KAC3B,GAAIo1D,KAAKr6C,SAAU,CACf,GAAImjJ,gBAAiB9oG,KAAK/xD,MAC1B,SACQ0X,SAAUq6C,KAAKr6C,SACfhX,MACIZ,MAAOnD,IAAIoD,WAAWD,MAAME,OAAS66J,eACrC56J,IAAKtD,IAAIoD,WAAWE,IAAID,OAAS66J,mBAKrD,QAASC,oBAAmB/oG,KAAMxxD,SAG9B,IAFA,GAAI5K,WACA8yC,QAAUloC,QAAQgzD,KACf9qB,SAAS,CACZ,GAAIA,kBAAmB0qH,YAAWzjI,oBA4B9B,IAAK,GAAI33B,IAAK,EAAGoX,GAAKs5B,QAAQsjC,UAAWh0E,GAAKoX,GAAGlX,OAAQF,KAAM,CAC3D,GAAI4jB,UAAWxM,GAAGpX,KA5BR,SAAU4jB,UACpB,GAAIw4C,QAASx4C,SAAS/mB,KAElB6E,QAAUgvC,QAAQrqB,WAAWnoB,IAAI,SAAUK,GAAK,MAAOy7D,MAAKvyC,MAAMu7I,mBAAmBzkK,EAAEkoB,UAAUpiB,KAAKiB,aACrGoX,KAAK,SAAUrF,GAAK,QAASA,IAE9BhT,SAAOjC,EACX,IAAIV,QAAS,CACT,GAAIF,OAAQE,QAAQ6c,IAAIqF,SAASpiB,MACjC,IAAIA,MAAO,CACP6C,KAAO7C,MAAM6C,IACb,IAAIkP,MAAOymD,KAAKvyC,MAAMi5I,YAAYr8J,KAC9BkP,QAASosJ,UAAUz+C,YAAYrlD,KAAOtoD,MAAQosJ,UAAUz+C,YAAY+hD,UAGpE5+J,KAAO6+J,oBAAoB7+J,KAAM21D,KAAMtpB,WAI9CrsC,OACDA,KAAO21D,KAAKvyC,MAAMk0C,eAAegkG,UAAUz+C,YAAYrlD,MAE3Dj+D,OAAOmH,MACHlI,KAAMu/D,OACN7oD,KAAM,WAAYlP,KAAMA,KAAMo+D,iBAAmB,MAAOogG,iBAAgB7oG,KAAMp2C,cAK1EA,UAGhB8sB,QAAUloC,QAAQ41D,SAAS1tB,SAE/B,MAAO9yC,QAEX,QAASslK,qBAAoB7+J,KAAM21D,KAAMmpG,iBAErC,GAAIC,gBAAiBD,gBAAgB98I,WAAW3J,KAAK,SAAUne,GAC3D,GAAI1B,MAAOu+J,WAAWh2J,eAAe7G,EAAEkoB,UAAUpiB,KACjD,OAAe,SAARxH,MAA2B,WAARA,MAE9B,IAAIumK,eAAgB,CAChB,GAAIC,gBAAiBD,eAAeroG,OAAOr+C,KAAK,SAAU3T,GAAK,MAA0B,WAAnBA,EAAEmrE,eACxE,IAAImvF,eAAgB,CAChB,GAAIrzG,aAAc,GAAI4vG,iBAAgBE,QAAQ9lG,KAAKO,QAASP,KAAKvyC,UAAW6zC,QAAQ+nG,eAAe7hK,MACnG,IAAIwuD,YAAa,CACb,GAAIpyD,QAASo8D,KAAKvyC,MAAM67I,eAAetzG,YACvC,IAAIpyD,OACA,MAAOA,UAMvB,MAAOo8D,MAAKvyC,MAAMk0C,eAAegkG,UAAUz+C,YAAYrlD,KAE3D,QAAS0nG,qBAAoBvpG,KAAMsoG,cAC/B,GAAI1kK,UAMJ,OALI0kK,gBAGA1kK,SAAYf,KAAM,SAAU0W,KAAM,WAAYlP,KAAM21D,KAAKvyC,MAAMk0C,eAAegkG,UAAUz+C,YAAYrlD,QAEjGj+D,OAEX,QAAS2kK,oBAAmBvoG,KAAMxxD,QAAS85J,cACvC,GAAI1kK,QAASo8D,KAAKO,QACd1B,WAAa6pG,cAAc1oG,MAC3Bga,UAAY+uF,mBAAmB/oG,KAAMxxD,SACrCgwC,OAAS+qH,oBAAoBvpG,KAAMsoG,aACvC,IAAIzpG,WAAW34D,QAAU8zE,UAAU9zE,QAAUs4C,OAAOt4C,OAAQ,CACxD,GAAIsjK,gBAAiBxpG,KAAKvyC,MAAMg8I,kBAAkB5qG,YAC9C6qG,cAAgB1pG,KAAKvyC,MAAMg8I,kBAAkBzvF,WAC7C2vF,YAAc3pG,KAAKvyC,MAAMg8I,kBAAkBjrH,OAC/C56C,QAASo8D,KAAKvyC,MAAMm8I,kBAAkBhmK,OAAQ4lK,eAAgBE,cAAeC,cAEjF,MAAO/lK,QAsGX,QAASi8D,sBAAqBx1D,MAC1B,GAAIA,KAAKulB,OACL,IAAK,GAAI5pB,IAAK,EAAGoX,GAAK/S,KAAKulB,OAAQ5pB,GAAKoX,GAAGlX,OAAQF,KAAM,CACrD,GAAI85D,OAAQ1iD,GAAGpX,GACf,IAAI85D,MAAMj2D,OAASi2D,MAAMj2D,MAAM4B,YAC0B,eAArD21J,WAAWh2J,eAAe00D,MAAMj2D,MAAM4B,YACtC,OAAO,EAGnB,OAAO,EAEX,QAAS+zD,YAAW7wD,KAAM8wD,QACtB,OAAS1xD,MAAOY,KAAKZ,MAAQ0xD,OAAQvxD,IAAKS,KAAKT,IAAMuxD,QAEzD,QAASJ,QAAOrxD,YACZ,OAASD,MAAOC,WAAWD,MAAME,OAAQC,IAAKF,WAAWE,IAAID;;;;;;;AAtRjE,GAAI3J,WAAa8jJ,gBAAkBA,eAAe9jJ,WAAc,WAC5D,GAAIK,eAAgBd,OAAOivE,iBACpBC,uBAA2BprE,QAAS,SAAUpD,EAAGC,GAAKD,EAAEwuE,UAAYvuE,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIie,KAAKje,GAAOA,EAAE8F,eAAemY,KAAIle,EAAEke,GAAKje,EAAEie,IACzE,OAAO,UAAUle,EAAGC,GAEhB,QAASC,MAAOR,KAAKS,YAAcH,EADnCI,cAAcJ,EAAGC,GAEjBD,EAAEK,UAAkB,OAANJ,EAAaX,OAAOgB,OAAOL,IAAMC,GAAGG,UAAYJ,EAAEI,UAAW,GAAIH,QAGvFZ,QAAOugB,eAAe1gB,QAAS,cAAgB8D,OAAO,IAWtD9D,QAAQ0kK,iCAAmCA,iCAO3C1kK,QAAQ8kK,yBAA2BA,yBAuInC9kK,QAAQ6kK,mBAAqBA,kBAC7B,IAAIF,8BAAgC,SAAU55J,QAE1C,QAAS45J,8BAA6BroG,KAAMuoG,oBACxC,GAAIpiI,OAAQ13B,OAAOklC,KAAK1vC,OAASA,IAKjC,OAJAkiC,OAAM65B,KAAOA,KACb75B,MAAMoiI,mBAAqBA,mBAC3BpiI,MAAM4/H,eACN5/H,MAAM/hC,KAAO,GAAIg9J,YAAWvyJ,YACrBs3B,MAyFX,MAhGA7hC,WAAU+jK,6BAA8B55J,QASxC45J,6BAA6BzjK,UAAUo8D,eAAiB,SAAUp2D,IAAKlD,SAE/DkD,IAAIm2D,QAAUn2D,IAAIm2D,OAAO76D,QACzBk7J,WAAW32J,iBAAiBxG,KAAM2G,IAAIm2D,OAAQr5D,UAGtD2gK,6BAA6BzjK,UAAUkjE,eAAiB,SAAUl9D,KAC9D3G,KAAK8G,KAAKH,KACV3G,KAAK4lK,mBAAmBj/J,IAAIpD,MAAOoD,IAAIoD,WAAWD,MAAME,QAAQ,GAChEhK,KAAKyrC,OAET24H,6BAA6BzjK,UAAUojE,uBAAyB,SAAUp9D,KACtE3G,KAAK8G,KAAKH,KACV3G,KAAK4lK,mBAAmBj/J,IAAIpD,MAAOvD,KAAK6lK,uBAAuBl/J,MAAM,GACrE3G,KAAKyrC,OAET24H,6BAA6BzjK,UAAUgjE,qBAAuB,SAAUh9D,KACpE3G,KAAK8G,KAAKH,KACV3G,KAAK4lK,mBAAmBj/J,IAAIpD,MAAOvD,KAAK6lK,uBAAuBl/J,MAAM,GACrE3G,KAAKyrC,OAET24H,6BAA6BzjK,UAAU6iE,WAAa,SAAU78D,KAC1D3G,KAAK8G,KAAKH,KACV3G,KAAK4lK,mBAAmBj/J,IAAI88D,QAASzjE,KAAK6lK,uBAAuBl/J,MAAM,GACvE3G,KAAKyrC,OAET24H,6BAA6BzjK,UAAU4iE,cAAgB,SAAU58D,KAC7D,GAAI6hB,WAAYxoB,KAAK8lK,gBACrB,IAAIt9I,WAAa7hB,IAAIpD,MAAO,CACxB,GAAIE,SAAUzD,KAAK+7D,KAAKvyC,MAAMu7I,mBAAmBv8I,UAAUpiB,KAAKiB,UAC5D5D,WAAYA,QAAQkwB,IAAIhtB,IAAIpD,SACV,cAAdoD,IAAIpD,MACJvD,KAAKq4I,YAAY,uDAAwDj9E,OAAOz0D,IAAIoD,aAGpF/J,KAAKq4I,YAAY,0DAA4D1xI,IAAIpD,MAAQ,IAAK63D,OAAOz0D,IAAIoD,gBAKzHq6J,6BAA6BzjK,UAAUk8D,aAAe,SAAUl2D,IAAKlD,SACjEzD,KAAK8G,KAAKH,KACV6D,OAAO7J,UAAUk8D,aAAantB,KAAK1vC,KAAM2G,IAAKlD,SAC9CzD,KAAKyrC,OAET24H,6BAA6BzjK,UAAUg8D,sBAAwB,SAAUh2D,IAAKlD,SAC1E,GAAIsiK,0BAA2B/lK,KAAK8lK,gBACpC9lK,MAAK8G,KAAKH,KAEV3G,KAAK8lK,iBACDn/J,IAAIyhB,WAAWnoB,IAAI,SAAUK,GAAK,MAAOA,GAAEkoB,YAAc/J,KAAK,SAAUne,GAAK,MAAOs7D,sBAAqBt7D,EAAE8F,QAE/GoE,OAAO7J,UAAUg8D,sBAAsBjtB,KAAK1vC,KAAM2G,IAAKlD,SACvDzD,KAAKyrC,MACLzrC,KAAK8lK,iBAAmBC,0BAE5B3B,6BAA6BzjK,UAAUklK,uBAAyB,SAAUl/J,KACtE,GAAI4D,SAAU4yJ,WAAW9yJ,SAASrK,KAAK+7D,KAAKQ,QAAS51D,IAAIoD,WAAWD,MAAME,QACtE6lC,KAAOtlC,QAAQgzD,IACnB,OAAI1tB,gBAAgBstH,YAAWr8J,WAAa+uC,KAAKyvB,UAEtCzvB,KAAKyvB,UAAUx1D,MAAME,OAAS,EAElCrD,IAAIoD,WAAWD,MAAME,QAEhCo6J,6BAA6BzjK,UAAUilK,mBAAqB,SAAUj/J,IAAKqD,OAAQq6J,cAC/E,GAAIniI,OAAQliC,KACRy6C,MAAQz6C,KAAKskK,mBAAmBtkK,KAAKG,KAAMkkK,eAC9ClrJ,GAAKnZ,KAAK8hK,aAAah7J,KAAK/G,MAAMoZ,GAAIorJ,yBAAyB9pH,MAAO9zC,IAAK3G,KAAK+7D,KAAKvyC,OAClFo6B,MAAOygH,eACRpkK,IAAI,SAAUK,GAAK,OAClBoK,KAAM6wD,WAAWj7D,EAAEqG,IAAI+D,KAAMV,OAASk4B,MAAM65B,KAAK/xD,QACjDsL,KAAMhV,EAAEgV,KACRrE,QAAS3Q,EAAE2Q,WAEf,IAAIkI,KAERirJ,6BAA6BzjK,UAAUmG,KAAO,SAAUH,KAAO3G,KAAKG,KAAK2G,KAAKH,MAC9Ey9J,6BAA6BzjK,UAAU8qC,IAAM,WAAczrC,KAAKG,KAAKsrC,OACrE24H,6BAA6BzjK,UAAU03I,YAAc,SAAUpnI,QAASvG,MAChEA,MACA1K,KAAK8hK,YAAYh7J,MAAO4D,KAAM6wD,WAAW7wD,KAAM1K,KAAK+7D,KAAK/xD,QAASsL,KAAMqsJ,gBAAgB78F,eAAergE,MAAOwM,QAASA,WAG/HmzJ,6BAA6BzjK,UAAUqhK,cAAgB,SAAU/wJ,QAASvG,MACtE1K,KAAK8hK,YAAYh7J,MAAO4D,KAAM6wD,WAAW7wD,KAAM1K,KAAK+7D,KAAK/xD,QAASsL,KAAMqsJ,gBAAgB78F,eAAewP,QAASrjE,QAASA,WAEtHmzJ,8BACTjH,WAAWngG,+BAqBTgpG,mBAAqB55H,qBAAqB,SAAU5sC,OAAQC,SA2BhE,QAASwmK,gBAAe1G,QAAS2G,QAASpwJ,OAAQqwJ,YAC9C,MAAO,IAAIC,uBAAsB7G,QAAS2G,QAASpwJ,OAAQqwJ,YAG/D,QAASE,iBAAgB9G,QAAS2G,QAASlvB,cACvC,GAAI5xE,aAAckhG,yBAAyB/G,QAASvoB,aACpD,IAAI5xE,YAAa,CACb,GAAIh/D,MAAO8/J,QAAQK,kBAAkBnhG,aACjC/lD,KAAOkgJ,QAAQ5zF,cAAcqrE,aAAarvI,SAC9C,OAAO,IAAI6+J,aAAYpgK,MAAQiZ,KAAMA,KAAMkgJ,QAASA,QAAS2G,QAASA,UAAW5pG,WAIzF,QAASmqG,gCAA+BlH,QAAS2G,QAASpwJ,OAAQsvD,aAC9D,GAAIh/D,MAAO8/J,QAAQK,kBAAkBnhG,YACrC,OAAO,IAAIohG,aAAYpgK,MAAQiZ,KAAMvJ,OAAQypJ,QAASA,QAAS2G,QAASA,UAAW5pG,UAGvF,QAASgqG,0BAAyB/G,QAASn5J,MACvC,GAAI0P,QAASypJ,QAAQ5zF,cAAcvlE,KAAKuB,SACxC,IAAImO,OACA,MAAO84D,aAAYnH,aAAa3xD,OAAQ,SAAU+lB,OAC9C,GAAIA,MAAMvmB,OAASs5D,YAAYrH,WAAWqtF,iBAAkB,CACxD,GAAIvC,kBAAmBx2H,KACvB,IAA6B,MAAzBw2H,iBAAiBzzJ,MAAgByzJ,iBAAiBzzJ,KAAK0R,OAASlK,KAAKxH,KACrE,MAAOyzJ,qBAQ3B,QAASqU,eAAc5wJ,OAAQypJ,QAAS2G,QAAS/kI,OAC7C,MAAO,IAAIwlI,YAAWxlI,OAASo+H,QAASA,QAAS2G,QAASA,QAAS7mJ,KAAMvJ,SAqI7E,QAAS8wJ,cAAaxgK,MAClB,GAAIg9J,YAAah9J,KAAKygK,mBACtB,OAAOzD,aAAmC,GAArBA,WAAWnhK,OAEpC,QAAS6kK,cAAa1gK,KAAM3C,SACxB,MAAO2C,MAAKygK,oBAAoB5mK,IAAI,SAAU8E,GAAK,MAAO,IAAIgiK,kBAAiBhiK,EAAGtB,WAEtF,QAASy/J,iBAAgB98J,KAAM3C,QAAS+5B,OAEpC,GAAI4lI,YAAah9J,KAAKygK,mBACtB,OAAOzD,YAAWnhK,OAAS,GAAI8kK,kBAAiB3D,WAAW,GAAI3/J,aAAWU,GAsO9E,QAAS6iK,WAAUC,aACf,IAAKA,YACD,QACJ,IAAIC,OAAQD,WACZ,IAA4B,kBAAjBC,OAAMhlK,OACb,MAAOwB,OAAMigB,KAAKujJ,MAAMhlK,SAE5B,IAAIvC,WACAwnK,IAAsC,kBAAzBD,OAAM7gK,eACnB,SAAUzH,MAAQ,MAAOsoK,OAAM7gK,eAAezH,OAC9C,SAAUA,MAAQ,QAASsoK,MAAMtoK,MACrC,KAAK,GAAIu/D,UAAU+oG,OACXC,IAAIhpG,SACJx+D,OAAOmH,KAAKogK,MAAM/oG,QAG1B,OAAOx+D,QAsLX,QAASynK,0BAAyBhhK,KAAM3C,SACpC,GAAIgS,YAAahS,QAAQ87J,QAAQ5zF,cAAcvlE,KAAKuB,SACpD,IAAI8N,WAAY,CACZ,GAAI4xJ,cAAe5xJ,WAAWjW,QAAUiW,WAAWooB,MAEnD,QADgBp6B,QAAQyiK,QAAQoB,mBAAmBD,mBAC1B5oJ,KAAK,SAAUof,QAAU,MAAOA,QAAOj/B,MAAQwH,KAAKxH,QAarF,QAAS2oK,iBAAgBxiK,GACrB,QAASA,EAAEyiK,kBAAoB1P,UAAU/yJ,EAAEyiK,kBAE/C,QAASC,sBAAqBnyJ,KAAM7R,SAChC,GAAI2C,MACA8/J,QAAUziK,QAAQyiK,QAClB7mJ,KAAO5b,QAAQ4b,IACnB,QAAQ/J,MACJ,IAAKosJ,WAAUz+C,YAAYrlD,IACvBx3D,KAAO8/J,QAAQK,kBAAkBmB,YAC7BpyJ,KAAMs5D,YAAYrH,WAAW6mF,aAC7B15I,YAAcY,KAAMs5D,YAAYrH,WAAW4gF,aAC3C/hJ,MAAQkP,KAAMs5D,YAAYrH,WAAWukF,aACtCzsI,MACH,MACJ,KAAKqiJ,WAAUz+C,YAAY8/C,QACvB38J,KACI8/J,QAAQK,kBAAkBmB,YAAapyJ,KAAMs5D,YAAYrH,WAAW4gF,aAAe9oI,MACvF,MACJ,KAAKqiJ,WAAUz+C,YAAYi/C,KACvB97J,KACI8/J,QAAQK,kBAAkBmB,YAAapyJ,KAAMs5D,YAAYrH,WAAW2gF,aAAe7oI,MACvF,MACJ,KAAKqiJ,WAAUz+C,YAAYlyG,OACvB,GAAI42J,UAAYryJ,KAAMs5D,YAAYrH,WAAW0gF,eAC7Cyf,aAAapyJ,KAAMs5D,YAAYrH,WAAWjuC,oBAAqB5kB,WAAYizJ,SAAWtoJ,MACtFjZ,KAAO8/J,QAAQK,kBAAkBoB,QACjC,MACJ,KAAKjG,WAAUz+C,YAAYx9G,OACvBW,KAAO8/J,QAAQK,kBAAkBmB,YAAapyJ,KAAMs5D,YAAYrH,WAAWwgF,+BAAiC1oI,MAC5G,MACJ,KAAKqiJ,WAAUz+C,YAAYg/C,UACvB77J,KAAO8/J,QAAQK,kBAAkBmB,YAC7BpyJ,KAAMs5D,YAAYrH,WAAWqgG,eAC7BlzJ,YAAcY,KAAMs5D,YAAYrH,WAAW0gF,iBAC5C5oI,MACH,MACJ,SACI,KAAM,IAAI5a,OAAM,0CAA4C6Q,KAAO,IAAMosJ,UAAUz+C,YAAY3tG,OAEvG,MAAOlP,MAEX,QAASshK,YAAWroJ,KAAM+oB,QAGtB,MAFA/oB,MAAK+oB,OAASA,OACdwmC,YAAYnH,aAAapoD,KAAM,SAAUwc,OAAS,MAAO6rI,YAAW7rI,MAAOxc,QACpEA,KAEX,QAAS8nD,QAAO1xD,WAAY6tB,KAAMC,QAC9B,GAAY,MAARD,MAA0B,MAAVC,OAAgB,CAChC,GAAI6jC,YAAawH,YAAYvH,8BAA8B5xD,WAAY6tB,KAAMC,QACzE+jC,UAAY,QAASA,WAAUjoD,MAC/B,GAAIA,KAAK/J,KAAOs5D,YAAYrH,WAAWC,WAAanoD,KAAKksB,KAAO67B,YAAc/nD,KAAKpV,IAAMm9D,WAAY,CAEjG,MADiBwH,aAAYnH,aAAapoD,KAAMioD,YAC3BjoD,OAGzBA,KAAOuvD,YAAYnH,aAAahyD,WAAY6xD,UAChD,IAAIjoD,KACA,OAASvV,MAAOuV,KAAK2nD,WAAY/8D,IAAKoV,KAAK4nD,WAIvD,QAAS4gG,wBAAuBhqI,QAC5B,GAAIqnC,cAAernC,OAAOqnC,YAC1B,IAAIA,aACA,MAAOA,cAAajlE,IAAI,SAAUmlE,aAE9B,OACI1jD,SAFa0jD,YAAYuG,gBAEJjqD,SACrBhX,MAAQZ,MAAOs7D,YAAY4B,WAAY/8D,IAAKm7D,YAAY6B,aAKxE,QAAS6gG,qBAAoBzoJ,MACzB,KAAOA,MAAM,CACT,OAAQA,KAAK/J,MACT,IAAKs5D,aAAYrH,WAAWqtF,iBAC5B,IAAKhmF,aAAYrH,WAAWstF,qBACxB,MAAOx1I,KACX,KAAKuvD,aAAYrH,WAAW8+E,WACxB,OAERhnI,KAAOA,KAAK+oB,QAGpB,QAAS2/H,gBAAelqI,OAAQp6B,SAC5B,GAAIo6B,OAAOmqI,WAAap5F,YAAYq5F,YAAYC,aAAerqI,OAAOqnC,aAClE,IAAK,GAAInjE,IAAK,EAAGoX,GAAK0kB,OAAOqnC,aAAcnjE,GAAKoX,GAAGlX,OAAQF,KAAM,CAC7D,GAAIqjE,aAAcjsD,GAAGpX,IACjBuuD,SAAWw3G,oBAAoB1iG,YACnC,IAAI9U,SAAU,CACV,GAAIlqD,MAAO3C,QAAQyiK,QAAQK,kBAAkBj2G,SAC7C,IAAIlqD,KACA,MAAO,IAAIogK,aAAYpgK,KAAM3C,WAMjD,QAAS0kK,oBAAmB/hK,KAAMxH,MAC9B,GAAIwH,MAAQA,KAAKy3B,QAAUz3B,KAAKy3B,OAAOj/B,MAAQA,KAAM,CACjD,GAAI6sJ,eAAgBrlJ,KAAKqlJ,aACzB,IAAIA,eAAiBA,cAAcxpJ,QAAU,EACzC,MAAOwpJ,eAAc,IAIjC,QAAS2c,YAAWhiK,MAChB,GAAIA,KAAM,CACN,GAAIA,KAAKmkB,MAAQqkD,YAAYy5F,UAAUzqG,IACnC,MAAO8jG,WAAUz+C,YAAYrlD,GAE5B,IAAIx3D,KAAKmkB,OAASqkD,YAAYy5F,UAAU5iK,OAASmpE,YAAYy5F,UAAUC,WAAa15F,YAAYy5F,UAAUrgB,eAC3G,MAAO0Z,WAAUz+C,YAAYx9G,MAE5B,IAAIW,KAAKmkB,OAASqkD,YAAYy5F,UAAUt3J,OAAS69D,YAAYy5F,UAAUE,YACxE,MAAO7G,WAAUz+C,YAAYlyG,MAE5B,IAAI3K,KAAKmkB,MAASqkD,YAAYy5F,UAAmB,UAClD,MAAO3G,WAAUz+C,YAAYg/C,SAE5B,IAAI77J,KAAKmkB,MAASqkD,YAAYy5F,UAAc,KAC7C,MAAO3G,WAAUz+C,YAAYi/C,IAE5B,IAAI97J,KAAKmkB,MAAQqkD,YAAYy5F,UAAUG,MAAO,CAE/C,GAAI3hG,WAAY,KACZ+kF,UAAYxlJ,IAChB,IAAIwlJ,UAAUpuH,MAAMv7B,OAAS,EAAG,CAC5B4kE,UAAYuhG,WAAWxc,UAAUpuH,MAAM,GACvC,KAAK,GAAIz7B,IAAK,EAAGoX,GAAKyyI,UAAUpuH,MAAOz7B,GAAKoX,GAAGlX,OAAQF,KAAM,CAEzD,GAAI8kE,WAAauhG,WADHjvJ,GAAGpX,KAEb,MAAO2/J,WAAUz+C,YAAYk/C,OAIzC,GAAiB,MAAbt7F,UACA,MAAOA,eAGV,IAAIzgE,KAAKmkB,MAAQqkD,YAAYy5F,UAAUI,cACxC,MAAO/G,WAAUz+C,YAAY+hD,QAGrC,MAAOtD,WAAUz+C,YAAYk/C,MAEjC,QAASuG,oBAAmBzB,YAAajzJ,KACrC,GAAIkzJ,OAAQD,WAUZ,OARyB,kBAAdC,OAAM5mJ,IAEJ4mJ,MAAM5mJ,IAAItM,KAIVkzJ,MAAMlzJ,KAIvB,QAAS20J,WAAUplK,OACf,MAAOA,OAAQA,MAAMgG,MAAM,KAAKtJ,IAAI,SAAUkiC,GAAK,OAAQA,OAE/D,QAASymI,gBAAelwJ,EAAGnY,GACvB,IAAK,GAAIuK,GAAI,EAAGA,EAAI4N,EAAEzW,QAAU6I,EAAIvK,EAAE0B,OAAQ6I,IAAK,CAC/C,GAAI4N,EAAE5N,GAAKvK,EAAEuK,GACT,MAAO,EACX,IAAI4N,EAAE5N,GAAKvK,EAAEuK,GACT,OAAQ,EAEhB,MAAO;;;;;;;AA5yBXlL,OAAOugB,eAAe1gB,QAAS,cAAgB8D,OAAO,GAOtD,IAAIu0J,WAAYlpF,YAAYyiF,cACxB,SAAWhyI,MACP,SAAUuvD,YAAYwiF,yBAAyB/xI,MAAQuvD,YAAYyiF,cAAc7oC,UAErF,SAAWnpG,MAAQ,SAAUA,KAAKkL,MAAQqkD,YAAYuC,UAAUq3C,UAChEqgD,gBAAkBj6F,YAAYk6F,YAC9B,SAAW1iK,MACP,SAAUA,KAAKmkB,MAAQqkD,YAAYy5F,UAAUzoK,QACzCwG,KAAK2iK,YAAcn6F,YAAYk6F,YAAYE,YAEnD,SAAW5iK,MAAQ,SAAUA,KAAKmkB,MAAQqkD,YAAYy5F,UAAUW,WAIpEvpK,SAAQwmK,eAAiBA,eASzBxmK,QAAQ4mK,gBAAkBA,gBAK1B5mK,QAAQgnK,+BAAiCA,+BAezChnK,QAAQ6mK,yBAA2BA,yBAInC7mK,QAAQinK,cAAgBA,aACxB,IAAIN,uBAAyB,WACzB,QAASA,uBAAsB7G,QAAS2G,QAASpwJ,OAAQqwJ,YACrDnmK,KAAKu/J,QAAUA,QACfv/J,KAAKkmK,QAAUA,QACflmK,KAAK8V,OAASA,OACd9V,KAAKmmK,WAAaA,WAClBnmK,KAAKipK,UAAY,GAAI1gJ,KA0HzB,MAxHA69I,uBAAsBzlK,UAAU8hK,YAAc,SAAU5kI,QAAU,MAAOuqI,YAAWpoK,KAAKkpK,YAAYrrI,UACrGuoI,sBAAsBzlK,UAAU+8D,eAAiB,SAAUpoD,MACvD,GAAI3V,QAASK,KAAKipK,UAAU3oJ,IAAIhL,KAChC,KAAK3V,OAAQ,CACT,GAAIyG,MAAOqhK,qBAAqBnyJ,MAAQ4wJ,QAASlmK,KAAKkmK,QAAS7mJ,KAAMrf,KAAK8V,OAAQypJ,QAASv/J,KAAKu/J,SAChG5/J,QACI,GAAI6mK,aAAYpgK,MAAQm5J,QAASv/J,KAAKu/J,QAAS2G,QAASlmK,KAAKkmK,QAAS7mJ,KAAMrf,KAAK8V,SACrF9V,KAAKipK,UAAU1oJ,IAAIjL,KAAM3V,QAE7B,MAAOA,SAEXymK,sBAAsBzlK,UAAUsiK,aAAe,WAE3C,IAAK,GADDzlI,UACKz7B,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCy7B,MAAMz7B,IAAMC,UAAUD,GAG1B,IAAIpC,YAASwE,EACb,IAAIq5B,MAAMv7B,OAAQ,CACdtC,OAAS69B,MAAM,EACf,KAAK,GAAI1yB,GAAI,EAAGA,EAAI0yB,MAAMv7B,OAAQ6I,IAC9B,GAAI0yB,MAAM1yB,IAAMnL,OAAQ,CACpBA,WAASwE,EACT,QAIZ,MAAOxE,SAAUK,KAAK09D,eAAegkG,UAAUz+C,YAAYrlD,MAE/DwoG,sBAAsBzlK,UAAU+iK,aAAe,SAAUt9J,MAAQ,MAAOpG,MAAK09D,eAAegkG,UAAUz+C,YAAYrlD,MAClHwoG,sBAAsBzlK,UAAU0kK,eAAiB,SAAUj/J,MACvD,GAAIA,eAAgBogK,aAAa,CAC7B,GAAIra,aAAcgc,mBAAmB/hK,KAAK+iK,OAAQ,QAClD,IAAIhd,YACA,MAAO,IAAIqa,aAAYra,YAAa/lJ,KAAK3C,WAIrD2iK,sBAAsBzlK,UAAU0hK,mBAAqB,SAAUxkI,QAC3D,GAAIA,iBAAkB2oI,cAA0D,kBAAnCxmK,MAAKkmK,QAAQ7D,mBAAmC,CACzF,GAAI8G,QAAStrI,OAAOsrI,OAChBC,gBAAkBppK,KAAKkmK,QAAQ7D,mBAAmB8G,OACtD,IAAIC,iBAAmBD,OACnB,MAAO,IAAI3C,aAAY4C,gBAAiBvrI,OAAOp6B,QAE9C,IAAI2lK,iBAAmBD,OACxB,MAAOtrI,QAGf,MAAO79B,MAAK09D,eAAegkG,UAAUz+C,YAAYrlD,MAErDwoG,sBAAsBzlK,UAAU68D,SAAW,WACvC,GAAI79D,QAASK,KAAKqpK,UAIlB,OAHK1pK,UACDA,OAASK,KAAKqpK,WAAarpK,KAAKmmK,cAE7BxmK,QAEXymK,sBAAsBzlK,UAAUokK,mBAAqB,SAAU3+J,MAC3D,GAAI3C,UAAY4b,KAAMrf,KAAK8V,OAAQypJ,QAASv/J,KAAKu/J,QAAS2G,QAASlmK,KAAKkmK,SACpEh2B,WAAak3B,yBAAyBhhK,KAAM3C,QAChD,IAAIysI,WAAY,CACZ,GAAIo5B,aAActpK,KAAKupK,0BAA0Br5B,WACjD,IAAIo5B,YACA,MAAO,IAAIE,eAAcF,YAAa7lK,SAAS64D,YAG3D8pG,sBAAsBzlK,UAAUyiE,cAAgB,SAAUh9D,MACtD,GAAI3C,UAAY4b,KAAMrf,KAAK8V,OAAQypJ,QAASv/J,KAAKu/J,QAAS2G,QAASlmK,KAAKkmK,SACpEh2B,WAAak3B,yBAAyBhhK,KAAM3C,QAChD,OAAOysI,aAAc,GAAIs5B,eAAct5B,WAAYzsI,UAEvD2iK,sBAAsBzlK,UAAU6kK,kBAAoB,SAAUjoI,SAC1D,GAAI59B,QAAS,GAAI8pK,eAEjB,OADA9pK,QAAO+pK,OAAOnsI,QAAQt9B,IAAI,SAAU8E,GAAK,MAAO,IAAI4kK,gBAAe5kK,MAC5DpF,QAEXymK,sBAAsBzlK,UAAUglK,iBAAmB,SAAUiE,cAEzD,IAAK,GADDjqK,QAAS,GAAI8pK,gBACR1nK,GAAK,EAAG8nK,eAAiBD,aAAc7nK,GAAK8nK,eAAe5nK,OAAQF,KAAM,CAC9E,GAAIklK,aAAc4C,eAAe9nK,GACjCpC,QAAO+pK,OAAOzC,YAAY/kK,UAE9B,MAAOvC,SAEXymK,sBAAsBzlK,UAAUmpK,UAAY,SAAUxmI,KAAMC,QACxD,MAAO4jC,QAAOnnE,KAAK8V,OAAQwtB,KAAMC,SAErC6iI,sBAAsBzlK,UAAU4oK,0BAA4B,SAAUr5B,YAClE,GAAI9pI,MAAOpG,KAAKkmK,QAAQ6D,0BAA0B75B,WAAYlwI,KAAK8V,QAC/DrV,YAAc2F,KAAKy3B,QAAUz3B,KAAKy3B,OAAOy+B,SACzCosG,mBAAmBtiK,KAAKy3B,OAAOy+B,QAAS,gBAC5C,IAAI77D,YAEA,IAAK,GADDupK,wBAAyBvpK,YAAYykE,aAAa,GAC7CnjE,GAAK,EAAGoX,GAAK6wJ,uBAAuBj4H,WAAYhwC,GAAKoX,GAAGlX,OAAQF,KAAM,CAC3E,GAAIg1C,WAAY59B,GAAGpX,IACfkoK,OAASjqK,KAAKkmK,QAAQK,kBAAkBxvH,UAAU3wC,KACtD,IAA0B,eAAtB6jK,OAAOpsI,OAAOj/B,MAAyBiqK,gBAAgBoB,QAAS,CAChE,GAAI7e,eAAgB6e,MACpB,IAAI7e,cAAcK,eAAwD,IAAvCL,cAAcK,cAAcxpJ,OAC3D,MAAOmpJ,eAAcK,cAAc,GAAG5tH,UAM1DuoI,sBAAsBzlK,UAAUuoK,YAAc,SAAUrrI,QACpD,GAAIz3B,MAAOpG,KAAKkqK,eAAersI,OAC/B,OAAOz3B,OAAQA,KAAK+iK,QAExB/C,sBAAsBzlK,UAAUupK,eAAiB,SAAUrsI,QACvD,GAAIz3B,UAAOjC,EAOX,OANI05B,kBAAkB2oI,aAClBpgK,KAAOy3B,OAEFA,OAAOz3B,eAAgBogK,eAC5BpgK,KAAOy3B,OAAOz3B,MAEXA,MAEJggK,yBAcPI,YAAe,WACf,QAASA,aAAY2C,OAAQ1lK,SAQzB,GAPAzD,KAAKmpK,OAASA,OACdnpK,KAAKyD,QAAUA,QACfzD,KAAKsV,KAAO,OACZtV,KAAK0lE,SAAW,aAChB1lE,KAAKoG,SAAOjC,GACZnE,KAAK2lE,cAAYxhE,GACjBnE,KAAKmjK,QAAS,GACTgG,OACD,KAAM1kK,OAAM,uBAuCpB,MApCA7E,QAAOugB,eAAeqmJ,YAAY7lK,UAAW,QACzC2f,IAAK,WACD,GAAIud,QAAS79B,KAAKmpK,OAAOtrI,MACzB,OAAQA,SAAUA,OAAOj/B,MAAS,eAEtCyhB,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAeqmJ,YAAY7lK,UAAW,YACzC2f,IAAK,WAAc,MAAOsmJ,cAAa5mK,KAAKmpK,SAC5C9oJ,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAeqmJ,YAAY7lK,UAAW,YACzC2f,IAAK,WACD,MAAOtgB,MAAKyD,QAAQyiK,QAAQ7D,mBAAmBriK,KAAKmpK,SAAWnpK,KAAKmpK,QAExE9oJ,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAeqmJ,YAAY7lK,UAAW,cACzC2f,IAAK,WACD,GAAIud,QAAS79B,KAAKmpK,OAAOgB,WACzB,OAAOtsI,QAASgqI,uBAAuBhqI,YAAU15B,IAErDkc,YAAY,EACZD,cAAc,IAElBomJ,YAAY7lK,UAAU27D,QAAU,WAC5B,MAAO,IAAI8tG,oBAAmBpqK,KAAKmpK,OAAOkB,gBAAiBrqK,KAAKyD,UAEpE+iK,YAAY7lK,UAAUyiK,WAAa,WAAc,MAAO0D,cAAa9mK,KAAKmpK,OAAQnpK,KAAKyD,UACvF+iK,YAAY7lK,UAAUuiK,gBAAkB,SAAU1lI,OAC9C,MAAO0lI,iBAAgBljK,KAAKmpK,OAAQnpK,KAAKyD,QAAS+5B,QAEtDgpI,YAAY7lK,UAAU0iK,QAAU,SAAUC,YACnCkD,eAEPgD,cAAiB,WACjB,QAASA,eAAc3rI,OAAQp6B,SAC3BzD,KAAKyD,QAAUA,QACfzD,KAAKoiK,UAAW,EAChBpiK,KAAK0lE,SAAW,aAChB1lE,KAAK69B,OAASA,QAAUp6B,SAAYo6B,OAAOtT,MAAQqkD,YAAYq5F,YAAYqC,MACvE7mK,QAAQyiK,QAAQqE,iBAAiB1sI,QACjCA,OAsER,MApEAj+B,QAAOugB,eAAeqpJ,cAAc7oK,UAAW,QAC3C2f,IAAK,WAAc,MAAOtgB,MAAK69B,OAAOj/B,MACtCyhB,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAeqpJ,cAAc7oK,UAAW,QAC3C2f,IAAK,WAAc,MAAOtgB,MAAK+hK,SAAW,SAAW,YACrD1hJ,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAeqpJ,cAAc7oK,UAAW,QAC3C2f,IAAK,WAAc,MAAO,IAAIkmJ,aAAYxmK,KAAKmpK,OAAQnpK,KAAKyD,UAC5D4c,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAeqpJ,cAAc7oK,UAAW,aAC3C2f,IAAK,WAAc,MAAOynJ,gBAAe/nK,KAAK69B,OAAQ79B,KAAKyD,UAC3D4c,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAeqpJ,cAAc7oK,UAAW,UAC3C2f,IAAK,WAED,OAAQinJ,gBAAgBvnK,KAAK69B,SAEjCxd,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAeqpJ,cAAc7oK,UAAW,YAC3C2f,IAAK,WAAc,MAAOsmJ,cAAa5mK,KAAKmpK,SAC5C9oJ,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAeqpJ,cAAc7oK,UAAW,cAC3C2f,IAAK,WAAc,MAAOunJ,wBAAuB7nK,KAAK69B,SACtDxd,YAAY,EACZD,cAAc,IAElBopJ,cAAc7oK,UAAU27D,QAAU,WAC9B,IAAKt8D,KAAKwqK,SACN,GAAiG,IAA5FxqK,KAAK69B,OAAOtT,OAASqkD,YAAYq5F,YAAY7tI,MAAQw0C,YAAYq5F,YAAYwC,YAAkB,CAChG,GAAIvrD,cAAel/G,KAAKyD,QAAQyiK,QAAQwE,wBAAwB1qK,KAAK69B,QACjE8sI,YAAc,GAAInE,aAAYtnD,aAAcl/G,KAAKyD,QACrDzD,MAAKwqK,SAAWG,YAAYruG,cAG5Bt8D,MAAKwqK,SAAW,GAAIJ,oBAAmBpqK,KAAK69B,OAAOy+B,QAASt8D,KAAKyD,QAGzE,OAAOzD,MAAKwqK,UAEhBhB,cAAc7oK,UAAUyiK,WAAa,WAAc,MAAO0D,cAAa9mK,KAAKmpK,OAAQnpK,KAAKyD,UACzF+lK,cAAc7oK,UAAUuiK,gBAAkB,SAAU1lI,OAChD,MAAO0lI,iBAAgBljK,KAAKmpK,OAAQnpK,KAAKyD,QAAS+5B,QAEtDgsI,cAAc7oK,UAAU0iK,QAAU,SAAUC,YAC5C1jK,OAAOugB,eAAeqpJ,cAAc7oK,UAAW,UAC3C2f,IAAK,WACD,GAAIla,MAAOpG,KAAK4qK,OAKhB,OAJKxkK,QACDA,KAAOpG,KAAK4qK,QACR5qK,KAAKyD,QAAQyiK,QAAQ6D,0BAA0B/pK,KAAK69B,OAAQ79B,KAAKyD,QAAQ4b,OAE1EjZ,MAEXia,YAAY,EACZD,cAAc,IAEXopJ,iBAEPG,eAAkB,WAClB,QAASA,gBAAevkG,aACpBplE,KAAKolE,YAAcA,YACnBplE,KAAK0lE,SAAW,cAChB1lE,KAAKoiK,UAAW,EAChBpiK,KAAKmjK,QAAS,EAsClB,MApCAvjK,QAAOugB,eAAewpJ,eAAehpK,UAAW,QAC5C2f,IAAK,WAAc,MAAOtgB,MAAKolE,YAAYxmE,MAC3CyhB,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAewpJ,eAAehpK,UAAW,QAC5C2f,IAAK,WAAc,MAAOtgB,MAAKolE,YAAY9vD,MAC3C+K,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAewpJ,eAAehpK,UAAW,aAC5C2f,IAAK,aACLD,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAewpJ,eAAehpK,UAAW,QAC5C2f,IAAK,WAAc,MAAOtgB,MAAKolE,YAAYh/D,MAC3Cia,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAewpJ,eAAehpK,UAAW,YAC5C2f,IAAK,WAAc,MAAOtgB,MAAKolE,YAAYh/D,KAAK27J,UAChD1hJ,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAewpJ,eAAehpK,UAAW,cAC5C2f,IAAK,WAAc,MAAOtgB,MAAKolE,YAAYZ,YAC3CnkD,YAAY,EACZD,cAAc,IAElBupJ,eAAehpK,UAAU27D,QAAU,WAAc,MAAOt8D,MAAKolE,YAAYh/D,KAAKk2D,WAC9EqtG,eAAehpK,UAAUyiK,WAAa,WAAc,MAAOpjK,MAAKolE,YAAYh/D,KAAKg9J,cACjFuG,eAAehpK,UAAUuiK,gBAAkB,SAAU1lI,OACjD,MAAOx9B,MAAKolE,YAAYh/D,KAAK88J,gBAAgB1lI,QAEjDmsI,eAAehpK,UAAU0iK,QAAU,SAAUC,YACtCqG,kBAEP5C,iBAAoB,WACpB,QAASA,kBAAiBlwH,UAAWpzC,SACjCzD,KAAK62C,UAAYA,UACjB72C,KAAKyD,QAAUA,QAcnB,MAZA7D,QAAOugB,eAAe4mJ,iBAAiBpmK,UAAW,aAC9C2f,IAAK,WACD,MAAO,IAAI8pJ,oBAAmBpqK,KAAK62C,UAAUg0H,gBAAiB7qK,KAAKyD,UAEvE4c,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe4mJ,iBAAiBpmK,UAAW,UAC9C2f,IAAK,WAAc,MAAO,IAAIkmJ,aAAYxmK,KAAK62C,UAAUi0H,gBAAiB9qK,KAAKyD,UAC/E4c,YAAY,EACZD,cAAc,IAEX2mJ,oBAEPgE,wBAA2B,WAC3B,QAASA,yBAAwBl0H,UAAWm0H,YACxChrK,KAAK62C,UAAYA,UACjB72C,KAAKgrK,WAAaA,WAYtB,MAVAprK,QAAOugB,eAAe4qJ,wBAAwBpqK,UAAW,aACrD2f,IAAK,WAAc,MAAOtgB,MAAK62C,UAAU70C,WACzCqe,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe4qJ,wBAAwBpqK,UAAW,UACrD2f,IAAK,WAAc,MAAOtgB,MAAKgrK,YAC/B3qJ,YAAY,EACZD,cAAc,IAEX2qJ,2BAEPE,cAsZJ,SAA6BzlK,IAAK8V,MAC9B,GAAI4vJ,WAAYvC,UAAU/5F,YAAY2hC,QACtC,OAAOq4D,gBAAeD,UAAUnjK,KAAM0lK,YAAc,GAChDtC,eAAeD,UAAUrtJ,MAAO4vJ,YAAc,GAzZd,OACpC,SAAW3tI,SAEP,IAAK,GADD59B,QAAS,GAAI4oB,KACRxmB,GAAK,EAAGopK,UAAY5tI,QAASx7B,GAAKopK,UAAUlpK,OAAQF,KAAM,CAC/D,GAAI87B,QAASstI,UAAUppK,GACvBpC,QAAO4gB,IAAIsd,OAAOj/B,KAAMi/B,QAE5B,MAAOl+B,SAEX,SAAW49B,SAEP,IAAK,GADD59B,WACKoC,GAAK,EAAGqpK,UAAY7tI,QAASx7B,GAAKqpK,UAAUnpK,OAAQF,KAAM,CAC/D,GAAI87B,QAASutI,UAAUrpK,GACvBpC,QAAOk+B,OAAOj/B,MAAQi/B,OAE1B,MAAOl+B,SAoBXyqK,mBAAsB,WACtB,QAASA,oBAAmB7sI,QAAS95B,SACjCzD,KAAKyD,QAAUA,QACf85B,QAAUA,YACN75B,MAAMC,QAAQ45B,UACdv9B,KAAKu9B,QAAUA,QACfv9B,KAAKinK,YAAcgE,cAAc1tI,WAGjCv9B,KAAKu9B,QAAUypI,UAAUzpI,SACzBv9B,KAAKinK,YAAc1pI,SAoB3B,MAjBA39B,QAAOugB,eAAeiqJ,mBAAmBzpK,UAAW,QAChD2f,IAAK,WAAc,MAAOtgB,MAAKu9B,QAAQt7B,QACvCoe,YAAY,EACZD,cAAc,IAElBgqJ,mBAAmBzpK,UAAU2f,IAAM,SAAUtM,KACzC,GAAI6pB,QAAS6qI,mBAAmB1oK,KAAKinK,YAAajzJ,IAClD,OAAO6pB,QAAS,GAAI2rI,eAAc3rI,OAAQ79B,KAAKyD,aAAWU,IAE9DimK,mBAAmBzpK,UAAUgzB,IAAM,SAAU3f,KACzC,GAAIkzJ,OAAQlnK,KAAKinK,WACjB,OAA6B,kBAAdC,OAAMvzI,IAAsBuzI,MAAMvzI,IAAI3f,KAAqB,MAAdkzJ,MAAMlzJ,MAEtEo2J,mBAAmBzpK,UAAUuB,OAAS,WAClC,GAAIggC,OAAQliC,IACZ,OAAOA,MAAKu9B,QAAQt9B,IAAI,SAAU8E,GAAK,MAAO,IAAIykK,eAAczkK,EAAGm9B,MAAMz+B,YAEtE2mK,sBAEPX,eAAkB,WAClB,QAASA,kBACLzpK,KAAKC,IAAM,GAAIsoB,KACfvoB,KAAKqrK,WA2BT,MAzBAzrK,QAAOugB,eAAespJ,eAAe9oK,UAAW,QAC5C2f,IAAK,WAAc,MAAOtgB,MAAKC,IAAI0iD,MACnCtiC,YAAY,EACZD,cAAc,IAElBqpJ,eAAe9oK,UAAU2f,IAAM,SAAUtM,KAAO,MAAOhU,MAAKC,IAAIqgB,IAAItM,MACpEy1J,eAAe9oK,UAAUo7B,IAAM,SAAU8B,QACrC,GAAI79B,KAAKC,IAAI0zB,IAAIkK,OAAOj/B,MAAO,CAC3B,GAAIsvJ,UAAWluJ,KAAKC,IAAIqgB,IAAIud,OAAOj/B,KACnCoB,MAAKqrK,QAAQrrK,KAAKqrK,QAAQloK,QAAQ+qJ,WAAarwH,OAEnD79B,KAAKC,IAAIsgB,IAAIsd,OAAOj/B,KAAMi/B,QAC1B79B,KAAKqrK,QAAQvkK,KAAK+2B,SAEtB4rI,eAAe9oK,UAAU+oK,OAAS,SAAUnsI,SACxC,IAAK,GAAIx7B,IAAK,EAAGupK,UAAY/tI,QAASx7B,GAAKupK,UAAUrpK,OAAQF,KAAM,CAC/D,GAAI87B,QAASytI,UAAUvpK,GACvB/B,MAAK+7B,IAAI8B,UAGjB4rI,eAAe9oK,UAAUgzB,IAAM,SAAU3f,KAAO,MAAOhU,MAAKC,IAAI0zB,IAAI3f,MACpEy1J,eAAe9oK,UAAUuB,OAAS,WAE9B,MAAOlC,MAAKqrK,SAET5B,kBAEP9C,WAAc,WACd,QAASA,YAAWxlI,MAAO19B,SACvBzD,KAAKmhC,MAAQA,MACbnhC,KAAKyD,QAAUA,QAkBnB,MAhBA7D,QAAOugB,eAAewmJ,WAAWhmK,UAAW,QACxC2f,IAAK,WAAc,MAAOtgB,MAAKmhC,MAAMl/B,QACrCoe,YAAY,EACZD,cAAc,IAElBumJ,WAAWhmK,UAAU2f,IAAM,SAAUtM,KACjC,GAAI6+C,MAAO7yD,KAAKmhC,MAAM1iB,KAAK,SAAUo0C,MAAQ,MAAOA,MAAKj0D,MAAQoV,KACjE,IAAI6+C,KACA,MAAO,IAAI04G,YAAW14G,KAAM7yD,KAAKyD,UAGzCkjK,WAAWhmK,UAAUgzB,IAAM,SAAU3f,KAAO,MAAwE,OAAjEhU,KAAKmhC,MAAM1iB,KAAK,SAAUo0C,MAAQ,MAAOA,MAAKj0D,MAAQoV,OACzG2yJ,WAAWhmK,UAAUuB,OAAS,WAC1B,GAAIggC,OAAQliC,IACZ,OAAOA,MAAKmhC,MAAMlhC,IAAI,SAAU4yD,MAAQ,MAAO,IAAI04G,YAAW14G,KAAM3wB,MAAMz+B,YAEvEkjK,cAEP4E,WAAc,WACd,QAASA,YAAW14G,KAAMpvD,SACtBzD,KAAK6yD,KAAOA,KACZ7yD,KAAKyD,QAAUA,QACfzD,KAAKsV,KAAO,OACZtV,KAAK0lE,SAAW,aAChB1lE,KAAK2lE,cAAYxhE,GACjBnE,KAAK+hK,UAAW,EAChB/hK,KAAKoiK,UAAW,EAChBpiK,KAAKmjK,QAAS,EAkFlB,MAhFAvjK,QAAOugB,eAAeorJ,WAAW5qK,UAAW,QACxC2f,IAAK,WAAc,MAAOtgB,MAAK6yD,KAAKj0D,MACpCyhB,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAeorJ,WAAW5qK,UAAW,QACxC2f,IAAK,WAAc,MAAO,IAAIkmJ,aAAYxmK,KAAKmpK,OAAQnpK,KAAKyD,UAC5D4c,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAeorJ,WAAW5qK,UAAW,cACxC2f,IAAK,WACD,GAAIud,QAAS79B,KAAKmpK,OAAOgB,WACzB,OAAOtsI,QAASgqI,uBAAuBhqI,YAAU15B,IAErDkc,YAAY,EACZD,cAAc,IAElBmrJ,WAAW5qK,UAAU27D,QAAU,WAAc,MAAOkvG,YAAWpgH,UAC/DmgH,WAAW5qK,UAAUyiK,WAAa,WAAc,MAAO0D,cAAa9mK,KAAKmpK,OAAQnpK,KAAKyD,UACtF8nK,WAAW5qK,UAAUuiK,gBAAkB,SAAU1lI,OAC7C,GAAIqZ,WAAYqsH,gBAAgBljK,KAAKmpK,OAAQnpK,KAAKyD,QAAS+5B,MAC3D,IAAoB,GAAhBA,MAAMv7B,OAAa,CACnB,GAAIwpK,eAAgBjuI,MAAM,EAC1B,IAAIiuI,wBAAyBjF,aAAa,CACtC,GAAIwE,gBAAa7mK,EACjB,QAAQnE,KAAKpB,MACT,IAAK,QACD,OAAQ6sK,cAAc7sK,MAClB,IAAK,aACL,IAAK,UACL,IAAK,eACDosK,WAAa7C,mBAAmBsD,cAActC,OAAQsC,cAAc7sK,KACpE,MACJ,SACIosK,WAAavD,qBAAqB/F,UAAUz+C,YAAYrlD,IAAK59D,KAAKyD,SAG1E,KACJ,KAAK,QACDunK,WAAa7C,mBAAmBsD,cAActC,OAAQ,SAG1D6B,aACAn0H,UAAY,GAAIk0H,yBAAwBl0H,UAAW,GAAI2vH,aAAYwE,WAAYS,cAAchoK,YAIzG,MAAOozC,YAEX00H,WAAW5qK,UAAU0iK,QAAU,SAAUC,YACzC1jK,OAAOugB,eAAeorJ,WAAW5qK,UAAW,UACxC2f,IAAK,WACD,GAAIla,MAAOpG,KAAK4qK,OAChB,KAAKxkK,KAAM,CACP,GAAIi+D,aAAcrkE,KAAK0rK,gBAAgB1rK,KAAK6yD,KAAKzsD,KAAKiB,UAClDg9D,eACAj+D,KAAOpG,KAAK4qK,QAAU5qK,KAAK2rK,wBAAwBtnG,cAElDj+D,OACDA,KAAOpG,KAAK4qK,QAAUnD,qBAAqB/F,UAAUz+C,YAAYrlD,IAAK59D,KAAKyD,UAGnF,MAAO2C,OAEXia,YAAY,EACZD,cAAc,IAElBmrJ,WAAW5qK,UAAU+qK,gBAAkB,SAAUtlK,MAC7C,MAAOghK,0BAAyBhhK,KAAMpG,KAAKyD,UAE/C8nK,WAAW5qK,UAAUgrK,wBAA0B,SAAUtnG,aACrD,GAAIunG,WAAY5rK,KAAKyD,QAAQyiK,QAAQwE,wBAAwBrmG,YAC7D,IAAIunG,UAAW,CACX,GAAI3oI,WAAY2oI,UAAUC,YAAY,YACtC,IAAI5oI,UACA,MAAOjjC,MAAKyD,QAAQyiK,QAAQ6D,0BAA0B9mI,UAAWjjC,KAAKyD,QAAQ4b,QAInFksJ,cAUPC,WAAc,WACd,QAASA,cACLxrK,KAAK2iD,KAAO,EAMhB,MAJA6oH,YAAW7qK,UAAU2f,IAAM,SAAUtM,OACrCw3J,WAAW7qK,UAAUgzB,IAAM,SAAU3f,KAAO,OAAO,GACnDw3J,WAAW7qK,UAAUuB,OAAS,WAAc,UAC5CspK,WAAWpgH,SAAW,GAAIogH,YACnBA,gBAuLPM,kBAAoB1/H,qBAAqB,SAAU5sC,OAAQC;;;;;;;AAS/DG,OAAOugB,eAAe1gB,QAAS,cAAgB8D,OAAO,IAUtD9D,QAAQ6/J,aAAelC,cAAckC,aACrC7/J,QAAQ0hK,4BAA8B/D,cAAc+D,4BACpD1hK,QAAQ6hK,wBAA0BlE,cAAckE,wBAEhD7hK,QAAQ8kK,yBAA2BL,uBAAuBK,yBAC1D9kK,QAAQ6kK,mBAAqBJ,uBAAuBI,mBACpD7kK,QAAQ0kK,iCAAmCD,uBAAuBC,iCAElE1kK,QAAQoiK,QAAUF,gBAAgBE,QAClCpiK,QAAQqlE,eAAiB68F,gBAAgB78F,eACzCrlE,QAAQmiK,eAAiBD,gBAAgBC,eAEzCniK,QAAQwjH,YAAcy+C,UAAUz+C,YAEhCxjH,QAAQ6mK,yBAA2BN,mBAAmBM,yBACtD7mK,QAAQ4mK,gBAAkBL,mBAAmBK,gBAC7C5mK,QAAQgnK,+BAAiCT,mBAAmBS,+BAC5DhnK,QAAQinK,cAAgBV,mBAAmBU,cAC3CjnK,QAAQwmK,eAAiBD,mBAAmBC,iBAIxC8F,oBAAsBD,kBAAkBxM,aACxC0M,oBAAsBF,kBAAkB3K,4BACxC3/F,oBAAsBsqG,kBAAkBxH,mBACxCt/F,oBAAsB8mG,kBAAkB3H,iCACxC7mG,oBAAsBwuG,kBAAkBjK,QACxClkG,qBAAuBmuG,kBAAkB7oD,YACzCgpD,qBAAuBH,kBAAkBrF,+BACzCyF,qBAAuBJ,kBAAkBpF,cACzCyF,qBAAuBL,kBAAkB7F,eAKzCmG,WAA+B,mBAAXhoB,SAA0BA,OAC9CioB,SAA2B,mBAATvxG,OAAqD,mBAAtBwxG,oBACjDxxG,eAAgBwxG,oBAAqBxxG,KACrCyxG,eAAuC,KAAnBpoB,gBAAkCA,eACtDqoB,MAAQJ,YAAcG,YAAcF,SACpCI,OAASD,OAIb,WACI,IAAKA,MACD,KAAM,IAAI/nK,OAAM,mEAKxB,IAuCI+nC,gBAvCAkC,MACHA,KAAM+9H,QAMHC,aAAergI,WAGfsgI,cACHtgI,WAAYqgI,cAGTE,UAAYlpK,MAAMC,SAAW,SAAW6Y,GAAK,MAAOA,IAAyB,gBAAbA,GAAEva,QAGlE0B,SACHA,QAASipK,WAMNC,WAAavgI,SAGb4C,YACH5C,SAAUugI,YAIPC,eAAkBzzJ,MAGlBozB,aACHA,YAAaqgI,eAiBVC,WAAargI,SAIbsgI,YACHtgI,SAAUqgI,YAGPE,YAAe9oB,gBAAkBA,eAAe9jJ,WAAc,SAAUC,EAAGC,GAE3E,QAASC,MAAOR,KAAKS,YAAcH,EADnC,IAAK,GAAIke,KAAKje,GAAOA,EAAE8F,eAAemY,KAAIle,EAAEke,GAAKje,EAAEie,GAEnDle,GAAEK,UAAkB,OAANJ,EAAaX,OAAOgB,OAAOL,IAAMC,GAAGG,UAAYJ,EAAEI,UAAW,GAAIH,MAM/EusC,oBAAuB,SAAUviC,QAEjC,QAASuiC,qBAAoBnb,QACzBpnB,OAAOklC,KAAK1vC,MACZA,KAAK4xB,OAASA,MACd,IAAIib,KAAMpoC,MAAMirC,KAAK1vC,KAAM4xB,OACvBA,OAAO3vB,OAAS,8CAAgD2vB,OAAO3xB,IAAI,SAAU4sC,IAAK/hC,GAAK,MAASA,GAAI,EAAK,KAAO+hC,IAAI7mC,aAAgBH,KAAK,QAAU,GAC/J7F,MAAKpB,KAAOiuC,IAAIjuC,KAAO,sBACvBoB,KAAKiY,MAAQ40B,IAAI50B,MACjBjY,KAAKiR,QAAU47B,IAAI57B,QAEvB,MAVAg8J,aAAYlgI,oBAAqBviC,QAU1BuiC,qBACTtoC,OACEyoK,sBAAwBngI,oBAGxBD,uBACHC,oBAAqBmgI,uBAelBC,aAAgB,WAKhB,QAASA,cAAa3+G,aAKlBxuD,KAAKmuC,QAAS,EACdnuC,KAAKyqD,QAAU,KACfzqD,KAAKotK,SAAW,KAChBptK,KAAKqtK,eAAiB,KAClB7+G,cACAxuD,KAAKstK,aAAe9+G,aAwJ5B,MA/IA2+G,cAAaxsK,UAAU6tD,YAAc,WACjC,GACI58B,QADA27I,WAAY,CAEhB,KAAIvtK,KAAKmuC,OAAT,CAGA,GAAIh1B,IAAKnZ,KAAMyqD,QAAUtxC,GAAGsxC,QAAS2iH,SAAWj0J,GAAGi0J,SAAUE,aAAen0J,GAAGm0J,aAAcD,eAAiBl0J,GAAGk0J,cACjHrtK,MAAKmuC,QAAS,EACdnuC,KAAKyqD,QAAU,KACfzqD,KAAKotK,SAAW,KAGhBptK,KAAKqtK,eAAiB,IAKtB,KAJA,GAAIhoK,QAAS,EACT4T,IAAMm0J,SAAWA,SAASnrK,OAAS,EAGhCwoD,SACHA,QAAQzL,OAAOh/C,MAGfyqD,UAAYplD,MAAQ4T,KAAOm0J,SAAS/nK,QAAU,IAElD,IAAIsnK,aAAatgI,WAAWihI,cAAe,CACvC,GAAIE,OAAQR,WAAWtgI,SAAS4gI,cAAc59H,KAAK1vC,KAC/CwtK,SAAU/gI,YAAYA,cACtB8gI,WAAY,EACZ37I,OAASA,SAAW6a,YAAYA,YAAYpzB,YAAayzB,uBAAsBC,oBAC3EJ,4BAA4BF,YAAYA,YAAYpzB,EAAEuY,SAAW6a,YAAYA,YAAYpzB,KAGrG,GAAI1V,QAAQA,QAAQ0pK,gBAGhB,IAFAhoK,OAAS,EACT4T,IAAMo0J,eAAeprK,SACZoD,MAAQ4T,KAAK,CAClB,GAAI6uE,KAAMulF,eAAehoK,MACzB,IAAI6pC,WAAW5C,SAASw7C,KAAM,CAC1B,GAAI0lF,OAAQR,WAAWtgI,SAASo7C,IAAIt5B,aAAa9e,KAAKo4C,IACtD,IAAI0lF,QAAU/gI,YAAYA,YAAa,CACnC8gI,WAAY,EACZ37I,OAASA,UACT,IAAIib,KAAMJ,YAAYA,YAAYpzB,CAC9BwzB,eAAeC,uBAAsBC,oBACrCnb,OAASA,OAAOjpB,OAAOgkC,4BAA4BE,IAAIjb,SAGvDA,OAAO9qB,KAAK+lC,OAMhC,GAAI0gI,UACA,KAAM,IAAIzgI,uBAAsBC,oBAAoBnb,UAqB5Du7I,aAAaxsK,UAAUo7B,IAAM,SAAU0xI,UACnC,IAAKA,UAAaA,WAAaN,aAAah6H,MACxC,MAAOg6H,cAAah6H,KAExB,IAAIs6H,WAAaztK,KACb,MAAOA,KAEX,IAAIsuD,cAAem/G,QACnB,cAAeA,WACX,IAAK,WACDn/G,aAAe,GAAI6+G,cAAaM,SACpC,KAAK,SACD,GAAIn/G,aAAangB,QAA8C,kBAA7BmgB,cAAaE,YAC3C,MAAOF,aAEN,IAAItuD,KAAKmuC,OAEV,MADAmgB,cAAaE,cACNF,YAEN,IAAuC,kBAA5BA,cAAao/G,WAA6C,CACtE,GAAIC,KAAMr/G,YACVA,cAAe,GAAI6+G,cACnB7+G,aAAa++G,gBAAkBM,KAEnC,KACJ,SACI,KAAM,IAAIlpK,OAAM,yBAA2BgpK,SAAW,2BAK9D,OAHoBztK,KAAKqtK,iBAAmBrtK,KAAKqtK,oBACnCvmK,KAAKwnD,cACnBA,aAAao/G,WAAW1tK,MACjBsuD,cAQX6+G,aAAaxsK,UAAUq+C,OAAS,SAAUsP,cACtC,GAAIs/G,eAAgB5tK,KAAKqtK,cACzB,IAAIO,cAAe,CACf,GAAIC,mBAAoBD,cAAczqK,QAAQmrD,eACnB,IAAvBu/G,mBACAD,cAAc3uH,OAAO4uH,kBAAmB,KAIpDV,aAAaxsK,UAAU+sK,WAAa,SAAUtlI,QAC1C,GAAIjvB,IAAKnZ,KAAMyqD,QAAUtxC,GAAGsxC,QAAS2iH,SAAWj0J,GAAGi0J,QAC9C3iH,UAAWA,UAAYriB,OAKlBglI,UAK6B,IAA9BA,SAASjqK,QAAQilC,SAEtBglI,SAAStmK,KAAKshC,QAJdpoC,KAAKotK,UAAYhlI,QALjBpoC,KAAKyqD,QAAUriB,QAYvB+kI,aAAah6H,MAAS,SAAU5F,OAE5B,MADAA,OAAMY,QAAS,EACRZ,OACT,GAAI4/H,eACCA,gBAEPW,eAAiBX,aAMjBY,gBACHZ,aAAcW,gBAGXvgI,OACAY,QAAQ,EACRI,KAAM,SAAUhrC,SAChBiB,MAAO,SAAUqoC,KAAO,KAAMA,MAC9BK,SAAU,cAIVI,UACHC,MAAOA,OAGJF,aAAejB,qBAAqB,SAAU5sC,OAAQC,SAG1D,GAAIuuK,QAASt/H,KAAKA,KAAKs/H,MACvBvuK,SAAQ4tC,aAAkC,kBAAX2gI,SAA+C,kBAAfA,QAAOp5C,IAClEo5C,OAAOp5C,IAAI,gBAAkB,iBAIjCn1H,QAAQwuK,eAAiBxuK,QAAQ4tC,eAI7B6gI,YAAe/pB,gBAAkBA,eAAe9jJ,WAAc,SAAUC,EAAGC,GAE3E,QAASC,MAAOR,KAAKS,YAAcH,EADnC,IAAK,GAAIke,KAAKje,GAAOA,EAAE8F,eAAemY,KAAIle,EAAEke,GAAKje,EAAEie,GAEnDle,GAAEK,UAAkB,OAANJ,EAAaX,OAAOgB,OAAOL,IAAMC,GAAGG,UAAYJ,EAAEI,UAAW,GAAIH,MAgB/E4sC,WAAc,SAAU5iC,QAUxB,QAAS4iC,YAAW+gI,kBAAmB3pK,MAAO0oC,UAM1C,OALA1iC,OAAOklC,KAAK1vC,MACZA,KAAKouK,eAAiB,KACtBpuK,KAAKquK,iBAAkB,EACvBruK,KAAKsuK,oBAAqB,EAC1BtuK,KAAKuuK,WAAY,EACTvsK,UAAUC,QACd,IAAK,GACDjC,KAAKguC,YAAcV,SAASC,KAC5B,MACJ,KAAK,GACD,IAAK4gI,kBAAmB,CACpBnuK,KAAKguC,YAAcV,SAASC,KAC5B,OAEJ,GAAiC,gBAAtB4gI,mBAAgC,CACnCA,4BAA6B/gI,aAC7BptC,KAAKguC,YAAcmgI,kBACnBnuK,KAAKguC,YAAYjS,IAAI/7B,QAGrBA,KAAKsuK,oBAAqB,EAC1BtuK,KAAKguC,YAAc,GAAIwgI,gBAAexuK,KAAMmuK,mBAEhD,OAER,QACInuK,KAAKsuK,oBAAqB,EAC1BtuK,KAAKguC,YAAc,GAAIwgI,gBAAexuK,KAAMmuK,kBAAmB3pK,MAAO0oC,WAuFlF,MA5HAghI,aAAY9gI,WAAY5iC,QAyCxB4iC,WAAWzsC,UAAU0sC,aAAaA,cAAgB,WAAc,MAAOrtC,OAYvEotC,WAAWxsC,OAAS,SAAU2tC,KAAM/pC,MAAO0oC,UACvC,GAAIuhI,YAAa,GAAIrhI,YAAWmB,KAAM/pC,MAAO0oC,SAE7C,OADAuhI,YAAWH,oBAAqB,EACzBG,YASXrhI,WAAWzsC,UAAU4tC,KAAO,SAAUhrC,OAC7BvD,KAAKuuK,WACNvuK,KAAK0uK,MAAMnrK,QAUnB6pC,WAAWzsC,UAAU6D,MAAQ,SAAUqoC,KAC9B7sC,KAAKuuK,YACNvuK,KAAKuuK,WAAY,EACjBvuK,KAAK2uK,OAAO9hI,OASpBO,WAAWzsC,UAAUusC,SAAW,WACvBltC,KAAKuuK,YACNvuK,KAAKuuK,WAAY,EACjBvuK,KAAK4uK,cAGbxhI,WAAWzsC,UAAU6tD,YAAc,WAC3BxuD,KAAKmuC,SAGTnuC,KAAKuuK,WAAY,EACjB/jK,OAAO7J,UAAU6tD,YAAY9e,KAAK1vC,QAEtCotC,WAAWzsC,UAAU+tK,MAAQ,SAAUnrK,OACnCvD,KAAKguC,YAAYO,KAAKhrC,QAE1B6pC,WAAWzsC,UAAUguK,OAAS,SAAU9hI,KACpC7sC,KAAKguC,YAAYxpC,MAAMqoC,KACvB7sC,KAAKwuD,eAETphB,WAAWzsC,UAAUiuK,UAAY,WAC7B5uK,KAAKguC,YAAYd,WACjBltC,KAAKwuD,eAETphB,WAAWzsC,UAAUkuK,uBAAyB,WAC1C,GAAI11J,IAAKnZ,KAAMyqD,QAAUtxC,GAAGsxC,QAAS2iH,SAAWj0J,GAAGi0J,QAQnD,OAPAptK,MAAKyqD,QAAU,KACfzqD,KAAKotK,SAAW,KAChBptK,KAAKwuD,cACLxuD,KAAKmuC,QAAS,EACdnuC,KAAKuuK,WAAY,EACjBvuK,KAAKyqD,QAAUA,QACfzqD,KAAKotK,SAAWA,SACTptK,MAEJotC,YACT2gI,eAAeZ,cACb2B,aAAe1hI,WAMfohI,eAAkB,SAAUhkK,QAE5B,QAASgkK,gBAAeO,kBAAmBC,eAAgBxqK,MAAO0oC,UAC9D1iC,OAAOklC,KAAK1vC,MACZA,KAAK+uK,kBAAoBA,iBACzB,IAAIxgI,MACA9qC,QAAUzD,IACV2sK,cAAatgI,WAAW2iI,gBACxBzgI,KAAOygI,eAEFA,iBACLzgI,KAAOygI,eAAezgI,KACtB/pC,MAAQwqK,eAAexqK,MACvB0oC,SAAW8hI,eAAe9hI,SACtB8hI,iBAAmB1hI,SAASC,QAC5B9pC,QAAU7D,OAAOgB,OAAOouK,gBACpBrC,aAAatgI,WAAW5oC,QAAQ+qD,cAChCxuD,KAAK+7B,IAAIt4B,QAAQ+qD,YAAYzlB,KAAKtlC,UAEtCA,QAAQ+qD,YAAcxuD,KAAKwuD,YAAYzlB,KAAK/oC,QAGpDA,KAAKivK,SAAWxrK,QAChBzD,KAAK0uK,MAAQngI,KACbvuC,KAAK2uK,OAASnqK,MACdxE,KAAK4uK,UAAY1hI,SAmFrB,MA3GAghI,aAAYM,eAAgBhkK,QA0B5BgkK,eAAe7tK,UAAU4tC,KAAO,SAAUhrC,OACtC,IAAKvD,KAAKuuK,WAAavuK,KAAK0uK,MAAO,CAC/B,GAAIK,mBAAoB/uK,KAAK+uK,iBACxBA,mBAAkBT,mBAGdtuK,KAAKkvK,gBAAgBH,kBAAmB/uK,KAAK0uK,MAAOnrK,QACzDvD,KAAKwuD,cAHLxuD,KAAKmvK,aAAanvK,KAAK0uK,MAAOnrK,SAO1CirK,eAAe7tK,UAAU6D,MAAQ,SAAUqoC,KACvC,IAAK7sC,KAAKuuK,UAAW,CACjB,GAAIQ,mBAAoB/uK,KAAK+uK,iBAC7B,IAAI/uK,KAAK2uK,OACAI,kBAAkBT,oBAKnBtuK,KAAKkvK,gBAAgBH,kBAAmB/uK,KAAK2uK,OAAQ9hI,KACrD7sC,KAAKwuD,gBALLxuD,KAAKmvK,aAAanvK,KAAK2uK,OAAQ9hI,KAC/B7sC,KAAKwuD,mBAOR,CAAA,IAAKugH,kBAAkBT,mBAExB,KADAtuK,MAAKwuD,cACC3hB,GAGNkiI,mBAAkBX,eAAiBvhI,IACnCkiI,kBAAkBV,iBAAkB,EACpCruK,KAAKwuD,iBAIjBggH,eAAe7tK,UAAUusC,SAAW,WAChC,GAAIhL,OAAQliC,IACZ,KAAKA,KAAKuuK,UAAW,CACjB,GAAIQ,mBAAoB/uK,KAAK+uK,iBAC7B,IAAI/uK,KAAK4uK,UAAW,CAChB,GAAIQ,iBAAkB,WAAc,MAAOltI,OAAM0sI,UAAUl/H,KAAKxN,MAAM+sI,UACjEF,mBAAkBT,oBAKnBtuK,KAAKkvK,gBAAgBH,kBAAmBK,iBACxCpvK,KAAKwuD,gBALLxuD,KAAKmvK,aAAaC,iBAClBpvK,KAAKwuD,mBAQTxuD,MAAKwuD,gBAIjBggH,eAAe7tK,UAAUwuK,aAAe,SAAUroJ,GAAIvjB,OAClD,IACIujB,GAAG4oB,KAAK1vC,KAAKivK,SAAU1rK,OAE3B,MAAOspC,KAEH,KADA7sC,MAAKwuD,cACC3hB,MAGd2hI,eAAe7tK,UAAUuuK,gBAAkB,SAAU9mI,OAAQthB,GAAIvjB,OAC7D,IACIujB,GAAG4oB,KAAK1vC,KAAKivK,SAAU1rK,OAE3B,MAAOspC,KAGH,MAFAzE,QAAOgmI,eAAiBvhI,IACxBzE,OAAOimI,iBAAkB,GAClB,EAEX,OAAO,GAEXG,eAAe7tK,UAAU2sK,aAAe,WACpC,GAAIyB,mBAAoB/uK,KAAK+uK,iBAC7B/uK,MAAKivK,SAAW,KAChBjvK,KAAK+uK,kBAAoB,KACzBA,kBAAkBvgH,eAEfggH,gBACTphI,YAGED,cACHC,WAAY0hI,cAiBTO,eAAiBriI,aAGjBsiI,gBACHtiI,aAAcqiI,gBAGXtgI,WAAa3C,qBAAqB,SAAU5sC,OAAQC,SAGxD,QAAS8vK,qBAAoB9rK,SACzB,GAAI+rK,cACAxB,OAASvqK,QAAQuqK,MAarB,OAZsB,kBAAXA,QACHA,OAAOj/H,WACPygI,aAAexB,OAAOj/H,YAGtBygI,aAAexB,OAAO,cACtBA,OAAOj/H,WAAaygI,cAIxBA,aAAe,eAEZA,aAEX/vK,QAAQ8vK,oBAAsBA,oBAC9B9vK,QAAQsvC,WAAawgI,oBAAoB7gI,KAAKA,MAI9CjvC,QAAQ+vK,aAAe/vK,QAAQsvC,aAU3BV,WAAc,WAQd,QAASA,YAAWV,WAChB3tC,KAAKsuC,WAAY,EACbX,YACA3tC,KAAKyvK,WAAa9hI,WAuO1B,MA7NAU,YAAW1tC,UAAU2uC,KAAO,SAAUsmD,UAClC,GAAI85E,eAAgB,GAAIrhI,WAGxB,OAFAqhI,eAAc55J,OAAS9V,KACvB0vK,cAAc95E,SAAWA,SAClB85E,eAoHXrhI,WAAW1tC,UAAUgtC,UAAY,SAAUqhI,eAAgBxqK,MAAO0oC,UAC9D,GAAI0oD,UAAW51F,KAAK41F,SAChB+5E,KAAOL,eAAetiI,aAAagiI,eAAgBxqK,MAAO0oC,SAO9D,IANI0oD,SACAA,SAASlmD,KAAKigI,KAAM3vK,KAAK8V,QAGzB65J,KAAK5zI,IAAI/7B,KAAK8V,OAAS9V,KAAKyvK,WAAWE,MAAQ3vK,KAAK4vK,cAAcD,OAElEA,KAAKrB,qBACLqB,KAAKrB,oBAAqB,EACtBqB,KAAKtB,iBACL,KAAMsB,MAAKvB,cAGnB,OAAOuB,OAEXthI,WAAW1tC,UAAUivK,cAAgB,SAAUD,MAC3C,IACI,MAAO3vK,MAAKyvK,WAAWE,MAE3B,MAAO9iI,KACH8iI,KAAKtB,iBAAkB,EACvBsB,KAAKvB,eAAiBvhI,IACtB8iI,KAAKnrK,MAAMqoC,OAUnBwB,WAAW1tC,UAAUiG,QAAU,SAAU2nC,KAAMshI,aAC3C,GAAI3tI,OAAQliC,IASZ,IARK6vK,cACGnhI,KAAKA,KAAKohI,IAAMphI,KAAKA,KAAKohI,GAAG56J,QAAUw5B,KAAKA,KAAKohI,GAAG56J,OAAO6/D,QAC3D86F,YAAcnhI,KAAKA,KAAKohI,GAAG56J,OAAO6/D,QAE7BrmC,KAAKA,KAAKqmC,UACf86F,YAAcnhI,KAAKA,KAAKqmC,WAG3B86F,YACD,KAAM,IAAIprK,OAAM,wBAEpB,OAAO,IAAIorK,aAAY,SAAU5jK,QAAS8jK,QAGtC,GAAIzhH,aACJA,cAAepsB,MAAMyL,UAAU,SAAUpqC,OACrC,GAAI+qD,aAKA,IACI/f,KAAKhrC,OAET,MAAOspC,KACHkjI,OAAOljI,KACPyhB,aAAaE,kBAUjBjgB,MAAKhrC,QAEVwsK,OAAQ9jK,YAGnBoiC,WAAW1tC,UAAU8uK,WAAa,SAAUhB,YACxC,MAAOzuK,MAAK8V,OAAO63B,UAAU8gI,aAOjCpgI,WAAW1tC,UAAUouC,WAAWA,YAAc,WAC1C,MAAO/uC,OAYXquC,WAAWztC,OAAS,SAAU+sC,WAC1B,MAAO,IAAIU,YAAWV,YAEnBU,cAEP2hI,aAAe3hI,WAGfD,cACHC,WAAY2hI,cAGTC,YAAe9rB,gBAAkBA,eAAe9jJ,WAAc,SAAUC,EAAGC,GAE3E,QAASC,MAAOR,KAAKS,YAAcH,EADnC,IAAK,GAAIke,KAAKje,GAAOA,EAAE8F,eAAemY,KAAIle,EAAEke,GAAKje,EAAEie,GAEnDle,GAAEK,UAAkB,OAANJ,EAAaX,OAAOgB,OAAOL,IAAMC,GAAGG,UAAYJ,EAAEI,UAAW,GAAIH,MAQ/E0vK,iBAAoB,SAAU1lK,QAE9B,QAAS0lK,kBAAiB3sK,MAAOqsC,WAC7BplC,OAAOklC,KAAK1vC,MACZA,KAAKuD,MAAQA,MACbvD,KAAK4vC,UAAYA,UACjB5vC,KAAKsuC,WAAY,EACbsB,YACA5vC,KAAKsuC,WAAY,GAkCzB,MAzCA2hI,aAAYC,iBAAkB1lK,QAU9B0lK,iBAAiBtvK,OAAS,SAAU2C,MAAOqsC,WACvC,MAAO,IAAIsgI,kBAAiB3sK,MAAOqsC,YAEvCsgI,iBAAiBC,SAAW,SAAUptH,OAClC,GAAIjU,MAAOiU,MAAMjU,KAAMvrC,MAAQw/C,MAAMx/C,MAAOkrK,WAAa1rH,MAAM0rH,UAC/D,IAAI3/H,KAEA,WADA2/H,YAAWvhI,UAGfuhI,YAAWlgI,KAAKhrC,OACZkrK,WAAWtgI,SAGf4U,MAAMjU,MAAO,EACb9uC,KAAKytC,SAASsV,SAElBmtH,iBAAiBvvK,UAAU8uK,WAAa,SAAUhB,YAC9C,GAAIlrK,OAAQvD,KAAKuD,MACbqsC,UAAY5vC,KAAK4vC,SACrB,IAAIA,UACA,MAAOA,WAAUnC,SAASyiI,iBAAiBC,SAAU,GACjDrhI,MAAM,EAAOvrC,MAAOA,MAAOkrK,WAAYA,YAI3CA,YAAWlgI,KAAKhrC,OACXkrK,WAAWtgI,QACZsgI,WAAWvhI,YAIhBgjI,kBACT9hI,aAAaC,YACX+hI,mBAAqBF,iBAGrBG,oBACHH,iBAAkBE,oBAGfE,YAAensB,gBAAkBA,eAAe9jJ,WAAc,SAAUC,EAAGC,GAE3E,QAASC,MAAOR,KAAKS,YAAcH,EADnC,IAAK,GAAIke,KAAKje,GAAOA,EAAE8F,eAAemY,KAAIle,EAAEke,GAAKje,EAAEie,GAEnDle,GAAEK,UAAkB,OAANJ,EAAaX,OAAOgB,OAAOL,IAAMC,GAAGG,UAAYJ,EAAEI,UAAW,GAAIH,MAQ/E+vK,gBAAmB,SAAU/lK,QAE7B,QAAS+lK,iBAAgB3gI,WACrBplC,OAAOklC,KAAK1vC,MACZA,KAAK4vC,UAAYA,UA6DrB,MAhEA0gI,aAAYC,gBAAiB/lK,QAgD7B+lK,gBAAgB3vK,OAAS,SAAUgvC,WAC/B,MAAO,IAAI2gI,iBAAgB3gI,YAE/B2gI,gBAAgBJ,SAAW,SAAU/2I,KAChBA,IAAIq1I,WACVvhI,YAEfqjI,gBAAgB5vK,UAAU8uK,WAAa,SAAUhB,YAC7C,GAAI7+H,WAAY5vC,KAAK4vC,SACrB,IAAIA,UACA,MAAOA,WAAUnC,SAAS8iI,gBAAgBJ,SAAU,GAAK1B,WAAYA,YAGrEA,YAAWvhI,YAGZqjI,iBACTniI,aAAaC,YACXmiI,kBAAoBD,gBAGpBE,mBACHF,gBAAiBC,mBAMdE,cAAgBljI,YAGhBsC,eACHtC,YAAakjI,eAGVC,YAAexsB,gBAAkBA,eAAe9jJ,WAAc,SAAUC,EAAGC,GAE3E,QAASC,MAAOR,KAAKS,YAAcH,EADnC,IAAK,GAAIke,KAAKje,GAAOA,EAAE8F,eAAemY,KAAIle,EAAEke,GAAKje,EAAEie,GAEnDle,GAAEK,UAAkB,OAANJ,EAAaX,OAAOgB,OAAOL,IAAMC,GAAGG,UAAYJ,EAAEI,UAAW,GAAIH,MAW/EwvC,gBAAmB,SAAUxlC,QAE7B,QAASwlC,iBAAgBtsB,MAAOksB,WAC5BplC,OAAOklC,KAAK1vC,MACZA,KAAK0jB,MAAQA,MACb1jB,KAAK4vC,UAAYA,UACZA,WAA8B,IAAjBlsB,MAAMzhB,SACpBjC,KAAKsuC,WAAY,EACjBtuC,KAAKuD,MAAQmgB,MAAM,IA+F3B,MAtGAitJ,aAAY3gI,gBAAiBxlC,QAU7BwlC,gBAAgBpvC,OAAS,SAAU8iB,MAAOksB,WACtC,MAAO,IAAII,iBAAgBtsB,MAAOksB,YAsCtCI,gBAAgBozE,GAAK,WAEjB,IAAK,GADD1/F,UACK3hB,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpC2hB,MAAM3hB,GAAK,GAAKC,UAAUD,GAE9B,IAAI6tC,WAAYlsB,MAAMA,MAAMzhB,OAAS,EACjC6tC,eAActC,YAAYoC,WAC1BlsB,MAAM+nB,MAGNmE,UAAY,IAEhB,IAAI32B,KAAMyK,MAAMzhB,MAChB,OAAIgX,KAAM,EACC,GAAI+2B,iBAAgBtsB,MAAOksB,WAErB,IAAR32B,IACE,GAAIo3J,oBAAmBH,iBAAiBxsJ,MAAM,GAAIksB,WAGlD,GAAI6gI,mBAAkBF,gBAAgB3gI,YAGrDI,gBAAgBmgI,SAAW,SAAUptH,OACjC,GAAIr/B,OAAQq/B,MAAMr/B,MAAOre,MAAQ09C,MAAM19C,MAAOwW,MAAQknC,MAAMlnC,MAAO4yJ,WAAa1rH,MAAM0rH,UACtF,IAAIppK,OAASwW,MAET,WADA4yJ,YAAWvhI,UAGfuhI,YAAWlgI,KAAK7qB,MAAMre,QAClBopK,WAAWtgI,SAGf4U,MAAM19C,MAAQA,MAAQ,EACtBrF,KAAKytC,SAASsV,SAElB/S,gBAAgBrvC,UAAU8uK,WAAa,SAAUhB,YAC7C,GACI/qJ,OAAQ1jB,KAAK0jB,MACb7H,MAAQ6H,MAAMzhB,OACd2tC,UAAY5vC,KAAK4vC,SACrB,IAAIA,UACA,MAAOA,WAAUnC,SAASuC,gBAAgBmgI,SAAU,GAChDzsJ,MAAOA,MAAOre,MANV,EAMwBwW,MAAOA,MAAO4yJ,WAAYA,YAI1D,KAAK,GAAI3jK,GAAI,EAAGA,EAAI+Q,QAAU4yJ,WAAWtgI,OAAQrjC,IAC7C2jK,WAAWlgI,KAAK7qB,MAAM5Y,GAE1B2jK,YAAWvhI,YAGZ8C,iBACT5B,aAAaC,YACXuiI,kBAAoB5gI,gBAGpBD,mBACHC,gBAAiB4gI,mBAGdC,YAAe1sB,gBAAkBA,eAAe9jJ,WAAc,SAAUC,EAAGC,GAE3E,QAASC,MAAOR,KAAKS,YAAcH,EADnC,IAAK,GAAIke,KAAKje,GAAOA,EAAE8F,eAAemY,KAAIle,EAAEke,GAAKje,EAAEie,GAEnDle,GAAEK,UAAkB,OAANJ,EAAaX,OAAOgB,OAAOL,IAAMC,GAAGG,UAAYJ,EAAEI,UAAW,GAAIH,MAQ/EswK,gBAAmB,SAAUtmK,QAE7B,QAASsmK,mBACLtmK,OAAOzK,MAAMC,KAAMgC,WAWvB,MAbA6uK,aAAYC,gBAAiBtmK,QAI7BsmK,gBAAgBnwK,UAAUowK,WAAa,SAAUjjI,WAAYkjI,WAAYjjI,WAAYkjI,WAAYC,UAC7FlxK,KAAKguC,YAAYO,KAAKyiI,aAE1BF,gBAAgBnwK,UAAUwwK,YAAc,SAAU3sK,MAAO0sK,UACrDlxK,KAAKguC,YAAYxpC,MAAMA,QAE3BssK,gBAAgBnwK,UAAUywK,eAAiB,SAAUF,UACjDlxK,KAAKguC,YAAYd,YAEd4jI,iBACT3jI,aAAaC,YACXikI,kBAAoBP,gBAGpBQ,mBACHR,gBAAiBO,mBAGdE,cAAgB,SAAW/0J,GAAK,MAAOA,IAAyB,gBAAbA,GAAEva,QAGrDusC,aACHA,YAAa+iI,eAMVC,YAAc9jI,YAGde,aACHnoC,UAAWkrK,aAGR5iI,SAAWxC,qBAAqB,SAAU5sC,OAAQC,SAGtD,QAASgyK,wBAAuBC,SAC5B,GAAI1D,QAAS0D,QAAQ1D,MACrB,IAAsB,kBAAXA,QAIP,MAHKA,QAAOp/H,WACRo/H,OAAOp/H,SAAWo/H,OAAO,sBAEtBA,OAAOp/H,QAId,IAAI+iI,OAAQD,QAAQ9tJ,GACpB,IAAI+tJ,OAA8C,mBAA9B,GAAIA,QAAQ,cAC5B,MAAO,YAEX,IAAIC,OAAQF,QAAQnpJ,GAEpB,IAAIqpJ,MAEA,IAAK,GADDh7I,MAAOh3B,OAAO0yC,oBAAoBs/H,MAAMjxK,WACnCmK,EAAI,EAAGA,EAAI8rB,KAAK30B,SAAU6I,EAAG,CAClC,GAAIkJ,KAAM4iB,KAAK9rB,EAEf,IAAY,YAARkJ,KAA6B,SAARA,KAAkB49J,MAAMjxK,UAAUqT,OAAS49J,MAAMjxK,UAAmB,QACzF,MAAOqT,KAInB,MAAO,aAGfvU,QAAQgyK,uBAAyBA,uBACjChyK,QAAQmvC,SAAW6iI,uBAAuB/iI,KAAKA,MAI/CjvC,QAAQoyK,WAAapyK,QAAQmvC,WAIzBkjI,YAAe3tB,gBAAkBA,eAAe9jJ,WAAc,SAAUC,EAAGC,GAE3E,QAASC,MAAOR,KAAKS,YAAcH,EADnC,IAAK,GAAIke,KAAKje,GAAOA,EAAE8F,eAAemY,KAAIle,EAAEke,GAAKje,EAAEie,GAEnDle,GAAEK,UAAkB,OAANJ,EAAaX,OAAOgB,OAAOL,IAAMC,GAAGG,UAAYJ,EAAEI,UAAW,GAAIH,MAQ/E0tC,gBAAmB,SAAU1jC,QAE7B,QAAS0jC,iBAAgB9F,OAAQ0F,WAAYC,YACzCvjC,OAAOklC,KAAK1vC,MACZA,KAAKooC,OAASA,OACdpoC,KAAK8tC,WAAaA,WAClB9tC,KAAK+tC,WAAaA,WAClB/tC,KAAKqF,MAAQ,EAajB,MAnBAysK,aAAY5jI,gBAAiB1jC,QAQ7B0jC,gBAAgBvtC,UAAU+tK,MAAQ,SAAUnrK,OACxCvD,KAAKooC,OAAO2oI,WAAW/wK,KAAK8tC,WAAYvqC,MAAOvD,KAAK+tC,WAAY/tC,KAAKqF,QAASrF,OAElFkuC,gBAAgBvtC,UAAUguK,OAAS,SAAUnqK,OACzCxE,KAAKooC,OAAO+oI,YAAY3sK,MAAOxE,MAC/BA,KAAKwuD,eAETtgB,gBAAgBvtC,UAAUiuK,UAAY,WAClC5uK,KAAKooC,OAAOgpI,eAAepxK,MAC3BA,KAAKwuD,eAEFtgB,iBACTf,aAAaC,YACX2kI,kBAAoB7jI,gBAGpBD,mBACHC,gBAAiB6jI,mBAsEdC,oBAAsBpkI,kBAGtBqkI,qBACHrkI,kBAAmBokI,qBAGhBE,YAAe/tB,gBAAkBA,eAAe9jJ,WAAc,SAAUC,EAAGC,GAE3E,QAASC,MAAOR,KAAKS,YAAcH,EADnC,IAAK,GAAIke,KAAKje,GAAOA,EAAE8F,eAAemY,KAAIle,EAAEke,GAAKje,EAAEie,GAEnDle,GAAEK,UAAkB,OAANJ,EAAaX,OAAOgB,OAAOL,IAAMC,GAAGG,UAAYJ,EAAEI,UAAW,GAAIH,MAoD/E2xK,WAAahjI,SACbI,iBAAoB,WACpB,QAASA,kBAAiBH,YACtBpvC,KAAKovC,WAAaA,WAKtB,MAHAG,kBAAiB5uC,UAAU+uC,KAAO,SAAU0iI,SAAUt8J,QAClD,MAAOA,QAAO63B,UAAU,GAAI0kI,oBAAmBD,SAAUpyK,KAAKovC,cAE3DG,oBAEP+iI,mBAAqB/iI,iBAMrB8iI,mBAAsB,SAAU7nK,QAEhC,QAAS6nK,oBAAmBrkI,YAAaoB,YACrC5kC,OAAOklC,KAAK1vC,KAAMguC,aAClBhuC,KAAKovC,WAAaA,WAClBpvC,KAAKuyK,cAAe,EACpBvyK,KAAK4wF,UACL5wF,KAAKwyK,OAAS,EA4BlB,MAlCAN,aAAYG,mBAAoB7nK,QAQhC6nK,mBAAmB1xK,UAAU+tK,MAAQ,SAAU3/H,YACvC/uC,KAAKwyK,OAASxyK,KAAKovC,YACnBpvC,KAAKwyK,SACLxyK,KAAK+7B,IAAIk2I,oBAAoBrkI,kBAAkB5tC,KAAM+uC,cAGrD/uC,KAAK4wF,OAAO9pF,KAAKioC,aAGzBsjI,mBAAmB1xK,UAAUiuK,UAAY,WACrC5uK,KAAKuyK,cAAe,EACA,IAAhBvyK,KAAKwyK,QAAuC,IAAvBxyK,KAAK4wF,OAAO3uF,QACjCjC,KAAKguC,YAAYd,YAGzBmlI,mBAAmB1xK,UAAUywK,eAAiB,SAAUF,UACpD,GAAItgF,QAAS5wF,KAAK4wF,MAClB5wF,MAAKg/C,OAAOkyH,UACZlxK,KAAKwyK,SACD5hF,OAAO3uF,OAAS,EAChBjC,KAAK0uK,MAAM99E,OAAO6hF,SAEG,IAAhBzyK,KAAKwyK,QAAgBxyK,KAAKuyK,cAC/BvyK,KAAKguC,YAAYd,YAGlBmlI,oBACTf,kBAAkBR,iBAChB4B,qBAAuBL,mBAGvBpiI,YACHd,SAAUgjI,WACV5iI,iBAAkB+iI,mBAClBD,mBAAoBK,sBAyDjBC,UAAYnjI,QAoFZojI,cAAgBjjI,YAGhBkjI,SACH30J,MAAOy0J,UACPhjI,YAAaijI,eAGVE,QAAUD,QAAQljI,YAElBojI,aAAgB5uB,gBAAkBA,eAAe9jJ,WAAc,SAAUC,EAAGC,GAE5E,QAASC,MAAOR,KAAKS,YAAcH,EADnC,IAAK,GAAIke,KAAKje,GAAOA,EAAE8F,eAAemY,KAAIle,EAAEke,GAAKje,EAAEie,GAEnDle,GAAEK,UAAkB,OAANJ,EAAaX,OAAOgB,OAAOL,IAAMC,GAAGG,UAAYJ,EAAEI,UAAW,GAAIH,MAW/EwyK,wBAA2B,SAAUxoK,QAErC,QAASwoK,2BACL,GAAInmI,KAAMriC,OAAOklC,KAAK1vC,KAAM,sBAC5BA,MAAKpB,KAAOiuC,IAAIjuC,KAAO,0BACvBoB,KAAKiY,MAAQ40B,IAAI50B,MACjBjY,KAAKiR,QAAU47B,IAAI57B,QAEvB,MAPA8hK,cAAaC,wBAAyBxoK,QAO/BwoK,yBACTvuK,OACEwuK,0BAA4BD,wBAG5BE,2BACHF,wBAAyBC,2BAGtBE,aAAgBhvB,gBAAkBA,eAAe9jJ,WAAc,SAAUC,EAAGC,GAE5E,QAASC,MAAOR,KAAKS,YAAcH,EADnC,IAAK,GAAIke,KAAKje,GAAOA,EAAE8F,eAAemY,KAAIle,EAAEke,GAAKje,EAAEie,GAEnDle,GAAEK,UAAkB,OAANJ,EAAaX,OAAOgB,OAAOL,IAAMC,GAAGG,UAAYJ,EAAEI,UAAW,GAAIH,MAQ/E4yK,oBAAuB,SAAU5oK,QAEjC,QAAS4oK,qBAAoBC,QAAS5E,YAClCjkK,OAAOklC,KAAK1vC,MACZA,KAAKqzK,QAAUA,QACfrzK,KAAKyuK,WAAaA,WAClBzuK,KAAKmuC,QAAS,EAkBlB,MAvBAglI,cAAaC,oBAAqB5oK,QAOlC4oK,oBAAoBzyK,UAAU6tD,YAAc,WACxC,IAAIxuD,KAAKmuC,OAAT,CAGAnuC,KAAKmuC,QAAS,CACd,IAAIklI,SAAUrzK,KAAKqzK,QACfC,UAAYD,QAAQC,SAExB,IADAtzK,KAAKqzK,QAAU,KACVC,WAAkC,IAArBA,UAAUrxK,SAAgBoxK,QAAQ9E,YAAa8E,QAAQllI,OAAzE,CAGA,GAAIolI,iBAAkBD,UAAUnwK,QAAQnD,KAAKyuK,aACpB,IAArB8E,iBACAD,UAAUr0H,OAAOs0H,gBAAiB,MAGnCH,qBACTrF,eAAeZ,cACbqG,sBAAwBJ,oBAGxBK,uBACHL,oBAAqBI,uBAGlBE,aAAgBvvB,gBAAkBA,eAAe9jJ,WAAc,SAAUC,EAAGC,GAE5E,QAASC,MAAOR,KAAKS,YAAcH,EADnC,IAAK,GAAIke,KAAKje,GAAOA,EAAE8F,eAAemY,KAAIle,EAAEke,GAAKje,EAAEie,GAEnDle,GAAEK,UAAkB,OAANJ,EAAaX,OAAOgB,OAAOL,IAAMC,GAAGG,UAAYJ,EAAEI,UAAW,GAAIH,MAW/EmzK,kBAAqB,SAAUnpK,QAE/B,QAASmpK,mBAAkB3lI,aACvBxjC,OAAOklC,KAAK1vC,KAAMguC,aAClBhuC,KAAKguC,YAAcA,YAEvB,MALA0lI,cAAaC,kBAAmBnpK,QAKzBmpK,mBACTxmI,aAAaC,YACXwmI,oBAAsBD,kBAItBhjI,QAAW,SAAUnmC,QAErB,QAASmmC,WACLnmC,OAAOklC,KAAK1vC,MACZA,KAAKszK,aACLtzK,KAAKmuC,QAAS,EACdnuC,KAAKuuK,WAAY,EACjBvuK,KAAK6zK,UAAW,EAChB7zK,KAAK8zK,YAAc,KAyFvB,MAhGAJ,cAAa/iI,QAASnmC,QAStBmmC,QAAQhwC,UAAU0sC,aAAaA,cAAgB,WAC3C,MAAO,IAAIsmI,mBAAkB3zK,OAEjC2wC,QAAQhwC,UAAU2uC,KAAO,SAAUsmD,UAC/B,GAAIy9E,SAAU,GAAIU,kBAAiB/zK,KAAMA,KAEzC,OADAqzK,SAAQz9E,SAAWA,SACZy9E,SAEX1iI,QAAQhwC,UAAU4tC,KAAO,SAAUhrC,OAC/B,GAAIvD,KAAKmuC,OACL,KAAM,IAAI+kI,2BAA0BF,uBAExC,KAAKhzK,KAAKuuK,UAIN,IAAK,GAHD+E,WAAYtzK,KAAKszK,UACjBr6J,IAAMq6J,UAAUrxK,OAChBy7E,KAAO41F,UAAUlwK,QACZ0H,EAAI,EAAGA,EAAImO,IAAKnO,IACrB4yE,KAAK5yE,GAAGyjC,KAAKhrC,QAIzBotC,QAAQhwC,UAAU6D,MAAQ,SAAUqoC,KAChC,GAAI7sC,KAAKmuC,OACL,KAAM,IAAI+kI,2BAA0BF,uBAExChzK,MAAK6zK,UAAW,EAChB7zK,KAAK8zK,YAAcjnI,IACnB7sC,KAAKuuK,WAAY,CAIjB,KAAK,GAHD+E,WAAYtzK,KAAKszK,UACjBr6J,IAAMq6J,UAAUrxK,OAChBy7E,KAAO41F,UAAUlwK,QACZ0H,EAAI,EAAGA,EAAImO,IAAKnO,IACrB4yE,KAAK5yE,GAAGtG,MAAMqoC,IAElB7sC,MAAKszK,UAAUrxK,OAAS,GAE5B0uC,QAAQhwC,UAAUusC,SAAW,WACzB,GAAIltC,KAAKmuC,OACL,KAAM,IAAI+kI,2BAA0BF,uBAExChzK,MAAKuuK,WAAY,CAIjB,KAAK,GAHD+E,WAAYtzK,KAAKszK,UACjBr6J,IAAMq6J,UAAUrxK,OAChBy7E,KAAO41F,UAAUlwK,QACZ0H,EAAI,EAAGA,EAAImO,IAAKnO,IACrB4yE,KAAK5yE,GAAGoiC,UAEZltC,MAAKszK,UAAUrxK,OAAS,GAE5B0uC,QAAQhwC,UAAU6tD,YAAc,WAC5BxuD,KAAKuuK,WAAY,EACjBvuK,KAAKmuC,QAAS,EACdnuC,KAAKszK,UAAY,MAErB3iI,QAAQhwC,UAAUivK,cAAgB,SAAUnB,YACxC,GAAIzuK,KAAKmuC,OACL,KAAM,IAAI+kI,2BAA0BF,uBAGpC,OAAOxoK,QAAO7J,UAAUivK,cAAclgI,KAAK1vC,KAAMyuK,aAGzD99H,QAAQhwC,UAAU8uK,WAAa,SAAUhB,YACrC,GAAIzuK,KAAKmuC,OACL,KAAM,IAAI+kI,2BAA0BF,uBAEnC,OAAIhzK,MAAK6zK,UACVpF,WAAWjqK,MAAMxE,KAAK8zK,aACf/F,eAAeZ,aAAah6H,OAE9BnzC,KAAKuuK,WACVE,WAAWvhI,WACJ6gI,eAAeZ,aAAah6H,QAGnCnzC,KAAKszK,UAAUxsK,KAAK2nK,YACb,GAAIgF,uBAAsBL,oBAAoBpzK,KAAMyuK,cAGnE99H,QAAQhwC,UAAUqzK,aAAe,WAC7B,GAAIjlI,YAAa,GAAIX,cAAaC,UAElC,OADAU,YAAWj5B,OAAS9V,KACb+uC,YAEX4B,QAAQ/vC,OAAS,SAAUotC,YAAal4B,QACpC,MAAO,IAAIi+J,kBAAiB/lI,YAAal4B,SAEtC66B,SACTvC,aAAaC,YACX4lI,UAAYtjI,QAIZojI,iBAAoB,SAAUvpK,QAE9B,QAASupK,kBAAiB/lI,YAAal4B,QACnCtL,OAAOklC,KAAK1vC,MACZA,KAAKguC,YAAcA,YACnBhuC,KAAK8V,OAASA,OA6BlB,MAjCA49J,cAAaK,iBAAkBvpK,QAM/BupK,iBAAiBpzK,UAAU4tC,KAAO,SAAUhrC,OACxC,GAAIyqC,aAAchuC,KAAKguC,WACnBA,cAAeA,YAAYO,MAC3BP,YAAYO,KAAKhrC,QAGzBwwK,iBAAiBpzK,UAAU6D,MAAQ,SAAUqoC,KACzC,GAAImB,aAAchuC,KAAKguC,WACnBA,cAAeA,YAAYxpC,OAC3BxE,KAAKguC,YAAYxpC,MAAMqoC,MAG/BknI,iBAAiBpzK,UAAUusC,SAAW,WAClC,GAAIc,aAAchuC,KAAKguC,WACnBA,cAAeA,YAAYd,UAC3BltC,KAAKguC,YAAYd,YAGzB6mI,iBAAiBpzK,UAAU8uK,WAAa,SAAUhB,YAE9C,MADazuK,MAAK8V,OAEP9V,KAAK8V,OAAO63B,UAAU8gI,YAGtBV,eAAeZ,aAAah6H,OAGpC4gI,kBACTpjI,SACEujI,mBAAqBH,iBAGrBrjI,WACHijI,kBAAmBC,oBACnBjjI,QAASsjI,UACTF,iBAAkBG,oBAGfC,YAAehwB,gBAAkBA,eAAe9jJ,WAAc,SAAUC,EAAGC,GAE3E,QAASC,MAAOR,KAAKS,YAAcH,EADnC,IAAK,GAAIke,KAAKje,GAAOA,EAAE8F,eAAemY,KAAIle,EAAEke,GAAKje,EAAEie,GAEnDle,GAAEK,UAAkB,OAANJ,EAAaX,OAAOgB,OAAOL,IAAMC,GAAGG,UAAYJ,EAAEI,UAAW,GAAIH,MAS/E4zK,sBAAyB,SAAU5pK,QAEnC,QAAS4pK,uBAAsBt+J,OAAQs6B,gBACnC5lC,OAAOklC,KAAK1vC,MACZA,KAAK8V,OAASA,OACd9V,KAAKowC,eAAiBA,eACtBpwC,KAAKq0K,UAAY,EACjBr0K,KAAKs0K,aAAc,EAgCvB,MAtCAH,aAAYC,sBAAuB5pK,QAQnC4pK,sBAAsBzzK,UAAU8uK,WAAa,SAAUhB,YACnD,MAAOzuK,MAAKu0K,aAAa5mI,UAAU8gI,aAEvC2F,sBAAsBzzK,UAAU4zK,WAAa,WACzC,GAAIlB,SAAUrzK,KAAKw0K,QAInB,OAHKnB,WAAWA,QAAQ9E,YACpBvuK,KAAKw0K,SAAWx0K,KAAKowC,kBAElBpwC,KAAKw0K,UAEhBJ,sBAAsBzzK,UAAU8zK,QAAU,WACtC,GAAIC,YAAa10K,KAAK20K,WActB,OAbKD,cACD10K,KAAKs0K,aAAc,EACnBI,WAAa10K,KAAK20K,YAAc,GAAI5G,gBAAeZ,aACnDuH,WAAW34I,IAAI/7B,KAAK8V,OACf63B,UAAU,GAAIinI,uBAAsB50K,KAAKu0K,aAAcv0K,QACxD00K,WAAWvmI,QACXnuC,KAAK20K,YAAc,KACnBD,WAAa3G,eAAeZ,aAAah6H,OAGzCnzC,KAAK20K,YAAcD,YAGpBA,YAEXN,sBAAsBzzK,UAAUmwC,SAAW,WACvC,MAAO9wC,MAAKsvC,KAAK,GAAIulI,kBAAiB70K,QAEnCo0K,uBACThmI,aAAaC,YACXymI,wBAA0BV,sBAC1BW,iBAAmBX,sBAAsBzzK,UACzC6vC,iCACAolD,UAAYryF,MAAO,MACnB8wK,WAAa9wK,MAAO,EAAGskC,UAAU,GACjC2sI,UAAYjxK,MAAO,KAAMskC,UAAU,GACnC8sI,aAAepxK,MAAO,KAAMskC,UAAU,GACtC4nI,YAAclsK,MAAOwxK,iBAAiBtF,YACtC6E,aAAe/wK,MAAOwxK,iBAAiBT,YAAazsI,UAAU,GAC9D0sI,YAAchxK,MAAOwxK,iBAAiBR,YACtCE,SAAWlxK,MAAOwxK,iBAAiBN,SACnC3jI,UAAYvtC,MAAOwxK,iBAAiBjkI,WAEpC8jI,sBAAyB,SAAUpqK,QAEnC,QAASoqK,uBAAsB5mI,YAAasC,aACxC9lC,OAAOklC,KAAK1vC,KAAMguC,aAClBhuC,KAAKswC,YAAcA,YAwBvB,MA3BA6jI,aAAYS,sBAAuBpqK,QAKnCoqK,sBAAsBj0K,UAAUguK,OAAS,SAAU9hI,KAC/C7sC,KAAKstK,eACL9iK,OAAO7J,UAAUguK,OAAOj/H,KAAK1vC,KAAM6sC,MAEvC+nI,sBAAsBj0K,UAAUiuK,UAAY,WACxC5uK,KAAKswC,YAAYgkI,aAAc,EAC/Bt0K,KAAKstK,eACL9iK,OAAO7J,UAAUiuK,UAAUl/H,KAAK1vC,OAEpC40K,sBAAsBj0K,UAAU2sK,aAAe,WAC3C,GAAIh9H,aAActwC,KAAKswC,WACvB,IAAIA,YAAa,CACbtwC,KAAKswC,YAAc,IACnB,IAAIokI,YAAapkI,YAAYqkI,WAC7BrkI,aAAY+jI,UAAY,EACxB/jI,YAAYkkI,SAAW,KACvBlkI,YAAYqkI,YAAc,KACtBD,YACAA,WAAWlmH,gBAIhBomH,uBACTlkI,UAAUijI,mBACRkB,iBAAoB,WACpB,QAASA,kBAAiBvkI,aACtBtwC,KAAKswC,YAAcA,YAYvB,MAVAukI,kBAAiBl0K,UAAU+uC,KAAO,SAAU++H,WAAY34J,QACpD,GAAIw6B,aAActwC,KAAKswC,WACvBA,aAAY+jI,WACZ,IAAIW,YAAa,GAAIC,oBAAmBxG,WAAYn+H,aAChDge,aAAex4C,OAAO63B,UAAUqnI,WAIpC,OAHKA,YAAW7mI,SACZ6mI,WAAWN,WAAapkI,YAAYmkI,WAEjCnmH,cAEJumH,oBAEPI,mBAAsB,SAAUzqK,QAEhC,QAASyqK,oBAAmBjnI,YAAasC,aACrC9lC,OAAOklC,KAAK1vC,KAAMguC,aAClBhuC,KAAKswC,YAAcA,YAiDvB,MApDA6jI,aAAYc,mBAAoBzqK,QAKhCyqK,mBAAmBt0K,UAAU2sK,aAAe,WACxC,GAAIh9H,aAActwC,KAAKswC,WACvB,KAAKA,YAED,YADAtwC,KAAK00K,WAAa,KAGtB10K,MAAKswC,YAAc,IACnB,IAAIQ,UAAWR,YAAY+jI,SAC3B,IAAIvjI,UAAY,EAEZ,YADA9wC,KAAK00K,WAAa,KAItB,IADApkI,YAAY+jI,UAAYvjI,SAAW,EAC/BA,SAAW,EAEX,YADA9wC,KAAK00K,WAAa,KA0BtB,IAAIA,YAAa10K,KAAK00K,WAClBQ,iBAAmB5kI,YAAYqkI,WACnC30K,MAAK00K,WAAa,MACdQ,kBAAsBR,YAAcQ,mBAAqBR,YACzDQ,iBAAiB1mH,eAGlBymH,oBACT9nI,aAAaC,YAGXmD,yBACH6jI,sBAAuBU,wBACvBtkI,gCAAiCA,iCAyC9B2kI,YAAcjlI,UACdG,kBAAqB,WACrB,QAASA,mBAAkBD,eAAgBtgB,UACvC9vB,KAAKowC,eAAiBA,eACtBpwC,KAAK8vB,SAAWA,SASpB,MAPAugB,mBAAkB1vC,UAAU+uC,KAAO,SAAU++H,WAAY34J,QACrD,GAAIga,UAAW9vB,KAAK8vB,SAChBujJ,QAAUrzK,KAAKowC,iBACfke,aAAex+B,SAASujJ,SAAS1lI,UAAU8gI,WAE/C,OADAngH,cAAavyB,IAAIjmB,OAAO63B,UAAU0lI,UAC3B/kH,cAEJje,qBAEP+kI,oBAAsB/kI,kBAGtBQ,aACHX,UAAWilI,YACX9kI,kBAAmB+kI,qBAqBhBC,QAAUzkI,MAiCV8I,eAAkB,WAClB,QAASA,gBAAew1B,OACpBlvE,KAAKkvE,MAAQA,MAIblvE,KAAKoC,eAAiB,iBAS1B,MAJAs3C,gBAAe/4C,UAAUqF,SAGzB,WAAc,MAAO,kBAAoBhG,KAAKkvE,OACvCx1B,kBAsBPlI,YAAc,kBACdQ,WAAa,iBAkLbsjI,2BApB+B,GAAI57H,gBAAe,6BAclC/H,mBAAmB,YAAa,SAAUy9B,eAAiB,OAAUA,cAAeA,kBAUpGS,OAAQ,EAIRC,QAAS,GAEbwlG,2BAA0BA,0BAA0BzlG,QAAU,SAC9DylG,0BAA0BA,0BAA0BxlG,SAAW;;;;;;;AAyB/D,GAAIylG,aAAcxkI,cAAc,YAAa,SAAUnoB,KAEnD,WADY,KAARA,MAAkBA,QACfA,MA8CP4sJ,YA/BczkI,cAAc,YAAa,SAAU33B,GAEnD,WADU,KAANA,IAAgBA,MACZjX,UAAW4tE,gBAAiBulG,0BAA0BxlG,SAAW12D,IAC1Em8J,aAcUxkI,cAAc,OAAQ,SAAUvyB,GAAK,MAAQrc,WAAW8tE,MAAM,GAAQzxD,KAclEuyB,cAAc,WAAY,SAAU/P,UAAY,MAAOA,aAOpE6jB,qBASA9f,SAAU,EAOV+f,OAAQ,EAIR6qB,KAAM,EAEV9qB,qBAAoBA,oBAAoB9f,UAAY,WACpD8f,oBAAoBA,oBAAoBC,QAAU,SAClDD,oBAAoBA,oBAAoB8qB,MAAQ,MAgBhD,IA2rGIh1B,OACAJ,OAykCAkD,UArwIAg4H,UAAa,WACb,QAASzgG,SAAQC,MACbj1E,KAAKi1E,KAAOA,KACZj1E,KAAKm1E,MAAQF,KAAK1rE,MAAM,KAAK,GAC7BvJ,KAAKo1E,MAAQH,KAAK1rE,MAAM,KAAK,GAC7BvJ,KAAKq1E,MAAQJ,KAAK1rE,MAAM,KAAKnG,MAAM,GAAGyC,KAAK,KAE/C,MAAOmvE,YAKP0gG,UAAY,GAAID,WAAU,sBA0B1B3gI,SAAWnD,mBAAmB,SAAU,SAAU/rC,OAAS,OAAUA,MAAOA,SAc5E+uC,SAAWhD,mBAAmB,YAc9BomC,WAAahnC,cAAc,cAc3B8D,KAAOlD,mBAAmB,QAc1BiD,SAAWjD,mBAAmB,YAoB9BgkI,UANOhkI,mBAAmB,QAMG,mBAAXyyG,SAA0BA,QAC5CwxB,OAAyB,mBAAT96G,OAAqD,mBAAtBwxG,oBAC/CxxG,eAAgBwxG,oBAAqBxxG,KACrC+6G,SAA6B,mBAAXv2K,SAA0BA,OAC5C+yC,QAAUsjI,UAAYE,UAAYD,OAClCzjI,gBAAkB,KAgIlB2jI,oBAAsB,GAAIl2K,QAC1B40C,mBAAqBshI,oBACrBC,cAAiB,WACjB,QAASA,kBAmBT,MAZAA,eAAcp1K,UAAU2f,IAKxB,SAAU1a,MAAOkuC,eAEb,OADsB,KAAlBA,gBAA4BA,cAAgBgiI,qBAC5ChiI,gBAAkBgiI,oBAClB,KAAM,IAAIrxK,OAAM,sCAAwCkuC,YAAY/sC,OAAS,IAEjF,OAAOkuC,gBAEJiiI,iBAuBPxhI,SAAY,WACZ,QAASA,aAkCT,MAfAA,UAAS3zC,OAUT,SAAUknB,UAAWsgB,QACjB,MAAO,IAAI4tI,gBAAeluJ,UAAWsgB,SAEzCmM,SAASC,mBAAqBshI,oBAC9BvhI,SAAS0hI,KAAO,GAAIF,eACbxhI,YAEPrB,MAAQ,SAAU3vC,OAClB,MAAOA,QAEP4vC,SACAc,SAAWf,MACXS,kBAAoB,WACpB,MAAOjwC,OAAM/C,UAAUyC,MAAMssC,KAAK1tC,YAElCk0K,qBACAC,GAAKD,kBACL5iI,YA4SJ,SAAgC8iI,0BAC5B,IAAK,GAAqBpiK,OAAOoiK,0BAC7B,GAAIA,yBAAyBpiK,OAASkiK,kBAClC,MAAOliK,IAGf,MAAMvP,OAAM,WAlT2B4uC,QAAS5tC,OAAQ8hB,SAAU4uJ,KAElEniI,mBAAqB,kBACrBM,cAAgBC,SAAS0hI,KACzB/gI,SAAW,OACXhB,YAAc,IACd8hI,eAAkB,WAClB,QAASA,gBAAeluJ,UAAWsgB,YAChB,KAAXA,SAAqBA,OAASkM,eAClCt0C,KAAKooC,OAASA,MACd,IAAqBsL,SAAU1zC,KAAKq2K,SAAW,GAAI9tJ,IACnDmrB,SAAQnzB,IAAIg0B,UAA8B3uC,MAAO2uC,SAAUztB,GAAIosB,MAAO1rB,KAAM2rB,MAAO5vC,MAAOvD,KAAMozC,QAAQ,IACxGK,4BAA4BC,QAAS5rB,WAoCzC,MA7BAkuJ,gBAAer1K,UAAU2f,IAKzB,SAAU1a,MAAOkuC,eACb,GAAqBF,QAAS5zC,KAAKq2K,SAAS/1J,IAAI1a,MAChD,KACI,MAAOiuC,iBAAgBjuC,MAAOguC,OAAQ5zC,KAAKq2K,SAAUr2K,KAAKooC,OAAQ0L,eAEtE,MAAwBz6B,GACpB,GAAqBi9J,WAAYj9J,EAAE26B,mBAInC,MAHA36B,GAAEpI,QAAU8jC,YAAY,KAAO17B,EAAEpI,QAASqlK,WAC1Cj9J,EAAe,YAAIi9J,UACnBj9J,EAAE26B,oBAAsB,KAClB36B,IAMd28J,eAAer1K,UAAUqF,SAGzB,WACI,GAAqB0oF,UAErB,OAFgF1uF,MAAKq2K,SAC7EzvK,QAAQ,SAAUu7B,EAAGv8B,OAAS,MAAO8oF,QAAO5nF,KAAK6rC,YAAY/sC,UAC9D,kBAAoB8oF,OAAO7oF,KAAK,MAAQ,KAE5CmwK,kBA0QP5gI,oBAAsB,iBACtBE,qBAAuB,kBACvBE,aAAe,gBA6EfkjB,aAAgB,WAChB,QAASA,gBAIL14D,KAAKu1G,SAAW5wE,QA4DpB,MAtDA+zB,cAAa/3D,UAAUu8C,YAIvB,SAAU14C,OACN,GAAqBmxC,eAAgB31C,KAAKu2K,mBAAmB/xK,OACxCf,QAAUzD,KAAKw2K,aAAahyK,OAG5BiyK,YAAclhI,eAAe/wC,MAClDiyK,aAAYz2K,KAAKu1G,SAAU,QAAS/wG,OAChCmxC,eACA8gI,YAAYz2K,KAAKu1G,SAAU,iBAAkB5/D,eAE7ClyC,SACAgzK,YAAYz2K,KAAKu1G,SAAU,gBAAiB9xG,UASpDi1D,aAAa/3D,UAAU61K,aAKvB,SAAUhyK,OACN,MAAIA,OACO2wC,gBAAgB3wC,OAAS2wC,gBAAgB3wC,OAC5CxE,KAAKw2K,aAAanhI,iBAAiB7wC,QAEpC,MAQXk0D,aAAa/3D,UAAU41K,mBAKvB,SAAU/xK,OAEN,IADA,GAAqB6U,GAAIg8B,iBAAiB7wC,OACnC6U,GAAKg8B,iBAAiBh8B,IACzBA,EAAIg8B,iBAAiBh8B,EAEzB,OAAOA,IAEJq/C,gBAySPvgB,cAAiB,WAIjB,QAASA,eAAcvyC,MAAOyD,IAG1B,GAFArJ,KAAK4F,MAAQA,MACb5F,KAAKqJ,GAAKA,IACLzD,MACD,KAAM,IAAInB,OAAM,yBAEpBzE,MAAK02K,YAAc/jI,YAAY3yC,KAAK4F,OA6BxC,MAnBAuyC,eAAc73B,IAKd,SAAU1a,OACN,MAAO+wK,oBAAmBr2J,IAAIyyB,oBAAoBntC,SAEtDhG,OAAOugB,eAAeg4B,cAAe,gBAIjC73B,IAGA,WAAc,MAAOq2J,oBAAmBC,cACxCv2J,YAAY,EACZD,cAAc,IAEX+3B,iBAKP0+H,YAAe,WACf,QAASA,eACL72K,KAAK82K,SAAW,GAAIvuJ,KA4BxB,MAtBAsuJ,aAAYl2K,UAAU2f,IAItB,SAAU1a,OACN,GAAIA,gBAAiBuyC,eACjB,MAAOvyC,MACX,IAAI5F,KAAK82K,SAASnjJ,IAAI/tB,OAClB,MAA0B5F,MAAK82K,SAASx2J,IAAI1a,MAEhD,IAAqBmxK,QAAS,GAAI5+H,eAAcvyC,MAAOuyC,cAAcy+H,aAErE,OADA52K,MAAK82K,SAASv2J,IAAI3a,MAAOmxK,QAClBA,QAEXn3K,OAAOugB,eAAe02J,YAAYl2K,UAAW,gBACzC2f,IAGA,WAAc,MAAOtgB,MAAK82K,SAASn0H,MACnCtiC,YAAY,EACZD,cAAc,IAEXy2J,eAEPF,mBAAqB,GAAIE,aAgBzB39H,SAAWpQ,SAuBXkuI,cAAgB,6DAChBC,uBAA0B,WAC1B,QAASA,wBAAuBC,SAC5Bl3K,KAAKm3K,SAAWD,SAAW7kI,QAAiB,QA+VhD,MA1VA4kI,wBAAuBt2K,UAAUy2K,oBAGjC,WAAc,OAAO,GAMrBH,uBAAuBt2K,UAAUkB,QAKjC,SAAUu3C,GAAK,MAAO,YAElB,IAAK,GADDt3C,SACKC,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCD,KAAKC,IAAMC,UAAUD,GAEzB,OAAO,KAAKq3C,EAAErQ,KAAKhpC,MAAMq5C,OAAI,IAAQzwC,OAAO7G,UAShDm1K,uBAAuBt2K,UAAU02K,wBAMjC,SAAUC,WAAYC,kBAClB,GAAqB53K,OAEjBA,YADsB,KAAf23K,WACE,GAAI5zK,OAAM6zK,iBAAiBt1K,QAG3B,GAAIyB,OAAM4zK,WAAWr1K,OAElC,KAAK,GAAqB6I,GAAI,EAAGA,EAAInL,OAAOsC,OAAQ6I,QAItB,KAAfwsK,WACP33K,OAAOmL,MAEFwsK,WAAWxsK,IAAMlL,OACtBD,OAAOmL,IAAMwsK,WAAWxsK,IAGxBnL,OAAOmL,MAEPysK,kBAA2C,MAAvBA,iBAAiBzsK,KACrCnL,OAAOmL,GAAKnL,OAAOmL,GAAGnC,OAAO4uK,iBAAiBzsK,IAGtD,OAAOnL,SAOXs3K,uBAAuBt2K,UAAU62K,eAKjC,SAAUpxK,KAAMqxK,YAQZ,GAAIT,cAAc/0G,KAAK77D,KAAKJ,YACxB,MAAO,KAGX,IAAI,KAA0B+rC,YAAc,KAA0BA,aAAe0lI,WAAW1lI,WAC5F,MAAO,MAA0BA,UAGrC,IAAqB2lI,mBAAoB,KAA0BC,cACnE,IAAID,mBAAqBA,oBAAsBD,WAAWE,eAAgB,CAGtE,GAAqBA,gBAA8C,kBAAtBD,mBAAmCA,oBAAsBA,kBACjFE,aAAeD,eAAe13K,IAAI,SAAU43K,WAAa,MAAOA,YAAaA,UAAUzxK,OACvF0xK,mBAAqBH,eAAe13K,IAAI,SAAU43K,WACnE,MAAOA,YAAaxgI,oCAAoCwgI,UAAUn/B,aAEtE,OAAO14I,MAAKq3K,wBAAwBO,aAAcE,oBAGtD,GAAqBP,kBAAmBnxK,KAAKC,eAAe2rC,aAAe,KAA0BA,YAChFslI,WAAat3K,KAAKm3K,UAAYn3K,KAAKm3K,SAAS93K,gBAC7DW,KAAKm3K,SAAS93K,eAAe,oBAAqB+G,KACtD,OAAIkxK,aAAcC,iBACPv3K,KAAKq3K,wBAAwBC,WAAYC,kBAM7C,GAAI7zK,OAAyB0C,KAAY,QAAGqvI,SAAKtxI,KAM5D8yK,uBAAuBt2K,UAAUoxC,WAIjC,SAAU3rC,MAGN,IAAKgxC,OAAOhxC,MACR,QAEJ,IAAqBqxK,YAAa//H,cAActxC,MAC3B2rC,WAAa/xC,KAAKw3K,eAAepxK,KAAMqxK,WAI5D,OAHK1lI,aAAc0lI,aAAe73K,SAC9BmyC,WAAa/xC,KAAK+xC,WAAW0lI,aAE1B1lI,gBAOXklI,uBAAuBt2K,UAAUo3K,gBAKjC,SAAUnhI,WAAY6gI,YAElB,GAAI,WAAgC/iI,aAAe,WAAgCA,cAAgB+iI,WAAW/iI,YAAa,CACvH,GAAqBA,aAAc,WAAgCA,WAInE,OAH2B,kBAAhBA,cAA8BA,YAAYA,cACjDA,YAAcA,YAAYA,aAEvBA,YAGX,MAAI,YAAgCgkG,YAAc,WAAgCA,aAAe++B,WAAW/+B,WACjGrhG,oCAAoC,WAAgCqhG,YAG3E9hG,WAAWvwC,eAAemrC,aACnB,WAAgCA,aAEpC,MAMXylI,uBAAuBt2K,UAAU+zC,YAIjC,SAAUkC,YACN,IAAKQ,OAAOR,YACR,QAEJ,IAAqB6gI,YAAa//H,cAAcd,YAC3BohI,eAAiBh4K,KAAK+3K,gBAAgBnhI,WAAY6gI,eAEvE,QADyCA,aAAe73K,OAASI,KAAK00C,YAAY+iI,gBACzD9uK,OAAOqvK,iBAOpCf,uBAAuBt2K,UAAUs3K,iBAKjC,SAAUrhI,WAAY6gI,YAElB,GAAI,WAAgClqF,cAChC,WAAgCA,eAAiBkqF,WAAWlqF,aAAc,CAC1E,GAAqBA,cAAe,WAAgCA,YAIpE,OAH4B,kBAAjBA,eAA+BA,aAAaA,eACnDA,aAAeA,aAAaA,cAEzBA,aAGX,GAAI,WAAgC2qF,gBAChC,WAAgCA,iBAAmBT,WAAWS,eAAgB,CAC9E,GAAqBC,kBAAmB,WAAgCD,eACnDE,iBAIrB,OAHAx4K,QAAOg3B,KAAKuhJ,kBAAkBvxK,QAAQ,SAAUqoB,MAC5CmpJ,eAAenpJ,MAAQooB,oCAAoC8gI,iBAAiBlpJ,SAEzEmpJ,eAGX,MAAIxhI,YAAWvwC,eAtsDH,sBAusDD,WAA6C,mBAEjD,MAMX4wK,uBAAuBt2K,UAAU4sF,aAIjC,SAAU32C,YACN,IAAKQ,OAAOR,YACR,QAEJ,IAAqB6gI,YAAa//H,cAAcd,YAC3B22C,eACrB,IAAIkqF,aAAe73K,OAAQ,CACvB,GAAqB04I,sBAAuBt4I,KAAKutF,aAAakqF,WAC9D73K,QAAOg3B,KAAK0hH,sBAAsB1xI,QAAQ,SAAUosB,UAChDu6D,aAAav6D,UAAYslH,qBAAqBtlH,YAGtD,GAAqBqlJ,iBAAkBr4K,KAAKi4K,iBAAiBrhI,WAAY6gI,WAWzE,OAVIY,kBACAz4K,OAAOg3B,KAAKyhJ,iBAAiBzxK,QAAQ,SAAUosB,UAC3C,GAAqB0lH,cACjBnrD,cAAalnF,eAAe2sB,WAC5B0lH,WAAW5xI,KAAK/G,MAAM24I,WAAYnrD,aAAav6D,WAEnD0lH,WAAW5xI,KAAK/G,MAAM24I,WAAY2/B,gBAAgBrlJ,WAClDu6D,aAAav6D,UAAY0lH,aAG1BnrD,cAOX0pF,uBAAuBt2K,UAAU4hB,iBAKjC,SAAUnc,KAAMozI,YACZ,MAAOpzI,gBAAgB8yC,WAAYsgG,aAAcpzI,MAAKzF,WAM1Ds2K,uBAAuBt2K,UAAU4mC,OAIjC,SAAU3oC,MAAQ,MAAwB,IAAKkqC,UAAS,IAAK,YAAclqC,KAAO,MAKlFq4K,uBAAuBt2K,UAAU23K,OAIjC,SAAU15K,MACN,MAAwB,IAAKkqC,UAAS,IAAK,IAAK,YAAclqC,KAAO,UAMzEq4K,uBAAuBt2K,UAAU+mC,OAIjC,SAAU9oC,MACN,GAAqBozJ,cAAe,UAAYpzJ,KAAO,wBAA0BA,KAAO,wCAA0CA,KAAO,kBACzI,OAAwB,IAAKkqC,UAAS,IAAK,OAAQkpH,eAOvDilB,uBAAuBt2K,UAAU43K,UAIjC,SAAUnyK,MAEN,MAAoB,gBAATA,OAAqBA,KAAe,SACpCA,KAAe,SAGnB,KAAOusC,YAAYvsC,OAM9B6wK,uBAAuBt2K,UAAU63K,YAIjC,SAAUpyK,MAAQ,MAAO,KAAOusC,YAAYvsC,OAQ5C6wK,uBAAuBt2K,UAAU83K,kBAOjC,SAAU75K,KAAM2W,UAAW+mD,QAAStyB,SAChC,MAAOA,UAOXitI,uBAAuBt2K,UAAU+3K,YAKjC,SAAUC,eAAgB/5K,MAAQ,MAAO+5K,gBAAe/5K,OACjDq4K,0BAqCP2B,UAAa,WACb,QAASA,WAAUC,wBACf74K,KAAK64K,uBAAyBA,uBA6IlC,MAvIAD,WAAUj4K,UAAUm4K,mBAIpB,SAAUC,MAAQ/4K,KAAK64K,uBAAyBE,MAKhDH,UAAUj4K,UAAUkB,QAIpB,SAAUuE,MAAQ,MAAOpG,MAAK64K,uBAAuBh3K,QAAQuE,OAK7DwyK,UAAUj4K,UAAUoxC,WAIpB,SAAU6E,YACN,MAAO52C,MAAK64K,uBAAuB9mI,WAAW6E,aAMlDgiI,UAAUj4K,UAAU+zC,YAIpB,SAAUkC,YACN,MAAO52C,MAAK64K,uBAAuBnkI,YAAYkC,aAMnDgiI,UAAUj4K,UAAU4sF,aAIpB,SAAU32C,YACN,MAAO52C,MAAK64K,uBAAuBtrF,aAAa32C,aAOpDgiI,UAAUj4K,UAAU4hB,iBAKpB,SAAUnc,KAAMozI,YACZ,MAAOx5I,MAAK64K,uBAAuBt2J,iBAAiBnc,KAAMozI,aAM9Do/B,UAAUj4K,UAAU4mC,OAIpB,SAAU3oC,MAAQ,MAAOoB,MAAK64K,uBAAuBtxI,OAAO3oC,OAK5Dg6K,UAAUj4K,UAAU23K,OAIpB,SAAU15K,MAAQ,MAAOoB,MAAK64K,uBAAuBP,OAAO15K,OAK5Dg6K,UAAUj4K,UAAU+mC,OAIpB,SAAU9oC,MAAQ,MAAOoB,MAAK64K,uBAAuBnxI,OAAO9oC,OAK5Dg6K,UAAUj4K,UAAU43K,UAIpB,SAAUnyK,MAAQ,MAAOpG,MAAK64K,uBAAuBN,UAAUnyK,OAK/DwyK,UAAUj4K,UAAU63K,YAIpB,SAAUpyK,MAAQ,MAAOpG,MAAK64K,uBAAuBL,YAAYpyK,OAQjEwyK,UAAUj4K,UAAU83K,kBAOpB,SAAU75K,KAAM2W,UAAW+mD,QAAStyB,SAChC,MAAOhqC,MAAK64K,uBAAuBJ,kBAAkB75K,KAAM2W,UAAW+mD,QAAStyB,UAOnF4uI,UAAUj4K,UAAU+3K,YAKpB,SAAUlxK,WAAY5I,MAClB,MAAOoB,MAAK64K,uBAAuBH,YAAYlxK,WAAY5I,OAExDg6K,aAkBPv2J,UAAY,GAAIu2J,WAAU,GAAI3B,yBAiB9Bh/H,qBAAwB,WACxB,QAASA,sBAAqBjkC,IAAKslC,SAAUE,YACzCx5C,KAAKgU,IAAMA,IACXhU,KAAKs5C,SAAWA,SAChBt5C,KAAKw5C,WAAaA,WAatB,MAPAvB,sBAAqBC,QAIrB,SAAUlkC,KACN,MAAO,IAAIikC,sBAAqBjkC,KAAK,EAAO,OAEzCikC,wBAEPI,eAqBAG,4BAA+B,WAC/B,QAASA,6BAA4BxkC,IAAKilC,kBAAmBjxB,eACzDhoB,KAAKgU,IAAMA,IACXhU,KAAKi5C,kBAAoBA,kBACzBj5C,KAAKgoB,cAAgBA,cAUzB,MARApoB,QAAOugB,eAAeq4B,4BAA4B73C,UAAW,mBACzD2f,IAGA,WAAc,MAAOtgB,MAAKi5C,kBAAkB,IAC5C54B,YAAY,EACZD,cAAc,IAEXo4B,+BAOPF,0BAA6B,WAC7B,QAASA,2BAA0Bz2C,QAAS29B,cACxCx/B,KAAK6B,QAAUA,QACf7B,KAAKw/B,aAAeA,aAExB,MAAO8Y,8BA4MP0gI,UAAY,GAAIp5K,QAqChBq5K,mBAAsB,WACtB,QAASA,uBAkRT,MA5MAA,oBAAmBhtK,QAmCnB,SAAU6b,WACN,MAAO2wB,4BAA2B3wB,YAyDtCmxJ,mBAAmBC,iBA6BnB,SAAUpxJ,UAAWsgB,QACjB,GAAqB+wI,6BAA8BF,mBAAmBhtK,QAAQ6b,UAC9E,OAAOmxJ,oBAAmBG,sBAAsBD,4BAA6B/wI,SAmDjF6wI,mBAAmBG,sBA0BnB,SAAUtxJ,UAAWsgB,QACjB,MAAO,IAAIixI,qBAAoBvxJ,UAAWsgB,SAEvC6wI,sBAEPI,oBAAuB,WAIvB,QAASA,qBAAoBz/H,WAAY6Q,SAIrCzqD,KAAKs5K,qBAAuB,EAC5Bt5K,KAAK45C,WAAaA,WAClB55C,KAAKooC,OAASqiB,SAAW,IACzB,IAAqBxxC,KAAM2gC,WAAW33C,MACtCjC,MAAKu5K,OAAS,GAAI71K,OAAMuV,KACxBjZ,KAAK++C,KAAO,GAAIr7C,OAAMuV,IACtB,KAAK,GAAqBnO,GAAI,EAAGA,EAAImO,IAAKnO,IACtC9K,KAAKu5K,OAAOzuK,GAAK8uC,WAAW9uC,GAAGkJ,IAAI3K,GACnCrJ,KAAK++C,KAAKj0C,GAAKkuK,UA+SvB,MAvSAK,qBAAoB14K,UAAU2f,IAK9B,SAAU1a,MAAOkuC,eAEb,WADsB,KAAlBA,gBAA4BA,cAAgBU,oBACzCx0C,KAAKw5K,UAAUrhI,cAAc73B,IAAI1a,OAAQ,KAAMkuC,gBAM1DulI,oBAAoB14K,UAAU84K,sBAI9B,SAAU3xJ,WACN,GAAqBqxJ,6BAA8BF,mBAAmBhtK,QAAQ6b,UAC9E,OAAO9nB,MAAK05K,wBAAwBP,8BAMxCE,oBAAoB14K,UAAU+4K,wBAI9B,SAAU5xJ,WACN,GAAqB6xJ,KAAM,GAAIN,qBAAoBvxJ,UAEnD,OADA,KAAyBsgB,OAASpoC,KAC3B25K,KAMXN,oBAAoB14K,UAAUi5K,sBAI9B,SAAUvyJ,UACN,MAAOrnB,MAAK65K,oBAAoBZ,mBAAmBhtK,SAASob,WAAW,KAM3EgyJ,oBAAoB14K,UAAUk5K,oBAI9B,SAAUxyJ,UACN,MAAOrnB,MAAK85K,qBAAqBzyJ,WAMrCgyJ,oBAAoB14K,UAAUk5C,mBAI9B,SAAUx0C,OACN,GAAIA,MAAQ,GAAKA,OAASrF,KAAK45C,WAAW33C,OACtC,KAAM+0C,kBAAiB3xC,MAE3B,OAAOrF,MAAK45C,WAAWv0C,QAQ3Bg0K,oBAAoB14K,UAAUo5K,KAK9B,SAAU1yJ,UACN,GAAIrnB,KAAKs5K,uBAAyBt5K,KAAKg6K,yBACnC,KAAM3jI,uBAAsBr2C,KAAMqnB,SAASrT,IAE/C,OAAOhU,MAAK85K,qBAAqBzyJ,WAKrCgyJ,oBAAoB14K,UAAUq5K,uBAG9B,WAAc,MAAOh6K,MAAK++C,KAAK98C,QAK/Bo3K,oBAAoB14K,UAAUm5K,qBAI9B,SAAUzyJ,UACN,GAAIA,SAASW,cAAe,CAExB,IAAK,GADgBjiB,KAAM,GAAIrC,OAAM2jB,SAAS4xB,kBAAkBh3C,QACtC6I,EAAI,EAAGA,EAAIuc,SAAS4xB,kBAAkBh3C,SAAU6I,EACtE/E,IAAI+E,GAAK9K,KAAKi6K,aAAa5yJ,SAAUA,SAAS4xB,kBAAkBnuC,GAEpE,OAAO/E,KAGP,MAAO/F,MAAKi6K,aAAa5yJ,SAAUA,SAAS4xB,kBAAkB,KAQtEogI,oBAAoB14K,UAAUs5K,aAK9B,SAAU5yJ,SAAU6yJ,8BAChB,GAEqB1yJ,MAFjB0a,MAAQliC,KACS6B,QAAUq4K,6BAA6Br4K,OAE5D,KACI2lB,KACI0yJ,6BAA6B16I,aAAav/B,IAAI,SAAUgrB,KAAO,MAAOiX,OAAMi4I,2BAA2BlvJ,OAE/G,MAAwB5R,GAIpB,KAHIA,GAAE68B,QACF78B,EAAE68B,OAAOl2C,KAAMqnB,SAASrT,KAEtBqF,EAEV,GAAqB/W,IACrB,KACIA,IAAMT,QAAQ9B,UAAM,GAAQynB,MAEhC,MAAwBnO,GACpB,KAAMi9B,oBAAmBt2C,KAAMqZ,EAAGA,EAAEpB,MAAOoP,SAASrT,KAExD,MAAO1R,MAMX+2K,oBAAoB14K,UAAUw5K,2BAI9B,SAAUlvJ,KACN,MAAOjrB,MAAKw5K,UAAUvuJ,IAAIjX,IAAKiX,IAAIuuB,WAAYvuB,IAAIquB,SAAW,KAAO9E,qBAQzE6kI,oBAAoB14K,UAAU64K,UAM9B,SAAUxlK,IAAKwlC,WAAY1F,eACvB,MAAI9/B,OAAQqlK,oBAAoBe,aACrBp6K,KAEPw5C,qBAAsB3E,MACf70C,KAAKq6K,cAAcrmK,IAAK8/B,eAGxB9zC,KAAKs6K,iBAAiBtmK,IAAK8/B,cAAe0F,aAOzD6/H,oBAAoB14K,UAAU45K,eAI9B,SAAUC,OACN,IAAK,GAAqB1vK,GAAI,EAAGA,EAAI9K,KAAKu5K,OAAOt3K,OAAQ6I,IACrD,GAAI9K,KAAKu5K,OAAOzuK,KAAO0vK,MAInB,MAHIx6K,MAAK++C,KAAKj0C,KAAOkuK,YACjBh5K,KAAK++C,KAAKj0C,GAAK9K,KAAK+5K,KAAK/5K,KAAK45C,WAAW9uC,KAEtC9K,KAAK++C,KAAKj0C,EAGzB,OAAOkuK,YASXK,oBAAoB14K,UAAU85K,aAM9B,SAAUzmK,IAAK8/B,eACX,GAAIA,gBAAkBU,mBAClB,MAAOV,cAGP,MAAMsC,iBAAgBp2C,KAAMgU,MAUpCqlK,oBAAoB14K,UAAU05K,cAM9B,SAAUrmK,IAAK8/B,eACX,GAAqBxxC,KAAMtC,KAAKu6K,eAAevmK,IAAI3K,GACnD,OAAQ/G,OAAQ02K,UAAa12K,IAAMtC,KAAKy6K,aAAazmK,IAAK8/B,gBAU9DulI,oBAAoB14K,UAAU25K,iBAO9B,SAAUtmK,IAAK8/B,cAAe0F,YAC1B,GAAqBmgI,IAOrB,KALIA,IADAngI,qBAAsB5E,UAChB50C,KAAKooC,OAGLpoC,KAEH25K,cAAeN,sBAAqB,CACvC,GAAqBqB,MAAwB,IACxBp4K,IAAMo4K,KAAKH,eAAevmK,IAAI3K,GACnD,IAAI/G,MAAQ02K,UACR,MAAO12K,IACXq3K,KAAMe,KAAKtyI,OAEf,MAAY,QAARuxI,IACOA,IAAIr5J,IAAItM,IAAIpO,MAAOkuC,eAGnB9zC,KAAKy6K,aAAazmK,IAAK8/B,gBAGtCl0C,OAAOugB,eAAek5J,oBAAoB14K,UAAW,eACjD2f,IAGA,WAGI,MAAO,kCAF0Bq5B,cAAc35C,KAAM,SAAUO,GAAK,MAAO,KAAOA,EAAEyT,IAAI0iK,YAAc,OACjG7wK,KAAK,MAC6C,MAE3Dwa,YAAY,EACZD,cAAc,IAKlBi5J,oBAAoB14K,UAAUqF,SAG9B,WAAc,MAAOhG,MAAK02K,aAC1B2C,oBAAoBe,aAAejiI,cAAc73B,IAAIi0B,UAC9C8kI,uBA6DPsB,gBAAkB,GAAIjhI,gBAAe,2BAMrCkhI,sBAAyB,WACzB,QAASA,uBAAsBC,UAC3B,GAAI34I,OAAQliC,IACZA,MAAK66K,SAAWA,SAChB76K,KAAK02D,aAAc,EACnB12D,KAAK8uC,MAAO,EACZ9uC,KAAK86K,YAAc,GAAI/lG,SAAQ,SAAUhvE,IAAKg1K,KAC1C74I,MAAMj2B,QAAUlG,IAChBm8B,MAAM6tI,OAASgL,MA2CvB,MAnCAH,uBAAsBj6K,UAAUq6K,gBAIhC,WACI,GAAI94I,OAAQliC,IACZ,KAAIA,KAAK02D,YAAT,CAGA,GAAqBukH,sBACA/tI,SAAW,WAC5B,MAA2B4B,MAAO,EAClC5M,MAAMj2B,UAEV,IAAIjM,KAAK66K,SACL,IAAK,GAAqB/vK,GAAI,EAAGA,EAAI9K,KAAK66K,SAAS54K,OAAQ6I,IAAK,CAC5D,GAAqBowK,YAAal7K,KAAK66K,SAAS/vK,IAC5CgvC,aAAYohI,aACZD,kBAAkBn0K,KAAKo0K,YAInCnmG,QAAQF,IAAIomG,mBAAmB10K,KAAK,WAAc2mC,aAAe0R,MAAM,SAAUvlC,GAAK6oB,MAAM6tI,OAAO12J,KAClE,IAA7B4hK,kBAAkBh5K,QAClBirC,WAEJltC,KAAK02D,aAAc,IAEvBkkH,sBAAsBliC,aAChBtyI,KAAM2xE,aAGZ6iG,sBAAsBjD,eAAiB,WAAc,QAC/CvxK,KAAM1C,MAAOg1I,aAAetyI,KAAM0uC,SAAUhzC,MAAO64K,mBAAuBv0K,KAAMuuC,cAE/EimI,yBAwBPO,OAAS,GAAIzhI,gBAAe,SAW5B0hI,wBACA/nI,QAAS8nI,OACTzzJ,WAAYqyB,4BACZvyB,SAYAs2B,qBAAuB,GAAIpE,gBAAe,wBAK1C2hI,YAAc,GAAI3hI,gBAAe,eASjC4hI,uBAAyB,GAAI5hI,gBAAe,wBAkB5C6hI,SAbmB,GAAI7hI,gBAAe,iCAa3B,WACX,QAAS6hI,YAgCT,MA1BAA,SAAQ56K,UAAU66K,IAIlB,SAAUvqK,SAEN0zB,QAAQ62I,IAAIvqK,UAOhBsqK,QAAQ56K,UAAUwrG,KAIlB,SAAUl7F,SAEN0zB,QAAQwnE,KAAKl7F,UAEjBsqK,QAAQ7iC,aACFtyI,KAAM2xE,aAGZwjG,QAAQ5D,eAAiB,WAAc,UAChC4D,YAmBPE,SAAY,WACZ,QAASA,aAwGT,MA3FAA,UAAS96K,UAAUqgJ,kBAOnB,SAAUpzF,YAAc,KAAMzT,gBAU9BshI,SAAS96K,UAAUugJ,mBAMnB,SAAUtzF,YAAc,KAAMzT,gBAU9BshI,SAAS96K,UAAUwgJ,kCAMnB,SAAUvzF,YACN,KAAMzT,gBAWVshI,SAAS96K,UAAU0gJ,mCAMnB,SAAUzzF,YACN,KAAMzT,gBASVshI,SAAS96K,UAAUsqF,WAInB,aASAwwF,SAAS96K,UAAUuqF,cAKnB,SAAU9kF,QACVq1K,SAAS/iC,aACHtyI,KAAM2xE,aAGZ0jG,SAAS9D,eAAiB,WAAc,UACjC8D,YAcPC,iBAPmB,GAAIhiI,gBAAe,mBAOnB,WACnB,QAASgiI,oBAET,MAAOA,qBAgBPvlE,aAAgB,WAChB,QAASA,iBAET,MAAOA,iBAMPh3E,iBAAoB,WACpB,QAASA,qBAET,MAAOA,qBAgBPkb,gBAAkB,cAMlBshI,8BAAiC,WACjC,QAASA,kCAeT,MARAA,+BAA8Bh7K,UAAUi7K,wBAKxC,SAAUvyJ,WACN,KAAM+wB,yBAAwB/wB,YAE3BsyJ,iCAMP9uJ,yBAA4B,WAC5B,QAASA,6BAGT,MADAA,0BAAyBopJ,KAAO,GAAI0F,+BAC7B9uJ,4BAEPgvJ,8BAAiC,SAAUrxK,QAE3C,QAASqxK,+BAA8Bh6K,QAASm/B,UAC5C,GAAIkB,OAAQ13B,OAAOklC,KAAK1vC,OAASA,IAGjC,OAFAkiC,OAAMrgC,QAAUA,QAChBqgC,MAAMlB,SAAWA,SACVkB,MA2DX,MAhEA7hC,WAAUw7K,8BAA+BrxK,QAOzC5K,OAAOugB,eAAe07J,8BAA8Bl7K,UAAW,YAC3D2f,IAGA,WAAc,MAAOtgB,MAAK6B,QAAQiuB,UAClCzP,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe07J,8BAA8Bl7K,UAAW,iBAC3D2f,IAGA,WAAc,MAAOtgB,MAAK6B,QAAQ04E,eAClCl6D,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe07J,8BAA8Bl7K,UAAW,sBAC3D2f,IAGA,WAAc,MAAOtgB,MAAK6B,QAAQw2E,oBAClCh4D,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe07J,8BAA8Bl7K,UAAW,UAC3D2f,IAGA,WAAc,MAAOtgB,MAAK6B,QAAQi7D,QAClCz8C,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe07J,8BAA8Bl7K,UAAW,WAC3D2f,IAGA,WAAc,MAAOtgB,MAAK6B,QAAQ4lD,SAClCpnC,YAAY,EACZD,cAAc,IASlBy7J,8BAA8Bl7K,UAAUC,OAOxC,SAAUm1C,SAAUoQ,iBAAkBa,mBAAoBhmB,UACtD,MAAOhhC,MAAK6B,QAAQjB,OAAOm1C,SAAUoQ,iBAAkBa,mBAAoBhmB,UAAYhhC,KAAKghC,WAEzF66I,+BACT18I,kBAeEpS,YAAe,WACf,QAASA,gBAET,MAAOA,gBAUPqpF,gBAAmB,WACnB,QAASA,oBAET,MAAOA,oBA8EP0lE,WA5CJ,WACI,GAAqBC,KAAM,QAAsE,GACjG,UAAIA,OACAphI,MAAQohI,IAAW,UAEfxhI,OAASI,MAAc,QAChB,MA6EfqhI,eAAiBF,WAAaxhI,YAAc,SAAUzD,UAAWtsB,OAAS,MAAOswB,YAUjFohI,SAAWH,WAAathI,MAAQ,SAAUz1C,EAAG0yH,GAAK,MAAOA,IA2DzDykD,aAAgB,SAAU1xK,QAS1B,QAAS0xK,cAAaC,aACF,KAAZA,UAAsBA,SAAU,EACpC,IAAIj6I,OAAQ13B,OAAOklC,KAAK1vC,OAASA,IAEjC,OADAkiC,OAAMk6I,UAAYD,QACXj6I,MAsDX,MAlEA7hC,WAAU67K,aAAc1xK,QAkBxB0xK,aAAav7K,UAAU46C,KAIvB,SAAUh4C,OAASiH,OAAO7J,UAAU4tC,KAAKmB,KAAK1vC,KAAMuD,QAOpD24K,aAAav7K,UAAUgtC,UAMvB,SAAU0uI,gBAAiB73K,MAAO0oC,UAC9B,GAAqBovI,aACAC,QAAU,SAAU1vI,KAAO,MAAO,OAClC2vI,WAAa,WAAc,MAAO,MA0BvD,OAzBIH,kBAA8C,gBAApBA,kBAC1BC,YAAct8K,KAAKo8K,UAAY,SAAU74K,OACrCorC,WAAW,WAAc,MAAO0tI,iBAAgB9tI,KAAKhrC,UACrD,SAAUA,OAAS84K,gBAAgB9tI,KAAKhrC,QACxC84K,gBAAgB73K,QAChB+3K,QAAUv8K,KAAKo8K,UAAY,SAAUvvI,KAAO8B,WAAW,WAAc,MAAO0tI,iBAAgB73K,MAAMqoC,QAC9F,SAAUA,KAAOwvI,gBAAgB73K,MAAMqoC,OAE3CwvI,gBAAgBnvI,WAChBsvI,WAAax8K,KAAKo8K,UAAY,WAAcztI,WAAW,WAAc,MAAO0tI,iBAAgBnvI,cACxF,WAAcmvI,gBAAgBnvI,eAItCovI,YAAct8K,KAAKo8K,UAAY,SAAU74K,OAASorC,WAAW,WAAc,MAAO0tI,iBAAgB94K,UAC9F,SAAUA,OAAS84K,gBAAgB94K,QACnCiB,QACA+3K,QACIv8K,KAAKo8K,UAAY,SAAUvvI,KAAO8B,WAAW,WAAc,MAAOnqC,OAAMqoC,QAAc,SAAUA,KAAOroC,MAAMqoC,OAEjHK,WACAsvI,WACIx8K,KAAKo8K,UAAY,WAAcztI,WAAW,WAAc,MAAOzB,eAAoB,WAAcA,cAGtG1iC,OAAO7J,UAAUgtC,UAAU+B,KAAK1vC,KAAMs8K,YAAaC,QAASC,aAEhEN,cACTjI,WA8EE11H,OAAU,WACV,QAASA,QAAOplC,IACZ,GAAIG,IAAKH,GAAGqlC,qBAAsBA,yBAA8B,KAAPllC,IAAwBA,EA2BjF,IA1BAtZ,KAAKo7C,sBAAuB,EAC5Bp7C,KAAK+8C,sBAAuB,EAI5B/8C,KAAKq7C,UAAW,EAIhBr7C,KAAKo9C,WAAa,GAAI8+H,eAAa,GAMnCl8K,KAAKs7C,iBAAmB,GAAI4gI,eAAa,GAMzCl8K,KAAKy7C,SAAW,GAAIygI,eAAa,GAIjCl8K,KAAKm9C,QAAU,GAAI++H,eAAa,GACb,mBAAR1pI,MACP,KAAM,IAAI/tC,OAAM,sCAEpB+tC,MAAKiqI,mBACL,IAAqB3hH,MAAwB,IAC7CA,MAAK3f,SAAW,EAChB2f,KAAK4hH,OAAS5hH,KAAKnf,OAASnJ,KAAKC,QAC7B,KAAuC,cACvCqoB,KAAKnf,OAASmf,KAAKnf,OAAOC,KAAK,KAAuC,cAEtE4C,sBAAwB,KAAkD,yBAC1Esc,KAAKnf,OAASmf,KAAKnf,OAAOC,KAAK,KAAkD,yBAErFF,iCAAiCof,MAmNrC,MA9MAvc,QAAOo+H,gBAGP,WAAc,OAA6C,IAAtCnqI,KAAKC,QAAQnyB,IAAI,kBAItCi+B,OAAOq+H,oBAGP,WACI,IAAKr+H,OAAOo+H,kBACR,KAAM,IAAIl4K,OAAM,mDAMxB85C,OAAOs+H,uBAGP,WACI,GAAIt+H,OAAOo+H,kBACP,KAAM,IAAIl4K,OAAM,mDAgCxB85C,OAAO59C,UAAUm8K,IAiBjB,SAAUh2J,GAAIo1B,UAAWC,WACrB,MAAyB,MAA4BR,OAAOmhI,IAAIh2J,GAAIo1B,UAAWC,YAgCnFoC,OAAO59C,UAAUo8K,QAkBjB,SAAUj2J,GAAIo1B,UAAWC,UAAWv9C,MAChC,GAAqBs8C,MAAO,KAA4BS,OACnCM,KAAOf,KAAK8hI,kBAAkB,gBAAkBp+K,KAAMkoB,GAAIm2J,cAAejiI,KAAMA,KACpG,KACI,MAAyBE,MAAK6hI,QAAQ9gI,KAAMC,UAAWC,WAE3D,QACIjB,KAAKgiI,WAAWjhI,QAgBxBsC,OAAO59C,UAAUw8K,WASjB,SAAUr2J,GAAIo1B,UAAWC,WACrB,MAAyB,MAA4BR,OAAOwhI,WAAWr2J,GAAIo1B,UAAWC,YA+B1FoC,OAAO59C,UAAU66C,kBAgBjB,SAAU10B,IACN,MAAyB,MAA4B41J,OAAOI,IAAIh2J,KAE7Dy3B,UAMP0+H,iBAgGA3+H,WAAc,WACd,QAASA,cACLt+C,KAAKo7C,sBAAuB,EAC5Bp7C,KAAK+8C,sBAAuB,EAC5B/8C,KAAKq7C,UAAW,EAChBr7C,KAAKo9C,WAAa,GAAI8+H,cACtBl8K,KAAKs7C,iBAAmB,GAAI4gI,cAC5Bl8K,KAAKy7C,SAAW,GAAIygI,cACpBl8K,KAAKm9C,QAAU,GAAI++H,cAwCvB,MAlCA59H,YAAW39C,UAAUm8K,IAIrB,SAAUh2J,IAAM,MAAOA,OAKvBw3B,WAAW39C,UAAUw8K,WAIrB,SAAUr2J,IAAM,MAAOA,OAKvBw3B,WAAW39C,UAAU66C,kBAIrB,SAAU10B,IAAM,MAAOA,OAMvBw3B,WAAW39C,UAAUo8K,QAKrB,SAAUj2J,IAAM,MAAOA,OAChBw3B,cAoBP8+H,YAAe,WACf,QAASA,aAAYC,SACjBr9K,KAAKq9K,QAAUA,QAIfr9K,KAAKs9K,cAAgB,EAIrBt9K,KAAKu9K,eAAgB,EAOrBv9K,KAAKw9K,UAAW,EAIhBx9K,KAAKy9K,cACLz9K,KAAK09K,sBAsKT,MA/JAN,aAAYz8K,UAAU+8K,oBAItB,WACI,GAAIx7I,OAAQliC,IACZA,MAAKq9K,QAAQjgI,WAAWzP,WACpBY,KAAM,WACFrM,MAAMs7I,UAAW,EACjBt7I,MAAMq7I,eAAgB,KAG9Bv9K,KAAKq9K,QAAQ7hI,kBAAkB,WAC3BtZ,MAAMm7I,QAAQ5hI,SAAS9N,WACnBY,KAAM,WACFgQ,OAAOs+H,yBACPtqI,kBAAkB,WACdrQ,MAAMq7I,eAAgB,EACtBr7I,MAAMy7I,+BAa1BP,YAAYz8K,UAAUi9K,4BAItB,WAGI,MAFA59K,MAAKs9K,eAAiB,EACtBt9K,KAAKw9K,UAAW,EACTx9K,KAAKs9K,eAShBF,YAAYz8K,UAAUk9K,4BAItB,WAEI,GADA79K,KAAKs9K,eAAiB,EAClBt9K,KAAKs9K,cAAgB,EACrB,KAAM,IAAI74K,OAAM,oCAGpB,OADAzE,MAAK29K,uBACE39K,KAAKs9K,eAShBF,YAAYz8K,UAAU06C,SAItB,WACI,MAAOr7C,MAAKu9K,eAAuC,GAAtBv9K,KAAKs9K,gBAAuBt9K,KAAKq9K,QAAQtgI,sBAO1EqgI,YAAYz8K,UAAUg9K,qBAItB,WACI,GAAIz7I,OAAQliC,IACRA,MAAKq7C,WAEL9I,kBAAkB,WACd,KAAmC,IAA5BrQ,MAAMu7I,WAAWx7K,QACAigC,MAAMu7I,WAAWhyI,MAASvJ,MAAMs7I,SAExDt7I,OAAMs7I,UAAW,IAKrBx9K,KAAKw9K,UAAW,GAYxBJ,YAAYz8K,UAAUm9K,WAKtB,SAAUthI,UACNx8C,KAAKy9K,WAAW32K,KAAK01C,UACrBx8C,KAAK29K,wBASTP,YAAYz8K,UAAUo9K,uBAItB,WAAc,MAAO/9K,MAAKs9K,eAc1BF,YAAYz8K,UAAUq9K,cAOtB,SAAUC,MAAO52J,SAAU62J,YAEvB,UAEJd,YAAY1kC,aACNtyI,KAAM2xE,aAGZqlG,YAAYzF,eAAiB,WAAc,QACrCvxK,KAAMm4C,UAEL6+H,eAMPe,oBAAuB,WACvB,QAASA,uBAILn+K,KAAKo+K,cAAgB,GAAI71J,KACzB81J,mBAAmBC,YAAYt+K,MAqHnC,MAxGAm+K,qBAAoBx9K,UAAU49K,oBAM9B,SAAU34K,MAAO44K,aACbx+K,KAAKo+K,cAAc79J,IAAI3a,MAAO44K,cAWlCL,oBAAoBx9K,UAAU89K,sBAK9B,SAAU74K,OAAS5F,KAAKo+K,cAAcpiJ,OAAOp2B,QAQ7Cu4K,oBAAoBx9K,UAAU+9K,0BAI9B,WAAc1+K,KAAKo+K,cAAcnlH,SAUjCklH,oBAAoBx9K,UAAUg+K,eAK9B,SAAUC,MAAQ,MAAO5+K,MAAKo+K,cAAc99J,IAAIs+J,OAAS,MAQzDT,oBAAoBx9K,UAAUk+K,oBAI9B,WAAc,MAAOn7K,OAAMigB,KAAK3jB,KAAKo+K,cAAcl8K,WAQnDi8K,oBAAoBx9K,UAAUm+K,mBAI9B,WAAc,MAAOp7K,OAAMigB,KAAK3jB,KAAKo+K,cAAcxnJ,SAcnDunJ,oBAAoBx9K,UAAUo+K,sBAO9B,SAAUH,KAAMI,iBAEZ,WADwB,KAApBA,kBAA8BA,iBAAkB,GAC7CX,mBAAmBU,sBAAsB/+K,KAAM4+K,KAAMI,kBAEhEb,oBAAoBzlC,aACdtyI,KAAM2xE,aAGZomG,oBAAoBxG,eAAiB,WAAc,UAC5CwG,uBAWPc,oBAAuB,WACvB,QAASA,wBA0BT,MApBAA,qBAAoBt+K,UAAU29K,YAI9B,SAAUvrJ,YAOVksJ,oBAAoBt+K,UAAUo+K,sBAM9B,SAAUhsJ,SAAU6rJ,KAAMI,iBACtB,MAAO,OAEJC,uBAEPZ,mBAAqB,GAAIY,qBAazB1hI,UAAW,EACXD,gBAAiB,EAEjBK,yBAA2B,GAAIjE,gBAAe,sBAsG9CkE,YAAe,WAEf,QAASA,aAAYshI,WACjBl/K,KAAKk/K,UAAYA,UACjBl/K,KAAKm/K,YACLn/K,KAAKo/K,qBACLp/K,KAAKq/K,YAAa,EA8PtB,MA1MAzhI,aAAYj9C,UAAU2+K,uBA2BtB,SAAUC,cAAex7I,SACrB,GAAI7B,OAAQliC,KAKSq+C,aAAeta,QAAUA,QAAQ4a,WAASx6C,GAC1Cw6C,OAASP,UAAUC,aAGxC,OAAOM,QAAOm+H,IAAI,WACd,GAAqB0C,gBAAiBjrI,SAAS3zC,SAAUyyC,QAASkL,OAAQh3B,SAAUo3B,SAAWzc,MAAM6T,UAChF+pE,UAA8By/D,cAAc3+K,OAAO4+K,gBACnDC,iBAAmB3/D,UAAU/pE,SAASz1B,IAAIo4C,aAAc,KAC7E,KAAK+mH,iBACD,KAAM,IAAIh7K,OAAM,gEAIpB,OAFAq7G,WAAU4/D,UAAU,WAAc,MAAO1gI,QAAO9c,MAAMi9I,SAAUr/D,aAChE,OAAWtkE,kBAAkB,WAAc,MAAwB,QAAW2B,QAAQxP,WAAYY,KAAM,SAAU/pC,OAASi7K,iBAAiBviI,YAAY14C,YACjJi6C,6BAA6BghI,iBAAmC,OAAY,WAC/E,GAAqBE,YAAa7/D,UAAU/pE,SAASz1B,IAAIs6J,sBAEzD,OADA+E,YAAW3E,kBACJ2E,WAAW7E,YAAYv0K,KAAK,WAE/B,MADA27B,OAAM09I,mBAAmB9/D,WAClBA,iBAuCvBliE,YAAYj9C,UAAUk/K,gBAmBtB,SAAUjyH,WAAYkyH,iBAClB,GAAI59I,OAAQliC,SACY,KAApB8/K,kBAA8BA,mBAClC,IAAqBC,iBAAkB//K,KAAK+1C,SAASz1B,IAAIo7J,iBACpC33I,QAAU8a,kBAAmBihI,gBAElD,OADgCC,iBAAgBC,gBAAgBj8I,UAChDm9G,mBAAmBtzF,YAC9BrnD,KAAK,SAAUg5K,eAAiB,MAAOr9I,OAAMo9I,uBAAuBC,cAAex7I,YAM5F6Z,YAAYj9C,UAAUi/K,mBAItB,SAAU9/D,WACN,GAAqBmgE,QAA2BngE,UAAU/pE,SAASz1B,IAAI4/J,eACvE,IAAIpgE,UAAUqgE,qBAAqBl+K,OAAS,EACxC69G,UAAUqgE,qBAAqBv5K,QAAQ,SAAUoT,GAAK,MAAOimK,QAAO3gE,UAAUtlG,SAE7E,CAAA,IAAI8lG,UAAU10D,SAASg1H,cAIxB,KAAM,IAAI37K,OAAM,cAAgBkuC,YAAYmtE,UAAU10D,SAAS3qD,aAAe,wIAH9Eq/G,WAAU10D,SAASg1H,cAAcH,QAMrCjgL,KAAKm/K,SAASr4K,KAAKg5G,YAUvBliE,YAAYj9C,UAAU++K,UAKtB,SAAUljI,UAAYx8C,KAAKo/K,kBAAkBt4K,KAAK01C,WAClD58C,OAAOugB,eAAey9B,YAAYj9C,UAAW,YAKzC2f,IAKA,WAAc,MAAOtgB,MAAKk/K,WAC1B7+J,YAAY,EACZD,cAAc,IASlBw9B,YAAYj9C,UAAUo1D,QAItB,WACI,GAAI/1D,KAAKq/K,WACL,KAAM,IAAI56K,OAAM,2CAEpBzE,MAAKm/K,SAAS/7K,QAAQwD,QAAQ,SAAUpH,QAAU,MAAOA,QAAOu2D,YAChE/1D,KAAKo/K,kBAAkBx4K,QAAQ,SAAUy5K,UAAY,MAAOA,cAC5DrgL,KAAKq/K,YAAa,GAEtBz/K,OAAOugB,eAAey9B,YAAYj9C,UAAW,aACzC2f,IAGA,WAAc,MAAOtgB,MAAKq/K,YAC1Bh/J,YAAY,EACZD,cAAc,IAElBw9B,YAAY86F,aACNtyI,KAAM2xE,aAGZn6B,YAAY+5H,eAAiB,WAAc,QACrCvxK,KAAMmuC,YAELqJ,eA6DPsiI,eAAkB,WAElB,QAASA,gBAAeI,MAAO/qE,SAAU2pE,UAAWqB,kBAAmBC,0BAA2BC;0GAC9F,GAAIv+I,OAAQliC,IACZA,MAAKsgL,MAAQA,MACbtgL,KAAKu1G,SAAWA,SAChBv1G,KAAKk/K,UAAYA,UACjBl/K,KAAKugL,kBAAoBA,kBACzBvgL,KAAKwgL,0BAA4BA,0BACjCxgL,KAAKygL,YAAcA,YACnBzgL,KAAK0gL,uBACL1gL,KAAK2gL,UACL3gL,KAAK4gL,cAAe,EACpB5gL,KAAK6gL,sBAAuB,EAC5B7gL,KAAK8gL,SAAU,EAKf9gL,KAAK+gL,kBAIL/gL,KAAK8hE,cACL9hE,KAAK6gL,qBAAuBxjI,YAC5Br9C,KAAKsgL,MAAMhlI,iBAAiB3N,WAAYY,KAAM,WAAcrM,MAAMo+I,MAAMxD,IAAI,WAAc56I,MAAM8+I,WAChG,IAAqBC,mBAAoB,GAAIjR,cAAa,SAAUoC,UAChElwI,MAAM4+I,QAAU5+I,MAAMo+I,MAAMjlI,WAAanZ,MAAMo+I,MAAMvjI,uBAChD7a,MAAMo+I,MAAMllI,qBACjBlZ,MAAMo+I,MAAM9kI,kBAAkB,WAC1B42H,SAAS7jI,KAAKrM,MAAM4+I,SACpB1O,SAASllI,eAGImO,SAAW,GAAI20H,cAAa,SAAUoC,UAGvD,GAAqB8O,UACrBh/I,OAAMo+I,MAAM9kI,kBAAkB,WAC1B0lI,UAAYh/I,MAAMo+I,MAAM7kI,SAAS9N,UAAU,WACvC4Q,OAAOs+H,yBAGPtqI,kBAAkB,WACTrQ,MAAM4+I,SAAY5+I,MAAMo+I,MAAMvjI,sBAC9B7a,MAAMo+I,MAAMllI,uBACblZ,MAAM4+I,SAAU,EAChB1O,SAAS7jI,MAAK,SAK9B,IAAqB4yI,aAAcj/I,MAAMo+I,MAAMljI,WAAWzP,UAAU,WAChE4Q,OAAOq+H,sBACH16I,MAAM4+I,UACN5+I,MAAM4+I,SAAU,EAChB5+I,MAAMo+I,MAAM9kI,kBAAkB,WAAc42H,SAAS7jI,MAAK,OAGlE,OAAO,YACH2yI,UAAU1yH,cACV2yH,YAAY3yH,gBAGpB,MAA0BnT,SACtBy3H,QAAQmO,kBAAmB5L,QAAQ3lI,KAAK2L,WA4PhD,MAxNA6kI,gBAAev/K,UAAU2+G,UAmBzB,SAAU8hE,mBAAoBp6H,oBAC1B,GAAI9kB,OAAQliC,IACZ,KAAKA,KAAKygL,YAAY3xI,KAClB,KAAM,IAAIrqC,OAAM,gJAEpB,IAAqBkoB,iBAEjBA,kBADAy0J,6BAA8BjiJ,kBACXiiJ,mBAIIphL,KAAKwgL,0BAA0B5E,wBAAwBwF,oBAElFphL,KAAK+gL,eAAej6K,KAAK6lB,iBAAiB4tD,cAE1C,IAAqBv5C,UAAWrU,2BAA4BkvJ,+BACxD,KACA77K,KAAKk/K,UAAU5+J,IAAIyM,aACFk6B,eAAiBD,oBAAsBr6B,iBAAiBmD,SACxDuxJ,QAAU10J,iBAAiB/rB,OAAO2zC,SAAS0hI,QAAUhvH,eAAgBjmB,SAC1FqgJ,SAAQ3B,UAAU,WAAcx9I,MAAMo/I,iBAAiBD,UACvD,IAAqB7C,aAAc6C,QAAQtrI,SAASz1B,IAAI88J,YAAa,KASrE,OARIoB,cACA6C,QAAQtrI,SAASz1B,IAAI69J,qBAChBI,oBAAoB8C,QAAQ/vF,SAASiwF,cAAe/C,aAE7Dx+K,KAAKwhL,eAAeH,SAChBhkI,aACAr9C,KAAKu1G,SAASimE,IAAI,oGAEf6F,SAuBXnB,eAAev/K,UAAUqgL,KAWzB,WACI,GAAI9+I,OAAQliC,IACZ,IAAIA,KAAK4gL,aACL,KAAM,IAAIn8K,OAAM,4CAEpB,IAAqBg2C,OAAQylI,eAAeuB,YAC5C,KACIzhL,KAAK4gL,cAAe,EACpB5gL,KAAK2gL,OAAO/5K,QAAQ,SAAU86C,MAAQ,MAAOA,MAAK6X,kBAC9Cv5D,KAAK6gL,sBACL7gL,KAAK2gL,OAAO/5K,QAAQ,SAAU86C,MAAQ,MAAOA,MAAK8X,mBAG1D,MAAwBngD,GAEpBrZ,KAAKsgL,MAAM9kI,kBAAkB,WAAc,MAAOtZ,OAAMq+I,kBAAkBrjI,YAAY7jC,KAE1F,QACIrZ,KAAK4gL,cAAe,EACpB3E,SAASxhI,SAejBylI,eAAev/K,UAAU+gL,WAOzB,SAAUC,SACN,GAAqBjgI,MAAO,OAC5B1hD,MAAK2gL,OAAO75K,KAAK46C,MACjBA,KAAKkgI,eAAe5hL,OAUxBkgL,eAAev/K,UAAUkhL,WAKzB,SAAUF,SACN,GAAqBjgI,MAAO,OAC5B1C,QAAOh/C,KAAK2gL,OAAQj/H,MACpBA,KAAKogI,oBAMT5B,eAAev/K,UAAU6gL,eAIzB,SAAUO,cACN/hL,KAAK0hL,WAAWK,aAAa/7H,UAC7BhmD,KAAKghL,OACLhhL,KAAK8hE,WAAWh7D,KAAKi7K,cAEY/hL,KAAKk/K,UAAU5+J,IAAIg7J,2BAA4B3yK,OAAO3I,KAAK0gL,qBAClF95K,QAAQ,SAAUy5K,UAAY,MAAOA,UAAS0B,iBAM5D7B,eAAev/K,UAAU2gL,iBAIzB,SAAUS,cACN/hL,KAAK6hL,WAAWE,aAAa/7H,UAC7BhH,OAAOh/C,KAAK8hE,WAAYigH,eAO5B7B,eAAev/K,UAAU0qD,YAIzB,WAEIrrD,KAAK2gL,OAAOv9K,QAAQwD,QAAQ,SAAU86C,MAAQ,MAAOA,MAAKqU,aAE9Dn2D,OAAOugB,eAAe+/J,eAAev/K,UAAW,aAI5C2f,IAIA,WAAc,MAAOtgB,MAAK2gL,OAAO1+K,QACjCoe,YAAY,EACZD,cAAc,IAKlB8/J,eAAeuB,WAAazF,eAAe,yBAC3CkE,eAAexnC,aACTtyI,KAAM2xE,aAGZmoG,eAAevI,eAAiB,WAAc,QACxCvxK,KAAMm4C,SACNn4C,KAAMm1K,UACNn1K,KAAMmuC,WACNnuC,KAAMsyD,eACNtyD,KAAMymB,2BACNzmB,KAAMw0K,yBAELsF,kBAwBPnpE,SAAY,WACZ,QAASA,aAET,MAAOA,aAYP5+C,kBAVuB,GAAIze,gBAAe,wBAUtB,WACpB,QAASye,qBAET,MAAOA,sBAMP6pH,UAAa,WACb,QAASA,cAET,MAAOA,cAgCPvyH,WAAc,WACd,QAASA,YAAW8xH,eAChBvhL,KAAKuhL,cAAgBA,cAEzB,MAAO9xH,eA+BPuB,UAAa,WACb,QAASA,aACLhxD,KAAKuxD,OAAQ,EACbvxD,KAAKiiL,YACLjiL,KAAK2uD,QAAU,GAAIutH,cA6MvB,MA3MAt8K,QAAOugB,eAAe6wC,UAAUrwD,UAAW,UACvC2f,IAGA,WAAc,MAAOtgB,MAAKiiL,SAAShgL,QACnCoe,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe6wC,UAAUrwD,UAAW,SACvC2f,IAGA,WAAc,MAAOtgB,MAAKiiL,SAAS,IACnC5hK,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe6wC,UAAUrwD,UAAW,QACvC2f,IAGA,WAAc,MAAOtgB,MAAKiiL,SAASjiL,KAAKiC,OAAS,IACjDoe,YAAY,EACZD,cAAc,IAalB4wC,UAAUrwD,UAAUV,IAOpB,SAAU6mB,IAAM,MAAO9mB,MAAKiiL,SAAShiL,IAAI6mB,KAWzCkqC,UAAUrwD,UAAUiiB,OAMpB,SAAUkE,IACN,MAAO9mB,MAAKiiL,SAASr/J,OAAOkE,KAYhCkqC,UAAUrwD,UAAU8d,KAMpB,SAAUqI,IACN,MAAO9mB,MAAKiiL,SAASxjK,KAAKqI,KAc9BkqC,UAAUrwD,UAAU4H,OAQpB,SAAUue,GAAIi3B,MACV,MAAO/9C,MAAKiiL,SAAS15K,OAAOue,GAAIi3B,OAYpCiT,UAAUrwD,UAAUiG,QAMpB,SAAUkgB,IAAM9mB,KAAKiiL,SAASr7K,QAAQkgB,KAWtCkqC,UAAUrwD,UAAUwwB,KAMpB,SAAUrK,IACN,MAAO9mB,MAAKiiL,SAAS9wJ,KAAKrK,KAK9BkqC,UAAUrwD,UAAUuhL,QAGpB,WAAc,MAAOliL,MAAKiiL,SAAS7+K,SAInC4tD,UAAUrwD,UAAUuxC,qBAGpB,WAAc,MAA0BlyC,MAAc,SAAEkyC,wBAIxD8e,UAAUrwD,UAAUqF,SAGpB,WAAc,MAAOhG,MAAKiiL,SAASj8K,YAKnCgrD,UAAUrwD,UAAUixD,MAIpB,SAAU7rD,KACN/F,KAAKiiL,SAAW/iI,UAAUn5C,KAC1B,KAA0BwrD,OAAQ,GAKtCP,UAAUrwD,UAAUqxD,gBAGpB,WAAiChyD,KAAa,QAAEu7C,KAAKv7C,OAMrDgxD,UAAUrwD,UAAUywD,SAIpB,WAAc,KAA0BG,OAAQ,GAMhDP,UAAUrwD,UAAUo1D,QAIpB,WACuB/1D,KAAa,QAAEktC,WACfltC,KAAa,QAAEwuD,eAE/BwC,aAgCPijB,YAAe,WACf,QAASA,gBAET,MAAOA,gBA0BPC,iBAAoB,WACpB,QAASA,qBAET,MAAOA,qBAWPgiC,kBAAqB,WACrB,QAASA,sBAET,MAAOA,sBAWPisE,QAAW,SAAU33K,QAErB,QAAS23K,WACL,MAAkB,QAAX33K,QAAmBA,OAAOzK,MAAMC,KAAMgC,YAAchC,KAE/D,MAJAK,WAAU8hL,QAAS33K,QAIZ23K,SACTjsE,mBAoFEksE,eA5BmB,SAAU53K,QAE7B,QAAS63K,mBACL,MAAkB,QAAX73K,QAAmBA,OAAOzK,MAAMC,KAAMgC,YAAchC,KAF/DK,UAAUgiL,gBAAiB73K,SAK7B23K,SAsBmB,WACjB,QAASC,eAAcxjL,KAAM49C,UACzBx8C,KAAKpB,KAAOA,KACZoB,KAAKw8C,SAAWA,SAEpB,MAAO4lI,mBAKPE,UAAa,WACb,QAASA,WAAU3iI,WAAYvX,OAAQm6I,eACnCviL,KAAKuiL,cAAgBA,cACrBviL,KAAK2/C,WAAaA,WACdvX,QAAUA,iBAAkBmX,cAC5BnX,OAAOo6I,SAASxiL,MAGhBA,KAAKooC,OAAS,KAElBpoC,KAAKyiL,aA0CT,MAxCA7iL,QAAOugB,eAAemiK,UAAU3hL,UAAW,YACvC2f,IAGA,WAAc,MAAOtgB,MAAKuiL,cAAcxsI,UACxC11B,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAemiK,UAAU3hL,UAAW,qBACvC2f,IAGA,WAAc,MAAOtgB,MAAKuiL,cAAcl5J,WACxChJ,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAemiK,UAAU3hL,UAAW,WACvC2f,IAGA,WAAc,MAAOtgB,MAAKuiL,cAAc9+K,SACxC4c,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAemiK,UAAU3hL,UAAW,cACvC2f,IAGA,WAAc,MAAOtgB,MAAKuiL,cAAc3nH,YACxCv6C,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAemiK,UAAU3hL,UAAW,kBACvC2f,IAGA,WAAc,MAAOtgB,MAAKuiL,cAAcG,gBACxCriK,YAAY,EACZD,cAAc,IAEXkiK,aAKP/iI,aAAgB,SAAU/0C,QAE1B,QAAS+0C,cAAaI,WAAYvX,OAAQm6I,eACtC,GAAIrgJ,OAAQ13B,OAAOklC,KAAK1vC,KAAM2/C,WAAYvX,OAAQm6I,gBAAkBviL,IAOpE,OANAkiC,OAAM2Z,cACN3Z,MAAM1N,cACN0N,MAAMygJ,WACNzgJ,MAAMg1C,UACNh1C,MAAMod,cACNpd,MAAMq/I,cAAgB5hI,WACfzd,MA+IX,MAxJA7hC,WAAUk/C,aAAc/0C,QAexB+0C,aAAa5+C,UAAU6hL,SAIvB,SAAU3mJ,OACFA,QACA77B,KAAKs/C,WAAWx4C,KAAK+0B,OACrBA,MAAMuM,OAASpoC,OAOvBu/C,aAAa5+C,UAAUgmD,YAIvB,SAAU9qB,OACN,GAAqB+mJ,YAAa5iL,KAAKs/C,WAAWn8C,QAAQ04B,QACtC,IAAhB+mJ,aACA/mJ,MAAMuM,OAAS,KACfpoC,KAAKs/C,WAAWL,OAAO2jI,WAAY,KAQ3CrjI,aAAa5+C,UAAUkiL,oBAKvB,SAAUhnJ,MAAOinJ,aACb,GAAI5gJ,OAAQliC,KACS+iL,aAAe/iL,KAAKs/C,WAAWn8C,QAAQ04B,QACtC,IAAlBknJ,gBACC5pK,GAAKnZ,KAAKs/C,YAAYL,OAAOl/C,MAAMoZ,IAAK4pK,aAAe,EAAG,GAAGp6K,OAAOm6K,cACrEA,YAAYl8K,QAAQ,SAAUwS,GACtBA,EAAEgvB,QACFhvB,EAAEgvB,OAAOue,YAAYvtC,GAEzBA,EAAEgvB,OAASlG,QAGnB,IAAI/oB,KAORomC,aAAa5+C,UAAU+lD,aAKvB,SAAUs8H,SAAUC,UAChB,GAAqBC,UAAWljL,KAAKs/C,WAAWn8C,QAAQ6/K,WACtC,IAAdE,SACAljL,KAAKwiL,SAASS,WAGVA,SAAS76I,QACT66I,SAAS76I,OAAOue,YAAYs8H,UAEhCA,SAAS76I,OAASpoC,KAClBA,KAAKs/C,WAAWL,OAAOikI,SAAU,EAAGD,YAO5C1jI,aAAa5+C,UAAU6oB,MAIvB,SAAU41B,WAEN,MAD+Bp/C,MAAKmjL,SAAS/jI,WAC9B,IAAM,MAMzBG,aAAa5+C,UAAUwiL,SAIvB,SAAU/jI,WACN,GAAqBC,WAErB,OADAF,uBAAsBn/C,KAAMo/C,UAAWC,SAChCA,SAMXE,aAAa5+C,UAAUyiL,cAIvB,SAAUhkI,WACN,GAAqBC,WAErB,OADAG,oBAAmBx/C,KAAMo/C,UAAWC,SAC7BA,SAEXz/C,OAAOugB,eAAeo/B,aAAa5+C,UAAW,YAC1C2f,IAGA,WACI,MAAyBtgB,MAAKs/C,WAAW18B,OAAO,SAAUvD,MAAQ,MAAOA,gBAAgBkgC,iBAE7Fl/B,YAAY,EACZD,cAAc,IAOlBm/B,aAAa5+C,UAAU0iL,oBAKvB,SAAU1/H,UAAW2/H,UACjBtjL,KAAKyiL,UAAU77K,QAAQ,SAAUy5K,UACzBA,SAASzhL,MAAQ+kD,WACjB08H,SAAS7jI,SAAS8mI,aAIvB/jI,cACT+iI,WAoCE1iI,uBAAyB,GAAIr3B,KAuF7B2nC,aAAgB,WAChB,QAASA,cAAaC,SAClBnwD,KAAKmwD,QAAUA,QAWnB,MALAD,cAAaqzH,KAIb,SAAUhgL,OAAS,MAAO,IAAI2sD,cAAa3sD,QACpC2sD,gBAMPE,aAAgB,WAChB,QAASA,cAAaozH,cAAeC,aAAcC,aAC/C1jL,KAAKwjL,cAAgBA,cACrBxjL,KAAKyjL,aAAeA,aACpBzjL,KAAK0jL,YAAcA,YAcvB,MALAtzH,cAAazvD,UAAUgjL,cAIvB,WAAc,MAAO3jL,MAAK0jL,aACnBtzH,gBAwEPwzH,6BAAgC,WAChC,QAASA,iCAwBT,MAlBAA,8BAA6BjjL,UAAUkjL,SAIvC,SAAUvhL,KAAO,MAAO29C,oBAAmB39C,MAM3CshL,6BAA6BjjL,UAAUC,OAKvC,SAAUkjL,WACN,MAAO,IAAIC,uBAAsBD,YAE9BF,gCAEPI,gBAAkB,SAAU3+K,MAAOoD,MAAQ,MAAOA,OAIlDs7K,sBAAyB,WACzB,QAASA,uBAAsBD,WAC3B9jL,KAAKiC,OAAS,EACdjC,KAAKikL,eAAiB,KACtBjkL,KAAKkkL,iBAAmB,KACxBlkL,KAAKmkL,gBAAkB,KACvBnkL,KAAKokL,QAAU,KACfpkL,KAAKqkL,QAAU,KACfrkL,KAAKskL,eAAiB,KACtBtkL,KAAKukL,eAAiB,KACtBvkL,KAAKwkL,WAAa,KAClBxkL,KAAKykL,WAAa,KAClBzkL,KAAK0kL,cAAgB,KACrB1kL,KAAK2kL,cAAgB,KACrB3kL,KAAK4kL,qBAAuB,KAC5B5kL,KAAK6kL,qBAAuB,KAC5B7kL,KAAK8kL,WAAahB,WAAaE,gBAqxBnC,MA/wBAD,uBAAsBpjL,UAAUokL,YAIhC,SAAUj+J,IACN,GAAqB8sB,OACrB,KAAKA,OAAS5zC,KAAKokL,QAAoB,OAAXxwI,OAAiBA,OAASA,OAAO86H,MACzD5nJ,GAAG8sB,SAOXmwI,sBAAsBpjL,UAAUqkL,iBAIhC,SAAUl+J,IAKN,IAJA,GAAqBm+J,QAASjlL,KAAKokL,QACdc,WAAallL,KAAK0kL,cAClB5jI,gBAAkB,EAClBC,YAAc,KAC5BkkI,QAAUC,YAAY,CAGzB,GAAqBtxI,SAAUsxI,YAC3BD,QAA6BA,OAAoB,aAAIpkI,iBAAiBqkI,WAAYpkI,gBAAiBC,aAClF,OACjBmkI,WACiBC,iBAAmBtkI,iBAAiBjN,OAAQkN,gBAAiBC,aAC7DqkI,aAAexxI,OAAOwxI,YAE3C,IAAIxxI,SAAWsxI,WACXpkI,kBACAokI,WAAaA,WAAWG,iBAIxB,IADAJ,OAA0B,OAAWvW,MACT,MAAxB96H,OAAOoN,cACPF,sBAEC,CAEIC,cACDA,eACJ,IAAqBukI,wBAAyBH,iBAAmBrkI,gBAC5CykI,kBAAqC,aAAmBzkI,eAC7E,IAAIwkI,wBAA0BC,kBAAmB,CAC7C,IAAK,GAAqBz6K,GAAI,EAAGA,EAAIw6K,uBAAwBx6K,IAAK,CAC9D,GAAqBd,QAASc,EAAIi2C,YAAY9+C,OAAS8+C,YAAYj2C,GAAMi2C,YAAYj2C,GAAK,EACrEzF,MAAQ2E,OAASc,CAClCy6K,oBAAqBlgL,OAASA,MAAQigL,yBACtCvkI,YAAYj2C,GAAKd,OAAS,GAGlC,GAAqBg3C,eAAgBpN,OAAOoN,aAC5CD,aAAYC,eAAiBukI,kBAAoBD,wBAIzDH,mBAAqBC,cACrBt+J,GAAG8sB,OAAQuxI,iBAAkBC,gBAQzCrB,sBAAsBpjL,UAAU6kL,oBAIhC,SAAU1+J,IACN,GAAqB8sB,OACrB,KAAKA,OAAS5zC,KAAKmkL,gBAA4B,OAAXvwI,OAAiBA,OAASA,OAAO6xI,cACjE3+J,GAAG8sB,SAOXmwI,sBAAsBpjL,UAAU+kL,iBAIhC,SAAU5+J,IACN,GAAqB8sB,OACrB,KAAKA,OAAS5zC,KAAKskL,eAA2B,OAAX1wI,OAAiBA,OAASA,OAAO+xI,WAChE7+J,GAAG8sB,SAOXmwI,sBAAsBpjL,UAAUilL,iBAIhC,SAAU9+J,IACN,GAAqB8sB,OACrB,KAAKA,OAAS5zC,KAAKwkL,WAAuB,OAAX5wI,OAAiBA,OAASA,OAAOiyI,WAC5D/+J,GAAG8sB,SAOXmwI,sBAAsBpjL,UAAUmlL,mBAIhC,SAAUh/J,IACN,GAAqB8sB,OACrB,KAAKA,OAAS5zC,KAAK0kL,cAA0B,OAAX9wI,OAAiBA,OAASA,OAAOyxI,aAC/Dv+J,GAAG8sB,SAOXmwI,sBAAsBpjL,UAAUolL,sBAIhC,SAAUj/J,IACN,GAAqB8sB,OACrB,KAAKA,OAAS5zC,KAAK4kL,qBAAiC,OAAXhxI,OAAiBA,OAASA,OAAOoyI,oBACtEl/J,GAAG8sB,SAOXmwI,sBAAsBpjL,UAAUslL,KAIhC,SAAUC,YAGN,GAFkB,MAAdA,aACAA,gBACCjmI,mBAAmBimI,YACpB,KAAM,IAAIzhL,OAAM,yBAA2BkuC,YAAYuzI,YAAc,2CAEzE,OAAIlmL,MAAK+zF,MAAMmyF,YACJlmL,KAGA,MAMf+jL,sBAAsBpjL,UAAU++K,UAGhC,aAKAqE,sBAAsBpjL,UAAUozF,MAIhC,SAAUmyF,YACN,GAAIhkJ,OAAQliC,IACZA,MAAKmmL,QACL,IAEqB9gL,OACAoD,KACA29K,YAJAxyI,OAAS5zC,KAAKokL,QACdiC,YAAa,CAIlC,IAAI3iL,MAAMC,QAAQuiL,YAAa,CAC3B,KAA0BjkL,OAASikL,WAAWjkL,MAC9C,KAAK,GAAqBqkL,SAAU,EAAGA,QAAUtmL,KAAKiC,OAAQqkL,UAC1D79K,KAAOy9K,WAAWI,SAClBF,YAAcpmL,KAAK8kL,WAAWwB,QAAS79K,MACxB,OAAXmrC,QAAoBlB,eAAekB,OAAO2yI,UAAWH,cAKjDC,aAEAzyI,OAAS5zC,KAAKwmL,mBAAmB5yI,OAAQnrC,KAAM29K,YAAaE,UAE3D5zI,eAAekB,OAAOnrC,KAAMA,OAC7BzI,KAAKymL,mBAAmB7yI,OAAQnrC,QATpCmrC,OAAS5zC,KAAK0mL,UAAU9yI,OAAQnrC,KAAM29K,YAAaE,SACnDD,YAAa,GAUjBzyI,OAASA,OAAO86H,UAIpBrpK,OAAQ,EACRu7C,gBAAgBslI,WAAY,SAAUz9K,MAClC29K,YAAclkJ,MAAM4iJ,WAAWz/K,MAAOoD,MACvB,OAAXmrC,QAAoBlB,eAAekB,OAAO2yI,UAAWH,cAKjDC,aAEAzyI,OAAS1R,MAAMskJ,mBAAmB5yI,OAAQnrC,KAAM29K,YAAa/gL,QAE5DqtC,eAAekB,OAAOnrC,KAAMA,OAC7By5B,MAAMukJ,mBAAmB7yI,OAAQnrC,QATrCmrC,OAAS1R,MAAMwkJ,UAAU9yI,OAAQnrC,KAAM29K,YAAa/gL,OACpDghL,YAAa,GAUjBzyI,OAASA,OAAO86H,MAChBrpK,UAEJ,KAA0BpD,OAASoD,KAIvC,OAFArF,MAAK2mL,UAAU/yI,QACf,KAA0BsyI,WAAaA,WAChClmL,KAAK4mL,SAEhBhnL,OAAOugB,eAAe4jK,sBAAsBpjL,UAAW,WAInD2f,IAGA,WACI,MAA+B,QAAxBtgB,KAAKskL,gBAA+C,OAApBtkL,KAAKwkL,YACjB,OAAvBxkL,KAAK0kL,eAAwD,OAA9B1kL,KAAK4kL,sBAE5CvkK,YAAY,EACZD,cAAc,IAmBlB2jK,sBAAsBpjL,UAAUwlL,OAShC,WACI,GAAInmL,KAAK4mL,QAAS,CACd,GAAqBhzI,YAAS,GACTizI,eAAa,EAClC,KAAKjzI,OAAS5zC,KAAKmkL,gBAAkBnkL,KAAKokL,QAAoB,OAAXxwI,OAAiBA,OAASA,OAAO86H,MAChF96H,OAAO6xI,cAAgB7xI,OAAO86H,KAElC,KAAK96H,OAAS5zC,KAAKskL,eAA2B,OAAX1wI,OAAiBA,OAASA,OAAO+xI,WAChE/xI,OAAOoN,cAAgBpN,OAAOwxI,YAGlC,KADAplL,KAAKskL,eAAiBtkL,KAAKukL,eAAiB,KACvC3wI,OAAS5zC,KAAKwkL,WAAuB,OAAX5wI,OAAiBA,OAASizI,WACrDjzI,OAAOoN,cAAgBpN,OAAOwxI,aAC9ByB,WAAajzI,OAAOiyI,UAExB7lL,MAAKwkL,WAAaxkL,KAAKykL,WAAa,KACpCzkL,KAAK0kL,cAAgB1kL,KAAK2kL,cAAgB,KAC1C3kL,KAAK4kL,qBAAuB5kL,KAAK6kL,qBAAuB,OA8BhEd,sBAAsBpjL,UAAU+lL,UAehC,SAAU9yI,OAAQnrC,KAAM29K,YAAa/gL,OAEjC,GAAqByhL,eAkCrB,OAjCe,QAAXlzI,OACAkzI,eAAiB9mL,KAAKqkL,SAGtByC,eAAiBlzI,OAAOmzI,MAExB/mL,KAAKgnL,QAAQpzI,SAGjBA,OAAiC,OAAxB5zC,KAAKikL,eAA0B,KAAOjkL,KAAKikL,eAAe3jK,IAAI8lK,YAAa/gL,OACrE,OAAXuuC,QAGKlB,eAAekB,OAAOnrC,KAAMA,OAC7BzI,KAAKymL,mBAAmB7yI,OAAQnrC,MACpCzI,KAAKinL,WAAWrzI,OAAQkzI,eAAgBzhL,SAIxCuuC,OAAmC,OAA1B5zC,KAAKkkL,iBAA4B,KAAOlkL,KAAKkkL,iBAAiB5jK,IAAI8lK,YAAa,MACzE,OAAXxyI,QAGKlB,eAAekB,OAAOnrC,KAAMA,OAC7BzI,KAAKymL,mBAAmB7yI,OAAQnrC,MACpCzI,KAAKknL,eAAetzI,OAAQkzI,eAAgBzhL,QAI5CuuC,OACI5zC,KAAKmnL,UAAU,GAAIC,uBAAsB3+K,KAAM29K,aAAcU,eAAgBzhL,QAGlFuuC,QA6DXmwI,sBAAsBpjL,UAAU6lL,mBAgChC,SAAU5yI,OAAQnrC,KAAM29K,YAAa/gL,OACjC,GAAqBgiL,gBAA2C,OAA1BrnL,KAAKkkL,iBAA4B,KAAOlkL,KAAKkkL,iBAAiB5jK,IAAI8lK,YAAa,KAQrH,OAPuB,QAAnBiB,eACAzzI,OAAS5zC,KAAKknL,eAAeG,eAAmCzzI,OAAa,MAAGvuC,OAE3EuuC,OAAOwxI,cAAgB//K,QAC5BuuC,OAAOwxI,aAAe//K,MACtBrF,KAAKsnL,YAAY1zI,OAAQvuC,QAEtBuuC,QAkBXmwI,sBAAsBpjL,UAAUgmL,UAShC,SAAU/yI,QAEN,KAAkB,OAAXA,QAAiB,CACpB,GAAqBizI,YAAajzI,OAAO86H,KACzC1uK,MAAKunL,eAAevnL,KAAKwnL,QAAQ5zI,SACjCA,OAASizI,WAEiB,OAA1B7mL,KAAKkkL,kBACLlkL,KAAKkkL,iBAAiBjrH,QAEE,OAAxBj5D,KAAKukL,iBACLvkL,KAAKukL,eAAeoB,WAAa,MAEb,OAApB3lL,KAAKykL,aACLzkL,KAAKykL,WAAWoB,WAAa,MAEZ,OAAjB7lL,KAAKqkL,UACLrkL,KAAKqkL,QAAQ3V,MAAQ,MAEE,OAAvB1uK,KAAK2kL,gBACL3kL,KAAK2kL,cAAcU,aAAe,MAEJ,OAA9BrlL,KAAK6kL,uBACL7kL,KAAK6kL,qBAAqBmB,oBAAsB,OAWxDjC,sBAAsBpjL,UAAUumL,eAOhC,SAAUtzI,OAAQ6zI,WAAYpiL,OACI,OAA1BrF,KAAKkkL,kBACLlkL,KAAKkkL,iBAAiBllI,OAAOpL,OAEjC,IAAqBwsD,MAAOxsD,OAAO8zI,aACdn5I,KAAOqF,OAAOyxI,YAenC,OAda,QAATjlF,KACApgG,KAAK0kL,cAAgBn2I,KAGrB6xD,KAAKilF,aAAe92I,KAEX,OAATA,KACAvuC,KAAK2kL,cAAgBvkF,KAGrB7xD,KAAKm5I,aAAetnF,KAExBpgG,KAAK2nL,aAAa/zI,OAAQ6zI,WAAYpiL,OACtCrF,KAAKsnL,YAAY1zI,OAAQvuC,OAClBuuC,QAUXmwI,sBAAsBpjL,UAAUsmL,WAOhC,SAAUrzI,OAAQ6zI,WAAYpiL,OAI1B,MAHArF,MAAKwnL,QAAQ5zI,QACb5zC,KAAK2nL,aAAa/zI,OAAQ6zI,WAAYpiL,OACtCrF,KAAKsnL,YAAY1zI,OAAQvuC,OAClBuuC,QAUXmwI,sBAAsBpjL,UAAUwmL,UAOhC,SAAUvzI,OAAQ6zI,WAAYpiL,OAa1B,MAZArF,MAAK2nL,aAAa/zI,OAAQ6zI,WAAYpiL,OACV,OAAxBrF,KAAKukL,eAGLvkL,KAAKukL,eAAiBvkL,KAAKskL,eAAiB1wI,OAM5C5zC,KAAKukL,eAAiBvkL,KAAKukL,eAAeoB,WAAa/xI,OAEpDA,QAUXmwI,sBAAsBpjL,UAAUgnL,aAOhC,SAAU/zI,OAAQ6zI,WAAYpiL,OAK1B,GAAqBkpC,MAAsB,OAAfk5I,WAAsBznL,KAAKokL,QAAUqD,WAAW/Y,KAuB5E,OAnBA96H,QAAO86H,MAAQngI,KACfqF,OAAOmzI,MAAQU,WACF,OAATl5I,KACAvuC,KAAKqkL,QAAUzwI,OAGfrF,KAAKw4I,MAAQnzI,OAEE,OAAf6zI,WACAznL,KAAKokL,QAAUxwI,OAGf6zI,WAAW/Y,MAAQ96H,OAEK,OAAxB5zC,KAAKikL,iBACLjkL,KAAKikL,eAAiB,GAAI2D,gBAE9B5nL,KAAKikL,eAAe4D,IAAIj0I,QACxBA,OAAOwxI,aAAe//K,MACfuuC,QAQXmwI,sBAAsBpjL,UAAUqmL,QAKhC,SAAUpzI,QACN,MAAO5zC,MAAKunL,eAAevnL,KAAKwnL,QAAQ5zI,UAQ5CmwI,sBAAsBpjL,UAAU6mL,QAKhC,SAAU5zI,QACsB,OAAxB5zC,KAAKikL,gBACLjkL,KAAKikL,eAAejlI,OAAOpL,OAE/B,IAAqBwsD,MAAOxsD,OAAOmzI,MACdx4I,KAAOqF,OAAO86H,KAgBnC,OAZa,QAATtuE,KACApgG,KAAKokL,QAAU71I,KAGf6xD,KAAKsuE,MAAQngI,KAEJ,OAATA,KACAvuC,KAAKqkL,QAAUjkF,KAGf7xD,KAAKw4I,MAAQ3mF,KAEVxsD,QASXmwI,sBAAsBpjL,UAAU2mL,YAMhC,SAAU1zI,OAAQk0I,SAGd,MAAIl0I,QAAOoN,gBAAkB8mI,QAClBl0I,QAEa,OAApB5zC,KAAKykL,WAGLzkL,KAAKykL,WAAazkL,KAAKwkL,WAAa5wI,OAKpC5zC,KAAKykL,WAAazkL,KAAKykL,WAAWoB,WAAajyI,OAE5CA,SAMXmwI,sBAAsBpjL,UAAU4mL,eAIhC,SAAU3zI,QAoBN,MAnB8B,QAA1B5zC,KAAKkkL,mBACLlkL,KAAKkkL,iBAAmB,GAAI0D,gBAEhC5nL,KAAKkkL,iBAAiB2D,IAAIj0I,QAC1BA,OAAOwxI,aAAe,KACtBxxI,OAAOyxI,aAAe,KACK,OAAvBrlL,KAAK2kL,eAGL3kL,KAAK2kL,cAAgB3kL,KAAK0kL,cAAgB9wI,OAC1CA,OAAO8zI,aAAe,OAMtB9zI,OAAO8zI,aAAe1nL,KAAK2kL,cAC3B3kL,KAAK2kL,cAAgB3kL,KAAK2kL,cAAcU,aAAezxI,QAEpDA,QASXmwI,sBAAsBpjL,UAAU8lL,mBAMhC,SAAU7yI,OAAQnrC,MAQd,MAPAmrC,QAAOnrC,KAAOA,KACoB,OAA9BzI,KAAK6kL,qBACL7kL,KAAK6kL,qBAAuB7kL,KAAK4kL,qBAAuBhxI,OAGxD5zC,KAAK6kL,qBAAuB7kL,KAAK6kL,qBAAqBmB,oBAAsBpyI,OAEzEA,QAEJmwI,yBAKPqD,sBAAyB,WACzB,QAASA,uBAAsB3+K,KAAM89K,WACjCvmL,KAAKyI,KAAOA,KACZzI,KAAKumL,UAAYA,UACjBvmL,KAAKolL,aAAe,KACpBplL,KAAKghD,cAAgB,KAIrBhhD,KAAKylL,cAAgB,KAIrBzlL,KAAK+mL,MAAQ,KAIb/mL,KAAK0uK,MAAQ,KAIb1uK,KAAK+nL,SAAW,KAIhB/nL,KAAKgoL,SAAW,KAIhBhoL,KAAK0nL,aAAe,KAIpB1nL,KAAKqlL,aAAe,KAIpBrlL,KAAK2lL,WAAa,KAIlB3lL,KAAK6lL,WAAa,KAIlB7lL,KAAKgmL,oBAAsB,KAE/B,MAAOoB,0BAEPa,yBAA4B,WAC5B,QAASA,4BAILjoL,KAAKkoL,MAAQ,KAIbloL,KAAKmoL,MAAQ,KAwGjB,MA1FAF,0BAAyBtnL,UAAUo7B,IAOnC,SAAU6X,QACa,OAAf5zC,KAAKkoL,OACLloL,KAAKkoL,MAAQloL,KAAKmoL,MAAQv0I,OAC1BA,OAAOo0I,SAAW,KAClBp0I,OAAOm0I,SAAW,OAOlB/nL,KAAW,MAAEgoL,SAAWp0I,OACxBA,OAAOm0I,SAAW/nL,KAAKmoL,MACvBv0I,OAAOo0I,SAAW,KAClBhoL,KAAKmoL,MAAQv0I,SAUrBq0I,yBAAyBtnL,UAAU2f,IAKnC,SAAUimK,UAAW6B,gBACjB,GAAqBx0I,OACrB,KAAKA,OAAS5zC,KAAKkoL,MAAkB,OAAXt0I,OAAiBA,OAASA,OAAOo0I,SACvD,IAAwB,OAAnBI,gBAA2BA,gBAAqCx0I,OAAoB,eACrFlB,eAAekB,OAAO2yI,UAAWA,WACjC,MAAO3yI,OAGf,OAAO,OAcXq0I,yBAAyBtnL,UAAUq+C,OAOnC,SAAUpL,QASN,GAAqBwsD,MAAOxsD,OAAOm0I,SACdx5I,KAAOqF,OAAOo0I,QAanC,OAZa,QAAT5nF,KACApgG,KAAKkoL,MAAQ35I,KAGb6xD,KAAK4nF,SAAWz5I,KAEP,OAATA,KACAvuC,KAAKmoL,MAAQ/nF,KAGb7xD,KAAKw5I,SAAW3nF,KAEE,OAAfpgG,KAAKkoL,OAETD,4BAEPL,cAAiB,WACjB,QAASA,iBACL5nL,KAAKC,IAAM,GAAIsoB,KA8FnB,MAxFAq/J,eAAcjnL,UAAUknL,IAIxB,SAAUj0I,QACN,GAAqB5/B,KAAM4/B,OAAO2yI,UACb8B,WAAaroL,KAAKC,IAAIqgB,IAAItM,IAC1Cq0K,cACDA,WAAa,GAAIJ,0BACjBjoL,KAAKC,IAAIsgB,IAAIvM,IAAKq0K,aAEtBA,WAAWtsJ,IAAI6X,SAmBnBg0I,cAAcjnL,UAAU2f,IAUxB,SAAUimK,UAAW6B,gBACjB,GAAqBp0K,KAAMuyK,UACN+B,WAAatoL,KAAKC,IAAIqgB,IAAItM,IAC/C,OAAOs0K,YAAaA,WAAWhoK,IAAIimK,UAAW6B,gBAAkB,MAcpER,cAAcjnL,UAAUq+C,OAOxB,SAAUpL,QACN,GAAqB5/B,KAAM4/B,OAAO2yI,SAMlC,OALqDvmL,MAAKC,IAAIqgB,IAAItM,KAEnDgrC,OAAOpL,SAClB5zC,KAAKC,IAAI+7B,OAAOhoB,KAEb4/B,QAEXh0C,OAAOugB,eAAeynK,cAAcjnL,UAAW,WAC3C2f,IAGA,WAAc,MAAyB,KAAlBtgB,KAAKC,IAAI0iD,MAC9BtiC,YAAY,EACZD,cAAc,IAKlBwnK,cAAcjnL,UAAUs4D,MAGxB,WAAcj5D,KAAKC,IAAIg5D,SAChB2uH,iBA8BPW,6BAAgC,WAChC,QAASA,iCAoBT,MAdAA,8BAA6B5nL,UAAUkjL,SAIvC,SAAUvhL,KAAO,MAAOA,eAAeimB,MAAO+3B,WAAWh+C,MAKzDimL,6BAA6B5nL,UAAUC,OAIvC,WAAc,MAAO,IAAI4nL,wBAClBD,gCAEPC,sBAAyB,WACzB,QAASA,yBACLxoL,KAAKq2K,SAAW,GAAI9tJ,KACpBvoB,KAAKyoL,SAAW,KAChBzoL,KAAK0oL,aAAe,KACpB1oL,KAAK2oL,iBAAmB,KACxB3oL,KAAK4oL,aAAe,KACpB5oL,KAAK6oL,aAAe,KACpB7oL,KAAKskL,eAAiB,KACtBtkL,KAAKukL,eAAiB,KACtBvkL,KAAK0kL,cAAgB,KACrB1kL,KAAK2kL,cAAgB,KA0VzB,MAxVA/kL,QAAOugB,eAAeqoK,sBAAsB7nL,UAAW,WACnD2f,IAGA,WACI,MAA+B,QAAxBtgB,KAAKskL,gBAAiD,OAAtBtkL,KAAK4oL,cACjB,OAAvB5oL,KAAK0kL,eAEbrkK,YAAY,EACZD,cAAc,IAMlBooK,sBAAsB7nL,UAAUokL,YAIhC,SAAUj+J,IACN,GAAqB8sB,OACrB,KAAKA,OAAS5zC,KAAKyoL,SAAqB,OAAX70I,OAAiBA,OAASA,OAAO86H,MAC1D5nJ,GAAG8sB,SAOX40I,sBAAsB7nL,UAAU6kL,oBAIhC,SAAU1+J,IACN,GAAqB8sB,OACrB,KAAKA,OAAS5zC,KAAK2oL,iBAA6B,OAAX/0I,OAAiBA,OAASA,OAAO6xI,cAClE3+J,GAAG8sB,SAOX40I,sBAAsB7nL,UAAUmoL,mBAIhC,SAAUhiK,IACN,GAAqB8sB,OACrB,KAAKA,OAAS5zC,KAAK4oL,aAAyB,OAAXh1I,OAAiBA,OAASA,OAAOm1I,aAC9DjiK,GAAG8sB,SAOX40I,sBAAsB7nL,UAAU+kL,iBAIhC,SAAU5+J,IACN,GAAqB8sB,OACrB,KAAKA,OAAS5zC,KAAKskL,eAA2B,OAAX1wI,OAAiBA,OAASA,OAAO+xI,WAChE7+J,GAAG8sB,SAOX40I,sBAAsB7nL,UAAUmlL,mBAIhC,SAAUh/J,IACN,GAAqB8sB,OACrB,KAAKA,OAAS5zC,KAAK0kL,cAA0B,OAAX9wI,OAAiBA,OAASA,OAAOyxI,aAC/Dv+J,GAAG8sB,SAOX40I,sBAAsB7nL,UAAUslL,KAIhC,SAAUhmL,KACN,GAAKA,KAGA,KAAMA,cAAesoB,MAAO+3B,WAAWrgD,MACxC,KAAM,IAAIwE,OAAM,yBAA2BkuC,YAAY1yC,KAAO,4CAH9DA,KAAM,GAAIsoB,IAKd,OAAOvoB,MAAK+zF,MAAM9zF,KAAOD,KAAO,MAKpCwoL,sBAAsB7nL,UAAU++K,UAGhC,aAWA8I,sBAAsB7nL,UAAUozF,MAMhC,SAAU9zF,KACN,GAAIiiC,OAAQliC,IACZA,MAAKmmL,QACL,IAAqBz/H,cAAe1mD,KAAKyoL,QAczC,IAbAzoL,KAAK0oL,aAAe,KACpB1oL,KAAKgpL,SAAS/oL,IAAK,SAAUsD,MAAOyQ,KAChC,GAAI0yC,cAAgBA,aAAa1yC,MAAQA,IACrCkuB,MAAM+mJ,mBAAmBviI,aAAcnjD,OACvC2+B,MAAMwmJ,aAAehiI,aACrBA,aAAeA,aAAagoH,UAE3B,CACD,GAAqB96H,QAAS1R,MAAMgnJ,yBAAyBl1K,IAAKzQ,MAClEmjD,cAAexkB,MAAMinJ,sBAAsBziI,aAAc9S,WAI7D8S,aAAc,CACVA,aAAaqgI,QACbrgI,aAAaqgI,MAAMrY,MAAQ,MAE/B1uK,KAAK0kL,cAAgBh+H,YACrB,KAAK,GAAqB9S,QAAS8S,aAAyB,OAAX9S,OAAiBA,OAASA,OAAOyxI,aAC1EzxI,SAAW5zC,KAAKyoL,WAChBzoL,KAAKyoL,SAAW,MAEpBzoL,KAAKq2K,SAASr6I,OAAO4X,OAAO5/B,KAC5B4/B,OAAOyxI,aAAezxI,OAAO86H,MAC7B96H,OAAO4vI,cAAgB5vI,OAAO6vI,aAC9B7vI,OAAO6vI,aAAe,KACtB7vI,OAAOmzI,MAAQ,KACfnzI,OAAO86H,MAAQ,KAQvB,MAJI1uK,MAAK6oL,eACL7oL,KAAK6oL,aAAaE,aAAe,MACjC/oL,KAAKukL,iBACLvkL,KAAKukL,eAAeoB,WAAa,MAC9B3lL,KAAK4mL,SAahB4B,sBAAsB7nL,UAAUwoL,sBAWhC,SAAU5wF,OAAQ3kD,QACd,GAAI2kD,OAAQ,CACR,GAAqB6H,MAAO7H,OAAOwuF,KAWnC,OAVAnzI,QAAO86H,MAAQn2E,OACf3kD,OAAOmzI,MAAQ3mF,KACf7H,OAAOwuF,MAAQnzI,OACXwsD,OACAA,KAAKsuE,MAAQ96H,QAEb2kD,SAAWv4F,KAAKyoL,WAChBzoL,KAAKyoL,SAAW70I,QAEpB5zC,KAAK0oL,aAAenwF,OACbA,OAUX,MARIv4F,MAAK0oL,cACL1oL,KAAK0oL,aAAaha,MAAQ96H,OAC1BA,OAAOmzI,MAAQ/mL,KAAK0oL,cAGpB1oL,KAAKyoL,SAAW70I,OAEpB5zC,KAAK0oL,aAAe90I,OACb,MAOX40I,sBAAsB7nL,UAAUuoL,yBAKhC,SAAUl1K,IAAKzQ,OACX,GAAIvD,KAAKq2K,SAAS1iJ,IAAI3f,KAAM,CACxB,GAAqBo1K,UAA8BppL,KAAKq2K,SAAS/1J,IAAItM,IACrEhU,MAAKipL,mBAAmBG,SAAU7lL,MAClC,IAAqB68F,MAAOgpF,SAASrC,MAChBx4I,KAAO66I,SAAS1a,KASrC,OARItuE,QACAA,KAAKsuE,MAAQngI,MAEbA,OACAA,KAAKw4I,MAAQ3mF,MAEjBgpF,SAAS1a,MAAQ,KACjB0a,SAASrC,MAAQ,KACVqC,SAEX,GAAqBx1I,QAAS,GAAIy1I,uBAAsBr1K,IAIxD,OAHAhU,MAAKq2K,SAAS91J,IAAIvM,IAAK4/B,QACvBA,OAAO6vI,aAAelgL,MACtBvD,KAAKspL,gBAAgB11I,QACdA,QAOX40I,sBAAsB7nL,UAAUwlL,OAIhC,WACI,GAAInmL,KAAK4mL,QAAS,CACd,GAAqBhzI,YAAS,EAG9B,KADA5zC,KAAK2oL,iBAAmB3oL,KAAKyoL,SACxB70I,OAAS5zC,KAAK2oL,iBAA6B,OAAX/0I,OAAiBA,OAASA,OAAO86H,MAClE96H,OAAO6xI,cAAgB7xI,OAAO86H,KAIlC,KAAK96H,OAAS5zC,KAAK4oL,aAAyB,OAAXh1I,OAAiBA,OAASA,OAAOm1I,aAC9Dn1I,OAAO4vI,cAAgB5vI,OAAO6vI,YAElC,KAAK7vI,OAAS5zC,KAAKskL,eAA0B,MAAV1wI,OAAgBA,OAASA,OAAO+xI,WAC/D/xI,OAAO4vI,cAAgB5vI,OAAO6vI,YAElCzjL,MAAK4oL,aAAe5oL,KAAK6oL,aAAe,KACxC7oL,KAAKskL,eAAiBtkL,KAAKukL,eAAiB,KAC5CvkL,KAAK0kL,cAAgB,OAQ7B8D,sBAAsB7nL,UAAUsoL,mBAKhC,SAAUr1I,OAAQ21I,UACT72I,eAAe62I,SAAU31I,OAAO6vI,gBACjC7vI,OAAO4vI,cAAgB5vI,OAAO6vI,aAC9B7vI,OAAO6vI,aAAe8F,SACtBvpL,KAAKwpL,cAAc51I,UAO3B40I,sBAAsB7nL,UAAU2oL,gBAIhC,SAAU11I,QACsB,OAAxB5zC,KAAKskL,eACLtkL,KAAKskL,eAAiBtkL,KAAKukL,eAAiB3wI,QAGzB5zC,KAAoB,eAAE2lL,WAAa/xI,OACtD5zC,KAAKukL,eAAiB3wI,SAO9B40I,sBAAsB7nL,UAAU6oL,cAIhC,SAAU51I,QACoB,OAAtB5zC,KAAK4oL,aACL5oL,KAAK4oL,aAAe5oL,KAAK6oL,aAAej1I,QAGrB5zC,KAAkB,aAAE+oL,aAAen1I,OACtD5zC,KAAK6oL,aAAej1I,SAU5B40I,sBAAsB7nL,UAAUqoL,SAOhC,SAAU1mL,IAAKwkB,IACPxkB,cAAeimB,KACfjmB,IAAIsE,QAAQkgB,IAGZlnB,OAAOg3B,KAAKt0B,KAAKsE,QAAQ,SAAUqT,GAAK,MAAO6M,IAAGxkB,IAAI2X,GAAIA,MAG3DuuK,yBAKPa,sBAAyB,WACzB,QAASA,uBAAsBr1K,KAC3BhU,KAAKgU,IAAMA,IACXhU,KAAKwjL,cAAgB,KACrBxjL,KAAKyjL,aAAe,KAIpBzjL,KAAKylL,cAAgB,KAIrBzlL,KAAK0uK,MAAQ,KAIb1uK,KAAK+mL,MAAQ,KAIb/mL,KAAK2lL,WAAa,KAIlB3lL,KAAKqlL,aAAe,KAIpBrlL,KAAK+oL,aAAe,KAExB,MAAOM,0BA6DPI,gBAAmB,WACnB,QAASA,iBAAgBC,WACrB1pL,KAAK0pL,UAAYA,UAoHrB,MA7GAD,iBAAgB7oL,OAKhB,SAAU8oL,UAAWthJ,QACjB,GAAc,MAAVA,OAAgB,CAChB,GAAqBuhJ,QAASvhJ,OAAOshJ,UAAUtmL,OAE/C,OADAsmL,WAAYA,UAAU/gL,OAAOghL,QACtB,GAAIF,iBAAgBC,WAG3B,MAAO,IAAID,iBAAgBC,YA2CnCD,gBAAgBG,OAqBhB,SAAUF,WACN,OACIr2I,QAASo2I,gBACT/hK,WAAY,SAAU0gB,QAClB,IAAKA,OAID,KAAM,IAAI3jC,OAAM,0DAEpB,OAAOglL,iBAAgB7oL,OAAO8oL,UAAWthJ,SAG7C5gB,OAAQiiK,gBAAiB,GAAI70I,UAAY,GAAID,cAOrD80I,gBAAgB9oL,UAAU8d,KAI1B,SAAUorK,UACN,GAAqBhoL,SAAU7B,KAAK0pL,UAAUjrK,KAAK,SAAUzE,GAAK,MAAOA,GAAE6pK,SAASgG,WACpF,IAAe,MAAXhoL,QACA,MAAOA,QAGP,MAAM,IAAI4C,OAAM,2CAA6ColL,SAAW,cAAgB3oI,wBAAwB2oI,UAAY,MAG7HJ,mBAsDPK,gBAAmB,WACnB,QAASA,iBAAgBJ,WACrB1pL,KAAK0pL,UAAYA,UAkHrB,MA1GAI,iBAAgBlpL,OAMhB,SAAU8oL,UAAWthJ,QACjB,GAAIA,OAAQ,CACR,GAAqBuhJ,QAASvhJ,OAAOshJ,UAAUtmL,OAC/CsmL,WAAYA,UAAU/gL,OAAOghL,QAEjC,MAAO,IAAIG,iBAAgBJ,YA2C/BI,gBAAgBF,OAsBhB,SAAUF,WACN,OACIr2I,QAASy2I,gBACTpiK,WAAY,SAAU0gB,QAClB,IAAKA,OAGD,KAAM,IAAI3jC,OAAM,0DAEpB,OAAOqlL,iBAAgBlpL,OAAO8oL,UAAWthJ,SAG7C5gB,OAAQsiK,gBAAiB,GAAIl1I,UAAY,GAAID,cAOrDm1I,gBAAgBnpL,UAAU8d,KAI1B,SAAUsrK,IACN,GAAqBloL,SAAU7B,KAAK0pL,UAAUjrK,KAAK,SAAUzE,GAAK,MAAOA,GAAE6pK,SAASkG,KACpF,IAAIloL,QACA,MAAOA,QAEX,MAAM,IAAI4C,OAAM,2CAA6CslL,GAAK,MAE/DD,mBAiBPE,YAAc,GAAIzB,+BAIlB0B,cAAgB,GAAIrG,+BACpBxiI,uBAAyB,GAAIqoI,iBAAgBQ,cAC7C3oI,uBAAyB,GAAIwoI,iBAAgBE,YA8B7CE,2BAEE72I,QAASgoI,YAAa9zJ,SAAU,YAChC8rB,QAASuK,YAAap2B,MAAO+sB,YAC7BlB,QAAS8qI,oBAAqB32J,UAC9B6rB,QAASkoI,QAAS/zJ,UAuBpBivF,WAjjHJ,SAA+B0zE,sBAAuBvrL,KAAMkpB,eACtC,KAAdA,YAAwBA,aAC5B,IAAqB+oE,QAAS,GAAIn3C,gBAAe,aAAe96C,OA+hH3B,KAAM,OAAQsrL,0BAgBvC,GAAIxwI,gBAAe,aA8E/BoQ,mBA1Ee,GAAIpQ,gBAAe,gBAIZ,GAAIA,gBAAe,sBAqCpB,WAErB,QAAS0wI,mBAAkBnK,SAE3BmK,kBAAkB1xC,aACZtyI,KAAMovK,WAAY1zK,OACRgmB,WACIo4J,eACAtF,sBACAa,SACAL,wBACE/nI,QAASo2I,gBAAiB/hK,WAAYy5B,0BACtC9N,QAASy2I,gBAAiBpiK,WAAY25B,0BAEpChO,QAASojE,UACT/uF,WAAY65B,eACZ/5B,OAAQ,GAAIstB,UAAS2hE,WAAY,GAAI9hE,UAAY,GAAIC,kBAM7Ew1I,kBAAkBzS,eAAiB,WAAc,QAC3CvxK,KAAM85K,sBAWZpsJ,KAAM,EACNk9C,KAAM,EACN5iE,MAAO,EACPE,OAAQ,EACR2iE,IAAK,EACLC,aAAc,GAElBpnB,mBAAkBA,kBAAkBh2B,MAAQ,OAC5Cg2B,kBAAkBA,kBAAkBknB,MAAQ,OAC5ClnB,kBAAkBA,kBAAkB17C,OAAS,QAC7C07C,kBAAkBA,kBAAkBx7C,QAAU,SAC9Cw7C,kBAAkBA,kBAAkBmnB,KAAO,MAC3CnnB,kBAAkBA,kBAAkBonB,cAAgB,cAOpD,IAAIzY,WAAa,WACb,QAASA,cAET,MAAOA,cAiNPtV,UACAuN,mBAAiC,GACjC8C,mBAAiC,GACjCL,uBAAqC,GACrCM,wBAAsC,GACtC9F,sBAAoC,GACpCmJ,qBAAmC,GACnCC,2BAAyC,GACzC/B,uBAAqC,GACrCN,uBAAqC,GACrCiB,gBAA8B,GAC9BzG,eAA6B,GAC7B9L,uBAAqC,GACrCU,gBAA8B,GAC9B8Q,qBAAmC,GACnCG,mBAAiC,GACjCnJ,uBAAqC,IAyFrC3G,KAAO,aACPvC,eAAiB,GAAIn6B,KA0MrBy8B,iBAAmB,GAAIqlI,SAiKvBxjI,aAAe,kBA+PfyD,cAAgB,GAAI1qD,QACpB+qD,sBAAwBlI,SAASlO,UACjCqW,oBAAsBnI,SAAS11B,aAoU/Bu9J,cAAgB,GAAI1qL,QAiFpB2qL,eAhFqB,SAAU//K,QAE/B,QAASggL,mBAAkB16J,SAAUyqD,cAAesoE,eAAgB4nC,QAASC,SAAUryG,oBACnF,GAAIn2C,OAGJ13B,OAAOklC,KAAK1vC,OAASA,IAOrB,OANAkiC,OAAMpS,SAAWA,SACjBoS,MAAMq4C,cAAgBA,cACtBr4C,MAAMuoJ,QAAUA,QAChBvoJ,MAAMwoJ,SAAWA,SACjBxoJ,MAAMm2C,mBAAqBA,mBAC3Bn2C,MAAM2gH,eAAiBA,eAChB3gH,MAZX7hC,UAAUmqL,kBAAmBhgL,QAc7B5K,OAAOugB,eAAeqqK,kBAAkB7pL,UAAW,UAC/C2f,IAGA,WACI,GAAqBqqK,cACA7tH,OAA4B98D,KAAa,OAC9D,KAAK,GAAqBgzB,YAAY8pC,QAAQ,CAC1C,GAAqBsH,cAAetH,OAAO9pC,SAC3C23J,WAAU7jL,MAAOksB,SAAUA,SAAUoxC,aAAcA,eAEvD,MAAOumH,YAEXtqK,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAeqqK,kBAAkB7pL,UAAW,WAC/C2f,IAGA;eACI,GAAqBsqK,cACrB,KAAK,GAAqB53J,YAAYhzB,MAAK0qL,SAAU,CACjD,GAAqBtmH,cAAepkE,KAAK0qL,SAAS13J,SAClD43J,YAAW9jL,MAAOksB,SAAUA,SAAUoxC,aAAcA,eAExD,MAAOwmH,aAEXvqK,YAAY,EACZD,cAAc,IAalBoqK,kBAAkB7pL,UAAUC,OAQ5B,SAAUm1C,SAAUoQ,iBAAkBa,mBAAoBhmB,UACtD,IAAKA,SACD,KAAM,IAAIv8B,OAAM,8BAEpB,IAAqB2nD,SAAUrH,kBAAkB/kD,KAAK6iJ,gBACjCgoC,mBAA2Dz+H,QAAQxiD,MAAM,GAAW,QAAoB,kBAAEuxB,UAC1GumB,KAAOyB,SAASqQ,eAAezd,SAAUoQ,qBAAwBa,mBAAoBoF,QAASprB,SAAUspJ,eACxGjhK,UAAYu4B,eAAeF,KAAMmpI,oBAAoBz/H,QAI1E,OAHIpE,qBACAtF,KAAK4D,SAASiC,aAAa5F,cAAcD,KAAM,GAAGwC,cAAe,aAAcwxH,UAAUzgG,MAEtF,GAAIs1G,eAAc7oI,KAAM,GAAI0L,UAAS1L,MAAOr4B,aAGzD8V,kBACmB,SAAU30B,QAE3B,QAAS+/K,eAAcO,MAAOC,SAAUC,YACpC,GAAI9oJ,OAAQ13B,OAAOklC,KAAK1vC,OAASA,IAQjC,OAPAkiC,OAAM4oJ,MAAQA,MACd5oJ,MAAM6oJ,SAAWA,SACjB7oJ,MAAM8oJ,WAAaA,WACnB9oJ,MAAM+oJ,OAAS/oJ,MAAM4oJ,MAAMjoI,IAAIj5C,MAAM,GACrCs4B,MAAM8jB,SAAW+kI,SACjB7oJ,MAAMgpJ,kBAAoBH,SAC1B7oJ,MAAMkpB,SAAW4/H,WACV9oJ,MA4CX,MAtDA7hC,WAAUkqL,cAAe//K,QAYzB5K,OAAOugB,eAAeoqK,cAAc5pL,UAAW,YAC3C2f,IAGA,WACI,MAAO,IAAImvC,YAAW9N,cAAc3hD,KAAK8qL,MAAO9qL,KAAKirL,OAAO9vJ,WAAW+oB,gBAE3E7jC,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAeoqK,cAAc5pL,UAAW,YAC3C2f,IAGA,WAAc,MAAO,IAAIktC,WAAUxtD,KAAK8qL,MAAO9qL,KAAKirL,SACpD5qK,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAeoqK,cAAc5pL,UAAW,iBAC3C2f,IAGA,WAAc,MAAyBtgB,MAAKgrL,WAAsB,aAClE3qK,YAAY,EACZD,cAAc,IAKlBmqK,cAAc5pL,UAAUo1D,QAGxB,WAAc/1D,KAAK+qL,SAASh1H,WAK5Bw0H,cAAc5pL,UAAU++K,UAIxB,SAAUljI,UAAYx8C,KAAK+qL,SAASrL,UAAUljI,WACvC+tI,eACTp0E,eAUEjpD,kBAAqB,WACrB,QAASA,mBAAkB49H,MAAOG,OAAQE,OACtCnrL,KAAK8qL,MAAQA,MACb9qL,KAAKirL,OAASA,OACdjrL,KAAKmrL,MAAQA,MAIbnrL,KAAKwmD,kBAiMT,MA/LA5mD,QAAOugB,eAAe+sC,kBAAkBvsD,UAAW,WAC/C2f,IAGA,WAAc,MAAO,IAAImvC,YAAWzvD,KAAKmrL,MAAMjnI,gBAC/C7jC,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe+sC,kBAAkBvsD,UAAW,YAC/C2f,IAGA,WAAc,MAAO,IAAIktC,WAAUxtD,KAAK8qL,MAAO9qL,KAAKirL,SACpD5qK,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe+sC,kBAAkBvsD,UAAW,kBAC/C2f,IAGA,WAGI,IAFA,GAAqBohC,MAAO1hD,KAAK8qL,MACZ/jI,MAAQ/mD,KAAKirL,OAAO7iJ,QACjC2e,OAASrF,MACbqF,MAAQ/C,aAAatC,MACrBA,KAA0BA,KAAY,MAE1C,OAAOA,MAAO,GAAI8L,WAAU9L,KAAMqF,OAAS,GAAIyG,WAAUxtD,KAAK8qL,MAAO,OAEzEzqK,YAAY,EACZD,cAAc,IAKlB8sC,kBAAkBvsD,UAAUs4D,MAG5B,WAEI,IAAK,GADgBhgD,KAAMjZ,KAAKwmD,eAAevkD,OACrB6I,EAAImO,IAAM,EAAGnO,GAAK,EAAGA,IAAK,CAChD,GAAqB42C,MAA0B8K,mBAAmBxsD,KAAKmrL,MAAOrgL,EAC9Eq4C,UAASwS,YAAYjU,QAO7BwL,kBAAkBvsD,UAAU2f,IAI5B,SAAUjb,OACN,GAAqBq8C,MAAO1hD,KAAKwmD,eAAenhD,MAChD,IAAIq8C,KAAM,CACN,GAAqBp6C,KAAM,GAAI8lD,UAAS1L,KAExC,OADAp6C,KAAI8jL,yBAAyBprL,MACtBsH,IAEX,MAAO,OAEX1H,OAAOugB,eAAe+sC,kBAAkBvsD,UAAW,UAC/C2f,IAGA,WAAc,MAAOtgB,MAAKwmD,eAAevkD,QACzCoe,YAAY,EACZD,cAAc,IASlB8sC,kBAAkBvsD,UAAUwyD,mBAO5B,SAAUk4H,YAAa5nL,QAAS4B,OAC5B,GAAqBs8K,SAAU0J,YAAYl4H,mBAAmB1vD,YAE9D,OADAzD,MAAKsrL,OAAO3J,QAASt8K,OACds8K,SAWXz0H,kBAAkBvsD,UAAUkO,gBAS5B,SAAU8d,iBAAkBtnB,MAAO0wC,SAAUoQ,iBAAkBolI,aAC3D,GAAqBC,iBAAkBz1I,UAAY/1C,KAAK64D,cACnD0yH,cAAiB5+J,2BAA4BkvJ,iCAC9C0P,YAAcC,gBAAgBlrK,IAAIyM,aAEtC,IAAqBg1J,cAAep1J,iBAAiB/rB,OAAO4qL,gBAAiBrlI,qBAAkBhiD,GAAWonL,YAE1G,OADAvrL,MAAKsrL,OAAOvJ,aAAa/7H,SAAU3gD,OAC5B08K,cAOX70H,kBAAkBvsD,UAAU2qL,OAK5B,SAAU3J,QAASt8K,OACf,GAAIs8K,QAAQjkI,UACR,KAAM,IAAIj5C,OAAM,qDAEpB,IAAqBgnL,UAA4B,QAC5BC,SAAWD,SAASX,KAGzC,OAFAx/H,oBAAmBtrD,KAAK8qL,MAAO9qL,KAAKmrL,MAAO9lL,MAAOqmL,UAClDD,SAASL,yBAAyBprL,MAC3B2hL,SAOXz0H,kBAAkBvsD,UAAUgrL,KAK5B,SAAUhK,QAASyD,cACf,GAAIzD,QAAQjkI,UACR,KAAM,IAAIj5C,OAAM,mDAEpB,IAAqBu8C,eAAgBhhD,KAAKwmD,eAAerjD,QAAQw+K,QAAQmJ,MAEzE,OADAl+H,kBAAiB5sD,KAAKmrL,MAAOnqI,cAAeokI,cACrCzD,SAMXz0H,kBAAkBvsD,UAAUwC,QAI5B,SAAUw+K,SACN,MAAO3hL,MAAKwmD,eAAerjD,QAAQ,QAA6B2nL,QAMpE59H,kBAAkBvsD,UAAUq+C,OAI5B,SAAU35C,OACN,GAAqBqmL,UAAWl/H,mBAAmBxsD,KAAKmrL,MAAO9lL,MAC3DqmL,WACAvoI,SAASwS,YAAY+1H,WAO7Bx+H,kBAAkBvsD,UAAUirL,OAI5B,SAAUvmL,OACN,GAAqBq8C,MAAO8K,mBAAmBxsD,KAAKmrL,MAAO9lL,MAC3D,OAAOq8C,MAAO,GAAI0L,UAAS1L,MAAQ,MAEhCwL,qBASPE,SAAY,WACZ,QAASA,UAAS09H,OACd9qL,KAAK8qL,MAAQA,MACb9qL,KAAK6rL,kBAAoB,KACzB7rL,KAAK8rL,QAAU,KA0InB,MAxIAlsL,QAAOugB,eAAeitC,SAASzsD,UAAW,aACtC2f,IAGA,WAAc,MAAO4kC,iBAAgBllD,KAAK8qL,QAC1CzqK,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAeitC,SAASzsD,UAAW,WACtC2f,IAGA,WAAc,MAAOtgB,MAAK8qL,MAAMrnL,SAChC4c,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAeitC,SAASzsD,UAAW,aACtC2f,IAGA,WAAc,MAAoD,KAAzB,IAAnBtgB,KAAK8qL,MAAM/nI,QACjC1iC,YAAY,EACZD,cAAc,IAKlBgtC,SAASzsD,UAAUorL,aAGnB,WAAc1oI,wBAAwBrjD,KAAK8qL,QAI3C19H,SAASzsD,UAAUirL,OAGnB,WAAc5rL,KAAK8qL,MAAM/nI,QAAS,GAIlCqK,SAASzsD,UAAU44D,cAGnB,WACI,GAAqByyH,OAAQhsL,KAAK8qL,MAAMp8I,KAAKmlB,eACzCm4H,OAAMC,OACND,MAAMC,QAEV9oI,SAAS6R,mBAAmBh1D,KAAK8qL,OAC7BkB,MAAM/hL,KACN+hL,MAAM/hL,OAMdmjD,SAASzsD,UAAU64D,eAGnB,WAAcrW,SAASuR,mBAAmB10D,KAAK8qL,QAI/C19H,SAASzsD,UAAUurL,SAGnB,WAAclsL,KAAK8qL,MAAM/nI,OAAS,GAKlCqK,SAASzsD,UAAU++K,UAInB,SAAUljI,UACDx8C,KAAK8qL,MAAM92H,cACZh0D,KAAK8qL,MAAM92H,gBAEfh0D,KAAK8qL,MAAM92H,YAAYltD,KAAsB,WAKjDsmD,SAASzsD,UAAUo1D,QAGnB,WACQ/1D,KAAK8rL,QACL9rL,KAAK8rL,QAAQjK,WAAW7hL,MAEnBA,KAAK6rL,mBACV7rL,KAAK6rL,kBAAkBD,OAAO5rL,KAAK6rL,kBAAkB1oL,QAAQnD,OAEjEmjD,SAASwS,YAAY31D,KAAK8qL,QAK9B19H,SAASzsD,UAAUmhL,iBAGnB,WACI9hL,KAAK8rL,QAAU,KACfp/H,iBAAiB1sD,KAAK8qL,OACtB3nI,SAASyI,mBAAmB5rD,KAAK8qL,QAMrC19H,SAASzsD,UAAUihL,eAInB,SAAU3B,QACN,GAAIjgL,KAAK6rL,kBACL,KAAM,IAAIpnL,OAAM,oDAEpBzE,MAAK8rL,QAAU7L,QAMnB7yH,SAASzsD,UAAUyqL,yBAInB,SAAUe,OACN,GAAInsL,KAAK8rL,QACL,KAAM,IAAIrnL,OAAM,gEAEpBzE,MAAK6rL,kBAAoBM,OAEtB/+H,YAUPE,aAAgB,SAAU9iD,QAE1B,QAAS8iD,cAAa8+H,YAAahiI,MAC/B,GAAIloB,OAAQ13B,OAAOklC,KAAK1vC,OAASA,IAGjC,OAFAkiC,OAAMkqJ,YAAcA,YACpBlqJ,MAAMkoB,KAAOA,KACNloB,MAuBX,MA5BA7hC,WAAUitD,aAAc9iD,QAWxB8iD,aAAa3sD,UAAUwyD,mBAIvB,SAAU1vD,SACN,MAAO,IAAI2pD,UAASjK,SAASgQ,mBAAmBnzD,KAAKosL,YAAapsL,KAAKoqD,KAA4CpqD,KAAKoqD,KAAa,QAAW,SAAG3mD,WAEvJ7D,OAAOugB,eAAemtC,aAAa3sD,UAAW,cAC1C2f,IAGA,WACI,MAAO,IAAImvC,YAAW9N,cAAc3hD,KAAKosL,YAAapsL,KAAKoqD,KAAKjvB,WAAW+oB,gBAE/E7jC,YAAY,EACZD,cAAc,IAEXktC,cACT2mB,aASEzmB,UAAa,WACb,QAASA,WAAU9L,KAAMqF,OACrB/mD,KAAK0hD,KAAOA,KACZ1hD,KAAK+mD,MAAQA,MAiBjB,MAVAyG,WAAU7sD,UAAU2f,IAKpB,SAAU1a,MAAOkuC,mBACS,KAAlBA,gBAA4BA,cAAgBS,SAASC,mBACzD,IAAqB6Z,wBAAuBruD,KAAK+mD,OAA8D,IAAlC,SAAnB/mD,KAAK+mD,MAAMx8B,MACrE,OAAO44B,UAAS+L,WAAWlvD,KAAK0hD,KAAM1hD,KAAK+mD,MAAOsH,sBAAwB9jC,MAAO,EAAc3kB,MAAOA,MAAO68C,SAAUA,SAAS78C,QAAUkuC,gBAEvI0Z,aASPE,gBAAmB,WACnB,QAASA,iBAAgB1R,UACrBh8C,KAAKg8C,SAAWA,SA8RpB,MAxRA0R,iBAAgB/sD,UAAU0mD,kBAI1B,SAAUJ,gBACN,MAAOjnD,MAAKg8C,SAASqL,kBAAkBJ,iBAO3CyG,gBAAgB/sD,UAAUmmD,cAK1B,SAAU1e,OAAQikJ,kBACd,GAAIlzK,IAAKytC,eAAeylI,kBAAmBnlI,GAAK/tC,GAAG,GAAIva,KAAOua,GAAG,GAC5Cwc,GAAK31B,KAAKg8C,SAAS8K,cAAcloD,KAAMsoD,GAI5D,OAHI9e,SACApoC,KAAKg8C,SAASyK,YAAYre,OAAQzS,IAE/BA,IAMX+3B,gBAAgB/sD,UAAU2rL,eAI1B,SAAU54H,aAAe,MAAOA,cAKhChG,gBAAgB/sD,UAAU4rL,qBAI1B,SAAUrqF,eACN,GAAqByH,SAAU3pG,KAAKg8C,SAASmL,cAAc,GAI3D,OAHI+6C,gBACAliG,KAAKg8C,SAASyK,YAAYy7C,cAAeyH,SAEtCA,SAOXj8C,gBAAgB/sD,UAAUoyD,WAK1B,SAAUmvC,cAAe3+F,OACrB,GAAqB8b,MAAOrf,KAAKg8C,SAAS+W,WAAWxvD,MAIrD,OAHI2+F,gBACAliG,KAAKg8C,SAASyK,YAAYy7C,cAAe7iF,MAEtCA,MAOXquC,gBAAgB/sD,UAAU6rL,aAK1B,SAAUtqF,cAAet4F,OACrB,IAAK,GAAqBkB,GAAI,EAAGA,EAAIlB,MAAM3H,OAAQ6I,IAC/C9K,KAAKg8C,SAASyK,YAAYy7C,cAAet4F,MAAMkB,KAQvD4iD,gBAAgB/sD,UAAU8rL,gBAK1B,SAAUptK,KAAMqtK,eAGZ,IAAK,GAFgBxqF,eAAgBliG,KAAKg8C,SAASyD,WAAWpgC,MACzCgmC,YAAcrlD,KAAKg8C,SAASqJ,YAAYhmC,MACnCvU,EAAI,EAAGA,EAAI4hL,cAAczqL,OAAQ6I,IACvD9K,KAAKg8C,SAAS0K,aAAaw7C,cAAewqF,cAAc5hL,GAAIu6C,cAOpEqI,gBAAgB/sD,UAAUkhL,WAI1B,SAAU6K,eACN,IAAK,GAAqB5hL,GAAI,EAAGA,EAAI4hL,cAAczqL,OAAQ6I,IAAK,CAC5D,GAAqBuU,MAAOqtK,cAAc5hL,GACrBo3F,cAAgBliG,KAAKg8C,SAASyD,WAAWpgC,KAC9Drf,MAAKg8C,SAAS2K,YAAYu7C,cAAe7iF,QAQjDquC,gBAAgB/sD,UAAUg1D,YAK1B,SAAUjC,YAAai5H,cACnB,IAAK,GAAqB7hL,GAAI,EAAGA,EAAI6hL,aAAa1qL,OAAQ6I,IACnC9K,KAAKg8C,SAAqB,YAAE2wI,aAAa7hL,KASpE4iD,gBAAgB/sD,UAAUonD,OAM1B,SAAU7D,cAAetlD,KAAM49C,UAC3B,MAAOx8C,MAAKg8C,SAAS+L,OAAO7D,cAAetlD,KAAuB,WAQtE8uD,gBAAgB/sD,UAAUisL,aAM1B,SAAUh5K,OAAQhV,KAAM49C,UACpB,MAAOx8C,MAAKg8C,SAAS+L,OAAOn0C,OAAQhV,KAAuB,WAQ/D8uD,gBAAgB/sD,UAAU4oD,mBAM1B,SAAUrF,cAAe+9D,aAAcmoC,eACnCpqJ,KAAKg8C,SAASiO,YAAY/F,cAAe+9D,aAAcmoC,gBAQ3D18F,gBAAgB/sD,UAAUyoD,oBAM1B,SAAUlF,cAAemoI,iBAAkBQ,gBACvC,GAAI1zK,IAAKytC,eAAeylI,kBAAmBnlI,GAAK/tC,GAAG,GAAIva,KAAOua,GAAG,EAC3C,OAAlB0zK,eACA7sL,KAAKg8C,SAASuL,aAAarD,cAAetlD,KAAMiuL,eAAgB3lI,IAGhElnD,KAAKg8C,SAAS2N,gBAAgBzF,cAAetlD,KAAMsoD,KAS3DwG,gBAAgB/sD,UAAUmsL,oBAM1B,SAAU5oI,cAAe+9D,aAAcmoC,iBAOvC18F,gBAAgB/sD,UAAU0oD,gBAM1B,SAAUnF,cAAejvB,UAAW83J,OAC5BA,MACA/sL,KAAKg8C,SAAS4N,SAAS1F,cAAejvB,WAGtCj1B,KAAKg8C,SAAS6N,YAAY3F,cAAejvB,YASjDy4B,gBAAgB/sD,UAAU2oD,gBAM1B,SAAUpF,cAAe8oI,UAAWC,YACd,MAAdA,WACAjtL,KAAKg8C,SAAS+N,SAAS7F,cAAe8oI,UAAWC,YAGjDjtL,KAAKg8C,SAASgO,YAAY9F,cAAe8oI,YASjDt/H,gBAAgB/sD,UAAUusL,oBAM1B,SAAUhpI,cAAeipI,WAAYrrL,MACjC,cAAmCqrL,YAAYptL,MAAMmkD,cAAepiD,OAOxE4rD,gBAAgB/sD,UAAUysL,QAK1B,SAAUjkI,cAAe74C,MAAQtQ,KAAKg8C,SAASvc,SAAS0pB,cAAe74C,OAIvEo9C,gBAAgB/sD,UAAU0sL,QAG1B,WAAc,KAAM,IAAI5oL,OAAM,6CACvBipD,mBAYPI,aAAgB,WAChB,QAASA,cAAaw/H,YAAa7iI,QAAS01H,qBAAsB/1H,MAC9DpqD,KAAKstL,YAAcA,YACnBttL,KAAKyqD,QAAUA,QACfzqD,KAAKmgL,qBAAuBA,qBAC5BngL,KAAKoqD,KAAOA,KACZpqD,KAAKo/K,qBACLp/K,KAAKq/K,YAAa,EAClBn1H,aAAalqD,MA+DjB,MAxDA8tD,cAAantD,UAAU2f,IAKvB,SAAU1a,MAAOkuC,eAEb,WADsB,KAAlBA,gBAA4BA,cAAgBS,SAASC,oBAClDgW,mBAAmBxqD,MAAQ4F,MAAOA,MAAO68C,SAAUA,SAAS78C,OAAQ2kB,MAAO,GAAgBupB,gBAEtGl0C,OAAOugB,eAAe2tC,aAAantD,UAAW,YAC1C2f,IAGA,WAAc,MAAOtgB,MAAKsgB,IAAItgB,KAAKstL,cACnCjtK,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe2tC,aAAantD,UAAW,4BAC1C2f,IAGA,WAAc,MAAOtgB,MAAKsgB,IAAIuM,2BAC9BxM,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe2tC,aAAantD,UAAW,YAC1C2f,IAGA,WAAc,MAAOtgB,OACrBqgB,YAAY,EACZD,cAAc,IAKlB0tC,aAAantD,UAAUo1D,QAGvB,WACI,GAAI/1D,KAAKq/K,WACL,KAAM,IAAI56K,OAAM,iBAAmBkuC,YAAY3yC,KAAKorD,SAAS3qD,aAAe,+BAEhFT,MAAKq/K,YAAa,EAClBn0H,sBAAsBlrD,KAAM,QAC5BA,KAAKo/K,kBAAkBx4K,QAAQ,SAAUy5K,UAAY,MAAOA,eAMhEvyH,aAAantD,UAAU++K,UAIvB,SAAUljI,UAAYx8C,KAAKo/K,kBAAkBt4K,KAAK01C,WAC3CsR,gBAcPuB,mBAAqB5M,SAASs0D,UAC9BxnD,kBAAoB9M,SAASu/H,WAC7BxyH,mBAAqB/M,SAASgN,YAC9BC,yBAA2BjN,SAASyxB,kBACpCtkB,oBAAsBnN,SAASwxB,aAC/B7kB,0BAA4B3M,SAASyzD,mBACrCrmD,oBAAsBpN,SAASlO,UAC/ByZ,YAAc,GAAIpuD,QAoPlBqwD,yCAqmCAsE,YACAC,gBAAiB,EACjBM,eAAgB,EAChBqB,6BAA8B,EAC9BlB,eAAgB,EAChBmB,6BAA8B,EAC9BR,QAAS,EAEbrB,YAAWA,WAAWC,iBAAmB,kBACzCD,WAAWA,WAAWO,gBAAkB,iBACxCP,WAAWA,WAAW4B,8BAAgC,+BACtD5B,WAAWA,WAAWU,gBAAkB,iBACxCV,WAAWA,WAAW6B,8BAAgC,+BACtD7B,WAAWA,WAAWqB,SAAW;;;;;;;AAmKjC,GAAIc,cAAc,EA4JdsC,kBAAoB,GAAIzwC,KA6LxBiwC,aACA53D,OAAQ,EACR24D,cAAe,EACfC,eAAgB,EAChBzD,QAAS,EACTjS,YAAa,EAEjB0U,aAAYA,YAAY53D,QAAU,SAClC43D,YAAYA,YAAYe,eAAiB,gBACzCf,YAAYA,YAAYgB,gBAAkB,iBAC1ChB,YAAYA,YAAYzC,SAAW,UACnCyC,YAAYA,YAAY1U,aAAe,aACvC,IAAIiW,gBACAN,aACAC,kBA+3BAoL,eAjuBAvK,kBAAoB,WAuDpBtD,cAAiB,WACjB,QAASA,eAAcvV,KAAMvmB,WACzBn7B,KAAK0hD,KAAOA,KACZ1hD,KAAKm7B,UAAYA,UACA,MAAbA,YACAn7B,KAAKm7B,UAAYA,UAAY,GAEjCn7B,KAAK0lD,QAAUhE,KAAKmB,IAAIj5C,MAAMuxB,UAG9B,KAFA,GAAqB4rB,OAAQ/mD,KAAK0lD,QACb6nI,OAAS7rI,KACvBqF,OAAiD,IAAzB,EAAdA,MAAMx8B,QACnBw8B,MAA2BA,MAAa,MAE5C,KAAKA,MACD,MAAQA,OAASwmI,QACbxmI,MAA2B/C,aAAaupI,QACxCA,OAA4BA,OAAc,MAGlDvtL,MAAK+mD,MAAQA,MACb/mD,KAAKutL,OAASA,OAiJlB,MA/IA3tL,QAAOugB,eAAe82C,cAAct2D,UAAW,gBAC3C2f,IAGA,WAEI,MAAOqhC,eAAc3hD,KAAKutL,OAAQvtL,KAAK+mD,MAAM5rB,WAAW0oB,eAAiB7jD,KAAK0hD,MAElFrhC,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe82C,cAAct2D,UAAW,YAC3C2f,IAGA,WAAc,MAAOitC,gBAAevtD,KAAKutL,OAAQvtL,KAAK+mD,QACtD1mC,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe82C,cAAct2D,UAAW,aAC3C2f,IAGA,WAAc,MAAOtgB,MAAKwtL,aAAankK,WACvChJ,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe82C,cAAct2D,UAAW,WAC3C2f,IAGA,WAAc,MAAOtgB,MAAKwtL,aAAa/pL,SACvC4c,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe82C,cAAct2D,UAAW,kBAC3C2f,IAGA,WACI,GAAqBouE,UACrB,IAAI1uF,KAAK+mD,MACL,IAAK,GAAqBj8C,GAAI9K,KAAK+mD,MAAM5rB,UAAY,EAAGrwB,GAAK9K,KAAK+mD,MAAM5rB,UAAYn7B,KAAK+mD,MAAMnB,WAAY96C,IAAK,CAC5G,GAAqB2iL,UAAWztL,KAAKutL,OAAO1qI,IAAIj5C,MAAMkB,EACjC,OAAjB2iL,SAASljK,OACTmkE,OAAO5nF,KAAwB2mL,SAAkB,SAAE7nL,OAEvDkF,GAAK2iL,SAAS7nI,WAGtB,MAAO8oC,SAEXruE,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe82C,cAAct2D,UAAW,cAC3C2f,IAGA,WACI,GAAqBs6C,cACrB,IAAI56D,KAAK+mD,MAAO,CACZ4T,kBAAkB36D,KAAKutL,OAAQvtL,KAAK+mD,MAAO6T,WAC3C,KAAK,GAAqB9vD,GAAI9K,KAAK+mD,MAAM5rB,UAAY,EAAGrwB,GAAK9K,KAAK+mD,MAAM5rB,UAAYn7B,KAAK+mD,MAAMnB,WAAY96C,IAAK,CAC5G,GAAqB2iL,UAAWztL,KAAKutL,OAAO1qI,IAAIj5C,MAAMkB,EACjC,OAAjB2iL,SAASljK,OACTowC,kBAAkB36D,KAAKutL,OAAQE,SAAU7yH,YAE7C9vD,GAAK2iL,SAAS7nI,YAGtB,MAAOgV,aAEXv6C,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe82C,cAAct2D,UAAW,0BAC3C2f,IAGA,WACI,GAAqB4oC,QAASwR,gBAAgB16D,KAAKwtL,aACnD,OAAOtkI,QAASA,OAAOhF,kBAAgB//C,IAE3Ckc,YAAY,EACZD,cAAc,IAElBxgB,OAAOugB,eAAe82C,cAAct2D,UAAW,cAC3C2f,IAGA,WACI,MAA4B,GAArBtgB,KAAK0lD,QAAQn7B,MAA2B05B,WAAWjkD,KAAK0hD,KAAM1hD,KAAK0lD,SACtEzB,WAAWjkD,KAAKutL,OAAQvtL,KAAK+mD,QAErC1mC,YAAY,EACZD,cAAc,IAOlB62C,cAAct2D,UAAU2hD,SAKxB,SAAU3d,SAEN,IAAK,GADDziC,WACKH,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCG,OAAOH,GAAK,GAAKC,UAAUD,GAE/B,IAAqB2rL,YACAC,YACI,GAArB3tL,KAAK0lD,QAAQn7B,OACbmjK,WAAa1tL,KAAK0hD,KAAKmB,IACvB8qI,aAAe3tL,KAAK0lD,QAAQvqB,YAG5BuyJ,WAAa1tL,KAAKutL,OAAO1qI,IACzB8qI,aAAe3tL,KAAK+mD,MAAM5rB,UAI9B,IAAqBs/B,iBAAkBD,mBAAmBkzH,WAAYC,cACjDC,qBAAuB,EACvBC,WAAa,WAE9B,MADAD,uBACIA,sBAAwBnzH,iBAChBthD,GAAKwrB,QAAQngC,OAAOukC,KAAKhpC,MAAMoZ,IAAKwrB,SAASh8B,OAAOzG,SAGrD+iD,IAEX,IAAI9rC,IAENu0K,YAAmB,QAAEG,YACnBD,oBAAsBnzH,kBACtB91B,QAAQngC,MAAM,qEACdmgC,QAAQngC,MAAMzE,MAAM4kC,QAASziC,UAG9B+0D,iBAyEPmB,sBAAyB,WACzB,QAASA,uBAAsBpc,UAC3Bh8C,KAAKg8C,SAAWA,SAiDpB,MA1CAoc,uBAAsBz3D,UAAUmzD,eAKhC,SAAU57C,QAAS41K,YACf,MAAO,IAAIC,gBAAe/tL,KAAKg8C,SAAS8X,eAAe57C,QAAS41K,cAKpE11H,sBAAsBz3D,UAAUsrL,MAGhC,WACQjsL,KAAKg8C,SAASiwI,OACdjsL,KAAKg8C,SAASiwI,SAMtB7zH,sBAAsBz3D,UAAUsJ,IAGhC,WACQjK,KAAKg8C,SAAS/xC,KACdjK,KAAKg8C,SAAS/xC,OAMtBmuD,sBAAsBz3D,UAAUqtL,kBAGhC,WACI,MAAIhuL,MAAKg8C,SAASgyI,kBACPhuL,KAAKg8C,SAASgyI,oBAElBj5G,QAAQ9oE,QAAQ,OAEpBmsD,yBAEP21H,eAAkB,WAClB,QAASA,gBAAe/xI,UACpBh8C,KAAKg8C,SAAWA,SAqVpB,MAnVAp8C,QAAOugB,eAAe4tK,eAAeptL,UAAW,QAC5C2f,IAGA,WAAc,MAAOtgB,MAAKg8C,SAASmO,MACnC9pC,YAAY,EACZD,cAAc,IAMlB2tK,eAAeptL,UAAUk1D,YAIzB,SAAUx2C,MACNygC,yBAA4CJ,aAAargC,OACrDrf,KAAKg8C,SAAS6Z,aACd71D,KAAKg8C,SAAS6Z,YAAYx2C,OAMlC0uK,eAAeptL,UAAUo1D,QAGzB,WAAc/1D,KAAKg8C,SAAS+Z,WAM5Bg4H,eAAeptL,UAAUmmD,cAKzB,SAAUloD,KAAMqvL,WACZ,GAAqBt4J,IAAK31B,KAAKg8C,SAAS8K,cAAcloD,KAAMqvL,WACvCC,SAAWhzH,wBAChC,IAAIgzH,SAAU,CACV,GAAqBC,SAAU,GAAI5uI,cAAa5pB,GAAI,KAAMu4J,SAC1DC,SAAQvvL,KAAOA,KACfihD,eAAesuI,SAEnB,MAAOx4J,KAMXo4J,eAAeptL,UAAUwmD,cAIzB,SAAU5jD,OACN,GAAqBomG,SAAU3pG,KAAKg8C,SAASmL,cAAc5jD,OACtC2qL,SAAWhzH,wBAIhC,OAHIgzH,WACAruI,eAAe,GAAIyiI,WAAU34E,QAAS,KAAMukF,WAEzCvkF,SAMXokF,eAAeptL,UAAUoyD,WAIzB,SAAUxvD,OACN,GAAqB+M,MAAOtQ,KAAKg8C,SAAS+W,WAAWxvD,OAChC2qL,SAAWhzH,wBAIhC,OAHIgzH,WACAruI,eAAe,GAAIyiI,WAAUhyK,KAAM,KAAM49K,WAEtC59K,MAOXy9K,eAAeptL,UAAU8lD,YAKzB,SAAUre,OAAQ66I,UACd,GAAqBkL,SAAUzuI,aAAatX,QACvBgmJ,aAAe1uI,aAAaujI,SAC7CkL,UAAWC,cAAgBD,kBAAmB5uI,eAC9C4uI,QAAQ3L,SAAS4L,cAErBpuL,KAAKg8C,SAASyK,YAAYre,OAAQ66I,WAQtC8K,eAAeptL,UAAU+lD,aAMzB,SAAUte,OAAQ66I,SAAUD,UACxB,GAAqBmL,SAAUzuI,aAAatX,QACvBgmJ,aAAe1uI,aAAaujI,UAC5BoL,WAAgC3uI,aAAasjI,SAC9DmL,UAAWC,cAAgBD,kBAAmB5uI,eAC9C4uI,QAAQznI,aAAa2nI,WAAYD,cAErCpuL,KAAKg8C,SAAS0K,aAAate,OAAQ66I,SAAUD,WAOjD+K,eAAeptL,UAAUgmD,YAKzB,SAAUve,OAAQkmJ,UACd,GAAqBH,SAAUzuI,aAAatX,QACvBgmJ,aAAe1uI,aAAa4uI,SAC7CH,UAAWC,cAAgBD,kBAAmB5uI,eAC9C4uI,QAAQxnI,YAAYynI,cAExBpuL,KAAKg8C,SAAS2K,YAAYve,OAAQkmJ,WAMtCP,eAAeptL,UAAU0mD,kBAIzB,SAAUJ,gBACN,GAAqBtxB,IAAK31B,KAAKg8C,SAASqL,kBAAkBJ,gBACrCinI,SAAWhzH,wBAIhC,OAHIgzH,WACAruI,eAAe,GAAIN,cAAa5pB,GAAI,KAAMu4J,WAEvCv4J,IASXo4J,eAAeptL,UAAU4mD,aAOzB,SAAU5xB,GAAI/2B,KAAM2E,MAAO0qL,WACvB,GAAqBE,SAAUzuI,aAAa/pB,GAC5C,IAAIw4J,SAAWA,kBAAmB5uI,cAAc,CAC5C,GAAqB5yC,UAAWshL,UAAYA,UAAY,IAAMrvL,KAAOA,IACrEuvL,SAAQ35J,WAAW7nB,UAAYpJ,MAEnCvD,KAAKg8C,SAASuL,aAAa5xB,GAAI/2B,KAAM2E,MAAO0qL,YAQhDF,eAAeptL,UAAUgpD,gBAMzB,SAAUh0B,GAAI/2B,KAAMqvL,WAChB,GAAqBE,SAAUzuI,aAAa/pB,GAC5C,IAAIw4J,SAAWA,kBAAmB5uI,cAAc,CAC5C,GAAqB5yC,UAAWshL,UAAYA,UAAY,IAAMrvL,KAAOA,IACrEuvL,SAAQ35J,WAAW7nB,UAAY,KAEnC3M,KAAKg8C,SAAS2N,gBAAgBh0B,GAAI/2B,KAAMqvL,YAO5CF,eAAeptL,UAAUipD,SAKzB,SAAUj0B,GAAI/2B,MACV,GAAqBuvL,SAAUzuI,aAAa/pB,GACxCw4J,UAAWA,kBAAmB5uI,gBAC9B4uI,QAAQxL,QAAQ/jL,OAAQ,GAE5BoB,KAAKg8C,SAAS4N,SAASj0B,GAAI/2B,OAO/BmvL,eAAeptL,UAAUkpD,YAKzB,SAAUl0B,GAAI/2B,MACV,GAAqBuvL,SAAUzuI,aAAa/pB,GACxCw4J,UAAWA,kBAAmB5uI,gBAC9B4uI,QAAQxL,QAAQ/jL,OAAQ,GAE5BoB,KAAKg8C,SAAS6N,YAAYl0B,GAAI/2B,OASlCmvL,eAAeptL,UAAUopD,SAOzB,SAAUp0B,GAAIslD,MAAO13E,MAAOgnB,OACxB,GAAqB4jK,SAAUzuI,aAAa/pB,GACxCw4J,UAAWA,kBAAmB5uI,gBAC9B4uI,QAAQj3G,OAAO+D,OAAS13E,OAE5BvD,KAAKg8C,SAAS+N,SAASp0B,GAAIslD,MAAO13E,MAAOgnB,QAQ7CwjK,eAAeptL,UAAUqpD,YAMzB,SAAUr0B,GAAIslD,MAAO1wD,OACjB,GAAqB4jK,SAAUzuI,aAAa/pB,GACxCw4J,UAAWA,kBAAmB5uI,gBAC9B4uI,QAAQj3G,OAAO+D,OAAS,MAE5Bj7E,KAAKg8C,SAASgO,YAAYr0B,GAAIslD,MAAO1wD,QAQzCwjK,eAAeptL,UAAUspD,YAMzB,SAAUt0B,GAAI/2B,KAAM2E,OAChB,GAAqB4qL,SAAUzuI,aAAa/pB,GACxCw4J,UAAWA,kBAAmB5uI,gBAC9B4uI,QAAQtyI,WAAWj9C,MAAQ2E,OAE/BvD,KAAKg8C,SAASiO,YAAYt0B,GAAI/2B,KAAM2E,QAQxCwqL,eAAeptL,UAAUonD,OAMzB,SAAUn0C,OAAQ+vC,UAAWnH,UACzB,GAAsB,gBAAX5oC,QAAqB,CAC5B,GAAqBu6K,SAAUzuI,aAAa9rC,OACxCu6K,UACAA,QAAQ1L,UAAU37K,KAAK,GAAIs7K,eAAcz+H,UAAWnH,WAG5D,MAAOx8C,MAAKg8C,SAAS+L,OAAOn0C,OAAQ+vC,UAAWnH,WAMnDuxI,eAAeptL,UAAU8+C,WAIzB,SAAUpgC,MAAQ,MAAOrf,MAAKg8C,SAASyD,WAAWpgC,OAKlD0uK,eAAeptL,UAAU0kD,YAIzB,SAAUhmC,MAAQ,MAAOrf,MAAKg8C,SAASqJ,YAAYhmC,OAMnD0uK,eAAeptL,UAAU8+B,SAKzB,SAAUpgB,KAAM9b,OAAS,MAAOvD,MAAKg8C,SAASvc,SAASpgB,KAAM9b,QACtDwqL,mBAGa,SAAUvjL,QAE9B,QAAS+jL,kBAAiB3gI,WAAYuyH,qBAAsBqO,qBACxD,GAAItsJ,OAGJ13B,OAAOklC,KAAK1vC,OAASA,IAIrB,OAHAkiC,OAAM0rB,WAAaA,WACnB1rB,MAAMi+I,qBAAuBA,qBAC7Bj+I,MAAMssJ,oBAAsBA,oBACrBtsJ,MATX7hC,UAAUkuL,iBAAkB/jL,QAe5B+jL,iBAAiB5tL,UAAUC,OAI3B,SAAUi4D,gBACNpC,sBACA,IAAqB5T,KAAMkC,kBAAkB/kD,KAAKwuL,oBAClD,OAAOrrI,UAASwK,kBAAkB3tD,KAAK4tD,WAAYiL,gBAAkBtkB,SAAS0hI,KAAMj2K,KAAKmgL,qBAAsBt9H,OAGrHuzD,kBAoBF,SAAWtxC,gBACPA,eAAeA,eAAsB,MAAI,GAAK,QAC9CA,eAAeA,eAAwB,QAAI,GAAK,WACjDA,iBAAmBA;;;;;;;AAuTtB,GAAI5iE,SACA,KACA,QACA,QACC,MAAO,QACP,OAAQ,SAAU,OAAQ,WAC3B,UACC,WACA,UACA,YACA,OAAQ,MAAO,WACf,MAAO,QACR,SACC,OAAQ,WAAY,WAAY,QAAS,SAAU,QAAS,OAAQ,SAAU,QAAS,WACvF,YACA,aACA,aACA,aACA,aACA,SAAU,SAAU,UACpB,OAAQ,QAAS,QAAS,SAAU,MAAO,MAAO,SAAU,MAAO,WACnE,OAAQ,SAAU,OAAQ,OAAQ,QAClC,OAAQ,SAAU,QAAS,UAAW,SACtC,MAAO,SAAU,SAAU,YAC5B,UACC,MAAO,MAAO,WAAY,aAC1B,UAEDg8D,SACE70D,GAAI,IAEFolL,QAAS,EACTC,WAAY,EACZC,YAAa,EACbC,UAAW,EACXC,YAAa,EACbC,YAAa,EACbC,WAAY,EACZC,WAAY,EACZC,UAAW,EACXC,QAAS,IAEXttG,KAAM,EAAGh5D,IAAK,IACdumK,OAAQ,EAAGC,SAAU,IACrBxwL,KAAM,IACNywL,KAAM,IACNjpL,KAAM,IACNkpL,IAAK,IACLt6D,SAAU,IACVu6D,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRlhD,IAAK,IACLmhD,QAAS,EAAGC,OAAQ,IACpBC,QAAS,IACTC,QAAS,EAAGC,QAAS,EAAGC,SAAU,EAAG5lI,KAAM,EAAG6lI,SAAU,EAAGC,QAAS,EAAGC,QAAS,IAChFhqF,MAAO,IACP3iG,MAAO,IACP4sL,KAAM,IACNC,SAAU,IACVC,OAAQ,IACRC,MAAO,EAAGC,OAAQ,IAClB37D,IAAK,KAELx+F,OAAQ,EAAGsR,OAAQ,GAAI8oJ,QAAS,EAAGC,SAAU,EAAGC,QAAS,EAAGC,iBAAkB,IAC9EC,UAAW,IACXC,SAAU,IACVC,MAAO,IACPC,SAAU,KACVh8D,SAAU,GAAIi8D,SAAU,IACxBC,UAAW,IACXtuI,KAAM,EAAGuuI,SAAU,KACnBC,SAAU,IACVC,MAAO,IACPC,SAAU,KACVjrL,KAAM,GAAIkrL,QAAS,GAAI3uI,KAAM,EAAG4uI,UAAW,IAC3CC,KAAM,EAAGC,KAAM,IACfrrL,KAAM,KACNsrL,OAAQ,IACR3zJ,QAAS,EAAG4zJ,OAAQ,EAAGC,MAAO,GAAIC,MAAO,GAAIC,YAAa,EAAGC,YAAa,EAAGC,aAAc,IAC3FC,MAAO,GAAIp9F,KAAM,EAAGq9F,QAAS,EAAGC,OAAQ,KACxCznL,KAAM,IACN0nL,KAAM,EAAGC,KAAM,EAAGC,QAAS,GAAI73I,MAAO,GAAI83I,QAAS,EAAGC,QAAS,IAC/DC,QAAS,IACTC,aAAc,EAAG9zL,KAAM,EAAGmxB,QAAS,EAAG4iK,OAAQ,IAC9Ch+D,MAAO,EAAG15C,MAAO,IACjB23G,SAAU,EAAGC,IAAK,EAAGC,IAAK,IAC1BC,MAAO,IACPC,MAAO,GAAIpvI,MAAO,EAAGgxE,IAAK,IAE5Bz4D,UACA6rC,IAAK,EAAG,EAAG,EAAG,GAAI,IAClBhB,GAAI,EAAG,EAAG,EAAG,GAAI,IACjBV,GAAI,EAAG,EAAG,EAAG,GAAI,IACjB2sF,KAAM,EAAG,EAAG,EAAG,GAAI,IACnB1rF,OAAQ,EAAG,EAAG,EAAG,GAAI,IACrBf,IAAK,EAAG,EAAG,EAAG,GAAI,IAClB0sF,QAAS,EAAG,EAAG,EAAG,GAAI,IACtBC,KAAM,EAAG,EAAG,EAAG,GAAI,IACnBC,MAAO,EAAG,EAAG,EAAG,GAAI,IACpBC,MAAO,EAAG,EAAG,EAAG,GAAI,IACpBC,KAAM,EAAG,EAAG,EAAG,GAAI,IACnBC,KAAM,EAAG,EAAG,EAAG,GAAI,IACnBC,MAAO,EAAG,EAAG,EAAG,GAAI,IACpBC,MAAO,EAAG,EAAG,EAAG,GAAI,IACpBC,SAAU,EAAG,EAAG,EAAG,GAAI,IACvBlsF,KAAM,EAAG,EAAG,EAAG,GAAI,IACnBC,KAAM,EAAG,EAAG,EAAG,GAAI,IACnBksF,MAAO,EAAG,EAAG,EAAG,GAAI,IACpBC,KAAM,EAAG,EAAG,GAAI,IAChBrtF,IAAK,EAAG,GAAI,IACZstF,MAAO,EAAG,EAAG,EAAG,EAAG,GAAI,IACvBC,SAAU,EAAG,EAAG,EAAG,GAAI,IACvBC,KAAM,EAAG,EAAG,EAAG,GAAI,IACnB1tF,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjD2tF,KAAM,EAAG,EAAG,EAAG,EAAG,GAAI,IACtBC,MAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7C/sF,MAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IACrCgtF,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjDC,QAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/CC,OAAQ,EAAG,EAAG,EAAG,GAAI,IACrBrtF,IAAK,EAAG,EAAG,EAAG,GAAI,IAClBK,GAAI,EAAG,EAAG,EAAG,GAAI,IACjBX,IAAK,EAAG,EAAG,EAAG,GAAI,IAClBC,IAAK,EAAG,EAAG,EAAG,GAAI,IAClBC,IAAK,EAAG,EAAG,EAAG,GAAI,IAClBC,IAAK,EAAG,EAAG,EAAG,GAAI,IAClBC,IAAK,EAAG,EAAG,EAAG,GAAI,IAClBC,IAAK,EAAG,EAAG,EAAG,GAAI,IAClButF,KAAM,EAAG,EAAG,EAAG,GAAI,IACnBhtF,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,IACrBitF,YAAa,EAAG,EAAG,EAAG,GAAI,GAAI,IAC9BC,KAAM,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAC3BC,KAAM,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAC3BC,IAAK,EAAG,EAAG,EAAG,GAAI,IAClBC,IAAK,EAAG,EAAG,EAAG,GAAI,IAClBC,IAAK,EAAG,EAAG,EAAG,GAAI,IAClBxtF,IAAK,EAAG,EAAG,EAAG,GAAI,IAClBe,IAAK,EAAG,EAAG,EAAG,GAAI,IAClBjB,IAAK,EAAG,EAAG,EAAG,GAAI,IAClB2tF,MAAO,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAC/BC,OAAQ,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IACjCC,OAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC1EC,QAAS,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5CC,UAAW,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAChCC,QAAS,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IACtCC,UAAW,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACtDC,UAAW,EAAG,EAAG,EAAG,GAAI,IACxBC,QAAS,EAAG,EAAG,EAAG,GAAI,GAAI,IAC1BC,QAAS,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAChDC,OAAQ,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAC7BC,SAAU,EAAG,EAAG,EAAG,GAAI,IACvBC,UAAW,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IACpCC,KAAM,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAC/B3tF,OAAQ,EAAG,EAAG,EAAG,GAAI,GAAI,IACzBJ,OAAQ,EAAG,EAAG,EAAG,GAAI,GAAI,IACzBE,OAAQ,EAAG,EAAG,EAAG,GAAI,GAAI,IACzBG,IAAK,EAAG,EAAG,EAAG,GAAI,GAAI,IACtBF,IAAK,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAC1BF,IAAK,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAC1B+tF,MAAO,EAAG,IACVC,OAAQ,GACRC,MAAO,GACPC,MAAO,EAAG,IACVznL,OAAQ,EAAG,EAAG,EAAG,IACjBE,QAAS,EAAG,GAAI,GAAI,IACpBwnL,UAAW,EAAG,EAAG,EAAG,GAAI,IACxB9kH,MAAO,IAEP3S,mBAAqB,EAAG,EAAG,EAAG,GA0B9B03H,QACA,iYAGA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC,MAAQ,QACRC,QAAU,UACVC,OAAS,SACTC,OAAS,SACThC,OAAS,SACT51H,kBAAqB,WACrB,QAASA,qBACL,GAAIr8B,OAAQliC,IACZA,MAAK21H,UACLogE,OAAOnvL,QAAQ,SAAUsuH,aACrB,GAAIn9G,OAAQm9G,YAAY3rH,MAAM,KAC1BsyC,WAAa9jC,MAAM,GAAGxO,MAAM,KAC5B6sL,WAAar+K,MAAM,GAAK,KAAKxO,MAAM,KACnCu5B,SAAWszJ,UAAU,GACrBhwL,OACJ08B,UAASv5B,MAAM,KAAK3C,QAAQ,SAAU+Y,KAAO,MAAOuiB,OAAMyzF,OAAOh2G,IAAInS,eAAiBpH,MACtF,IAAIkvH,WAAY8gE,UAAU,GACtB7gE,UAAYD,WAAapzF,MAAMyzF,OAAOL,UAAU9nH,cACpD,IAAI+nH,UACA,IAAK,GAAIvhH,O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","file":"/home/travis/build/angular/angular/dist/packages-dist/language-service/bundles/language-service.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0-rc.0-fbc9537\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nvar $reflect = {defineMetadata: function() {}, getOwnMetadata: function(){}};\n((typeof global !== 'undefined' && global)||{})['Reflect'] = $reflect;\nvar $deferred, $resolved, $provided;\nfunction $getModule(name) { return $provided[name] || require(name); }\nfunction define(modules, cb) { $deferred = { modules: modules, cb: cb }; }\nmodule.exports = function(provided) {\n  if ($resolved) return $resolved;\n  var result = {};\n  $provided = Object.assign({'reflect-metadata': $reflect}, provided || {}, { exports: result });\n  $deferred.cb.apply(this, $deferred.modules.map($getModule));\n  $resolved = result;\n  return result;\n}\n\ndefine(['exports', 'fs', 'path', 'typescript'], function (exports, fs, path, ts) { 'use strict';\n\nvar fs__default = 'default' in fs ? fs['default'] : fs;\nvar path__default = 'default' in path ? path['default'] : path;\nvar ts__default = 'default' in ts ? ts['default'] : ts;\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.0.0-rc.0-fbc9537\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createInjectable = makeMetadataFactory('Injectable');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateInjectable: createInjectable,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION$1 = new Version('5.0.0-rc.0-fbc9537');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CompilerConfig = (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nvar CompileAnimationEntryMetadata = (function () {\n    function CompileAnimationEntryMetadata(name, definitions) {\n        if (name === void 0) { name = null; }\n        if (definitions === void 0) { definitions = null; }\n        this.name = name;\n        this.definitions = definitions;\n    }\n    return CompileAnimationEntryMetadata;\n}());\n/**\n * @abstract\n */\nvar CompileAnimationStateMetadata = (function () {\n    function CompileAnimationStateMetadata() {\n    }\n    return CompileAnimationStateMetadata;\n}());\nvar CompileAnimationStateDeclarationMetadata = (function (_super) {\n    __extends(CompileAnimationStateDeclarationMetadata, _super);\n    function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n        var _this = _super.call(this) || this;\n        _this.stateNameExpr = stateNameExpr;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStateDeclarationMetadata;\n}(CompileAnimationStateMetadata));\nvar CompileAnimationStateTransitionMetadata = (function (_super) {\n    __extends(CompileAnimationStateTransitionMetadata, _super);\n    function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n        var _this = _super.call(this) || this;\n        _this.stateChangeExpr = stateChangeExpr;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationStateTransitionMetadata;\n}(CompileAnimationStateMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationMetadata = (function () {\n    function CompileAnimationMetadata() {\n    }\n    return CompileAnimationMetadata;\n}());\nvar CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationKeyframesSequenceMetadata, _super);\n    function CompileAnimationKeyframesSequenceMetadata(steps) {\n        if (steps === void 0) { steps = []; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationKeyframesSequenceMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationStyleMetadata = (function (_super) {\n    __extends(CompileAnimationStyleMetadata, _super);\n    function CompileAnimationStyleMetadata(offset, styles) {\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.offset = offset;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStyleMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationAnimateMetadata = (function (_super) {\n    __extends(CompileAnimationAnimateMetadata, _super);\n    function CompileAnimationAnimateMetadata(timings, styles) {\n        if (timings === void 0) { timings = 0; }\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationAnimateMetadata;\n}(CompileAnimationMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationWithStepsMetadata = (function (_super) {\n    __extends(CompileAnimationWithStepsMetadata, _super);\n    function CompileAnimationWithStepsMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationWithStepsMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationSequenceMetadata, _super);\n    function CompileAnimationSequenceMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationSequenceMetadata;\n}(CompileAnimationWithStepsMetadata));\nvar CompileAnimationGroupMetadata = (function (_super) {\n    __extends(CompileAnimationGroupMetadata, _super);\n    function CompileAnimationGroupMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationGroupMetadata;\n}(CompileAnimationWithStepsMetadata));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten$1(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            animations: this.animations.map(function (anim) { return anim.name; }),\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten$1(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten$1(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction sourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    // always prepend ng:// to make angular resources easy to find and not clobber\n    // user resources.\n    return sourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return sourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return sourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return sourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    function AstPath(path$$1, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path$$1;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf$1$1(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf$1$1(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path$$1 = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf$1$1(ast);\n            if (span.start <= position && position < span.end) {\n                path$$1.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path$$1, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar StyleWithImports = (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ParserError = (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar Message = (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return /** @type {?} */ ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path$$1, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path$$1.endsWith('.d.ts')) {\n        return [path$$1.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path$$1.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path$$1.substring(0, lastDot), path$$1.substring(lastDot)];\n    }\n    return [path$$1, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CORE = '@angular/core';\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (sourceFilePath, genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(sourceFilePath, ' ').addMapping(0, sourceFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    function (srcFilePath, genFilePath, stmts, preamble, emitSourceMaps, referenceFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (srcFilePath, genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(srcFilePath, genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN$1 = 'boolean';\nvar NUMBER$1 = 'number';\nvar STRING$1 = 'string';\nvar OBJECT$1 = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA$1 = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA$1.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN$1;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER$1;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT$1;\n                            break;\n                        default:\n                            type[property] = STRING$1;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX$1 = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX$1)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX$1.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector$1(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector$1(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return /** @type {?} */ ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector$1(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector$1(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (component, template, usedPipes, externalReferenceVars) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        return visitor.build();\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar ViewBuilder = (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        var /** @type {?} */ viewName = \"_View_\" + this.component.name + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE :\n            /** @type {?} */ ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(sourceUrl(file.srcFileUrl), file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                    if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                        importAs = symbol.name + \"_\" + index;\n                        exportAs.push({ symbol: symbol, exportAs: importAs });\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    function ForJitSerializer(outputCtx, symbolResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    function (exportAs) {\n        var _this = this;\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata, isLibrary = _a.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                modSummary.modules.forEach(function (mod) { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(_this.outputCtx, summary.type.reference, _this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        });\n        exportAs.forEach(function (entry) {\n            var /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                var /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(symbol)).toDeclStmt(null, [\n                    StmtModifier.Exported\n                ]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { moduleName: data.moduleName, summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(file.fileName, true)[1];\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw new Error(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        return Promise.all(loadingPromises).then(function (_) { return mergeAndValidateNgFiles(files); });\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        return mergeAndValidateNgFiles(files);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.declaredDirectives.map(function (d) { return d.reference; }).concat(ngModuleMeta.declaredPipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                if (_this._host.isSourceFile(ref.filePath)) {\n                    externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n                }\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    _this._createTypeCheckBlock(outputCtx, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(compMeta, parsedTemplate, usedPipes, externalReferenceVars));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten$1(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._symbolResolver.fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._symbolResolver.fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    injectables.push(symbol);\n                }\n                else {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) {\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n        this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path$$1) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path$$1);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1, references);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyInContext(context, item.expression, depth, 0);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyInContext(context, expression['expression'], depth, 0);\n                                var /** @type {?} */ index = simplifyInContext(context, expression['index'], depth, 0);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1, references);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1, references);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name_1 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_1);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions\n                                            .map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyInContext(context, value, depth, references + 1);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value) {\n            try {\n                return simplifyInContext(context, value, 0, 0);\n            }\n            catch (/** @type {?} */ e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n            simplifyInContext(context, value, 0, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = new Error(message);\n    (/** @type {?} */ (result)).fileName = fileName;\n    (/** @type {?} */ (result)).line = line;\n    (/** @type {?} */ (result)).column = column;\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ResolvedStaticSymbol = (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.fileNameToModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this.summaryResolver.getKnownModuleName(importedFilePath) ||\n            this.knownFileNameToModuleNames.get(importedFilePath) ||\n            this.host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name_1);\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path$$1) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path$$1);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? \" relative to $ {\\n            containingFile\\n          } \" : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) {\n                _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n            });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl$$1, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl$$1;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl$$1, sourceUrl$$1, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl$$1, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl$$1, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl$$1, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl$$1, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @param {?} fn\n * @param {?=} out\n * @param {?=} seen\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out, seen) {\n    if (out === void 0) { out = []; }\n    if (seen === void 0) { seen = new Set(); }\n    if (seen.has(fn$$1)) {\n        return out;\n    }\n    seen.add(fn$$1);\n    var /** @type {?} */ summaries = fn$$1();\n    for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n        var /** @type {?} */ entry = summaries[i];\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out, seen);\n        }\n        else {\n            out.push(entry);\n        }\n    }\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path$$1 = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path$$1 = path$$1.replace(/^\\/+/, '');\n            return prefix + \"/\" + path$$1;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path$$1) {\n    if (path$$1 == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path$$1[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path$$1[path$$1.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path$$1.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path$$1 = parts[_ComponentIndex.Path];\n    path$$1 = path$$1 == null ? '' : _removeDotSegments(path$$1);\n    parts[_ComponentIndex.Path] = path$$1;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path$$1, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path$$1 = baseParts[_ComponentIndex.Path];\n    if (path$$1 == null)\n        path$$1 = '/';\n    var /** @type {?} */ index = path$$1.lastIndexOf('/');\n    path$$1 = path$$1.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path$$1;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\n\n\n\n\nvar compiler = Object.freeze({\n\tcore: core,\n\tCompilerConfig: CompilerConfig,\n\tpreserveWhitespacesDefault: preserveWhitespacesDefault,\n\tIdentifiers: Identifiers,\n\tJitCompiler: JitCompiler,\n\tDirectiveResolver: DirectiveResolver,\n\tPipeResolver: PipeResolver,\n\tNgModuleResolver: NgModuleResolver,\n\tDEFAULT_INTERPOLATION_CONFIG: DEFAULT_INTERPOLATION_CONFIG,\n\tInterpolationConfig: InterpolationConfig,\n\tNgModuleCompiler: NgModuleCompiler,\n\tAssertNotNull: AssertNotNull,\n\tBinaryOperator: BinaryOperator,\n\tBinaryOperatorExpr: BinaryOperatorExpr,\n\tBuiltinMethod: BuiltinMethod,\n\tBuiltinVar: BuiltinVar,\n\tCastExpr: CastExpr,\n\tClassStmt: ClassStmt,\n\tCommaExpr: CommaExpr,\n\tCommentStmt: CommentStmt,\n\tConditionalExpr: ConditionalExpr,\n\tDeclareFunctionStmt: DeclareFunctionStmt,\n\tDeclareVarStmt: DeclareVarStmt,\n\tExpressionStatement: ExpressionStatement,\n\tExternalExpr: ExternalExpr,\n\tExternalReference: ExternalReference,\n\tFunctionExpr: FunctionExpr,\n\tIfStmt: IfStmt,\n\tInstantiateExpr: InstantiateExpr,\n\tInvokeFunctionExpr: InvokeFunctionExpr,\n\tInvokeMethodExpr: InvokeMethodExpr,\n\tLiteralArrayExpr: LiteralArrayExpr,\n\tLiteralExpr: LiteralExpr,\n\tLiteralMapExpr: LiteralMapExpr,\n\tNotExpr: NotExpr,\n\tReadKeyExpr: ReadKeyExpr,\n\tReadPropExpr: ReadPropExpr,\n\tReadVarExpr: ReadVarExpr,\n\tReturnStatement: ReturnStatement,\n\tThrowStmt: ThrowStmt,\n\tTryCatchStmt: TryCatchStmt,\n\tWriteKeyExpr: WriteKeyExpr,\n\tWritePropExpr: WritePropExpr,\n\tWriteVarExpr: WriteVarExpr,\n\tStmtModifier: StmtModifier,\n\tStatement: Statement,\n\tcollectExternalReferences: collectExternalReferences,\n\tEmitterVisitorContext: EmitterVisitorContext,\n\tViewCompiler: ViewCompiler,\n\tgetParseErrors: getParseErrors,\n\tisSyntaxError: isSyntaxError,\n\tsyntaxError: syntaxError,\n\tVersion: Version,\n\tVERSION: VERSION$1,\n\tTextAst: TextAst,\n\tBoundTextAst: BoundTextAst,\n\tAttrAst: AttrAst,\n\tBoundElementPropertyAst: BoundElementPropertyAst,\n\tBoundEventAst: BoundEventAst,\n\tReferenceAst: ReferenceAst,\n\tVariableAst: VariableAst,\n\tElementAst: ElementAst,\n\tEmbeddedTemplateAst: EmbeddedTemplateAst,\n\tBoundDirectivePropertyAst: BoundDirectivePropertyAst,\n\tDirectiveAst: DirectiveAst,\n\tProviderAst: ProviderAst,\n\tProviderAstType: ProviderAstType,\n\tNgContentAst: NgContentAst,\n\tPropertyBindingType: PropertyBindingType,\n\tNullTemplateVisitor: NullTemplateVisitor,\n\tRecursiveTemplateAstVisitor: RecursiveTemplateAstVisitor,\n\ttemplateVisitAll: templateVisitAll,\n\tCompileAnimationEntryMetadata: CompileAnimationEntryMetadata,\n\tCompileAnimationStateMetadata: CompileAnimationStateMetadata,\n\tCompileAnimationStateDeclarationMetadata: CompileAnimationStateDeclarationMetadata,\n\tCompileAnimationStateTransitionMetadata: CompileAnimationStateTransitionMetadata,\n\tCompileAnimationMetadata: CompileAnimationMetadata,\n\tCompileAnimationKeyframesSequenceMetadata: CompileAnimationKeyframesSequenceMetadata,\n\tCompileAnimationStyleMetadata: CompileAnimationStyleMetadata,\n\tCompileAnimationAnimateMetadata: CompileAnimationAnimateMetadata,\n\tCompileAnimationWithStepsMetadata: CompileAnimationWithStepsMetadata,\n\tCompileAnimationSequenceMetadata: CompileAnimationSequenceMetadata,\n\tCompileAnimationGroupMetadata: CompileAnimationGroupMetadata,\n\tidentifierName: identifierName,\n\tidentifierModuleUrl: identifierModuleUrl,\n\tviewClassName: viewClassName,\n\trendererTypeName: rendererTypeName,\n\thostViewClassName: hostViewClassName,\n\tcomponentFactoryName: componentFactoryName,\n\tCompileSummaryKind: CompileSummaryKind,\n\ttokenName: tokenName,\n\ttokenReference: tokenReference,\n\tCompileStylesheetMetadata: CompileStylesheetMetadata,\n\tCompileTemplateMetadata: CompileTemplateMetadata,\n\tCompileDirectiveMetadata: CompileDirectiveMetadata,\n\tCompilePipeMetadata: CompilePipeMetadata,\n\tCompileNgModuleMetadata: CompileNgModuleMetadata,\n\tTransitiveCompileNgModuleMetadata: TransitiveCompileNgModuleMetadata,\n\tProviderMeta: ProviderMeta,\n\tflatten: flatten$1,\n\tsourceUrl: sourceUrl,\n\ttemplateSourceUrl: templateSourceUrl,\n\tsharedStylesheetJitUrl: sharedStylesheetJitUrl,\n\tngModuleJitUrl: ngModuleJitUrl,\n\ttemplateJitUrl: templateJitUrl,\n\tcreateAotUrlResolver: createAotUrlResolver,\n\tcreateAotCompiler: createAotCompiler,\n\tAotCompiler: AotCompiler,\n\tanalyzeNgModules: analyzeNgModules,\n\tanalyzeAndValidateNgModules: analyzeAndValidateNgModules,\n\tanalyzeFile: analyzeFile,\n\tmergeAnalyzedFiles: mergeAnalyzedFiles,\n\tGeneratedFile: GeneratedFile,\n\ttoTypeScript: toTypeScript,\n\tStaticReflector: StaticReflector,\n\tStaticSymbol: StaticSymbol,\n\tStaticSymbolCache: StaticSymbolCache,\n\tResolvedStaticSymbol: ResolvedStaticSymbol,\n\tStaticSymbolResolver: StaticSymbolResolver,\n\tunescapeIdentifier: unescapeIdentifier,\n\tAotSummaryResolver: AotSummaryResolver,\n\tAstPath: AstPath,\n\tSummaryResolver: SummaryResolver,\n\tJitSummaryResolver: JitSummaryResolver,\n\tCompileReflector: CompileReflector,\n\tcreateUrlResolverWithoutPackagePrefix: createUrlResolverWithoutPackagePrefix,\n\tcreateOfflineCompileUrlResolver: createOfflineCompileUrlResolver,\n\tUrlResolver: UrlResolver,\n\tgetUrlScheme: getUrlScheme,\n\tResourceLoader: ResourceLoader,\n\tElementSchemaRegistry: ElementSchemaRegistry,\n\tExtractor: Extractor,\n\tI18NHtmlParser: I18NHtmlParser,\n\tMessageBundle: MessageBundle,\n\tSerializer: Serializer,\n\tXliff: Xliff,\n\tXliff2: Xliff2,\n\tXmb: Xmb,\n\tXtb: Xtb,\n\tDirectiveNormalizer: DirectiveNormalizer,\n\tParserError: ParserError,\n\tParseSpan: ParseSpan,\n\tAST: AST,\n\tQuote: Quote,\n\tEmptyExpr: EmptyExpr,\n\tImplicitReceiver: ImplicitReceiver,\n\tChain: Chain,\n\tConditional: Conditional,\n\tPropertyRead: PropertyRead,\n\tPropertyWrite: PropertyWrite,\n\tSafePropertyRead: SafePropertyRead,\n\tKeyedRead: KeyedRead,\n\tKeyedWrite: KeyedWrite,\n\tBindingPipe: BindingPipe,\n\tLiteralPrimitive: LiteralPrimitive,\n\tLiteralArray: LiteralArray,\n\tLiteralMap: LiteralMap,\n\tInterpolation: Interpolation,\n\tBinary: Binary,\n\tPrefixNot: PrefixNot,\n\tNonNullAssert: NonNullAssert,\n\tMethodCall: MethodCall,\n\tSafeMethodCall: SafeMethodCall,\n\tFunctionCall: FunctionCall,\n\tASTWithSource: ASTWithSource,\n\tTemplateBinding: TemplateBinding,\n\tNullAstVisitor: NullAstVisitor,\n\tRecursiveAstVisitor: RecursiveAstVisitor,\n\tAstTransformer: AstTransformer,\n\tvisitAstChildren: visitAstChildren,\n\tTokenType: TokenType,\n\tLexer: Lexer,\n\tToken: Token,\n\tEOF: EOF,\n\tisIdentifier: isIdentifier,\n\tisQuote: isQuote,\n\tSplitInterpolation: SplitInterpolation,\n\tTemplateBindingParseResult: TemplateBindingParseResult,\n\tParser: Parser,\n\t_ParseAST: _ParseAST,\n\tERROR_COMPONENT_TYPE: ERROR_COMPONENT_TYPE,\n\tCompileMetadataResolver: CompileMetadataResolver,\n\tText: Text,\n\tExpansion: Expansion,\n\tExpansionCase: ExpansionCase,\n\tAttribute: Attribute$1,\n\tElement: Element,\n\tComment: Comment,\n\tvisitAll: visitAll,\n\tRecursiveVisitor: RecursiveVisitor,\n\tfindNode: findNode,\n\tParseTreeResult: ParseTreeResult,\n\tTreeError: TreeError,\n\tHtmlParser: HtmlParser,\n\tHtmlTagDefinition: HtmlTagDefinition,\n\tgetHtmlTagDefinition: getHtmlTagDefinition,\n\tTagContentType: TagContentType,\n\tsplitNsName: splitNsName,\n\tisNgContainer: isNgContainer,\n\tisNgContent: isNgContent,\n\tisNgTemplate: isNgTemplate,\n\tgetNsPrefix: getNsPrefix,\n\tmergeNsAndName: mergeNsAndName,\n\tNAMED_ENTITIES: NAMED_ENTITIES,\n\tNGSP_UNICODE: NGSP_UNICODE,\n\tdebugOutputAstAsTypeScript: debugOutputAstAsTypeScript,\n\tTypeScriptEmitter: TypeScriptEmitter,\n\tParseLocation: ParseLocation,\n\tParseSourceFile: ParseSourceFile,\n\tParseSourceSpan: ParseSourceSpan,\n\tParseErrorLevel: ParseErrorLevel,\n\tParseError: ParseError,\n\ttypeSourceSpan: typeSourceSpan,\n\tDomElementSchemaRegistry: DomElementSchemaRegistry,\n\tCssSelector: CssSelector,\n\tSelectorMatcher: SelectorMatcher,\n\tSelectorListContext: SelectorListContext,\n\tSelectorContext: SelectorContext,\n\tStylesCompileDependency: StylesCompileDependency,\n\tCompiledStylesheet: CompiledStylesheet,\n\tStyleCompiler: StyleCompiler,\n\tTemplateParseError: TemplateParseError,\n\tTemplateParseResult: TemplateParseResult,\n\tTemplateParser: TemplateParser,\n\tsplitClasses: splitClasses,\n\tcreateElementCssSelector: createElementCssSelector$1,\n\tremoveSummaryDuplicates: removeSummaryDuplicates\n});\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar schema = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Metadata Schema\n// If you make a backwards incompatible change to the schema, increment the METADTA_VERSION number.\n// If you make a backwards compatible change to the metadata (such as adding an option field) then\n// leave METADATA_VERSION the same. If possible, supply as many versions of the metadata that can\n// represent the semantics of the file in an array. For example, when generating a version 2 file,\n// if version 1 can accurately represent the metadata, generate both version 1 and version 2 in\n// an array.\nexports.METADATA_VERSION = 4;\nfunction isModuleMetadata(value) {\n    return value && value.__symbolic === 'module';\n}\nexports.isModuleMetadata = isModuleMetadata;\nfunction isClassMetadata(value) {\n    return value && value.__symbolic === 'class';\n}\nexports.isClassMetadata = isClassMetadata;\nfunction isInterfaceMetadata(value) {\n    return value && value.__symbolic === 'interface';\n}\nexports.isInterfaceMetadata = isInterfaceMetadata;\nfunction isMemberMetadata(value) {\n    if (value) {\n        switch (value.__symbolic) {\n            case 'constructor':\n            case 'method':\n            case 'property':\n                return true;\n        }\n    }\n    return false;\n}\nexports.isMemberMetadata = isMemberMetadata;\nfunction isMethodMetadata(value) {\n    return value && (value.__symbolic === 'constructor' || value.__symbolic === 'method');\n}\nexports.isMethodMetadata = isMethodMetadata;\nfunction isConstructorMetadata(value) {\n    return value && value.__symbolic === 'constructor';\n}\nexports.isConstructorMetadata = isConstructorMetadata;\nfunction isFunctionMetadata(value) {\n    return value && value.__symbolic === 'function';\n}\nexports.isFunctionMetadata = isFunctionMetadata;\nfunction isMetadataSymbolicExpression(value) {\n    if (value) {\n        switch (value.__symbolic) {\n            case 'binary':\n            case 'call':\n            case 'index':\n            case 'new':\n            case 'pre':\n            case 'reference':\n            case 'select':\n            case 'spread':\n            case 'if':\n                return true;\n        }\n    }\n    return false;\n}\nexports.isMetadataSymbolicExpression = isMetadataSymbolicExpression;\nfunction isMetadataSymbolicBinaryExpression(value) {\n    return value && value.__symbolic === 'binary';\n}\nexports.isMetadataSymbolicBinaryExpression = isMetadataSymbolicBinaryExpression;\nfunction isMetadataSymbolicIndexExpression(value) {\n    return value && value.__symbolic === 'index';\n}\nexports.isMetadataSymbolicIndexExpression = isMetadataSymbolicIndexExpression;\nfunction isMetadataSymbolicCallExpression(value) {\n    return value && (value.__symbolic === 'call' || value.__symbolic === 'new');\n}\nexports.isMetadataSymbolicCallExpression = isMetadataSymbolicCallExpression;\nfunction isMetadataSymbolicPrefixExpression(value) {\n    return value && value.__symbolic === 'pre';\n}\nexports.isMetadataSymbolicPrefixExpression = isMetadataSymbolicPrefixExpression;\nfunction isMetadataSymbolicIfExpression(value) {\n    return value && value.__symbolic === 'if';\n}\nexports.isMetadataSymbolicIfExpression = isMetadataSymbolicIfExpression;\nfunction isMetadataGlobalReferenceExpression(value) {\n    return value && value.name && !value.module && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataGlobalReferenceExpression = isMetadataGlobalReferenceExpression;\nfunction isMetadataModuleReferenceExpression(value) {\n    return value && value.module && !value.name && !value.default &&\n        isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataModuleReferenceExpression = isMetadataModuleReferenceExpression;\nfunction isMetadataImportedSymbolReferenceExpression(value) {\n    return value && value.module && !!value.name && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataImportedSymbolReferenceExpression = isMetadataImportedSymbolReferenceExpression;\nfunction isMetadataImportDefaultReference(value) {\n    return value.module && value.default && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataImportDefaultReference = isMetadataImportDefaultReference;\nfunction isMetadataSymbolicReferenceExpression(value) {\n    return value && value.__symbolic === 'reference';\n}\nexports.isMetadataSymbolicReferenceExpression = isMetadataSymbolicReferenceExpression;\nfunction isMetadataSymbolicSelectExpression(value) {\n    return value && value.__symbolic === 'select';\n}\nexports.isMetadataSymbolicSelectExpression = isMetadataSymbolicSelectExpression;\nfunction isMetadataSymbolicSpreadExpression(value) {\n    return value && value.__symbolic === 'spread';\n}\nexports.isMetadataSymbolicSpreadExpression = isMetadataSymbolicSpreadExpression;\nfunction isMetadataError(value) {\n    return value && value.__symbolic === 'error';\n}\nexports.isMetadataError = isMetadataError;\n\n});\n\nvar evaluator = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n// In TypeScript 2.1 the spread element kind was renamed.\nvar spreadElementSyntaxKind = ts__default.SyntaxKind.SpreadElement || ts__default.SyntaxKind.SpreadElementExpression;\nfunction isMethodCallOf(callExpression, memberName) {\n    var expression = callExpression.expression;\n    if (expression.kind === ts__default.SyntaxKind.PropertyAccessExpression) {\n        var propertyAccessExpression = expression;\n        var name_1 = propertyAccessExpression.name;\n        if (name_1.kind == ts__default.SyntaxKind.Identifier) {\n            return name_1.text === memberName;\n        }\n    }\n    return false;\n}\nfunction isCallOf(callExpression, ident) {\n    var expression = callExpression.expression;\n    if (expression.kind === ts__default.SyntaxKind.Identifier) {\n        var identifier = expression;\n        return identifier.text === ident;\n    }\n    return false;\n}\n/**\n * ts.forEachChild stops iterating children when the callback return a truthy value.\n * This method inverts this to implement an `every` style iterator. It will return\n * true if every call to `cb` returns `true`.\n */\nfunction everyNodeChild(node, cb) {\n    return !ts__default.forEachChild(node, function (node) { return !cb(node); });\n}\nfunction isPrimitive(value) {\n    return Object(value) !== value;\n}\nexports.isPrimitive = isPrimitive;\nfunction isDefined(obj) {\n    return obj !== undefined;\n}\nfunction getSourceFileOfNode(node) {\n    while (node && node.kind != ts__default.SyntaxKind.SourceFile) {\n        node = node.parent;\n    }\n    return node;\n}\n/* @internal */\nfunction errorSymbol(message, node, context, sourceFile) {\n    var result = undefined;\n    if (node) {\n        sourceFile = sourceFile || getSourceFileOfNode(node);\n        if (sourceFile) {\n            var _a = ts__default.getLineAndCharacterOfPosition(sourceFile, node.getStart(sourceFile)), line = _a.line, character = _a.character;\n            result = { __symbolic: 'error', message: message, line: line, character: character };\n        }\n    }\n    if (!result) {\n        result = { __symbolic: 'error', message: message };\n    }\n    if (context) {\n        result.context = context;\n    }\n    return result;\n}\nexports.errorSymbol = errorSymbol;\n/**\n * Produce a symbolic representation of an expression folding values into their final value when\n * possible.\n */\nvar Evaluator = (function () {\n    function Evaluator(symbols, nodeMap, options, recordExport) {\n        if (options === void 0) { options = {}; }\n        this.symbols = symbols;\n        this.nodeMap = nodeMap;\n        this.options = options;\n        this.recordExport = recordExport;\n    }\n    Evaluator.prototype.nameOf = function (node) {\n        if (node && node.kind == ts__default.SyntaxKind.Identifier) {\n            return node.text;\n        }\n        var result = node && this.evaluateNode(node);\n        if (schema.isMetadataError(result) || typeof result === 'string') {\n            return result;\n        }\n        else {\n            return errorSymbol('Name expected', node, { received: (node && node.getText()) || '<missing>' });\n        }\n    };\n    /**\n     * Returns true if the expression represented by `node` can be folded into a literal expression.\n     *\n     * For example, a literal is always foldable. This means that literal expressions such as `1.2`\n     * `\"Some value\"` `true` `false` are foldable.\n     *\n     * - An object literal is foldable if all the properties in the literal are foldable.\n     * - An array literal is foldable if all the elements are foldable.\n     * - A call is foldable if it is a call to a Array.prototype.concat or a call to CONST_EXPR.\n     * - A property access is foldable if the object is foldable.\n     * - A array index is foldable if index expression is foldable and the array is foldable.\n     * - Binary operator expressions are foldable if the left and right expressions are foldable and\n     *   it is one of '+', '-', '*', '/', '%', '||', and '&&'.\n     * - An identifier is foldable if a value can be found for its symbol in the evaluator symbol\n     *   table.\n     */\n    Evaluator.prototype.isFoldable = function (node) {\n        return this.isFoldableWorker(node, new Map());\n    };\n    Evaluator.prototype.isFoldableWorker = function (node, folding) {\n        var _this = this;\n        if (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ObjectLiteralExpression:\n                    return everyNodeChild(node, function (child) {\n                        if (child.kind === ts__default.SyntaxKind.PropertyAssignment) {\n                            var propertyAssignment = child;\n                            return _this.isFoldableWorker(propertyAssignment.initializer, folding);\n                        }\n                        return false;\n                    });\n                case ts__default.SyntaxKind.ArrayLiteralExpression:\n                    return everyNodeChild(node, function (child) { return _this.isFoldableWorker(child, folding); });\n                case ts__default.SyntaxKind.CallExpression:\n                    var callExpression = node;\n                    // We can fold a <array>.concat(<v>).\n                    if (isMethodCallOf(callExpression, 'concat') &&\n                        arrayOrEmpty(callExpression.arguments).length === 1) {\n                        var arrayNode = callExpression.expression.expression;\n                        if (this.isFoldableWorker(arrayNode, folding) &&\n                            this.isFoldableWorker(callExpression.arguments[0], folding)) {\n                            // It needs to be an array.\n                            var arrayValue = this.evaluateNode(arrayNode);\n                            if (arrayValue && Array.isArray(arrayValue)) {\n                                return true;\n                            }\n                        }\n                    }\n                    // We can fold a call to CONST_EXPR\n                    if (isCallOf(callExpression, 'CONST_EXPR') &&\n                        arrayOrEmpty(callExpression.arguments).length === 1)\n                        return this.isFoldableWorker(callExpression.arguments[0], folding);\n                    return false;\n                case ts__default.SyntaxKind.NoSubstitutionTemplateLiteral:\n                case ts__default.SyntaxKind.StringLiteral:\n                case ts__default.SyntaxKind.NumericLiteral:\n                case ts__default.SyntaxKind.NullKeyword:\n                case ts__default.SyntaxKind.TrueKeyword:\n                case ts__default.SyntaxKind.FalseKeyword:\n                case ts__default.SyntaxKind.TemplateHead:\n                case ts__default.SyntaxKind.TemplateMiddle:\n                case ts__default.SyntaxKind.TemplateTail:\n                    return true;\n                case ts__default.SyntaxKind.ParenthesizedExpression:\n                    var parenthesizedExpression = node;\n                    return this.isFoldableWorker(parenthesizedExpression.expression, folding);\n                case ts__default.SyntaxKind.BinaryExpression:\n                    var binaryExpression = node;\n                    switch (binaryExpression.operatorToken.kind) {\n                        case ts__default.SyntaxKind.PlusToken:\n                        case ts__default.SyntaxKind.MinusToken:\n                        case ts__default.SyntaxKind.AsteriskToken:\n                        case ts__default.SyntaxKind.SlashToken:\n                        case ts__default.SyntaxKind.PercentToken:\n                        case ts__default.SyntaxKind.AmpersandAmpersandToken:\n                        case ts__default.SyntaxKind.BarBarToken:\n                            return this.isFoldableWorker(binaryExpression.left, folding) &&\n                                this.isFoldableWorker(binaryExpression.right, folding);\n                        default:\n                            return false;\n                    }\n                case ts__default.SyntaxKind.PropertyAccessExpression:\n                    var propertyAccessExpression = node;\n                    return this.isFoldableWorker(propertyAccessExpression.expression, folding);\n                case ts__default.SyntaxKind.ElementAccessExpression:\n                    var elementAccessExpression = node;\n                    return this.isFoldableWorker(elementAccessExpression.expression, folding) &&\n                        this.isFoldableWorker(elementAccessExpression.argumentExpression, folding);\n                case ts__default.SyntaxKind.Identifier:\n                    var identifier = node;\n                    var reference = this.symbols.resolve(identifier.text);\n                    if (reference !== undefined && isPrimitive(reference)) {\n                        return true;\n                    }\n                    break;\n                case ts__default.SyntaxKind.TemplateExpression:\n                    var templateExpression = node;\n                    return templateExpression.templateSpans.every(function (span) { return _this.isFoldableWorker(span.expression, folding); });\n            }\n        }\n        return false;\n    };\n    /**\n     * Produce a JSON serialiable object representing `node`. The foldable values in the expression\n     * tree are folded. For example, a node representing `1 + 2` is folded into `3`.\n     */\n    Evaluator.prototype.evaluateNode = function (node, preferReference) {\n        var _this = this;\n        var t = this;\n        var error;\n        function recordEntry(entry, node) {\n            if (t.options.substituteExpression) {\n                var newEntry = t.options.substituteExpression(entry, node);\n                if (t.recordExport && newEntry != entry && schema.isMetadataGlobalReferenceExpression(newEntry)) {\n                    t.recordExport(newEntry.name, entry);\n                }\n                entry = newEntry;\n            }\n            t.nodeMap.set(entry, node);\n            return entry;\n        }\n        function isFoldableError(value) {\n            return !t.options.verboseInvalidExpression && schema.isMetadataError(value);\n        }\n        var resolveName = function (name, preferReference) {\n            var reference = _this.symbols.resolve(name, preferReference);\n            if (reference === undefined) {\n                // Encode as a global reference. StaticReflector will check the reference.\n                return recordEntry({ __symbolic: 'reference', name: name }, node);\n            }\n            return reference;\n        };\n        switch (node.kind) {\n            case ts__default.SyntaxKind.ObjectLiteralExpression:\n                var obj_1 = {};\n                var quoted_1 = [];\n                ts__default.forEachChild(node, function (child) {\n                    switch (child.kind) {\n                        case ts__default.SyntaxKind.ShorthandPropertyAssignment:\n                        case ts__default.SyntaxKind.PropertyAssignment:\n                            var assignment = child;\n                            if (assignment.name.kind == ts__default.SyntaxKind.StringLiteral) {\n                                var name_2 = assignment.name.text;\n                                quoted_1.push(name_2);\n                            }\n                            var propertyName = _this.nameOf(assignment.name);\n                            if (isFoldableError(propertyName)) {\n                                error = propertyName;\n                                return true;\n                            }\n                            var propertyValue = isPropertyAssignment(assignment) ?\n                                _this.evaluateNode(assignment.initializer, /* preferReference */ true) :\n                                resolveName(propertyName, /* preferReference */ true);\n                            if (isFoldableError(propertyValue)) {\n                                error = propertyValue;\n                                return true; // Stop the forEachChild.\n                            }\n                            else {\n                                obj_1[propertyName] = isPropertyAssignment(assignment) ?\n                                    recordEntry(propertyValue, assignment.initializer) :\n                                    propertyValue;\n                            }\n                    }\n                });\n                if (error)\n                    return error;\n                if (this.options.quotedNames && quoted_1.length) {\n                    obj_1['$quoted$'] = quoted_1;\n                }\n                return recordEntry(obj_1, node);\n            case ts__default.SyntaxKind.ArrayLiteralExpression:\n                var arr_1 = [];\n                ts__default.forEachChild(node, function (child) {\n                    var value = _this.evaluateNode(child, /* preferReference */ true);\n                    // Check for error\n                    if (isFoldableError(value)) {\n                        error = value;\n                        return true; // Stop the forEachChild.\n                    }\n                    // Handle spread expressions\n                    if (schema.isMetadataSymbolicSpreadExpression(value)) {\n                        if (Array.isArray(value.expression)) {\n                            for (var _i = 0, _a = value.expression; _i < _a.length; _i++) {\n                                var spreadValue = _a[_i];\n                                arr_1.push(spreadValue);\n                            }\n                            return;\n                        }\n                    }\n                    arr_1.push(value);\n                });\n                if (error)\n                    return error;\n                return recordEntry(arr_1, node);\n            case spreadElementSyntaxKind:\n                var spreadExpression = this.evaluateNode(node.expression);\n                return recordEntry({ __symbolic: 'spread', expression: spreadExpression }, node);\n            case ts__default.SyntaxKind.CallExpression:\n                var callExpression = node;\n                if (isCallOf(callExpression, 'forwardRef') &&\n                    arrayOrEmpty(callExpression.arguments).length === 1) {\n                    var firstArgument = callExpression.arguments[0];\n                    if (firstArgument.kind == ts__default.SyntaxKind.ArrowFunction) {\n                        var arrowFunction = firstArgument;\n                        return recordEntry(this.evaluateNode(arrowFunction.body), node);\n                    }\n                }\n                var args = arrayOrEmpty(callExpression.arguments).map(function (arg) { return _this.evaluateNode(arg); });\n                if (!this.options.verboseInvalidExpression && args.some(schema.isMetadataError)) {\n                    return args.find(schema.isMetadataError);\n                }\n                if (this.isFoldable(callExpression)) {\n                    if (isMethodCallOf(callExpression, 'concat')) {\n                        var arrayValue = this.evaluateNode(callExpression.expression.expression);\n                        if (isFoldableError(arrayValue))\n                            return arrayValue;\n                        return arrayValue.concat(args[0]);\n                    }\n                }\n                // Always fold a CONST_EXPR even if the argument is not foldable.\n                if (isCallOf(callExpression, 'CONST_EXPR') &&\n                    arrayOrEmpty(callExpression.arguments).length === 1) {\n                    return recordEntry(args[0], node);\n                }\n                var expression = this.evaluateNode(callExpression.expression);\n                if (isFoldableError(expression)) {\n                    return recordEntry(expression, node);\n                }\n                var result = { __symbolic: 'call', expression: expression };\n                if (args && args.length) {\n                    result.arguments = args;\n                }\n                return recordEntry(result, node);\n            case ts__default.SyntaxKind.NewExpression:\n                var newExpression = node;\n                var newArgs = arrayOrEmpty(newExpression.arguments).map(function (arg) { return _this.evaluateNode(arg); });\n                if (!this.options.verboseInvalidExpression && newArgs.some(schema.isMetadataError)) {\n                    return recordEntry(newArgs.find(schema.isMetadataError), node);\n                }\n                var newTarget = this.evaluateNode(newExpression.expression);\n                if (schema.isMetadataError(newTarget)) {\n                    return recordEntry(newTarget, node);\n                }\n                var call = { __symbolic: 'new', expression: newTarget };\n                if (newArgs.length) {\n                    call.arguments = newArgs;\n                }\n                return recordEntry(call, node);\n            case ts__default.SyntaxKind.PropertyAccessExpression: {\n                var propertyAccessExpression = node;\n                var expression_1 = this.evaluateNode(propertyAccessExpression.expression);\n                if (isFoldableError(expression_1)) {\n                    return recordEntry(expression_1, node);\n                }\n                var member = this.nameOf(propertyAccessExpression.name);\n                if (isFoldableError(member)) {\n                    return recordEntry(member, node);\n                }\n                if (expression_1 && this.isFoldable(propertyAccessExpression.expression))\n                    return expression_1[member];\n                if (schema.isMetadataModuleReferenceExpression(expression_1)) {\n                    // A select into a module reference and be converted into a reference to the symbol\n                    // in the module\n                    return recordEntry({ __symbolic: 'reference', module: expression_1.module, name: member }, node);\n                }\n                return recordEntry({ __symbolic: 'select', expression: expression_1, member: member }, node);\n            }\n            case ts__default.SyntaxKind.ElementAccessExpression: {\n                var elementAccessExpression = node;\n                var expression_2 = this.evaluateNode(elementAccessExpression.expression);\n                if (isFoldableError(expression_2)) {\n                    return recordEntry(expression_2, node);\n                }\n                if (!elementAccessExpression.argumentExpression) {\n                    return recordEntry(errorSymbol('Expression form not supported', node), node);\n                }\n                var index = this.evaluateNode(elementAccessExpression.argumentExpression);\n                if (isFoldableError(expression_2)) {\n                    return recordEntry(expression_2, node);\n                }\n                if (this.isFoldable(elementAccessExpression.expression) &&\n                    this.isFoldable(elementAccessExpression.argumentExpression))\n                    return expression_2[index];\n                return recordEntry({ __symbolic: 'index', expression: expression_2, index: index }, node);\n            }\n            case ts__default.SyntaxKind.Identifier:\n                var identifier = node;\n                var name_3 = identifier.text;\n                return resolveName(name_3, preferReference);\n            case ts__default.SyntaxKind.TypeReference:\n                var typeReferenceNode = node;\n                var typeNameNode_1 = typeReferenceNode.typeName;\n                var getReference = function (node) {\n                    if (typeNameNode_1.kind === ts__default.SyntaxKind.QualifiedName) {\n                        var qualifiedName = node;\n                        var left_1 = _this.evaluateNode(qualifiedName.left);\n                        if (schema.isMetadataModuleReferenceExpression(left_1)) {\n                            return recordEntry({\n                                __symbolic: 'reference',\n                                module: left_1.module,\n                                name: qualifiedName.right.text\n                            }, node);\n                        }\n                        // Record a type reference to a declared type as a select.\n                        return { __symbolic: 'select', expression: left_1, member: qualifiedName.right.text };\n                    }\n                    else {\n                        var identifier_1 = typeNameNode_1;\n                        var symbol = _this.symbols.resolve(identifier_1.text);\n                        if (isFoldableError(symbol) || schema.isMetadataSymbolicReferenceExpression(symbol)) {\n                            return recordEntry(symbol, node);\n                        }\n                        return recordEntry(errorSymbol('Could not resolve type', node, { typeName: identifier_1.text }), node);\n                    }\n                };\n                var typeReference = getReference(typeNameNode_1);\n                if (isFoldableError(typeReference)) {\n                    return recordEntry(typeReference, node);\n                }\n                if (!schema.isMetadataModuleReferenceExpression(typeReference) &&\n                    typeReferenceNode.typeArguments && typeReferenceNode.typeArguments.length) {\n                    var args_1 = typeReferenceNode.typeArguments.map(function (element) { return _this.evaluateNode(element); });\n                    // TODO: Remove typecast when upgraded to 2.0 as it will be corretly inferred.\n                    // Some versions of 1.9 do not infer this correctly.\n                    typeReference.arguments = args_1;\n                }\n                return recordEntry(typeReference, node);\n            case ts__default.SyntaxKind.UnionType:\n                var unionType = node;\n                // Remove null and undefined from the list of unions.\n                var references = unionType.types\n                    .filter(function (n) { return n.kind != ts__default.SyntaxKind.NullKeyword &&\n                    n.kind != ts__default.SyntaxKind.UndefinedKeyword; })\n                    .map(function (n) { return _this.evaluateNode(n); });\n                // The remmaining reference must be the same. If two have type arguments consider them\n                // different even if the type arguments are the same.\n                var candidate = null;\n                for (var i = 0; i < references.length; i++) {\n                    var reference = references[i];\n                    if (schema.isMetadataSymbolicReferenceExpression(reference)) {\n                        if (candidate) {\n                            if (reference.name == candidate.name &&\n                                reference.module == candidate.module && !reference.arguments) {\n                                candidate = reference;\n                            }\n                        }\n                        else {\n                            candidate = reference;\n                        }\n                    }\n                    else {\n                        return reference;\n                    }\n                }\n                if (candidate)\n                    return candidate;\n                break;\n            case ts__default.SyntaxKind.NoSubstitutionTemplateLiteral:\n            case ts__default.SyntaxKind.StringLiteral:\n            case ts__default.SyntaxKind.TemplateHead:\n            case ts__default.SyntaxKind.TemplateTail:\n            case ts__default.SyntaxKind.TemplateMiddle:\n                return node.text;\n            case ts__default.SyntaxKind.NumericLiteral:\n                return parseFloat(node.text);\n            case ts__default.SyntaxKind.AnyKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'any' }, node);\n            case ts__default.SyntaxKind.StringKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'string' }, node);\n            case ts__default.SyntaxKind.NumberKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'number' }, node);\n            case ts__default.SyntaxKind.BooleanKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'boolean' }, node);\n            case ts__default.SyntaxKind.ArrayType:\n                var arrayTypeNode = node;\n                return recordEntry({\n                    __symbolic: 'reference',\n                    name: 'Array',\n                    arguments: [this.evaluateNode(arrayTypeNode.elementType)]\n                }, node);\n            case ts__default.SyntaxKind.NullKeyword:\n                return null;\n            case ts__default.SyntaxKind.TrueKeyword:\n                return true;\n            case ts__default.SyntaxKind.FalseKeyword:\n                return false;\n            case ts__default.SyntaxKind.ParenthesizedExpression:\n                var parenthesizedExpression = node;\n                return this.evaluateNode(parenthesizedExpression.expression);\n            case ts__default.SyntaxKind.TypeAssertionExpression:\n                var typeAssertion = node;\n                return this.evaluateNode(typeAssertion.expression);\n            case ts__default.SyntaxKind.PrefixUnaryExpression:\n                var prefixUnaryExpression = node;\n                var operand = this.evaluateNode(prefixUnaryExpression.operand);\n                if (isDefined(operand) && isPrimitive(operand)) {\n                    switch (prefixUnaryExpression.operator) {\n                        case ts__default.SyntaxKind.PlusToken:\n                            return +operand;\n                        case ts__default.SyntaxKind.MinusToken:\n                            return -operand;\n                        case ts__default.SyntaxKind.TildeToken:\n                            return ~operand;\n                        case ts__default.SyntaxKind.ExclamationToken:\n                            return !operand;\n                    }\n                }\n                var operatorText = void 0;\n                switch (prefixUnaryExpression.operator) {\n                    case ts__default.SyntaxKind.PlusToken:\n                        operatorText = '+';\n                        break;\n                    case ts__default.SyntaxKind.MinusToken:\n                        operatorText = '-';\n                        break;\n                    case ts__default.SyntaxKind.TildeToken:\n                        operatorText = '~';\n                        break;\n                    case ts__default.SyntaxKind.ExclamationToken:\n                        operatorText = '!';\n                        break;\n                    default:\n                        return undefined;\n                }\n                return recordEntry({ __symbolic: 'pre', operator: operatorText, operand: operand }, node);\n            case ts__default.SyntaxKind.BinaryExpression:\n                var binaryExpression = node;\n                var left = this.evaluateNode(binaryExpression.left);\n                var right = this.evaluateNode(binaryExpression.right);\n                if (isDefined(left) && isDefined(right)) {\n                    if (isPrimitive(left) && isPrimitive(right))\n                        switch (binaryExpression.operatorToken.kind) {\n                            case ts__default.SyntaxKind.BarBarToken:\n                                return left || right;\n                            case ts__default.SyntaxKind.AmpersandAmpersandToken:\n                                return left && right;\n                            case ts__default.SyntaxKind.AmpersandToken:\n                                return left & right;\n                            case ts__default.SyntaxKind.BarToken:\n                                return left | right;\n                            case ts__default.SyntaxKind.CaretToken:\n                                return left ^ right;\n                            case ts__default.SyntaxKind.EqualsEqualsToken:\n                                return left == right;\n                            case ts__default.SyntaxKind.ExclamationEqualsToken:\n                                return left != right;\n                            case ts__default.SyntaxKind.EqualsEqualsEqualsToken:\n                                return left === right;\n                            case ts__default.SyntaxKind.ExclamationEqualsEqualsToken:\n                                return left !== right;\n                            case ts__default.SyntaxKind.LessThanToken:\n                                return left < right;\n                            case ts__default.SyntaxKind.GreaterThanToken:\n                                return left > right;\n                            case ts__default.SyntaxKind.LessThanEqualsToken:\n                                return left <= right;\n                            case ts__default.SyntaxKind.GreaterThanEqualsToken:\n                                return left >= right;\n                            case ts__default.SyntaxKind.LessThanLessThanToken:\n                                return left << right;\n                            case ts__default.SyntaxKind.GreaterThanGreaterThanToken:\n                                return left >> right;\n                            case ts__default.SyntaxKind.GreaterThanGreaterThanGreaterThanToken:\n                                return left >>> right;\n                            case ts__default.SyntaxKind.PlusToken:\n                                return left + right;\n                            case ts__default.SyntaxKind.MinusToken:\n                                return left - right;\n                            case ts__default.SyntaxKind.AsteriskToken:\n                                return left * right;\n                            case ts__default.SyntaxKind.SlashToken:\n                                return left / right;\n                            case ts__default.SyntaxKind.PercentToken:\n                                return left % right;\n                        }\n                    return recordEntry({\n                        __symbolic: 'binop',\n                        operator: binaryExpression.operatorToken.getText(),\n                        left: left,\n                        right: right\n                    }, node);\n                }\n                break;\n            case ts__default.SyntaxKind.ConditionalExpression:\n                var conditionalExpression = node;\n                var condition = this.evaluateNode(conditionalExpression.condition);\n                var thenExpression = this.evaluateNode(conditionalExpression.whenTrue);\n                var elseExpression = this.evaluateNode(conditionalExpression.whenFalse);\n                if (isPrimitive(condition)) {\n                    return condition ? thenExpression : elseExpression;\n                }\n                return recordEntry({ __symbolic: 'if', condition: condition, thenExpression: thenExpression, elseExpression: elseExpression }, node);\n            case ts__default.SyntaxKind.FunctionExpression:\n            case ts__default.SyntaxKind.ArrowFunction:\n                return recordEntry(errorSymbol('Function call not supported', node), node);\n            case ts__default.SyntaxKind.TaggedTemplateExpression:\n                return recordEntry(errorSymbol('Tagged template expressions are not supported in metadata', node), node);\n            case ts__default.SyntaxKind.TemplateExpression:\n                var templateExpression = node;\n                if (this.isFoldable(node)) {\n                    return templateExpression.templateSpans.reduce(function (previous, current) { return previous + _this.evaluateNode(current.expression) +\n                        _this.evaluateNode(current.literal); }, this.evaluateNode(templateExpression.head));\n                }\n                else {\n                    return templateExpression.templateSpans.reduce(function (previous, current) {\n                        var expr = _this.evaluateNode(current.expression);\n                        var literal = _this.evaluateNode(current.literal);\n                        if (isFoldableError(expr))\n                            return expr;\n                        if (isFoldableError(literal))\n                            return literal;\n                        if (typeof previous === 'string' && typeof expr === 'string' &&\n                            typeof literal === 'string') {\n                            return previous + expr + literal;\n                        }\n                        var result = expr;\n                        if (previous !== '') {\n                            result = { __symbolic: 'binop', operator: '+', left: previous, right: expr };\n                        }\n                        if (literal != '') {\n                            result = { __symbolic: 'binop', operator: '+', left: result, right: literal };\n                        }\n                        return result;\n                    }, this.evaluateNode(templateExpression.head));\n                }\n            case ts__default.SyntaxKind.AsExpression:\n                var asExpression = node;\n                return this.evaluateNode(asExpression.expression);\n            case ts__default.SyntaxKind.ClassExpression:\n                return { __symbolic: 'class' };\n        }\n        return recordEntry(errorSymbol('Expression form not supported', node), node);\n    };\n    return Evaluator;\n}());\nexports.Evaluator = Evaluator;\nfunction isPropertyAssignment(node) {\n    return node.kind == ts__default.SyntaxKind.PropertyAssignment;\n}\nvar empty = ts__default.createNodeArray();\nfunction arrayOrEmpty(v) {\n    return v || empty;\n}\n\n});\n\nvar symbols = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar Symbols = (function () {\n    function Symbols(sourceFile) {\n        this.sourceFile = sourceFile;\n        this.references = new Map();\n    }\n    Symbols.prototype.resolve = function (name, preferReference) {\n        return (preferReference && this.references.get(name)) || this.symbols.get(name);\n    };\n    Symbols.prototype.define = function (name, value) { this.symbols.set(name, value); };\n    Symbols.prototype.defineReference = function (name, value) {\n        this.references.set(name, value);\n    };\n    Symbols.prototype.has = function (name) { return this.symbols.has(name); };\n    Object.defineProperty(Symbols.prototype, \"symbols\", {\n        get: function () {\n            var result = this._symbols;\n            if (!result) {\n                result = this._symbols = new Map();\n                populateBuiltins(result);\n                this.buildImports();\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Symbols.prototype.buildImports = function () {\n        var _this = this;\n        var symbols = this._symbols;\n        // Collect the imported symbols into this.symbols\n        var stripQuotes = function (s) { return s.replace(/^['\"]|['\"]$/g, ''); };\n        var visit = function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ImportEqualsDeclaration:\n                    var importEqualsDeclaration = node;\n                    if (importEqualsDeclaration.moduleReference.kind ===\n                        ts__default.SyntaxKind.ExternalModuleReference) {\n                        var externalReference = importEqualsDeclaration.moduleReference;\n                        if (externalReference.expression) {\n                            // An `import <identifier> = require(<module-specifier>);\n                            if (!externalReference.expression.parent) {\n                                // The `parent` field of a node is set by the TypeScript binder (run as\n                                // part of the type checker). Setting it here allows us to call `getText()`\n                                // even if the `SourceFile` was not type checked (which looks for `SourceFile`\n                                // in the parent chain). This doesn't damage the node as the binder unconditionally\n                                // sets the parent.\n                                externalReference.expression.parent = externalReference;\n                                externalReference.parent = _this.sourceFile;\n                            }\n                            var from_1 = stripQuotes(externalReference.expression.getText());\n                            symbols.set(importEqualsDeclaration.name.text, { __symbolic: 'reference', module: from_1 });\n                            break;\n                        }\n                    }\n                    symbols.set(importEqualsDeclaration.name.text, { __symbolic: 'error', message: \"Unsupported import syntax\" });\n                    break;\n                case ts__default.SyntaxKind.ImportDeclaration:\n                    var importDecl = node;\n                    if (!importDecl.importClause) {\n                        // An `import <module-specifier>` clause which does not bring symbols into scope.\n                        break;\n                    }\n                    if (!importDecl.moduleSpecifier.parent) {\n                        // See note above in the `ImportEqualDeclaration` case.\n                        importDecl.moduleSpecifier.parent = importDecl;\n                        importDecl.parent = _this.sourceFile;\n                    }\n                    var from = stripQuotes(importDecl.moduleSpecifier.getText());\n                    if (importDecl.importClause.name) {\n                        // An `import <identifier> form <module-specifier>` clause. Record the defualt symbol.\n                        symbols.set(importDecl.importClause.name.text, { __symbolic: 'reference', module: from, default: true });\n                    }\n                    var bindings = importDecl.importClause.namedBindings;\n                    if (bindings) {\n                        switch (bindings.kind) {\n                            case ts__default.SyntaxKind.NamedImports:\n                                // An `import { [<identifier> [, <identifier>] } from <module-specifier>` clause\n                                for (var _i = 0, _a = bindings.elements; _i < _a.length; _i++) {\n                                    var binding = _a[_i];\n                                    symbols.set(binding.name.text, {\n                                        __symbolic: 'reference',\n                                        module: from,\n                                        name: binding.propertyName ? binding.propertyName.text : binding.name.text\n                                    });\n                                }\n                                break;\n                            case ts__default.SyntaxKind.NamespaceImport:\n                                // An `input * as <identifier> from <module-specifier>` clause.\n                                symbols.set(bindings.name.text, { __symbolic: 'reference', module: from });\n                                break;\n                        }\n                    }\n                    break;\n            }\n            ts__default.forEachChild(node, visit);\n        };\n        if (this.sourceFile) {\n            ts__default.forEachChild(this.sourceFile, visit);\n        }\n    };\n    return Symbols;\n}());\nexports.Symbols = Symbols;\nfunction populateBuiltins(symbols) {\n    // From lib.core.d.ts (all \"define const\")\n    ['Object', 'Function', 'String', 'Number', 'Array', 'Boolean', 'Map', 'NaN', 'Infinity', 'Math',\n        'Date', 'RegExp', 'Error', 'Error', 'EvalError', 'RangeError', 'ReferenceError', 'SyntaxError',\n        'TypeError', 'URIError', 'JSON', 'ArrayBuffer', 'DataView', 'Int8Array', 'Uint8Array',\n        'Uint8ClampedArray', 'Uint16Array', 'Int16Array', 'Int32Array', 'Uint32Array', 'Float32Array',\n        'Float64Array']\n        .forEach(function (name) { return symbols.set(name, { __symbolic: 'reference', name: name }); });\n}\n\n});\n\nvar collector = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign = (commonjsGlobal && commonjsGlobal.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\nvar isStatic = function (node) { return ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Static; };\n/**\n * Collect decorator metadata from a TypeScript module.\n */\nvar MetadataCollector = (function () {\n    function MetadataCollector(options) {\n        if (options === void 0) { options = {}; }\n        this.options = options;\n    }\n    /**\n     * Returns a JSON.stringify friendly form describing the decorators of the exported classes from\n     * the source file that is expected to correspond to a module.\n     */\n    MetadataCollector.prototype.getMetadata = function (sourceFile, strict, substituteExpression) {\n        var _this = this;\n        if (strict === void 0) { strict = false; }\n        var locals = new symbols.Symbols(sourceFile);\n        var nodeMap = new Map();\n        var composedSubstituter = substituteExpression && this.options.substituteExpression ?\n            function (value, node) {\n                return _this.options.substituteExpression(substituteExpression(value, node), node);\n            } :\n            substituteExpression;\n        var evaluatorOptions = substituteExpression ? __assign({}, this.options, { substituteExpression: composedSubstituter }) :\n            this.options;\n        var metadata;\n        var evaluator$$1 = new evaluator.Evaluator(locals, nodeMap, evaluatorOptions, function (name, value) {\n            if (!metadata)\n                metadata = {};\n            metadata[name] = value;\n        });\n        var exports = undefined;\n        function objFromDecorator(decoratorNode) {\n            return evaluator$$1.evaluateNode(decoratorNode.expression);\n        }\n        function recordEntry(entry, node) {\n            nodeMap.set(entry, node);\n            return entry;\n        }\n        function errorSym(message, node, context) {\n            return evaluator.errorSymbol(message, node, context, sourceFile);\n        }\n        function maybeGetSimpleFunction(functionDeclaration) {\n            if (functionDeclaration.name && functionDeclaration.name.kind == ts__default.SyntaxKind.Identifier) {\n                var nameNode = functionDeclaration.name;\n                var functionName = nameNode.text;\n                var functionBody = functionDeclaration.body;\n                if (functionBody && functionBody.statements.length == 1) {\n                    var statement = functionBody.statements[0];\n                    if (statement.kind === ts__default.SyntaxKind.ReturnStatement) {\n                        var returnStatement = statement;\n                        if (returnStatement.expression) {\n                            var func = {\n                                __symbolic: 'function',\n                                parameters: namesOf(functionDeclaration.parameters),\n                                value: evaluator$$1.evaluateNode(returnStatement.expression)\n                            };\n                            if (functionDeclaration.parameters.some(function (p) { return p.initializer != null; })) {\n                                func.defaults = functionDeclaration.parameters.map(function (p) { return p.initializer && evaluator$$1.evaluateNode(p.initializer); });\n                            }\n                            return recordEntry({ func: func, name: functionName }, functionDeclaration);\n                        }\n                    }\n                }\n            }\n        }\n        function classMetadataOf(classDeclaration) {\n            var result = { __symbolic: 'class' };\n            function getDecorators(decorators) {\n                if (decorators && decorators.length)\n                    return decorators.map(function (decorator) { return objFromDecorator(decorator); });\n                return undefined;\n            }\n            function referenceFrom(node) {\n                var result = evaluator$$1.evaluateNode(node);\n                if (schema.isMetadataError(result) || schema.isMetadataSymbolicReferenceExpression(result) ||\n                    schema.isMetadataSymbolicSelectExpression(result)) {\n                    return result;\n                }\n                else {\n                    return errorSym('Symbol reference expected', node);\n                }\n            }\n            // Add class parents\n            if (classDeclaration.heritageClauses) {\n                classDeclaration.heritageClauses.forEach(function (hc) {\n                    if (hc.token === ts__default.SyntaxKind.ExtendsKeyword && hc.types) {\n                        hc.types.forEach(function (type) { return result.extends = referenceFrom(type.expression); });\n                    }\n                });\n            }\n            // Add arity if the type is generic\n            var typeParameters = classDeclaration.typeParameters;\n            if (typeParameters && typeParameters.length) {\n                result.arity = typeParameters.length;\n            }\n            // Add class decorators\n            if (classDeclaration.decorators) {\n                result.decorators = getDecorators(classDeclaration.decorators);\n            }\n            // member decorators\n            var members = null;\n            function recordMember(name, metadata) {\n                if (!members)\n                    members = {};\n                var data = members.hasOwnProperty(name) ? members[name] : [];\n                data.push(metadata);\n                members[name] = data;\n            }\n            // static member\n            var statics = null;\n            function recordStaticMember(name, value) {\n                if (!statics)\n                    statics = {};\n                statics[name] = value;\n            }\n            for (var _i = 0, _a = classDeclaration.members; _i < _a.length; _i++) {\n                var member = _a[_i];\n                var isConstructor = false;\n                switch (member.kind) {\n                    case ts__default.SyntaxKind.Constructor:\n                    case ts__default.SyntaxKind.MethodDeclaration:\n                        isConstructor = member.kind === ts__default.SyntaxKind.Constructor;\n                        var method = member;\n                        if (isStatic(method)) {\n                            var maybeFunc = maybeGetSimpleFunction(method);\n                            if (maybeFunc) {\n                                recordStaticMember(maybeFunc.name, maybeFunc.func);\n                            }\n                            continue;\n                        }\n                        var methodDecorators = getDecorators(method.decorators);\n                        var parameters = method.parameters;\n                        var parameterDecoratorData = [];\n                        var parametersData = [];\n                        var hasDecoratorData = false;\n                        var hasParameterData = false;\n                        for (var _b = 0, parameters_1 = parameters; _b < parameters_1.length; _b++) {\n                            var parameter = parameters_1[_b];\n                            var parameterData = getDecorators(parameter.decorators);\n                            parameterDecoratorData.push(parameterData);\n                            hasDecoratorData = hasDecoratorData || !!parameterData;\n                            if (isConstructor) {\n                                if (parameter.type) {\n                                    parametersData.push(referenceFrom(parameter.type));\n                                }\n                                else {\n                                    parametersData.push(null);\n                                }\n                                hasParameterData = true;\n                            }\n                        }\n                        var data = { __symbolic: isConstructor ? 'constructor' : 'method' };\n                        var name_1 = isConstructor ? '__ctor__' : evaluator$$1.nameOf(member.name);\n                        if (methodDecorators) {\n                            data.decorators = methodDecorators;\n                        }\n                        if (hasDecoratorData) {\n                            data.parameterDecorators = parameterDecoratorData;\n                        }\n                        if (hasParameterData) {\n                            data.parameters = parametersData;\n                        }\n                        if (!schema.isMetadataError(name_1)) {\n                            recordMember(name_1, data);\n                        }\n                        break;\n                    case ts__default.SyntaxKind.PropertyDeclaration:\n                    case ts__default.SyntaxKind.GetAccessor:\n                    case ts__default.SyntaxKind.SetAccessor:\n                        var property = member;\n                        if (isStatic(property)) {\n                            var name_2 = evaluator$$1.nameOf(property.name);\n                            if (!schema.isMetadataError(name_2)) {\n                                if (property.initializer) {\n                                    var value = evaluator$$1.evaluateNode(property.initializer);\n                                    recordStaticMember(name_2, value);\n                                }\n                                else {\n                                    recordStaticMember(name_2, errorSym('Variable not initialized', property.name));\n                                }\n                            }\n                        }\n                        var propertyDecorators = getDecorators(property.decorators);\n                        if (propertyDecorators) {\n                            var name_3 = evaluator$$1.nameOf(property.name);\n                            if (!schema.isMetadataError(name_3)) {\n                                recordMember(name_3, { __symbolic: 'property', decorators: propertyDecorators });\n                            }\n                        }\n                        break;\n                }\n            }\n            if (members) {\n                result.members = members;\n            }\n            if (statics) {\n                result.statics = statics;\n            }\n            return recordEntry(result, classDeclaration);\n        }\n        // Collect all exported symbols from an exports clause.\n        var exportMap = new Map();\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ExportDeclaration:\n                    var exportDeclaration = node;\n                    var moduleSpecifier = exportDeclaration.moduleSpecifier, exportClause = exportDeclaration.exportClause;\n                    if (!moduleSpecifier) {\n                        // If there is a module specifier there is also an exportClause\n                        exportClause.elements.forEach(function (spec) {\n                            var exportedAs = spec.name.text;\n                            var name = (spec.propertyName || spec.name).text;\n                            exportMap.set(name, exportedAs);\n                        });\n                    }\n            }\n        });\n        var isExport = function (node) {\n            return sourceFile.isDeclarationFile || ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Export;\n        };\n        var isExportedIdentifier = function (identifier) {\n            return identifier && exportMap.has(identifier.text);\n        };\n        var isExported = function (node) {\n            return isExport(node) || isExportedIdentifier(node.name);\n        };\n        var exportedIdentifierName = function (identifier) {\n            return identifier && (exportMap.get(identifier.text) || identifier.text);\n        };\n        var exportedName = function (node) { return exportedIdentifierName(node.name); };\n        // Predeclare classes and functions\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ClassDeclaration:\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        var className = classDeclaration.name.text;\n                        if (isExported(classDeclaration)) {\n                            locals.define(className, { __symbolic: 'reference', name: exportedName(classDeclaration) });\n                        }\n                        else {\n                            locals.define(className, errorSym('Reference to non-exported class', node, { className: className }));\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.InterfaceDeclaration:\n                    var interfaceDeclaration = node;\n                    if (interfaceDeclaration.name) {\n                        var interfaceName = interfaceDeclaration.name.text;\n                        // All references to interfaces should be converted to references to `any`.\n                        locals.define(interfaceName, { __symbolic: 'reference', name: 'any' });\n                    }\n                    break;\n                case ts__default.SyntaxKind.FunctionDeclaration:\n                    var functionDeclaration = node;\n                    if (!isExported(functionDeclaration)) {\n                        // Report references to this function as an error.\n                        var nameNode = functionDeclaration.name;\n                        if (nameNode && nameNode.text) {\n                            locals.define(nameNode.text, errorSym('Reference to a non-exported function', nameNode, { name: nameNode.text }));\n                        }\n                    }\n                    break;\n            }\n        });\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ExportDeclaration:\n                    // Record export declarations\n                    var exportDeclaration = node;\n                    var moduleSpecifier = exportDeclaration.moduleSpecifier, exportClause = exportDeclaration.exportClause;\n                    if (!moduleSpecifier) {\n                        // no module specifier -> export {propName as name};\n                        if (exportClause) {\n                            exportClause.elements.forEach(function (spec) {\n                                var name = spec.name.text;\n                                // If the symbol was not already exported, export a reference since it is a\n                                // reference to an import\n                                if (!metadata || !metadata[name]) {\n                                    var propNode = spec.propertyName || spec.name;\n                                    var value = evaluator$$1.evaluateNode(propNode);\n                                    if (!metadata)\n                                        metadata = {};\n                                    metadata[name] = recordEntry(value, node);\n                                }\n                            });\n                        }\n                    }\n                    if (moduleSpecifier && moduleSpecifier.kind == ts__default.SyntaxKind.StringLiteral) {\n                        // Ignore exports that don't have string literals as exports.\n                        // This is allowed by the syntax but will be flagged as an error by the type checker.\n                        var from = moduleSpecifier.text;\n                        var moduleExport = { from: from };\n                        if (exportClause) {\n                            moduleExport.export = exportClause.elements.map(function (spec) { return spec.propertyName ? { name: spec.propertyName.text, as: spec.name.text } :\n                                spec.name.text; });\n                        }\n                        if (!exports)\n                            exports = [];\n                        exports.push(moduleExport);\n                    }\n                    break;\n                case ts__default.SyntaxKind.ClassDeclaration:\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        if (isExported(classDeclaration)) {\n                            var name_4 = exportedName(classDeclaration);\n                            if (name_4) {\n                                if (!metadata)\n                                    metadata = {};\n                                metadata[name_4] = classMetadataOf(classDeclaration);\n                            }\n                        }\n                    }\n                    // Otherwise don't record metadata for the class.\n                    break;\n                case ts__default.SyntaxKind.TypeAliasDeclaration:\n                    var typeDeclaration = node;\n                    if (typeDeclaration.name && isExported(typeDeclaration)) {\n                        var name_5 = exportedName(typeDeclaration);\n                        if (name_5) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_5] = { __symbolic: 'interface' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.InterfaceDeclaration:\n                    var interfaceDeclaration = node;\n                    if (interfaceDeclaration.name && isExported(interfaceDeclaration)) {\n                        var name_6 = exportedName(interfaceDeclaration);\n                        if (name_6) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_6] = { __symbolic: 'interface' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.FunctionDeclaration:\n                    // Record functions that return a single value. Record the parameter\n                    // names substitution will be performed by the StaticReflector.\n                    var functionDeclaration = node;\n                    if (isExported(functionDeclaration) && functionDeclaration.name) {\n                        var name_7 = exportedName(functionDeclaration);\n                        var maybeFunc = maybeGetSimpleFunction(functionDeclaration);\n                        if (name_7) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_7] =\n                                maybeFunc ? recordEntry(maybeFunc.func, node) : { __symbolic: 'function' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.EnumDeclaration:\n                    var enumDeclaration = node;\n                    if (isExported(enumDeclaration)) {\n                        var enumValueHolder = {};\n                        var enumName = exportedName(enumDeclaration);\n                        var nextDefaultValue = 0;\n                        var writtenMembers = 0;\n                        for (var _i = 0, _a = enumDeclaration.members; _i < _a.length; _i++) {\n                            var member = _a[_i];\n                            var enumValue = void 0;\n                            if (!member.initializer) {\n                                enumValue = nextDefaultValue;\n                            }\n                            else {\n                                enumValue = evaluator$$1.evaluateNode(member.initializer);\n                            }\n                            var name_8 = undefined;\n                            if (member.name.kind == ts__default.SyntaxKind.Identifier) {\n                                var identifier = member.name;\n                                name_8 = identifier.text;\n                                enumValueHolder[name_8] = enumValue;\n                                writtenMembers++;\n                            }\n                            if (typeof enumValue === 'number') {\n                                nextDefaultValue = enumValue + 1;\n                            }\n                            else if (name_8) {\n                                nextDefaultValue = {\n                                    __symbolic: 'binary',\n                                    operator: '+',\n                                    left: {\n                                        __symbolic: 'select',\n                                        expression: recordEntry({ __symbolic: 'reference', name: enumName }, node), name: name_8\n                                    }\n                                };\n                            }\n                            else {\n                                nextDefaultValue =\n                                    recordEntry(errorSym('Unsuppported enum member name', member.name), node);\n                            }\n                        }\n                        if (writtenMembers) {\n                            if (enumName) {\n                                if (!metadata)\n                                    metadata = {};\n                                metadata[enumName] = recordEntry(enumValueHolder, node);\n                            }\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.VariableStatement:\n                    var variableStatement = node;\n                    var _loop_1 = function (variableDeclaration) {\n                        if (variableDeclaration.name.kind == ts__default.SyntaxKind.Identifier) {\n                            var nameNode = variableDeclaration.name;\n                            var varValue = void 0;\n                            if (variableDeclaration.initializer) {\n                                varValue = evaluator$$1.evaluateNode(variableDeclaration.initializer);\n                            }\n                            else {\n                                varValue = recordEntry(errorSym('Variable not initialized', nameNode), nameNode);\n                            }\n                            var exported = false;\n                            if (isExport(variableStatement) || isExport(variableDeclaration) ||\n                                isExportedIdentifier(nameNode)) {\n                                var name_9 = exportedIdentifierName(nameNode);\n                                if (name_9) {\n                                    if (!metadata)\n                                        metadata = {};\n                                    metadata[name_9] = recordEntry(varValue, node);\n                                }\n                                exported = true;\n                            }\n                            if (typeof varValue == 'string' || typeof varValue == 'number' ||\n                                typeof varValue == 'boolean') {\n                                locals.define(nameNode.text, varValue);\n                                if (exported) {\n                                    locals.defineReference(nameNode.text, { __symbolic: 'reference', name: nameNode.text });\n                                }\n                            }\n                            else if (!exported) {\n                                if (varValue && !schema.isMetadataError(varValue)) {\n                                    locals.define(nameNode.text, recordEntry(varValue, node));\n                                }\n                                else {\n                                    locals.define(nameNode.text, recordEntry(errorSym('Reference to a local symbol', nameNode, { name: nameNode.text }), node));\n                                }\n                            }\n                        }\n                        else {\n                            // Destructuring (or binding) declarations are not supported,\n                            // var {<identifier>[, <identifier>]+} = <expression>;\n                            //   or\n                            // var [<identifier>[, <identifier}+] = <expression>;\n                            // are not supported.\n                            var report_1 = function (nameNode) {\n                                switch (nameNode.kind) {\n                                    case ts__default.SyntaxKind.Identifier:\n                                        var name_10 = nameNode;\n                                        var varValue = errorSym('Destructuring not supported', name_10);\n                                        locals.define(name_10.text, varValue);\n                                        if (isExport(node)) {\n                                            if (!metadata)\n                                                metadata = {};\n                                            metadata[name_10.text] = varValue;\n                                        }\n                                        break;\n                                    case ts__default.SyntaxKind.BindingElement:\n                                        var bindingElement = nameNode;\n                                        report_1(bindingElement.name);\n                                        break;\n                                    case ts__default.SyntaxKind.ObjectBindingPattern:\n                                    case ts__default.SyntaxKind.ArrayBindingPattern:\n                                        var bindings = nameNode;\n                                        bindings.elements.forEach(report_1);\n                                        break;\n                                }\n                            };\n                            report_1(variableDeclaration.name);\n                        }\n                    };\n                    for (var _b = 0, _c = variableStatement.declarationList.declarations; _b < _c.length; _b++) {\n                        var variableDeclaration = _c[_b];\n                        _loop_1(variableDeclaration);\n                    }\n                    break;\n            }\n        });\n        if (metadata || exports) {\n            if (!metadata)\n                metadata = {};\n            else if (strict) {\n                validateMetadata(sourceFile, nodeMap, metadata);\n            }\n            var result = {\n                __symbolic: 'module',\n                version: this.options.version || schema.METADATA_VERSION, metadata: metadata\n            };\n            if (exports)\n                result.exports = exports;\n            return result;\n        }\n    };\n    return MetadataCollector;\n}());\nexports.MetadataCollector = MetadataCollector;\n// This will throw if the metadata entry given contains an error node.\nfunction validateMetadata(sourceFile, nodeMap, metadata) {\n    var locals = new Set(['Array', 'Object', 'Set', 'Map', 'string', 'number', 'any']);\n    function validateExpression(expression) {\n        if (!expression) {\n            return;\n        }\n        else if (Array.isArray(expression)) {\n            expression.forEach(validateExpression);\n        }\n        else if (typeof expression === 'object' && !expression.hasOwnProperty('__symbolic')) {\n            Object.getOwnPropertyNames(expression).forEach(function (v) { return validateExpression(expression[v]); });\n        }\n        else if (schema.isMetadataError(expression)) {\n            reportError(expression);\n        }\n        else if (schema.isMetadataGlobalReferenceExpression(expression)) {\n            if (!locals.has(expression.name)) {\n                var reference = metadata[expression.name];\n                if (reference) {\n                    validateExpression(reference);\n                }\n            }\n        }\n        else if (schema.isFunctionMetadata(expression)) {\n            validateFunction(expression);\n        }\n        else if (schema.isMetadataSymbolicExpression(expression)) {\n            switch (expression.__symbolic) {\n                case 'binary':\n                    var binaryExpression = expression;\n                    validateExpression(binaryExpression.left);\n                    validateExpression(binaryExpression.right);\n                    break;\n                case 'call':\n                case 'new':\n                    var callExpression = expression;\n                    validateExpression(callExpression.expression);\n                    if (callExpression.arguments)\n                        callExpression.arguments.forEach(validateExpression);\n                    break;\n                case 'index':\n                    var indexExpression = expression;\n                    validateExpression(indexExpression.expression);\n                    validateExpression(indexExpression.index);\n                    break;\n                case 'pre':\n                    var prefixExpression = expression;\n                    validateExpression(prefixExpression.operand);\n                    break;\n                case 'select':\n                    var selectExpression = expression;\n                    validateExpression(selectExpression.expression);\n                    break;\n                case 'spread':\n                    var spreadExpression = expression;\n                    validateExpression(spreadExpression.expression);\n                    break;\n                case 'if':\n                    var ifExpression = expression;\n                    validateExpression(ifExpression.condition);\n                    validateExpression(ifExpression.elseExpression);\n                    validateExpression(ifExpression.thenExpression);\n                    break;\n            }\n        }\n    }\n    function validateMember(classData, member) {\n        if (member.decorators) {\n            member.decorators.forEach(validateExpression);\n        }\n        if (schema.isMethodMetadata(member) && member.parameterDecorators) {\n            member.parameterDecorators.forEach(validateExpression);\n        }\n        // Only validate parameters of classes for which we know that are used with our DI\n        if (classData.decorators && schema.isConstructorMetadata(member) && member.parameters) {\n            member.parameters.forEach(validateExpression);\n        }\n    }\n    function validateClass(classData) {\n        if (classData.decorators) {\n            classData.decorators.forEach(validateExpression);\n        }\n        if (classData.members) {\n            Object.getOwnPropertyNames(classData.members)\n                .forEach(function (name) { return classData.members[name].forEach(function (m) { return validateMember(classData, m); }); });\n        }\n        if (classData.statics) {\n            Object.getOwnPropertyNames(classData.statics).forEach(function (name) {\n                var staticMember = classData.statics[name];\n                if (schema.isFunctionMetadata(staticMember)) {\n                    validateExpression(staticMember.value);\n                }\n                else {\n                    validateExpression(staticMember);\n                }\n            });\n        }\n    }\n    function validateFunction(functionDeclaration) {\n        if (functionDeclaration.value) {\n            var oldLocals = locals;\n            if (functionDeclaration.parameters) {\n                locals = new Set(oldLocals.values());\n                if (functionDeclaration.parameters)\n                    functionDeclaration.parameters.forEach(function (n) { return locals.add(n); });\n            }\n            validateExpression(functionDeclaration.value);\n            locals = oldLocals;\n        }\n    }\n    function shouldReportNode(node) {\n        if (node) {\n            var nodeStart = node.getStart();\n            return !(node.pos != nodeStart &&\n                sourceFile.text.substring(node.pos, nodeStart).indexOf('@dynamic') >= 0);\n        }\n        return true;\n    }\n    function reportError(error) {\n        var node = nodeMap.get(error);\n        if (shouldReportNode(node)) {\n            var lineInfo = error.line != undefined ?\n                error.character != undefined ? \":\" + (error.line + 1) + \":\" + (error.character + 1) :\n                    \":\" + (error.line + 1) :\n                '';\n            throw new Error(\"\" + sourceFile.fileName + lineInfo + \": Metadata collected contains an error that will be reported at runtime: \" + expandedMessage(error) + \".\\n  \" + JSON.stringify(error));\n        }\n    }\n    Object.getOwnPropertyNames(metadata).forEach(function (name) {\n        var entry = metadata[name];\n        try {\n            if (schema.isClassMetadata(entry)) {\n                validateClass(entry);\n            }\n        }\n        catch (e) {\n            var node = nodeMap.get(entry);\n            if (shouldReportNode(node)) {\n                if (node) {\n                    var _a = sourceFile.getLineAndCharacterOfPosition(node.getStart()), line = _a.line, character = _a.character;\n                    throw new Error(sourceFile.fileName + \":\" + (line + 1) + \":\" + (character + 1) + \": Error encountered in metadata generated for exported symbol '\" + name + \"': \\n \" + e.message);\n                }\n                throw new Error(\"Error encountered in metadata generated for exported symbol \" + name + \": \\n \" + e.message);\n            }\n        }\n    });\n}\n// Collect parameter names from a function.\nfunction namesOf(parameters) {\n    var result = [];\n    function addNamesOf(name) {\n        if (name.kind == ts__default.SyntaxKind.Identifier) {\n            var identifier = name;\n            result.push(identifier.text);\n        }\n        else {\n            var bindingPattern = name;\n            for (var _i = 0, _a = bindingPattern.elements; _i < _a.length; _i++) {\n                var element = _a[_i];\n                var name_11 = element.name;\n                if (name_11) {\n                    addNamesOf(name_11);\n                }\n            }\n        }\n    }\n    for (var _i = 0, parameters_2 = parameters; _i < parameters_2.length; _i++) {\n        var parameter = parameters_2[_i];\n        addNamesOf(parameter.name);\n    }\n    return result;\n}\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n    }\n    return error.message;\n}\n\n});\n\nvar bundler = createCommonjsModule(function (module, exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\n\n// The character set used to produce private names.\nvar PRIVATE_NAME_CHARS = 'abcdefghijklmnopqrstuvwxyz';\nvar MetadataBundler = (function () {\n    function MetadataBundler(root, importAs, host) {\n        this.root = root;\n        this.importAs = importAs;\n        this.host = host;\n        this.symbolMap = new Map();\n        this.metadataCache = new Map();\n        this.exports = new Map();\n        this.rootModule = \"./\" + path__default.basename(root);\n    }\n    MetadataBundler.prototype.getMetadataBundle = function () {\n        // Export the root module. This also collects the transitive closure of all values referenced by\n        // the exports.\n        var exportedSymbols = this.exportAll(this.rootModule);\n        this.canonicalizeSymbols(exportedSymbols);\n        // TODO: exports? e.g. a module re-exports a symbol from another bundle\n        var metadata = this.getEntries(exportedSymbols);\n        var privates = Array.from(this.symbolMap.values())\n            .filter(function (s) { return s.referenced && s.isPrivate; })\n            .map(function (s) { return ({\n            privateName: s.privateName,\n            name: s.declaration.name,\n            module: s.declaration.module\n        }); });\n        var origins = Array.from(this.symbolMap.values())\n            .filter(function (s) { return s.referenced && !s.reexport; })\n            .reduce(function (p, s) {\n            p[s.isPrivate ? s.privateName : s.name] = s.declaration.module;\n            return p;\n        }, {});\n        var exports = this.getReExports(exportedSymbols);\n        return {\n            metadata: {\n                __symbolic: 'module',\n                version: schema.METADATA_VERSION,\n                exports: exports.length ? exports : undefined, metadata: metadata, origins: origins,\n                importAs: this.importAs\n            },\n            privates: privates\n        };\n    };\n    MetadataBundler.resolveModule = function (importName, from) {\n        return resolveModule(importName, from);\n    };\n    MetadataBundler.prototype.getMetadata = function (moduleName) {\n        var result = this.metadataCache.get(moduleName);\n        if (!result) {\n            if (moduleName.startsWith('.')) {\n                var fullModuleName = resolveModule(moduleName, this.root);\n                result = this.host.getMetadataFor(fullModuleName);\n            }\n            this.metadataCache.set(moduleName, result);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.exportAll = function (moduleName) {\n        var _this = this;\n        var module = this.getMetadata(moduleName);\n        var result = this.exports.get(moduleName);\n        if (result) {\n            return result;\n        }\n        result = [];\n        var exportSymbol = function (exportedSymbol, exportAs) {\n            var symbol = _this.symbolOf(moduleName, exportAs);\n            result.push(symbol);\n            exportedSymbol.reexportedAs = symbol;\n            symbol.exports = exportedSymbol;\n        };\n        // Export all the symbols defined in this module.\n        if (module && module.metadata) {\n            for (var key in module.metadata) {\n                var data = module.metadata[key];\n                if (schema.isMetadataImportedSymbolReferenceExpression(data)) {\n                    // This is a re-export of an imported symbol. Record this as a re-export.\n                    var exportFrom = resolveModule(data.module, moduleName);\n                    this.exportAll(exportFrom);\n                    var symbol = this.symbolOf(exportFrom, data.name);\n                    exportSymbol(symbol, key);\n                }\n                else {\n                    // Record that this symbol is exported by this module.\n                    result.push(this.symbolOf(moduleName, key));\n                }\n            }\n        }\n        // Export all the re-exports from this module\n        if (module && module.exports) {\n            for (var _i = 0, _a = module.exports; _i < _a.length; _i++) {\n                var exportDeclaration = _a[_i];\n                var exportFrom = resolveModule(exportDeclaration.from, moduleName);\n                // Record all the exports from the module even if we don't use it directly.\n                var exportedSymbols = this.exportAll(exportFrom);\n                if (exportDeclaration.export) {\n                    // Re-export all the named exports from a module.\n                    for (var _b = 0, _c = exportDeclaration.export; _b < _c.length; _b++) {\n                        var exportItem = _c[_b];\n                        var name_1 = typeof exportItem == 'string' ? exportItem : exportItem.name;\n                        var exportAs = typeof exportItem == 'string' ? exportItem : exportItem.as;\n                        var symbol = this.symbolOf(exportFrom, name_1);\n                        if (exportedSymbols && exportedSymbols.length == 1 && exportedSymbols[0].reexport &&\n                            exportedSymbols[0].name == '*') {\n                            // This is a named export from a module we have no metadata about. Record the named\n                            // export as a re-export.\n                            symbol.reexport = true;\n                        }\n                        exportSymbol(this.symbolOf(exportFrom, name_1), exportAs);\n                    }\n                }\n                else {\n                    // Re-export all the symbols from the module\n                    var exportedSymbols_1 = this.exportAll(exportFrom);\n                    for (var _d = 0, exportedSymbols_2 = exportedSymbols_1; _d < exportedSymbols_2.length; _d++) {\n                        var exportedSymbol = exportedSymbols_2[_d];\n                        var name_2 = exportedSymbol.name;\n                        exportSymbol(exportedSymbol, name_2);\n                    }\n                }\n            }\n        }\n        if (!module) {\n            // If no metadata is found for this import then it is considered external to the\n            // library and should be recorded as a re-export in the final metadata if it is\n            // eventually re-exported.\n            var symbol = this.symbolOf(moduleName, '*');\n            symbol.reexport = true;\n            result.push(symbol);\n        }\n        this.exports.set(moduleName, result);\n        return result;\n    };\n    /**\n     * Fill in the canonicalSymbol which is the symbol that should be imported by factories.\n     * The canonical symbol is the one exported by the index file for the bundle or definition\n     * symbol for private symbols that are not exported by bundle index.\n     */\n    MetadataBundler.prototype.canonicalizeSymbols = function (exportedSymbols) {\n        var symbols = Array.from(this.symbolMap.values());\n        this.exported = new Set(exportedSymbols);\n        symbols.forEach(this.canonicalizeSymbol, this);\n    };\n    MetadataBundler.prototype.canonicalizeSymbol = function (symbol) {\n        var rootExport = getRootExport(symbol);\n        var declaration = getSymbolDeclaration(symbol);\n        var isPrivate = !this.exported.has(rootExport);\n        var canonicalSymbol = isPrivate ? declaration : rootExport;\n        symbol.isPrivate = isPrivate;\n        symbol.declaration = declaration;\n        symbol.canonicalSymbol = canonicalSymbol;\n        symbol.reexport = declaration.reexport;\n    };\n    MetadataBundler.prototype.getEntries = function (exportedSymbols) {\n        var _this = this;\n        var result = {};\n        var exportedNames = new Set(exportedSymbols.map(function (s) { return s.name; }));\n        var privateName = 0;\n        function newPrivateName() {\n            while (true) {\n                var digits = [];\n                var index = privateName++;\n                var base = PRIVATE_NAME_CHARS;\n                while (!digits.length || index > 0) {\n                    digits.unshift(base[index % base.length]);\n                    index = Math.floor(index / base.length);\n                }\n                digits.unshift('\\u0275');\n                var result_1 = digits.join('');\n                if (!exportedNames.has(result_1))\n                    return result_1;\n            }\n        }\n        exportedSymbols.forEach(function (symbol) { return _this.convertSymbol(symbol); });\n        var symbolsMap = new Map();\n        Array.from(this.symbolMap.values()).forEach(function (symbol) {\n            if (symbol.referenced && !symbol.reexport) {\n                var name_3 = symbol.name;\n                var identifier = symbol.declaration.module + \":\" + symbol.declaration.name;\n                if (symbol.isPrivate && !symbol.privateName) {\n                    name_3 = newPrivateName();\n                    symbol.privateName = name_3;\n                }\n                if (symbolsMap.has(identifier)) {\n                    var names = symbolsMap.get(identifier);\n                    names.push(name_3);\n                }\n                else {\n                    symbolsMap.set(identifier, [name_3]);\n                }\n                result[name_3] = symbol.value;\n            }\n        });\n        // check for duplicated entries\n        symbolsMap.forEach(function (names, identifier) {\n            if (names.length > 1) {\n                var _a = identifier.split(':'), module_1 = _a[0], declaredName = _a[1];\n                // prefer the export that uses the declared name (if any)\n                var reference_1 = names.indexOf(declaredName);\n                if (reference_1 === -1) {\n                    reference_1 = 0;\n                }\n                // keep one entry and replace the others by references\n                names.forEach(function (name, i) {\n                    if (i !== reference_1) {\n                        result[name] = { __symbolic: 'reference', name: names[reference_1] };\n                    }\n                });\n            }\n        });\n        return result;\n    };\n    MetadataBundler.prototype.getReExports = function (exportedSymbols) {\n        var modules = new Map();\n        var exportAlls = new Set();\n        for (var _i = 0, exportedSymbols_3 = exportedSymbols; _i < exportedSymbols_3.length; _i++) {\n            var symbol = exportedSymbols_3[_i];\n            if (symbol.reexport) {\n                // symbol.declaration is guarenteed to be defined during the phase this method is called.\n                var declaration = symbol.declaration;\n                var module_2 = declaration.module;\n                if (declaration.name == '*') {\n                    // Reexport all the symbols.\n                    exportAlls.add(declaration.module);\n                }\n                else {\n                    // Re-export the symbol as the exported name.\n                    var entry = modules.get(module_2);\n                    if (!entry) {\n                        entry = [];\n                        modules.set(module_2, entry);\n                    }\n                    var as = symbol.name;\n                    var name_4 = declaration.name;\n                    entry.push({ name: name_4, as: as });\n                }\n            }\n        }\n        return Array.from(exportAlls.values()).map(function (from) { return ({ from: from }); }).concat(Array.from(modules.entries()).map(function (_a) {\n            var from = _a[0], exports = _a[1];\n            return ({ export: exports, from: from });\n        }));\n    };\n    MetadataBundler.prototype.convertSymbol = function (symbol) {\n        // canonicalSymbol is ensured to be defined before this is called.\n        var canonicalSymbol = symbol.canonicalSymbol;\n        if (!canonicalSymbol.referenced) {\n            canonicalSymbol.referenced = true;\n            // declaration is ensured to be definded before this method is called.\n            var declaration = canonicalSymbol.declaration;\n            var module_3 = this.getMetadata(declaration.module);\n            if (module_3) {\n                var value = module_3.metadata[declaration.name];\n                if (value && !declaration.name.startsWith('___')) {\n                    canonicalSymbol.value = this.convertEntry(declaration.module, value);\n                }\n            }\n        }\n    };\n    MetadataBundler.prototype.convertEntry = function (moduleName, value) {\n        if (schema.isClassMetadata(value)) {\n            return this.convertClass(moduleName, value);\n        }\n        if (schema.isFunctionMetadata(value)) {\n            return this.convertFunction(moduleName, value);\n        }\n        if (schema.isInterfaceMetadata(value)) {\n            return value;\n        }\n        return this.convertValue(moduleName, value);\n    };\n    MetadataBundler.prototype.convertClass = function (moduleName, value) {\n        var _this = this;\n        return {\n            __symbolic: 'class',\n            arity: value.arity,\n            extends: this.convertExpression(moduleName, value.extends),\n            decorators: value.decorators && value.decorators.map(function (d) { return _this.convertExpression(moduleName, d); }),\n            members: this.convertMembers(moduleName, value.members),\n            statics: value.statics && this.convertStatics(moduleName, value.statics)\n        };\n    };\n    MetadataBundler.prototype.convertMembers = function (moduleName, members) {\n        var _this = this;\n        var result = {};\n        for (var name_5 in members) {\n            var value = members[name_5];\n            result[name_5] = value.map(function (v) { return _this.convertMember(moduleName, v); });\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertMember = function (moduleName, member) {\n        var _this = this;\n        var result = { __symbolic: member.__symbolic };\n        result.decorators =\n            member.decorators && member.decorators.map(function (d) { return _this.convertExpression(moduleName, d); });\n        if (schema.isMethodMetadata(member)) {\n            result.parameterDecorators = member.parameterDecorators &&\n                member.parameterDecorators.map(function (d) { return d && d.map(function (p) { return _this.convertExpression(moduleName, p); }); });\n            if (schema.isConstructorMetadata(member)) {\n                if (member.parameters) {\n                    result.parameters =\n                        member.parameters.map(function (p) { return _this.convertExpression(moduleName, p); });\n                }\n            }\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertStatics = function (moduleName, statics) {\n        var result = {};\n        for (var key in statics) {\n            var value = statics[key];\n            result[key] = schema.isFunctionMetadata(value) ? this.convertFunction(moduleName, value) : value;\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertFunction = function (moduleName, value) {\n        var _this = this;\n        return {\n            __symbolic: 'function',\n            parameters: value.parameters,\n            defaults: value.defaults && value.defaults.map(function (v) { return _this.convertValue(moduleName, v); }),\n            value: this.convertValue(moduleName, value.value)\n        };\n    };\n    MetadataBundler.prototype.convertValue = function (moduleName, value) {\n        var _this = this;\n        if (isPrimitive(value)) {\n            return value;\n        }\n        if (schema.isMetadataError(value)) {\n            return this.convertError(moduleName, value);\n        }\n        if (schema.isMetadataSymbolicExpression(value)) {\n            return this.convertExpression(moduleName, value);\n        }\n        if (Array.isArray(value)) {\n            return value.map(function (v) { return _this.convertValue(moduleName, v); });\n        }\n        // Otherwise it is a metadata object.\n        var object = value;\n        var result = {};\n        for (var key in object) {\n            result[key] = this.convertValue(moduleName, object[key]);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertExpression = function (moduleName, value) {\n        if (value) {\n            switch (value.__symbolic) {\n                case 'error':\n                    return this.convertError(moduleName, value);\n                case 'reference':\n                    return this.convertReference(moduleName, value);\n                default:\n                    return this.convertExpressionNode(moduleName, value);\n            }\n        }\n        return value;\n    };\n    MetadataBundler.prototype.convertError = function (module, value) {\n        return {\n            __symbolic: 'error',\n            message: value.message,\n            line: value.line,\n            character: value.character,\n            context: value.context, module: module\n        };\n    };\n    MetadataBundler.prototype.convertReference = function (moduleName, value) {\n        var _this = this;\n        var createReference = function (symbol) {\n            var declaration = symbol.declaration;\n            if (declaration.module.startsWith('.')) {\n                // Reference to a symbol defined in the module. Ensure it is converted then return a\n                // references to the final symbol.\n                _this.convertSymbol(symbol);\n                return {\n                    __symbolic: 'reference',\n                    get name() {\n                        // Resolved lazily because private names are assigned late.\n                        var canonicalSymbol = symbol.canonicalSymbol;\n                        if (canonicalSymbol.isPrivate == null) {\n                            throw Error('Invalid state: isPrivate was not initialized');\n                        }\n                        return canonicalSymbol.isPrivate ? canonicalSymbol.privateName : canonicalSymbol.name;\n                    }\n                };\n            }\n            else {\n                // The symbol was a re-exported symbol from another module. Return a reference to the\n                // original imported symbol.\n                return { __symbolic: 'reference', name: declaration.name, module: declaration.module };\n            }\n        };\n        if (schema.isMetadataGlobalReferenceExpression(value)) {\n            var metadata = this.getMetadata(moduleName);\n            if (metadata && metadata.metadata && metadata.metadata[value.name]) {\n                // Reference to a symbol defined in the module\n                return createReference(this.canonicalSymbolOf(moduleName, value.name));\n            }\n            // If a reference has arguments, the arguments need to be converted.\n            if (value.arguments) {\n                return {\n                    __symbolic: 'reference',\n                    name: value.name,\n                    arguments: value.arguments.map(function (a) { return _this.convertValue(moduleName, a); })\n                };\n            }\n            // Global references without arguments (such as to Math or JSON) are unmodified.\n            return value;\n        }\n        if (schema.isMetadataImportedSymbolReferenceExpression(value)) {\n            // References to imported symbols are separated into two, references to bundled modules and\n            // references to modules external to the bundle. If the module reference is relative it is\n            // assumed to be in the bundle. If it is Global it is assumed to be outside the bundle.\n            // References to symbols outside the bundle are left unmodified. References to symbol inside\n            // the bundle need to be converted to a bundle import reference reachable from the bundle\n            // index.\n            if (value.module.startsWith('.')) {\n                // Reference is to a symbol defined inside the module. Convert the reference to a reference\n                // to the canonical symbol.\n                var referencedModule = resolveModule(value.module, moduleName);\n                var referencedName = value.name;\n                return createReference(this.canonicalSymbolOf(referencedModule, referencedName));\n            }\n            // Value is a reference to a symbol defined outside the module.\n            if (value.arguments) {\n                // If a reference has arguments the arguments need to be converted.\n                return {\n                    __symbolic: 'reference',\n                    name: value.name,\n                    module: value.module,\n                    arguments: value.arguments.map(function (a) { return _this.convertValue(moduleName, a); })\n                };\n            }\n            return value;\n        }\n        if (schema.isMetadataModuleReferenceExpression(value)) {\n            // Cannot support references to bundled modules as the internal modules of a bundle are erased\n            // by the bundler.\n            if (value.module.startsWith('.')) {\n                return {\n                    __symbolic: 'error',\n                    message: 'Unsupported bundled module reference',\n                    context: { module: value.module }\n                };\n            }\n            // References to unbundled modules are unmodified.\n            return value;\n        }\n    };\n    MetadataBundler.prototype.convertExpressionNode = function (moduleName, value) {\n        var result = { __symbolic: value.__symbolic };\n        for (var key in value) {\n            result[key] = this.convertValue(moduleName, value[key]);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.symbolOf = function (module, name) {\n        var symbolKey = module + \":\" + name;\n        var symbol = this.symbolMap.get(symbolKey);\n        if (!symbol) {\n            symbol = { module: module, name: name };\n            this.symbolMap.set(symbolKey, symbol);\n        }\n        return symbol;\n    };\n    MetadataBundler.prototype.canonicalSymbolOf = function (module, name) {\n        // Ensure the module has been seen.\n        this.exportAll(module);\n        var symbol = this.symbolOf(module, name);\n        if (!symbol.canonicalSymbol) {\n            this.canonicalizeSymbol(symbol);\n        }\n        return symbol;\n    };\n    return MetadataBundler;\n}());\nexports.MetadataBundler = MetadataBundler;\nvar CompilerHostAdapter = (function () {\n    function CompilerHostAdapter(host) {\n        this.host = host;\n        this.collector = new collector.MetadataCollector();\n    }\n    CompilerHostAdapter.prototype.getMetadataFor = function (fileName) {\n        var sourceFile = this.host.getSourceFile(fileName + '.ts', ts__default.ScriptTarget.Latest);\n        return this.collector.getMetadata(sourceFile);\n    };\n    return CompilerHostAdapter;\n}());\nexports.CompilerHostAdapter = CompilerHostAdapter;\nfunction resolveModule(importName, from) {\n    if (importName.startsWith('.') && from) {\n        var normalPath = path__default.normalize(path__default.join(path__default.dirname(from), importName));\n        if (!normalPath.startsWith('.') && from.startsWith('.')) {\n            // path.normalize() preserves leading '../' but not './'. This adds it back.\n            normalPath = \".\" + path__default.sep + normalPath;\n        }\n        // Replace windows path delimiters with forward-slashes. Otherwise the paths are not\n        // TypeScript compatible when building the bundle.\n        return normalPath.replace(/\\\\/g, '/');\n    }\n    return importName;\n}\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\nfunction getRootExport(symbol) {\n    return symbol.reexportedAs ? getRootExport(symbol.reexportedAs) : symbol;\n}\nfunction getSymbolDeclaration(symbol) {\n    return symbol.exports ? getSymbolDeclaration(symbol.exports) : symbol;\n}\n\n});\n\nvar index_writer = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar INDEX_HEADER = \"/**\\n * Generated bundle index. Do not edit.\\n */\\n\";\nfunction privateEntriesToIndex(index, privates) {\n    var results = [INDEX_HEADER];\n    // Export all of the index symbols.\n    results.push(\"export * from '\" + index + \"';\", '');\n    // Simplify the exports\n    var exports = new Map();\n    for (var _i = 0, privates_1 = privates; _i < privates_1.length; _i++) {\n        var entry = privates_1[_i];\n        var entries = exports.get(entry.module);\n        if (!entries) {\n            entries = [];\n            exports.set(entry.module, entries);\n        }\n        entries.push(entry);\n    }\n    var compareEntries = compare(function (e) { return e.name; });\n    var compareModules = compare(function (e) { return e[0]; });\n    var orderedExports = Array.from(exports)\n        .map(function (_a) {\n        var module = _a[0], entries = _a[1];\n        return [module, entries.sort(compareEntries)];\n    })\n        .sort(compareModules);\n    for (var _a = 0, orderedExports_1 = orderedExports; _a < orderedExports_1.length; _a++) {\n        var _b = orderedExports_1[_a], module_1 = _b[0], entries = _b[1];\n        var symbols = entries.map(function (e) { return e.name + \" as \" + e.privateName; });\n        results.push(\"export {\" + symbols + \"} from '\" + module_1 + \"';\");\n    }\n    return results.join('\\n');\n}\nexports.privateEntriesToIndex = privateEntriesToIndex;\nfunction compare(select) {\n    return function (a, b) {\n        var ak = select(a);\n        var bk = select(b);\n        return ak > bk ? 1 : ak < bk ? -1 : 0;\n    };\n}\n\n});\n\nvar bundle_index_host = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\n\nvar DTS = /\\.d\\.ts$/;\nvar JS_EXT = /(\\.js|)$/;\nfunction createSyntheticIndexHost(delegate, syntheticIndex) {\n    var normalSyntheticIndexName = path__default.normalize(syntheticIndex.name);\n    var indexContent = syntheticIndex.content;\n    var indexMetadata = syntheticIndex.metadata;\n    var newHost = Object.create(delegate);\n    newHost.fileExists = function (fileName) {\n        return path__default.normalize(fileName) == normalSyntheticIndexName || delegate.fileExists(fileName);\n    };\n    newHost.readFile = function (fileName) {\n        return path__default.normalize(fileName) == normalSyntheticIndexName ? indexContent :\n            delegate.readFile(fileName);\n    };\n    newHost.getSourceFile =\n        function (fileName, languageVersion, onError) {\n            if (path__default.normalize(fileName) == normalSyntheticIndexName) {\n                return ts__default.createSourceFile(fileName, indexContent, languageVersion, true);\n            }\n            return delegate.getSourceFile(fileName, languageVersion, onError);\n        };\n    newHost.writeFile =\n        function (fileName, data, writeByteOrderMark, onError, sourceFiles) {\n            delegate.writeFile(fileName, data, writeByteOrderMark, onError, sourceFiles);\n            if (fileName.match(DTS) && sourceFiles && sourceFiles.length == 1 &&\n                path__default.normalize(sourceFiles[0].fileName) == normalSyntheticIndexName) {\n                // If we are writing the synthetic index, write the metadata along side.\n                var metadataName = fileName.replace(DTS, '.metadata.json');\n                fs__default.writeFileSync(metadataName, indexMetadata, { encoding: 'utf8' });\n            }\n        };\n    return newHost;\n}\nfunction createBundleIndexHost(ngOptions, rootFiles, host) {\n    var files = rootFiles.filter(function (f) { return !DTS.test(f); });\n    if (files.length != 1) {\n        return {\n            host: host,\n            errors: [{\n                    file: null,\n                    start: null,\n                    length: null,\n                    messageText: 'Angular compiler option \"flatModuleIndex\" requires one and only one .ts file in the \"files\" field.',\n                    category: ts__default.DiagnosticCategory.Error,\n                    code: 0\n                }]\n        };\n    }\n    var file = files[0];\n    var indexModule = file.replace(/\\.ts$/, '');\n    var bundler$$1 = new bundler.MetadataBundler(indexModule, ngOptions.flatModuleId, new bundler.CompilerHostAdapter(host));\n    var metadataBundle = bundler$$1.getMetadataBundle();\n    var metadata = JSON.stringify(metadataBundle.metadata);\n    var name = path__default.join(path__default.dirname(indexModule), ngOptions.flatModuleOutFile.replace(JS_EXT, '.ts'));\n    var libraryIndex = \"./\" + path__default.basename(indexModule);\n    var content = index_writer.privateEntriesToIndex(libraryIndex, metadataBundle.privates);\n    host = createSyntheticIndexHost(host, { name: name, content: content, metadata: metadata });\n    return { host: host, indexName: name };\n}\nexports.createBundleIndexHost = createBundleIndexHost;\n\n});\n\nvar index = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(collector);\n__export(schema);\n__export(bundle_index_host);\n\n});\n\nvar compiler_1 = ( compiler && undefined ) || compiler;\n\nvar compiler_host = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (commonjsGlobal && commonjsGlobal.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\n\nvar EXT = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar DTS = /\\.d\\.ts$/;\nvar NODE_MODULES = '/node_modules/';\nvar IS_GENERATED = /\\.(ngfactory|ngstyle|ngsummary)$/;\nvar GENERATED_FILES = /\\.ngfactory\\.ts$|\\.ngstyle\\.ts$|\\.ngsummary\\.ts$/;\nvar GENERATED_OR_DTS_FILES = /\\.d\\.ts$|\\.ngfactory\\.ts$|\\.ngstyle\\.ts$|\\.ngsummary\\.ts$/;\nvar SHALLOW_IMPORT = /^((\\w|-)+|(@(\\w|-)+(\\/(\\w|-)+)+))$/;\nvar BaseAotCompilerHost = (function () {\n    function BaseAotCompilerHost(options, context) {\n        this.options = options;\n        this.context = context;\n        this.resolverCache = new Map();\n        this.flatModuleIndexCache = new Map();\n        this.flatModuleIndexNames = new Set();\n        this.flatModuleIndexRedirectNames = new Set();\n    }\n    BaseAotCompilerHost.prototype.getMetadataFor = function (filePath) {\n        if (!this.context.fileExists(filePath)) {\n            // If the file doesn't exists then we cannot return metadata for the file.\n            // This will occur if the user referenced a declared module for which no file\n            // exists for the module (i.e. jQuery or angularjs).\n            return;\n        }\n        if (DTS.test(filePath)) {\n            var metadatas = this.readMetadata(filePath);\n            if (!metadatas) {\n                // If there is a .d.ts file but no metadata file we need to produce a\n                // metadata from the .d.ts file as metadata files capture reexports\n                // (starting with v3).\n                metadatas = [this.upgradeMetadataWithDtsData({ '__symbolic': 'module', 'version': 1, 'metadata': {} }, filePath)];\n            }\n            return metadatas;\n        }\n        // Attention: don't cache this, so that e.g. the LanguageService\n        // can read in changes from source files in the metadata!\n        var metadata = this.getMetadataForSourceFile(filePath);\n        return metadata ? [metadata] : [];\n    };\n    BaseAotCompilerHost.prototype.readMetadata = function (dtsFilePath) {\n        var metadatas = this.resolverCache.get(dtsFilePath);\n        if (metadatas) {\n            return metadatas;\n        }\n        var metadataPath = dtsFilePath.replace(DTS, '.metadata.json');\n        if (!this.context.fileExists(metadataPath)) {\n            return undefined;\n        }\n        try {\n            var metadataOrMetadatas = JSON.parse(this.context.readFile(metadataPath));\n            var metadatas_1 = metadataOrMetadatas ?\n                (Array.isArray(metadataOrMetadatas) ? metadataOrMetadatas : [metadataOrMetadatas]) :\n                [];\n            if (metadatas_1.length) {\n                var maxMetadata = metadatas_1.reduce(function (p, c) { return p.version > c.version ? p : c; });\n                if (maxMetadata.version < index.METADATA_VERSION) {\n                    metadatas_1.push(this.upgradeMetadataWithDtsData(maxMetadata, dtsFilePath));\n                }\n            }\n            this.resolverCache.set(dtsFilePath, metadatas_1);\n            return metadatas_1;\n        }\n        catch (e) {\n            console.error(\"Failed to read JSON file \" + metadataPath);\n            throw e;\n        }\n    };\n    BaseAotCompilerHost.prototype.upgradeMetadataWithDtsData = function (oldMetadata, dtsFilePath) {\n        // patch v1 to v3 by adding exports and the `extends` clause.\n        // patch v3 to v4 by adding `interface` symbols for TypeAlias\n        var newMetadata = {\n            '__symbolic': 'module',\n            'version': index.METADATA_VERSION,\n            'metadata': __assign({}, oldMetadata.metadata),\n        };\n        if (oldMetadata.exports) {\n            newMetadata.exports = oldMetadata.exports;\n        }\n        if (oldMetadata.importAs) {\n            newMetadata.importAs = oldMetadata.importAs;\n        }\n        if (oldMetadata.origins) {\n            newMetadata.origins = oldMetadata.origins;\n        }\n        var dtsMetadata = this.getMetadataForSourceFile(dtsFilePath);\n        if (dtsMetadata) {\n            for (var prop in dtsMetadata.metadata) {\n                if (!newMetadata.metadata[prop]) {\n                    newMetadata.metadata[prop] = dtsMetadata.metadata[prop];\n                }\n            }\n            // Only copy exports from exports from metadata prior to version 3.\n            // Starting with version 3 the collector began collecting exports and\n            // this should be redundant. Also, with bundler will rewrite the exports\n            // which will hoist the exports from modules referenced indirectly causing\n            // the imports to be different than the .d.ts files and using the .d.ts file\n            // exports would cause the StaticSymbolResolver to redirect symbols to the\n            // incorrect location.\n            if ((!oldMetadata.version || oldMetadata.version < 3) && dtsMetadata.exports) {\n                newMetadata.exports = dtsMetadata.exports;\n            }\n        }\n        return newMetadata;\n    };\n    BaseAotCompilerHost.prototype.loadResource = function (filePath) {\n        if (this.context.readResource)\n            return this.context.readResource(filePath);\n        if (!this.context.fileExists(filePath)) {\n            throw compiler_1.syntaxError(\"Error: Resource file not found: \" + filePath);\n        }\n        return this.context.readFile(filePath);\n    };\n    BaseAotCompilerHost.prototype.loadSummary = function (filePath) {\n        if (this.context.fileExists(filePath)) {\n            return this.context.readFile(filePath);\n        }\n        return null;\n    };\n    BaseAotCompilerHost.prototype.isSourceFile = function (filePath) {\n        var excludeRegex = this.options.generateCodeForLibraries === false ? GENERATED_OR_DTS_FILES : GENERATED_FILES;\n        if (excludeRegex.test(filePath)) {\n            return false;\n        }\n        if (DTS.test(filePath)) {\n            // Check for a bundle index.\n            if (this.hasBundleIndex(filePath)) {\n                var normalFilePath = path__default.normalize(filePath);\n                return this.flatModuleIndexNames.has(normalFilePath) ||\n                    this.flatModuleIndexRedirectNames.has(normalFilePath);\n            }\n        }\n        return true;\n    };\n    BaseAotCompilerHost.prototype.hasBundleIndex = function (filePath) {\n        var _this = this;\n        var checkBundleIndex = function (directory) {\n            var result = _this.flatModuleIndexCache.get(directory);\n            if (result == null) {\n                if (path__default.basename(directory) == 'node_module') {\n                    // Don't look outside the node_modules this package is installed in.\n                    result = false;\n                }\n                else {\n                    // A bundle index exists if the typings .d.ts file has a metadata.json that has an\n                    // importAs.\n                    try {\n                        var packageFile = path__default.join(directory, 'package.json');\n                        if (_this.context.fileExists(packageFile)) {\n                            // Once we see a package.json file, assume false until it we find the bundle index.\n                            result = false;\n                            var packageContent = JSON.parse(_this.context.readFile(packageFile));\n                            if (packageContent.typings) {\n                                var typings = path__default.normalize(path__default.join(directory, packageContent.typings));\n                                if (DTS.test(typings)) {\n                                    var metadataFile = typings.replace(DTS, '.metadata.json');\n                                    if (_this.context.fileExists(metadataFile)) {\n                                        var metadata = JSON.parse(_this.context.readFile(metadataFile));\n                                        if (metadata.flatModuleIndexRedirect) {\n                                            _this.flatModuleIndexRedirectNames.add(typings);\n                                            // Note: don't set result = true,\n                                            // as this would mark this folder\n                                            // as having a bundleIndex too early without\n                                            // filling the bundleIndexNames.\n                                        }\n                                        else if (metadata.importAs) {\n                                            _this.flatModuleIndexNames.add(typings);\n                                            result = true;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            var parent_1 = path__default.dirname(directory);\n                            if (parent_1 != directory) {\n                                // Try the parent directory.\n                                result = checkBundleIndex(parent_1);\n                            }\n                            else {\n                                result = false;\n                            }\n                        }\n                    }\n                    catch (e) {\n                        // If we encounter any errors assume we this isn't a bundle index.\n                        result = false;\n                    }\n                }\n                _this.flatModuleIndexCache.set(directory, result);\n            }\n            return result;\n        };\n        return checkBundleIndex(path__default.dirname(filePath));\n    };\n    return BaseAotCompilerHost;\n}());\nexports.BaseAotCompilerHost = BaseAotCompilerHost;\n// TODO(tbosch): remove this once G3 uses the transformer compiler!\nvar CompilerHost = (function (_super) {\n    __extends(CompilerHost, _super);\n    function CompilerHost(program, options, context, collectorOptions) {\n        var _this = _super.call(this, options, context) || this;\n        _this.program = program;\n        _this.moduleFileNames = new Map();\n        _this.metadataProvider = new index.MetadataCollector(collectorOptions);\n        // normalize the path so that it never ends with '/'.\n        _this.basePath = path__default.normalize(path__default.join(_this.options.basePath, '.')).replace(/\\\\/g, '/');\n        _this.genDir = path__default.normalize(path__default.join(_this.options.genDir, '.')).replace(/\\\\/g, '/');\n        var genPath = path__default.relative(_this.basePath, _this.genDir);\n        _this.isGenDirChildOfRootDir = genPath === '' || !genPath.startsWith('..');\n        _this.resolveModuleNameHost = Object.create(_this.context);\n        // When calling ts.resolveModuleName,\n        // additional allow checks for .d.ts files to be done based on\n        // checks for .ngsummary.json files,\n        // so that our codegen depends on fewer inputs and requires to be called\n        // less often.\n        // This is needed as we use ts.resolveModuleName in reflector_host\n        // and it should be able to resolve summary file names.\n        _this.resolveModuleNameHost.fileExists = function (fileName) {\n            if (_this.context.fileExists(fileName)) {\n                return true;\n            }\n            if (DTS.test(fileName)) {\n                var base = fileName.substring(0, fileName.length - 5);\n                return _this.context.fileExists(base + '.ngsummary.json');\n            }\n            return false;\n        };\n        _this.urlResolver = compiler_1.createOfflineCompileUrlResolver();\n        return _this;\n    }\n    CompilerHost.prototype.getSourceFile = function (filePath) {\n        var sf = this.program.getSourceFile(filePath);\n        if (!sf) {\n            if (this.context.fileExists(filePath)) {\n                var sourceText = this.context.readFile(filePath);\n                sf = ts__default.createSourceFile(filePath, sourceText, ts__default.ScriptTarget.Latest, true);\n            }\n            else {\n                throw new Error(\"Source file \" + filePath + \" not present in program.\");\n            }\n        }\n        return sf;\n    };\n    CompilerHost.prototype.getMetadataForSourceFile = function (filePath) {\n        return this.metadataProvider.getMetadata(this.getSourceFile(filePath));\n    };\n    CompilerHost.prototype.toSummaryFileName = function (fileName, referringSrcFileName) {\n        return fileName.replace(EXT, '') + '.d.ts';\n    };\n    CompilerHost.prototype.fromSummaryFileName = function (fileName, referringLibFileName) { return fileName; };\n    CompilerHost.prototype.calculateEmitPath = function (filePath) {\n        // Write codegen in a directory structure matching the sources.\n        var root = this.options.basePath;\n        for (var _i = 0, _a = this.options.rootDirs || []; _i < _a.length; _i++) {\n            var eachRootDir = _a[_i];\n            if (this.options.trace) {\n                console.error(\"Check if \" + filePath + \" is under rootDirs element \" + eachRootDir);\n            }\n            if (path__default.relative(eachRootDir, filePath).indexOf('.') !== 0) {\n                root = eachRootDir;\n            }\n        }\n        // transplant the codegen path to be inside the `genDir`\n        var relativePath = path__default.relative(root, filePath);\n        while (relativePath.startsWith('..' + path__default.sep)) {\n            // Strip out any `..` path such as: `../node_modules/@foo` as we want to put everything\n            // into `genDir`.\n            relativePath = relativePath.substr(3);\n        }\n        return path__default.join(this.options.genDir, relativePath);\n    };\n    // We use absolute paths on disk as canonical.\n    CompilerHost.prototype.getCanonicalFileName = function (fileName) { return fileName; };\n    CompilerHost.prototype.moduleNameToFileName = function (m, containingFile) {\n        var key = m + ':' + (containingFile || '');\n        var result = this.moduleFileNames.get(key) || null;\n        if (!result) {\n            if (!containingFile || !containingFile.length) {\n                if (m.indexOf('.') === 0) {\n                    throw new Error('Resolution of relative paths requires a containing file.');\n                }\n                // Any containing file gives the same result for absolute imports\n                containingFile = this.getCanonicalFileName(path__default.join(this.basePath, 'index.ts'));\n            }\n            m = m.replace(EXT, '');\n            var resolved = ts__default.resolveModuleName(m, containingFile.replace(/\\\\/g, '/'), this.options, this.resolveModuleNameHost)\n                .resolvedModule;\n            result = resolved ? this.getCanonicalFileName(resolved.resolvedFileName) : null;\n            this.moduleFileNames.set(key, result);\n        }\n        return result;\n    };\n    /**\n     * We want a moduleId that will appear in import statements in the generated code.\n     * These need to be in a form that system.js can load, so absolute file paths don't work.\n     *\n     * The `containingFile` is always in the `genDir`, where as the `importedFile` can be in\n     * `genDir`, `node_module` or `basePath`.  The `importedFile` is either a generated file or\n     * existing file.\n     *\n     *               | genDir   | node_module |  rootDir\n     * --------------+----------+-------------+----------\n     * generated     | relative |   relative  |   n/a\n     * existing file |   n/a    |   absolute  |  relative(*)\n     *\n     * NOTE: (*) the relative path is computed depending on `isGenDirChildOfRootDir`.\n     */\n    CompilerHost.prototype.fileNameToModuleName = function (importedFile, containingFile) {\n        // If a file does not yet exist (because we compile it later), we still need to\n        // assume it exists it so that the `resolve` method works!\n        if (importedFile !== containingFile && !this.context.fileExists(importedFile)) {\n            this.context.assumeFileExists(importedFile);\n        }\n        containingFile = this.rewriteGenDirPath(containingFile);\n        var containingDir = path__default.dirname(containingFile);\n        // drop extension\n        importedFile = importedFile.replace(EXT, '');\n        var nodeModulesIndex = importedFile.indexOf(NODE_MODULES);\n        var importModule = nodeModulesIndex === -1 ?\n            null :\n            importedFile.substring(nodeModulesIndex + NODE_MODULES.length);\n        var isGeneratedFile = IS_GENERATED.test(importedFile);\n        if (isGeneratedFile) {\n            // rewrite to genDir path\n            if (importModule) {\n                // it is generated, therefore we do a relative path to the factory\n                return this.dotRelative(containingDir, this.genDir + NODE_MODULES + importModule);\n            }\n            else {\n                // assume that import is also in `genDir`\n                importedFile = this.rewriteGenDirPath(importedFile);\n                return this.dotRelative(containingDir, importedFile);\n            }\n        }\n        else {\n            // user code import\n            if (importModule) {\n                return importModule;\n            }\n            else {\n                if (!this.isGenDirChildOfRootDir) {\n                    // assume that they are on top of each other.\n                    importedFile = importedFile.replace(this.basePath, this.genDir);\n                }\n                if (SHALLOW_IMPORT.test(importedFile)) {\n                    return importedFile;\n                }\n                return this.dotRelative(containingDir, importedFile);\n            }\n        }\n    };\n    CompilerHost.prototype.resourceNameToFileName = function (m, containingFile) {\n        return this.urlResolver.resolve(containingFile, m);\n    };\n    /**\n     * Moves the path into `genDir` folder while preserving the `node_modules` directory.\n     */\n    CompilerHost.prototype.rewriteGenDirPath = function (filepath) {\n        var nodeModulesIndex = filepath.indexOf(NODE_MODULES);\n        if (nodeModulesIndex !== -1) {\n            // If we are in node_modules, transplant them into `genDir`.\n            return path__default.join(this.genDir, filepath.substring(nodeModulesIndex));\n        }\n        else {\n            // pretend that containing file is on top of the `genDir` to normalize the paths.\n            // we apply the `genDir` => `rootDir` delta through `rootDirPrefix` later.\n            return filepath.replace(this.basePath, this.genDir);\n        }\n    };\n    CompilerHost.prototype.dotRelative = function (from, to) {\n        var rPath = path__default.relative(from, to).replace(/\\\\/g, '/');\n        return rPath.startsWith('.') ? rPath : './' + rPath;\n    };\n    return CompilerHost;\n}(BaseAotCompilerHost));\nexports.CompilerHost = CompilerHost;\nvar CompilerHostContextAdapter = (function () {\n    function CompilerHostContextAdapter() {\n        this.assumedExists = {};\n    }\n    CompilerHostContextAdapter.prototype.assumeFileExists = function (fileName) { this.assumedExists[fileName] = true; };\n    return CompilerHostContextAdapter;\n}());\nexports.CompilerHostContextAdapter = CompilerHostContextAdapter;\nvar ModuleResolutionHostAdapter = (function (_super) {\n    __extends(ModuleResolutionHostAdapter, _super);\n    function ModuleResolutionHostAdapter(host) {\n        var _this = _super.call(this) || this;\n        _this.host = host;\n        if (host.directoryExists) {\n            _this.directoryExists = function (directoryName) { return host.directoryExists(directoryName); };\n        }\n        return _this;\n    }\n    ModuleResolutionHostAdapter.prototype.fileExists = function (fileName) {\n        return this.assumedExists[fileName] || this.host.fileExists(fileName);\n    };\n    ModuleResolutionHostAdapter.prototype.readFile = function (fileName) { return this.host.readFile(fileName); };\n    ModuleResolutionHostAdapter.prototype.readResource = function (s) {\n        if (!this.host.fileExists(s)) {\n            // TODO: We should really have a test for error cases like this!\n            throw new Error(\"Compilation failed. Resource file not found: \" + s);\n        }\n        return Promise.resolve(this.host.readFile(s));\n    };\n    return ModuleResolutionHostAdapter;\n}(CompilerHostContextAdapter));\nexports.ModuleResolutionHostAdapter = ModuleResolutionHostAdapter;\nvar NodeCompilerHostContext = (function (_super) {\n    __extends(NodeCompilerHostContext, _super);\n    function NodeCompilerHostContext() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NodeCompilerHostContext.prototype.fileExists = function (fileName) {\n        return this.assumedExists[fileName] || fs__default.existsSync(fileName);\n    };\n    NodeCompilerHostContext.prototype.directoryExists = function (directoryName) {\n        try {\n            return fs__default.statSync(directoryName).isDirectory();\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    NodeCompilerHostContext.prototype.readFile = function (fileName) { return fs__default.readFileSync(fileName, 'utf8'); };\n    NodeCompilerHostContext.prototype.readResource = function (s) {\n        if (!this.fileExists(s)) {\n            // TODO: We should really have a test for error cases like this!\n            throw new Error(\"Compilation failed. Resource file not found: \" + s);\n        }\n        return Promise.resolve(this.readFile(s));\n    };\n    return NodeCompilerHostContext;\n}(CompilerHostContextAdapter));\nexports.NodeCompilerHostContext = NodeCompilerHostContext;\n\n});\n\nvar symbols$2 = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An enumeration of basic types.\n *\n * @experimental\n */\nvar BuiltinType;\n(function (BuiltinType) {\n    /**\n     * The type is a type that can hold any other type.\n     */\n    BuiltinType[BuiltinType[\"Any\"] = 0] = \"Any\";\n    /**\n     * The type of a string literal.\n     */\n    BuiltinType[BuiltinType[\"String\"] = 1] = \"String\";\n    /**\n     * The type of a numeric literal.\n     */\n    BuiltinType[BuiltinType[\"Number\"] = 2] = \"Number\";\n    /**\n     * The type of the `true` and `false` literals.\n     */\n    BuiltinType[BuiltinType[\"Boolean\"] = 3] = \"Boolean\";\n    /**\n     * The type of the `undefined` literal.\n     */\n    BuiltinType[BuiltinType[\"Undefined\"] = 4] = \"Undefined\";\n    /**\n     * the type of the `null` literal.\n     */\n    BuiltinType[BuiltinType[\"Null\"] = 5] = \"Null\";\n    /**\n     * the type is an unbound type parameter.\n     */\n    BuiltinType[BuiltinType[\"Unbound\"] = 6] = \"Unbound\";\n    /**\n     * Not a built-in type.\n     */\n    BuiltinType[BuiltinType[\"Other\"] = 7] = \"Other\";\n})(BuiltinType = exports.BuiltinType || (exports.BuiltinType = {}));\n\n});\n\nvar expression_type = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\nvar DiagnosticKind;\n(function (DiagnosticKind) {\n    DiagnosticKind[DiagnosticKind[\"Error\"] = 0] = \"Error\";\n    DiagnosticKind[DiagnosticKind[\"Warning\"] = 1] = \"Warning\";\n})(DiagnosticKind = exports.DiagnosticKind || (exports.DiagnosticKind = {}));\nvar TypeDiagnostic = (function () {\n    function TypeDiagnostic(kind, message, ast) {\n        this.kind = kind;\n        this.message = message;\n        this.ast = ast;\n    }\n    return TypeDiagnostic;\n}());\nexports.TypeDiagnostic = TypeDiagnostic;\n// AstType calculatetype of the ast given AST element.\nvar AstType = (function () {\n    function AstType(scope, query, context) {\n        this.scope = scope;\n        this.query = query;\n        this.context = context;\n    }\n    AstType.prototype.getType = function (ast) { return ast.visit(this); };\n    AstType.prototype.getDiagnostics = function (ast) {\n        this.diagnostics = [];\n        var type = ast.visit(this);\n        if (this.context.event && type.callable) {\n            this.reportWarning('Unexpected callable expression. Expected a method call', ast);\n        }\n        return this.diagnostics;\n    };\n    AstType.prototype.visitBinary = function (ast) {\n        var _this = this;\n        // Treat undefined and null as other.\n        function normalize(kind, other) {\n            switch (kind) {\n                case symbols$2.BuiltinType.Undefined:\n                case symbols$2.BuiltinType.Null:\n                    return normalize(other, symbols$2.BuiltinType.Other);\n            }\n            return kind;\n        }\n        var getType = function (ast, operation) {\n            var type = _this.getType(ast);\n            if (type.nullable) {\n                switch (operation) {\n                    case '&&':\n                    case '||':\n                    case '==':\n                    case '!=':\n                    case '===':\n                    case '!==':\n                        // Nullable allowed.\n                        break;\n                    default:\n                        _this.reportError(\"The expression might be null\", ast);\n                        break;\n                }\n                return _this.query.getNonNullableType(type);\n            }\n            return type;\n        };\n        var leftType = getType(ast.left, ast.operation);\n        var rightType = getType(ast.right, ast.operation);\n        var leftRawKind = this.query.getTypeKind(leftType);\n        var rightRawKind = this.query.getTypeKind(rightType);\n        var leftKind = normalize(leftRawKind, rightRawKind);\n        var rightKind = normalize(rightRawKind, leftRawKind);\n        // The following swtich implements operator typing similar to the\n        // type production tables in the TypeScript specification.\n        // https://github.com/Microsoft/TypeScript/blob/v1.8.10/doc/spec.md#4.19\n        var operKind = leftKind << 8 | rightKind;\n        switch (ast.operation) {\n            case '*':\n            case '/':\n            case '%':\n            case '-':\n            case '<<':\n            case '>>':\n            case '>>>':\n            case '&':\n            case '^':\n            case '|':\n                switch (operKind) {\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Number:\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.Number);\n                    default:\n                        var errorAst = ast.left;\n                        switch (leftKind) {\n                            case symbols$2.BuiltinType.Any:\n                            case symbols$2.BuiltinType.Number:\n                                errorAst = ast.right;\n                                break;\n                        }\n                        return this.reportError('Expected a numeric type', errorAst);\n                }\n            case '+':\n                switch (operKind) {\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Boolean:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Other:\n                    case symbols$2.BuiltinType.Boolean << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Other << 8 | symbols$2.BuiltinType.Any:\n                        return this.anyType;\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.Boolean << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.Boolean:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.Other:\n                    case symbols$2.BuiltinType.Other << 8 | symbols$2.BuiltinType.String:\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.String);\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Number:\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.Number);\n                    case symbols$2.BuiltinType.Boolean << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.Other << 8 | symbols$2.BuiltinType.Number:\n                        return this.reportError('Expected a number type', ast.left);\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Boolean:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Other:\n                        return this.reportError('Expected a number type', ast.right);\n                    default:\n                        return this.reportError('Expected operands to be a string or number type', ast);\n                }\n            case '>':\n            case '<':\n            case '<=':\n            case '>=':\n            case '==':\n            case '!=':\n            case '===':\n            case '!==':\n                switch (operKind) {\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Boolean:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.Any << 8 | symbols$2.BuiltinType.Other:\n                    case symbols$2.BuiltinType.Boolean << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Boolean << 8 | symbols$2.BuiltinType.Boolean:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Number << 8 | symbols$2.BuiltinType.Number:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.String << 8 | symbols$2.BuiltinType.String:\n                    case symbols$2.BuiltinType.Other << 8 | symbols$2.BuiltinType.Any:\n                    case symbols$2.BuiltinType.Other << 8 | symbols$2.BuiltinType.Other:\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.Boolean);\n                    default:\n                        return this.reportError('Expected the operants to be of similar type or any', ast);\n                }\n            case '&&':\n                return rightType;\n            case '||':\n                return this.query.getTypeUnion(leftType, rightType);\n        }\n        return this.reportError(\"Unrecognized operator \" + ast.operation, ast);\n    };\n    AstType.prototype.visitChain = function (ast) {\n        if (this.diagnostics) {\n            // If we are producing diagnostics, visit the children\n            compiler_1.visitAstChildren(ast, this);\n        }\n        // The type of a chain is always undefined.\n        return this.query.getBuiltinType(symbols$2.BuiltinType.Undefined);\n    };\n    AstType.prototype.visitConditional = function (ast) {\n        // The type of a conditional is the union of the true and false conditions.\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        return this.query.getTypeUnion(this.getType(ast.trueExp), this.getType(ast.falseExp));\n    };\n    AstType.prototype.visitFunctionCall = function (ast) {\n        var _this = this;\n        // The type of a function call is the return type of the selected signature.\n        // The signature is selected based on the types of the arguments. Angular doesn't\n        // support contextual typing of arguments so this is simpler than TypeScript's\n        // version.\n        var args = ast.args.map(function (arg) { return _this.getType(arg); });\n        var target = this.getType(ast.target);\n        if (!target || !target.callable)\n            return this.reportError('Call target is not callable', ast);\n        var signature = target.selectSignature(args);\n        if (signature)\n            return signature.result;\n        // TODO: Consider a better error message here.\n        return this.reportError('Unable no compatible signature found for call', ast);\n    };\n    AstType.prototype.visitImplicitReceiver = function (ast) {\n        var _this = this;\n        // Return a pseudo-symbol for the implicit receiver.\n        // The members of the implicit receiver are what is defined by the\n        // scope passed into this class.\n        return {\n            name: '$implict',\n            kind: 'component',\n            language: 'ng-template',\n            type: undefined,\n            container: undefined,\n            callable: false,\n            nullable: false,\n            public: true,\n            definition: undefined,\n            members: function () { return _this.scope; },\n            signatures: function () { return []; },\n            selectSignature: function (types) { return undefined; },\n            indexed: function (argument) { return undefined; }\n        };\n    };\n    AstType.prototype.visitInterpolation = function (ast) {\n        // If we are producing diagnostics, visit the children.\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        return this.undefinedType;\n    };\n    AstType.prototype.visitKeyedRead = function (ast) {\n        var targetType = this.getType(ast.obj);\n        var keyType = this.getType(ast.key);\n        var result = targetType.indexed(keyType);\n        return result || this.anyType;\n    };\n    AstType.prototype.visitKeyedWrite = function (ast) {\n        // The write of a type is the type of the value being written.\n        return this.getType(ast.value);\n    };\n    AstType.prototype.visitLiteralArray = function (ast) {\n        var _this = this;\n        // A type literal is an array type of the union of the elements\n        return this.query.getArrayType((_a = this.query).getTypeUnion.apply(_a, ast.expressions.map(function (element) { return _this.getType(element); })));\n        var _a;\n    };\n    AstType.prototype.visitLiteralMap = function (ast) {\n        // If we are producing diagnostics, visit the children\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        // TODO: Return a composite type.\n        return this.anyType;\n    };\n    AstType.prototype.visitLiteralPrimitive = function (ast) {\n        // The type of a literal primitive depends on the value of the literal.\n        switch (ast.value) {\n            case true:\n            case false:\n                return this.query.getBuiltinType(symbols$2.BuiltinType.Boolean);\n            case null:\n                return this.query.getBuiltinType(symbols$2.BuiltinType.Null);\n            case undefined:\n                return this.query.getBuiltinType(symbols$2.BuiltinType.Undefined);\n            default:\n                switch (typeof ast.value) {\n                    case 'string':\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.String);\n                    case 'number':\n                        return this.query.getBuiltinType(symbols$2.BuiltinType.Number);\n                    default:\n                        return this.reportError('Unrecognized primitive', ast);\n                }\n        }\n    };\n    AstType.prototype.visitMethodCall = function (ast) {\n        return this.resolveMethodCall(this.getType(ast.receiver), ast);\n    };\n    AstType.prototype.visitPipe = function (ast) {\n        var _this = this;\n        // The type of a pipe node is the return type of the pipe's transform method. The table returned\n        // by getPipes() is expected to contain symbols with the corresponding transform method type.\n        var pipe = this.query.getPipes().get(ast.name);\n        if (!pipe)\n            return this.reportError(\"No pipe by the name \" + ast.name + \" found\", ast);\n        var expType = this.getType(ast.exp);\n        var signature = pipe.selectSignature([expType].concat(ast.args.map(function (arg) { return _this.getType(arg); })));\n        if (!signature)\n            return this.reportError('Unable to resolve signature for pipe invocation', ast);\n        return signature.result;\n    };\n    AstType.prototype.visitPrefixNot = function (ast) {\n        // The type of a prefix ! is always boolean.\n        return this.query.getBuiltinType(symbols$2.BuiltinType.Boolean);\n    };\n    AstType.prototype.visitNonNullAssert = function (ast) {\n        var expressionType = this.getType(ast.expression);\n        return this.query.getNonNullableType(expressionType);\n    };\n    AstType.prototype.visitPropertyRead = function (ast) {\n        return this.resolvePropertyRead(this.getType(ast.receiver), ast);\n    };\n    AstType.prototype.visitPropertyWrite = function (ast) {\n        // The type of a write is the type of the value being written.\n        return this.getType(ast.value);\n    };\n    AstType.prototype.visitQuote = function (ast) {\n        // The type of a quoted expression is any.\n        return this.query.getBuiltinType(symbols$2.BuiltinType.Any);\n    };\n    AstType.prototype.visitSafeMethodCall = function (ast) {\n        return this.resolveMethodCall(this.query.getNonNullableType(this.getType(ast.receiver)), ast);\n    };\n    AstType.prototype.visitSafePropertyRead = function (ast) {\n        return this.resolvePropertyRead(this.query.getNonNullableType(this.getType(ast.receiver)), ast);\n    };\n    Object.defineProperty(AstType.prototype, \"anyType\", {\n        get: function () {\n            var result = this._anyType;\n            if (!result) {\n                result = this._anyType = this.query.getBuiltinType(symbols$2.BuiltinType.Any);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstType.prototype, \"undefinedType\", {\n        get: function () {\n            var result = this._undefinedType;\n            if (!result) {\n                result = this._undefinedType = this.query.getBuiltinType(symbols$2.BuiltinType.Undefined);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AstType.prototype.resolveMethodCall = function (receiverType, ast) {\n        var _this = this;\n        if (this.isAny(receiverType)) {\n            return this.anyType;\n        }\n        // The type of a method is the selected methods result type.\n        var method = receiverType.members().get(ast.name);\n        if (!method)\n            return this.reportError(\"Unknown method '\" + ast.name + \"'\", ast);\n        if (!method.type)\n            return this.reportError(\"Could not find a type for '\" + ast.name + \"'\", ast);\n        if (!method.type.callable)\n            return this.reportError(\"Member '\" + ast.name + \"' is not callable\", ast);\n        var signature = method.type.selectSignature(ast.args.map(function (arg) { return _this.getType(arg); }));\n        if (!signature)\n            return this.reportError(\"Unable to resolve signature for call of method \" + ast.name, ast);\n        return signature.result;\n    };\n    AstType.prototype.resolvePropertyRead = function (receiverType, ast) {\n        if (this.isAny(receiverType)) {\n            return this.anyType;\n        }\n        // The type of a property read is the seelcted member's type.\n        var member = receiverType.members().get(ast.name);\n        if (!member) {\n            var receiverInfo = receiverType.name;\n            if (receiverInfo == '$implict') {\n                receiverInfo =\n                    'The component declaration, template variable declarations, and element references do';\n            }\n            else if (receiverType.nullable) {\n                return this.reportError(\"The expression might be null\", ast.receiver);\n            }\n            else {\n                receiverInfo = \"'\" + receiverInfo + \"' does\";\n            }\n            return this.reportError(\"Identifier '\" + ast.name + \"' is not defined. \" + receiverInfo + \" not contain such a member\", ast);\n        }\n        if (!member.public) {\n            var receiverInfo = receiverType.name;\n            if (receiverInfo == '$implict') {\n                receiverInfo = 'the component';\n            }\n            else {\n                receiverInfo = \"'\" + receiverInfo + \"'\";\n            }\n            this.reportWarning(\"Identifier '\" + ast.name + \"' refers to a private member of \" + receiverInfo, ast);\n        }\n        return member.type;\n    };\n    AstType.prototype.reportError = function (message, ast) {\n        if (this.diagnostics) {\n            this.diagnostics.push(new TypeDiagnostic(DiagnosticKind.Error, message, ast));\n        }\n        return this.anyType;\n    };\n    AstType.prototype.reportWarning = function (message, ast) {\n        if (this.diagnostics) {\n            this.diagnostics.push(new TypeDiagnostic(DiagnosticKind.Warning, message, ast));\n        }\n        return this.anyType;\n    };\n    AstType.prototype.isAny = function (symbol) {\n        return !symbol || this.query.getTypeKind(symbol) == symbols$2.BuiltinType.Any ||\n            (!!symbol.type && this.isAny(symbol.type));\n    };\n    return AstType;\n}());\nexports.AstType = AstType;\n\n});\n\nvar expression_diagnostics = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\nfunction getTemplateExpressionDiagnostics(info) {\n    var visitor = new ExpressionDiagnosticsVisitor(info, function (path$$1, includeEvent) {\n        return getExpressionScope(info, path$$1, includeEvent);\n    });\n    compiler_1.templateVisitAll(visitor, info.templateAst);\n    return visitor.diagnostics;\n}\nexports.getTemplateExpressionDiagnostics = getTemplateExpressionDiagnostics;\nfunction getExpressionDiagnostics(scope, ast, query, context) {\n    if (context === void 0) { context = {}; }\n    var analyzer = new expression_type.AstType(scope, query, context);\n    analyzer.getDiagnostics(ast);\n    return analyzer.diagnostics;\n}\nexports.getExpressionDiagnostics = getExpressionDiagnostics;\nfunction getReferences(info) {\n    var result = [];\n    function processReferences(references) {\n        var _loop_1 = function (reference) {\n            var type = undefined;\n            if (reference.value) {\n                type = info.query.getTypeSymbol(compiler_1.tokenReference(reference.value));\n            }\n            result.push({\n                name: reference.name,\n                kind: 'reference',\n                type: type || info.query.getBuiltinType(symbols$2.BuiltinType.Any),\n                get definition() { return getDefinitionOf(info, reference); }\n            });\n        };\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var reference = references_1[_i];\n            _loop_1(reference);\n        }\n    }\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visitEmbeddedTemplate = function (ast, context) {\n            _super.prototype.visitEmbeddedTemplate.call(this, ast, context);\n            processReferences(ast.references);\n        };\n        class_1.prototype.visitElement = function (ast, context) {\n            _super.prototype.visitElement.call(this, ast, context);\n            processReferences(ast.references);\n        };\n        return class_1;\n    }(compiler_1.RecursiveTemplateAstVisitor));\n    compiler_1.templateVisitAll(visitor, info.templateAst);\n    return result;\n}\nfunction getDefinitionOf(info, ast) {\n    if (info.fileName) {\n        var templateOffset = info.offset;\n        return [{\n                fileName: info.fileName,\n                span: {\n                    start: ast.sourceSpan.start.offset + templateOffset,\n                    end: ast.sourceSpan.end.offset + templateOffset\n                }\n            }];\n    }\n}\nfunction getVarDeclarations(info, path$$1) {\n    var result = [];\n    var current = path$$1.tail;\n    while (current) {\n        if (current instanceof compiler_1.EmbeddedTemplateAst) {\n            var _loop_2 = function (variable) {\n                var name_1 = variable.name;\n                // Find the first directive with a context.\n                var context = current.directives.map(function (d) { return info.query.getTemplateContext(d.directive.type.reference); })\n                    .find(function (c) { return !!c; });\n                // Determine the type of the context field referenced by variable.value.\n                var type = undefined;\n                if (context) {\n                    var value = context.get(variable.value);\n                    if (value) {\n                        type = value.type;\n                        var kind = info.query.getTypeKind(type);\n                        if (kind === symbols$2.BuiltinType.Any || kind == symbols$2.BuiltinType.Unbound) {\n                            // The any type is not very useful here. For special cases, such as ngFor, we can do\n                            // better.\n                            type = refinedVariableType(type, info, current);\n                        }\n                    }\n                }\n                if (!type) {\n                    type = info.query.getBuiltinType(symbols$2.BuiltinType.Any);\n                }\n                result.push({\n                    name: name_1,\n                    kind: 'variable', type: type, get definition() { return getDefinitionOf(info, variable); }\n                });\n            };\n            for (var _i = 0, _a = current.variables; _i < _a.length; _i++) {\n                var variable = _a[_i];\n                _loop_2(variable);\n            }\n        }\n        current = path$$1.parentOf(current);\n    }\n    return result;\n}\nfunction refinedVariableType(type, info, templateElement) {\n    // Special case the ngFor directive\n    var ngForDirective = templateElement.directives.find(function (d) {\n        var name = compiler_1.identifierName(d.directive.type);\n        return name == 'NgFor' || name == 'NgForOf';\n    });\n    if (ngForDirective) {\n        var ngForOfBinding = ngForDirective.inputs.find(function (i) { return i.directiveName == 'ngForOf'; });\n        if (ngForOfBinding) {\n            var bindingType = new expression_type.AstType(info.members, info.query, {}).getType(ngForOfBinding.value);\n            if (bindingType) {\n                var result = info.query.getElementType(bindingType);\n                if (result) {\n                    return result;\n                }\n            }\n        }\n    }\n    // We can't do better, return any\n    return info.query.getBuiltinType(symbols$2.BuiltinType.Any);\n}\nfunction getEventDeclaration(info, includeEvent) {\n    var result = [];\n    if (includeEvent) {\n        // TODO: Determine the type of the event parameter based on the Observable<T> or EventEmitter<T>\n        // of the event.\n        result = [{ name: '$event', kind: 'variable', type: info.query.getBuiltinType(symbols$2.BuiltinType.Any) }];\n    }\n    return result;\n}\nfunction getExpressionScope(info, path$$1, includeEvent) {\n    var result = info.members;\n    var references = getReferences(info);\n    var variables = getVarDeclarations(info, path$$1);\n    var events = getEventDeclaration(info, includeEvent);\n    if (references.length || variables.length || events.length) {\n        var referenceTable = info.query.createSymbolTable(references);\n        var variableTable = info.query.createSymbolTable(variables);\n        var eventsTable = info.query.createSymbolTable(events);\n        result = info.query.mergeSymbolTable([result, referenceTable, variableTable, eventsTable]);\n    }\n    return result;\n}\nexports.getExpressionScope = getExpressionScope;\nvar ExpressionDiagnosticsVisitor = (function (_super) {\n    __extends(ExpressionDiagnosticsVisitor, _super);\n    function ExpressionDiagnosticsVisitor(info, getExpressionScope) {\n        var _this = _super.call(this) || this;\n        _this.info = info;\n        _this.getExpressionScope = getExpressionScope;\n        _this.diagnostics = [];\n        _this.path = new compiler_1.AstPath([]);\n        return _this;\n    }\n    ExpressionDiagnosticsVisitor.prototype.visitDirective = function (ast, context) {\n        // Override the default child visitor to ignore the host properties of a directive.\n        if (ast.inputs && ast.inputs.length) {\n            compiler_1.templateVisitAll(this, ast.inputs, context);\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitBoundText = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, ast.sourceSpan.start.offset, false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitDirectiveProperty = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitElementProperty = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitEvent = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.handler, this.attributeValueLocation(ast), true);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitVariable = function (ast) {\n        var directive = this.directiveSummary;\n        if (directive && ast.value) {\n            var context = this.info.query.getTemplateContext(directive.type.reference);\n            if (context && !context.has(ast.value)) {\n                if (ast.value === '$implicit') {\n                    this.reportError('The template context does not have an implicit value', spanOf(ast.sourceSpan));\n                }\n                else {\n                    this.reportError(\"The template context does not defined a member called '\" + ast.value + \"'\", spanOf(ast.sourceSpan));\n                }\n            }\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitElement = function (ast, context) {\n        this.push(ast);\n        _super.prototype.visitElement.call(this, ast, context);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var previousDirectiveSummary = this.directiveSummary;\n        this.push(ast);\n        // Find directive that refernces this template\n        this.directiveSummary =\n            ast.directives.map(function (d) { return d.directive; }).find(function (d) { return hasTemplateReference(d.type); });\n        // Process children\n        _super.prototype.visitEmbeddedTemplate.call(this, ast, context);\n        this.pop();\n        this.directiveSummary = previousDirectiveSummary;\n    };\n    ExpressionDiagnosticsVisitor.prototype.attributeValueLocation = function (ast) {\n        var path$$1 = compiler_1.findNode(this.info.htmlAst, ast.sourceSpan.start.offset);\n        var last = path$$1.tail;\n        if (last instanceof compiler_1.Attribute && last.valueSpan) {\n            // Add 1 for the quote.\n            return last.valueSpan.start.offset + 1;\n        }\n        return ast.sourceSpan.start.offset;\n    };\n    ExpressionDiagnosticsVisitor.prototype.diagnoseExpression = function (ast, offset, includeEvent) {\n        var _this = this;\n        var scope = this.getExpressionScope(this.path, includeEvent);\n        (_a = this.diagnostics).push.apply(_a, getExpressionDiagnostics(scope, ast, this.info.query, {\n            event: includeEvent\n        }).map(function (d) { return ({\n            span: offsetSpan(d.ast.span, offset + _this.info.offset),\n            kind: d.kind,\n            message: d.message\n        }); }));\n        var _a;\n    };\n    ExpressionDiagnosticsVisitor.prototype.push = function (ast) { this.path.push(ast); };\n    ExpressionDiagnosticsVisitor.prototype.pop = function () { this.path.pop(); };\n    ExpressionDiagnosticsVisitor.prototype.reportError = function (message, span) {\n        if (span) {\n            this.diagnostics.push({ span: offsetSpan(span, this.info.offset), kind: expression_type.DiagnosticKind.Error, message: message });\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.reportWarning = function (message, span) {\n        this.diagnostics.push({ span: offsetSpan(span, this.info.offset), kind: expression_type.DiagnosticKind.Warning, message: message });\n    };\n    return ExpressionDiagnosticsVisitor;\n}(compiler_1.RecursiveTemplateAstVisitor));\nfunction hasTemplateReference(type) {\n    if (type.diDeps) {\n        for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n            var diDep = _a[_i];\n            if (diDep.token && diDep.token.identifier &&\n                compiler_1.identifierName(diDep.token.identifier) == 'TemplateRef')\n                return true;\n        }\n    }\n    return false;\n}\nfunction offsetSpan(span, amount) {\n    return { start: span.start + amount, end: span.end + amount };\n}\nfunction spanOf(sourceSpan) {\n    return { start: sourceSpan.start.offset, end: sourceSpan.end.offset };\n}\n\n});\n\nvar typescript_symbols = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\n// In TypeScript 2.1 these flags moved\n// These helpers work for both 2.0 and 2.1.\nvar isPrivate = ts__default.ModifierFlags ?\n    (function (node) {\n        return !!(ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Private);\n    }) :\n    (function (node) { return !!(node.flags & ts__default.NodeFlags.Private); });\nvar isReferenceType = ts__default.ObjectFlags ?\n    (function (type) {\n        return !!(type.flags & ts__default.TypeFlags.Object &&\n            type.objectFlags & ts__default.ObjectFlags.Reference);\n    }) :\n    (function (type) { return !!(type.flags & ts__default.TypeFlags.Reference); });\nfunction getSymbolQuery(program, checker, source, fetchPipes) {\n    return new TypeScriptSymbolQuery(program, checker, source, fetchPipes);\n}\nexports.getSymbolQuery = getSymbolQuery;\nfunction getClassMembers(program, checker, staticSymbol) {\n    var declaration = getClassFromStaticSymbol(program, staticSymbol);\n    if (declaration) {\n        var type = checker.getTypeAtLocation(declaration);\n        var node = program.getSourceFile(staticSymbol.filePath);\n        return new TypeWrapper(type, { node: node, program: program, checker: checker }).members();\n    }\n}\nexports.getClassMembers = getClassMembers;\nfunction getClassMembersFromDeclaration(program, checker, source, declaration) {\n    var type = checker.getTypeAtLocation(declaration);\n    return new TypeWrapper(type, { node: source, program: program, checker: checker }).members();\n}\nexports.getClassMembersFromDeclaration = getClassMembersFromDeclaration;\nfunction getClassFromStaticSymbol(program, type) {\n    var source = program.getSourceFile(type.filePath);\n    if (source) {\n        return ts__default.forEachChild(source, function (child) {\n            if (child.kind === ts__default.SyntaxKind.ClassDeclaration) {\n                var classDeclaration = child;\n                if (classDeclaration.name != null && classDeclaration.name.text === type.name) {\n                    return classDeclaration;\n                }\n            }\n        });\n    }\n    return undefined;\n}\nexports.getClassFromStaticSymbol = getClassFromStaticSymbol;\nfunction getPipesTable(source, program, checker, pipes) {\n    return new PipesTable(pipes, { program: program, checker: checker, node: source });\n}\nexports.getPipesTable = getPipesTable;\nvar TypeScriptSymbolQuery = (function () {\n    function TypeScriptSymbolQuery(program, checker, source, fetchPipes) {\n        this.program = program;\n        this.checker = checker;\n        this.source = source;\n        this.fetchPipes = fetchPipes;\n        this.typeCache = new Map();\n    }\n    TypeScriptSymbolQuery.prototype.getTypeKind = function (symbol) { return typeKindOf(this.getTsTypeOf(symbol)); };\n    TypeScriptSymbolQuery.prototype.getBuiltinType = function (kind) {\n        var result = this.typeCache.get(kind);\n        if (!result) {\n            var type = getBuiltinTypeFromTs(kind, { checker: this.checker, node: this.source, program: this.program });\n            result =\n                new TypeWrapper(type, { program: this.program, checker: this.checker, node: this.source });\n            this.typeCache.set(kind, result);\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getTypeUnion = function () {\n        var types = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            types[_i] = arguments[_i];\n        }\n        // No API exists so return any if the types are not all the same type.\n        var result = undefined;\n        if (types.length) {\n            result = types[0];\n            for (var i = 1; i < types.length; i++) {\n                if (types[i] != result) {\n                    result = undefined;\n                    break;\n                }\n            }\n        }\n        return result || this.getBuiltinType(symbols$2.BuiltinType.Any);\n    };\n    TypeScriptSymbolQuery.prototype.getArrayType = function (type) { return this.getBuiltinType(symbols$2.BuiltinType.Any); };\n    TypeScriptSymbolQuery.prototype.getElementType = function (type) {\n        if (type instanceof TypeWrapper) {\n            var elementType = getTypeParameterOf(type.tsType, 'Array');\n            if (elementType) {\n                return new TypeWrapper(elementType, type.context);\n            }\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getNonNullableType = function (symbol) {\n        if (symbol instanceof TypeWrapper && (typeof this.checker.getNonNullableType == 'function')) {\n            var tsType = symbol.tsType;\n            var nonNullableType = this.checker.getNonNullableType(tsType);\n            if (nonNullableType != tsType) {\n                return new TypeWrapper(nonNullableType, symbol.context);\n            }\n            else if (nonNullableType == tsType) {\n                return symbol;\n            }\n        }\n        return this.getBuiltinType(symbols$2.BuiltinType.Any);\n    };\n    TypeScriptSymbolQuery.prototype.getPipes = function () {\n        var result = this.pipesCache;\n        if (!result) {\n            result = this.pipesCache = this.fetchPipes();\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getTemplateContext = function (type) {\n        var context = { node: this.source, program: this.program, checker: this.checker };\n        var typeSymbol = findClassSymbolInContext(type, context);\n        if (typeSymbol) {\n            var contextType = this.getTemplateRefContextType(typeSymbol);\n            if (contextType)\n                return new SymbolWrapper(contextType, context).members();\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getTypeSymbol = function (type) {\n        var context = { node: this.source, program: this.program, checker: this.checker };\n        var typeSymbol = findClassSymbolInContext(type, context);\n        return typeSymbol && new SymbolWrapper(typeSymbol, context);\n    };\n    TypeScriptSymbolQuery.prototype.createSymbolTable = function (symbols) {\n        var result = new MapSymbolTable();\n        result.addAll(symbols.map(function (s) { return new DeclaredSymbol(s); }));\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.mergeSymbolTable = function (symbolTables) {\n        var result = new MapSymbolTable();\n        for (var _i = 0, symbolTables_1 = symbolTables; _i < symbolTables_1.length; _i++) {\n            var symbolTable = symbolTables_1[_i];\n            result.addAll(symbolTable.values());\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getSpanAt = function (line, column) {\n        return spanAt(this.source, line, column);\n    };\n    TypeScriptSymbolQuery.prototype.getTemplateRefContextType = function (typeSymbol) {\n        var type = this.checker.getTypeOfSymbolAtLocation(typeSymbol, this.source);\n        var constructor = type.symbol && type.symbol.members &&\n            getFromSymbolTable(type.symbol.members, '__constructor');\n        if (constructor) {\n            var constructorDeclaration = constructor.declarations[0];\n            for (var _i = 0, _a = constructorDeclaration.parameters; _i < _a.length; _i++) {\n                var parameter = _a[_i];\n                var type_1 = this.checker.getTypeAtLocation(parameter.type);\n                if (type_1.symbol.name == 'TemplateRef' && isReferenceType(type_1)) {\n                    var typeReference = type_1;\n                    if (typeReference.typeArguments && typeReference.typeArguments.length === 1) {\n                        return typeReference.typeArguments[0].symbol;\n                    }\n                }\n            }\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getTsTypeOf = function (symbol) {\n        var type = this.getTypeWrapper(symbol);\n        return type && type.tsType;\n    };\n    TypeScriptSymbolQuery.prototype.getTypeWrapper = function (symbol) {\n        var type = undefined;\n        if (symbol instanceof TypeWrapper) {\n            type = symbol;\n        }\n        else if (symbol.type instanceof TypeWrapper) {\n            type = symbol.type;\n        }\n        return type;\n    };\n    return TypeScriptSymbolQuery;\n}());\nfunction typeCallable(type) {\n    var signatures = type.getCallSignatures();\n    return signatures && signatures.length != 0;\n}\nfunction signaturesOf(type, context) {\n    return type.getCallSignatures().map(function (s) { return new SignatureWrapper(s, context); });\n}\nfunction selectSignature(type, context, types) {\n    // TODO: Do a better job of selecting the right signature.\n    var signatures = type.getCallSignatures();\n    return signatures.length ? new SignatureWrapper(signatures[0], context) : undefined;\n}\nvar TypeWrapper = (function () {\n    function TypeWrapper(tsType, context) {\n        this.tsType = tsType;\n        this.context = context;\n        this.kind = 'type';\n        this.language = 'typescript';\n        this.type = undefined;\n        this.container = undefined;\n        this.public = true;\n        if (!tsType) {\n            throw Error('Internal: null type');\n        }\n    }\n    Object.defineProperty(TypeWrapper.prototype, \"name\", {\n        get: function () {\n            var symbol = this.tsType.symbol;\n            return (symbol && symbol.name) || '<anonymous>';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"callable\", {\n        get: function () { return typeCallable(this.tsType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"nullable\", {\n        get: function () {\n            return this.context.checker.getNonNullableType(this.tsType) != this.tsType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"definition\", {\n        get: function () {\n            var symbol = this.tsType.getSymbol();\n            return symbol ? definitionFromTsSymbol(symbol) : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeWrapper.prototype.members = function () {\n        return new SymbolTableWrapper(this.tsType.getProperties(), this.context);\n    };\n    TypeWrapper.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    TypeWrapper.prototype.selectSignature = function (types) {\n        return selectSignature(this.tsType, this.context, types);\n    };\n    TypeWrapper.prototype.indexed = function (argument) { return undefined; };\n    return TypeWrapper;\n}());\nvar SymbolWrapper = (function () {\n    function SymbolWrapper(symbol, context) {\n        this.context = context;\n        this.nullable = false;\n        this.language = 'typescript';\n        this.symbol = symbol && context && (symbol.flags & ts__default.SymbolFlags.Alias) ?\n            context.checker.getAliasedSymbol(symbol) :\n            symbol;\n    }\n    Object.defineProperty(SymbolWrapper.prototype, \"name\", {\n        get: function () { return this.symbol.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"kind\", {\n        get: function () { return this.callable ? 'method' : 'property'; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"type\", {\n        get: function () { return new TypeWrapper(this.tsType, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"container\", {\n        get: function () { return getContainerOf(this.symbol, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"public\", {\n        get: function () {\n            // Symbols that are not explicitly made private are public.\n            return !isSymbolPrivate(this.symbol);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"callable\", {\n        get: function () { return typeCallable(this.tsType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"definition\", {\n        get: function () { return definitionFromTsSymbol(this.symbol); },\n        enumerable: true,\n        configurable: true\n    });\n    SymbolWrapper.prototype.members = function () {\n        if (!this._members) {\n            if ((this.symbol.flags & (ts__default.SymbolFlags.Class | ts__default.SymbolFlags.Interface)) != 0) {\n                var declaredType = this.context.checker.getDeclaredTypeOfSymbol(this.symbol);\n                var typeWrapper = new TypeWrapper(declaredType, this.context);\n                this._members = typeWrapper.members();\n            }\n            else {\n                this._members = new SymbolTableWrapper(this.symbol.members, this.context);\n            }\n        }\n        return this._members;\n    };\n    SymbolWrapper.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    SymbolWrapper.prototype.selectSignature = function (types) {\n        return selectSignature(this.tsType, this.context, types);\n    };\n    SymbolWrapper.prototype.indexed = function (argument) { return undefined; };\n    Object.defineProperty(SymbolWrapper.prototype, \"tsType\", {\n        get: function () {\n            var type = this._tsType;\n            if (!type) {\n                type = this._tsType =\n                    this.context.checker.getTypeOfSymbolAtLocation(this.symbol, this.context.node);\n            }\n            return type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SymbolWrapper;\n}());\nvar DeclaredSymbol = (function () {\n    function DeclaredSymbol(declaration) {\n        this.declaration = declaration;\n        this.language = 'ng-template';\n        this.nullable = false;\n        this.public = true;\n    }\n    Object.defineProperty(DeclaredSymbol.prototype, \"name\", {\n        get: function () { return this.declaration.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"kind\", {\n        get: function () { return this.declaration.kind; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"container\", {\n        get: function () { return undefined; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"type\", {\n        get: function () { return this.declaration.type; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"callable\", {\n        get: function () { return this.declaration.type.callable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"definition\", {\n        get: function () { return this.declaration.definition; },\n        enumerable: true,\n        configurable: true\n    });\n    DeclaredSymbol.prototype.members = function () { return this.declaration.type.members(); };\n    DeclaredSymbol.prototype.signatures = function () { return this.declaration.type.signatures(); };\n    DeclaredSymbol.prototype.selectSignature = function (types) {\n        return this.declaration.type.selectSignature(types);\n    };\n    DeclaredSymbol.prototype.indexed = function (argument) { return undefined; };\n    return DeclaredSymbol;\n}());\nvar SignatureWrapper = (function () {\n    function SignatureWrapper(signature, context) {\n        this.signature = signature;\n        this.context = context;\n    }\n    Object.defineProperty(SignatureWrapper.prototype, \"arguments\", {\n        get: function () {\n            return new SymbolTableWrapper(this.signature.getParameters(), this.context);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SignatureWrapper.prototype, \"result\", {\n        get: function () { return new TypeWrapper(this.signature.getReturnType(), this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    return SignatureWrapper;\n}());\nvar SignatureResultOverride = (function () {\n    function SignatureResultOverride(signature, resultType) {\n        this.signature = signature;\n        this.resultType = resultType;\n    }\n    Object.defineProperty(SignatureResultOverride.prototype, \"arguments\", {\n        get: function () { return this.signature.arguments; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SignatureResultOverride.prototype, \"result\", {\n        get: function () { return this.resultType; },\n        enumerable: true,\n        configurable: true\n    });\n    return SignatureResultOverride;\n}());\nvar toSymbolTable = isTypescriptVersion('2.2') ?\n    (function (symbols) {\n        var result = new Map();\n        for (var _i = 0, symbols_2 = symbols; _i < symbols_2.length; _i++) {\n            var symbol = symbols_2[_i];\n            result.set(symbol.name, symbol);\n        }\n        return result;\n    }) :\n    (function (symbols) {\n        var result = {};\n        for (var _i = 0, symbols_3 = symbols; _i < symbols_3.length; _i++) {\n            var symbol = symbols_3[_i];\n            result[symbol.name] = symbol;\n        }\n        return result;\n    });\nfunction toSymbols(symbolTable) {\n    if (!symbolTable)\n        return [];\n    var table = symbolTable;\n    if (typeof table.values === 'function') {\n        return Array.from(table.values());\n    }\n    var result = [];\n    var own = typeof table.hasOwnProperty === 'function' ?\n        function (name) { return table.hasOwnProperty(name); } :\n        function (name) { return !!table[name]; };\n    for (var name_1 in table) {\n        if (own(name_1)) {\n            result.push(table[name_1]);\n        }\n    }\n    return result;\n}\nvar SymbolTableWrapper = (function () {\n    function SymbolTableWrapper(symbols, context) {\n        this.context = context;\n        symbols = symbols || [];\n        if (Array.isArray(symbols)) {\n            this.symbols = symbols;\n            this.symbolTable = toSymbolTable(symbols);\n        }\n        else {\n            this.symbols = toSymbols(symbols);\n            this.symbolTable = symbols;\n        }\n    }\n    Object.defineProperty(SymbolTableWrapper.prototype, \"size\", {\n        get: function () { return this.symbols.length; },\n        enumerable: true,\n        configurable: true\n    });\n    SymbolTableWrapper.prototype.get = function (key) {\n        var symbol = getFromSymbolTable(this.symbolTable, key);\n        return symbol ? new SymbolWrapper(symbol, this.context) : undefined;\n    };\n    SymbolTableWrapper.prototype.has = function (key) {\n        var table = this.symbolTable;\n        return (typeof table.has === 'function') ? table.has(key) : table[key] != null;\n    };\n    SymbolTableWrapper.prototype.values = function () {\n        var _this = this;\n        return this.symbols.map(function (s) { return new SymbolWrapper(s, _this.context); });\n    };\n    return SymbolTableWrapper;\n}());\nvar MapSymbolTable = (function () {\n    function MapSymbolTable() {\n        this.map = new Map();\n        this._values = [];\n    }\n    Object.defineProperty(MapSymbolTable.prototype, \"size\", {\n        get: function () { return this.map.size; },\n        enumerable: true,\n        configurable: true\n    });\n    MapSymbolTable.prototype.get = function (key) { return this.map.get(key); };\n    MapSymbolTable.prototype.add = function (symbol) {\n        if (this.map.has(symbol.name)) {\n            var previous = this.map.get(symbol.name);\n            this._values[this._values.indexOf(previous)] = symbol;\n        }\n        this.map.set(symbol.name, symbol);\n        this._values.push(symbol);\n    };\n    MapSymbolTable.prototype.addAll = function (symbols) {\n        for (var _i = 0, symbols_4 = symbols; _i < symbols_4.length; _i++) {\n            var symbol = symbols_4[_i];\n            this.add(symbol);\n        }\n    };\n    MapSymbolTable.prototype.has = function (key) { return this.map.has(key); };\n    MapSymbolTable.prototype.values = function () {\n        // Switch to this.map.values once iterables are supported by the target language.\n        return this._values;\n    };\n    return MapSymbolTable;\n}());\nvar PipesTable = (function () {\n    function PipesTable(pipes, context) {\n        this.pipes = pipes;\n        this.context = context;\n    }\n    Object.defineProperty(PipesTable.prototype, \"size\", {\n        get: function () { return this.pipes.length; },\n        enumerable: true,\n        configurable: true\n    });\n    PipesTable.prototype.get = function (key) {\n        var pipe = this.pipes.find(function (pipe) { return pipe.name == key; });\n        if (pipe) {\n            return new PipeSymbol(pipe, this.context);\n        }\n    };\n    PipesTable.prototype.has = function (key) { return this.pipes.find(function (pipe) { return pipe.name == key; }) != null; };\n    PipesTable.prototype.values = function () {\n        var _this = this;\n        return this.pipes.map(function (pipe) { return new PipeSymbol(pipe, _this.context); });\n    };\n    return PipesTable;\n}());\nvar PipeSymbol = (function () {\n    function PipeSymbol(pipe, context) {\n        this.pipe = pipe;\n        this.context = context;\n        this.kind = 'pipe';\n        this.language = 'typescript';\n        this.container = undefined;\n        this.callable = true;\n        this.nullable = false;\n        this.public = true;\n    }\n    Object.defineProperty(PipeSymbol.prototype, \"name\", {\n        get: function () { return this.pipe.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PipeSymbol.prototype, \"type\", {\n        get: function () { return new TypeWrapper(this.tsType, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PipeSymbol.prototype, \"definition\", {\n        get: function () {\n            var symbol = this.tsType.getSymbol();\n            return symbol ? definitionFromTsSymbol(symbol) : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PipeSymbol.prototype.members = function () { return EmptyTable.instance; };\n    PipeSymbol.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    PipeSymbol.prototype.selectSignature = function (types) {\n        var signature = selectSignature(this.tsType, this.context, types);\n        if (types.length == 1) {\n            var parameterType = types[0];\n            if (parameterType instanceof TypeWrapper) {\n                var resultType = undefined;\n                switch (this.name) {\n                    case 'async':\n                        switch (parameterType.name) {\n                            case 'Observable':\n                            case 'Promise':\n                            case 'EventEmitter':\n                                resultType = getTypeParameterOf(parameterType.tsType, parameterType.name);\n                                break;\n                            default:\n                                resultType = getBuiltinTypeFromTs(symbols$2.BuiltinType.Any, this.context);\n                                break;\n                        }\n                        break;\n                    case 'slice':\n                        resultType = getTypeParameterOf(parameterType.tsType, 'Array');\n                        break;\n                }\n                if (resultType) {\n                    signature = new SignatureResultOverride(signature, new TypeWrapper(resultType, parameterType.context));\n                }\n            }\n        }\n        return signature;\n    };\n    PipeSymbol.prototype.indexed = function (argument) { return undefined; };\n    Object.defineProperty(PipeSymbol.prototype, \"tsType\", {\n        get: function () {\n            var type = this._tsType;\n            if (!type) {\n                var classSymbol = this.findClassSymbol(this.pipe.type.reference);\n                if (classSymbol) {\n                    type = this._tsType = this.findTransformMethodType(classSymbol);\n                }\n                if (!type) {\n                    type = this._tsType = getBuiltinTypeFromTs(symbols$2.BuiltinType.Any, this.context);\n                }\n            }\n            return type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PipeSymbol.prototype.findClassSymbol = function (type) {\n        return findClassSymbolInContext(type, this.context);\n    };\n    PipeSymbol.prototype.findTransformMethodType = function (classSymbol) {\n        var classType = this.context.checker.getDeclaredTypeOfSymbol(classSymbol);\n        if (classType) {\n            var transform = classType.getProperty('transform');\n            if (transform) {\n                return this.context.checker.getTypeOfSymbolAtLocation(transform, this.context.node);\n            }\n        }\n    };\n    return PipeSymbol;\n}());\nfunction findClassSymbolInContext(type, context) {\n    var sourceFile = context.program.getSourceFile(type.filePath);\n    if (sourceFile) {\n        var moduleSymbol = sourceFile.module || sourceFile.symbol;\n        var exports_1 = context.checker.getExportsOfModule(moduleSymbol);\n        return (exports_1 || []).find(function (symbol) { return symbol.name == type.name; });\n    }\n}\nvar EmptyTable = (function () {\n    function EmptyTable() {\n        this.size = 0;\n    }\n    EmptyTable.prototype.get = function (key) { return undefined; };\n    EmptyTable.prototype.has = function (key) { return false; };\n    EmptyTable.prototype.values = function () { return []; };\n    EmptyTable.instance = new EmptyTable();\n    return EmptyTable;\n}());\nfunction isSymbolPrivate(s) {\n    return !!s.valueDeclaration && isPrivate(s.valueDeclaration);\n}\nfunction getBuiltinTypeFromTs(kind, context) {\n    var type;\n    var checker = context.checker;\n    var node = context.node;\n    switch (kind) {\n        case symbols$2.BuiltinType.Any:\n            type = checker.getTypeAtLocation(setParents({\n                kind: ts__default.SyntaxKind.AsExpression,\n                expression: { kind: ts__default.SyntaxKind.TrueKeyword },\n                type: { kind: ts__default.SyntaxKind.AnyKeyword }\n            }, node));\n            break;\n        case symbols$2.BuiltinType.Boolean:\n            type =\n                checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.TrueKeyword }, node));\n            break;\n        case symbols$2.BuiltinType.Null:\n            type =\n                checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.NullKeyword }, node));\n            break;\n        case symbols$2.BuiltinType.Number:\n            var numeric = { kind: ts__default.SyntaxKind.NumericLiteral };\n            setParents({ kind: ts__default.SyntaxKind.ExpressionStatement, expression: numeric }, node);\n            type = checker.getTypeAtLocation(numeric);\n            break;\n        case symbols$2.BuiltinType.String:\n            type = checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.NoSubstitutionTemplateLiteral }, node));\n            break;\n        case symbols$2.BuiltinType.Undefined:\n            type = checker.getTypeAtLocation(setParents({\n                kind: ts__default.SyntaxKind.VoidExpression,\n                expression: { kind: ts__default.SyntaxKind.NumericLiteral }\n            }, node));\n            break;\n        default:\n            throw new Error(\"Internal error, unhandled literal kind \" + kind + \":\" + symbols$2.BuiltinType[kind]);\n    }\n    return type;\n}\nfunction setParents(node, parent) {\n    node.parent = parent;\n    ts__default.forEachChild(node, function (child) { return setParents(child, node); });\n    return node;\n}\nfunction spanAt(sourceFile, line, column) {\n    if (line != null && column != null) {\n        var position_1 = ts__default.getPositionOfLineAndCharacter(sourceFile, line, column);\n        var findChild = function findChild(node) {\n            if (node.kind > ts__default.SyntaxKind.LastToken && node.pos <= position_1 && node.end > position_1) {\n                var betterNode = ts__default.forEachChild(node, findChild);\n                return betterNode || node;\n            }\n        };\n        var node = ts__default.forEachChild(sourceFile, findChild);\n        if (node) {\n            return { start: node.getStart(), end: node.getEnd() };\n        }\n    }\n}\nfunction definitionFromTsSymbol(symbol) {\n    var declarations = symbol.declarations;\n    if (declarations) {\n        return declarations.map(function (declaration) {\n            var sourceFile = declaration.getSourceFile();\n            return {\n                fileName: sourceFile.fileName,\n                span: { start: declaration.getStart(), end: declaration.getEnd() }\n            };\n        });\n    }\n}\nfunction parentDeclarationOf(node) {\n    while (node) {\n        switch (node.kind) {\n            case ts__default.SyntaxKind.ClassDeclaration:\n            case ts__default.SyntaxKind.InterfaceDeclaration:\n                return node;\n            case ts__default.SyntaxKind.SourceFile:\n                return undefined;\n        }\n        node = node.parent;\n    }\n}\nfunction getContainerOf(symbol, context) {\n    if (symbol.getFlags() & ts__default.SymbolFlags.ClassMember && symbol.declarations) {\n        for (var _i = 0, _a = symbol.declarations; _i < _a.length; _i++) {\n            var declaration = _a[_i];\n            var parent_1 = parentDeclarationOf(declaration);\n            if (parent_1) {\n                var type = context.checker.getTypeAtLocation(parent_1);\n                if (type) {\n                    return new TypeWrapper(type, context);\n                }\n            }\n        }\n    }\n}\nfunction getTypeParameterOf(type, name) {\n    if (type && type.symbol && type.symbol.name == name) {\n        var typeArguments = type.typeArguments;\n        if (typeArguments && typeArguments.length <= 1) {\n            return typeArguments[0];\n        }\n    }\n}\nfunction typeKindOf(type) {\n    if (type) {\n        if (type.flags & ts__default.TypeFlags.Any) {\n            return symbols$2.BuiltinType.Any;\n        }\n        else if (type.flags & (ts__default.TypeFlags.String | ts__default.TypeFlags.StringLike | ts__default.TypeFlags.StringLiteral)) {\n            return symbols$2.BuiltinType.String;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Number | ts__default.TypeFlags.NumberLike)) {\n            return symbols$2.BuiltinType.Number;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Undefined)) {\n            return symbols$2.BuiltinType.Undefined;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Null)) {\n            return symbols$2.BuiltinType.Null;\n        }\n        else if (type.flags & ts__default.TypeFlags.Union) {\n            // If all the constituent types of a union are the same kind, it is also that kind.\n            var candidate = null;\n            var unionType = type;\n            if (unionType.types.length > 0) {\n                candidate = typeKindOf(unionType.types[0]);\n                for (var _i = 0, _a = unionType.types; _i < _a.length; _i++) {\n                    var subType = _a[_i];\n                    if (candidate != typeKindOf(subType)) {\n                        return symbols$2.BuiltinType.Other;\n                    }\n                }\n            }\n            if (candidate != null) {\n                return candidate;\n            }\n        }\n        else if (type.flags & ts__default.TypeFlags.TypeParameter) {\n            return symbols$2.BuiltinType.Unbound;\n        }\n    }\n    return symbols$2.BuiltinType.Other;\n}\nfunction getFromSymbolTable(symbolTable, key) {\n    var table = symbolTable;\n    var symbol;\n    if (typeof table.get === 'function') {\n        // TS 2.2 uses a Map\n        symbol = table.get(key);\n    }\n    else {\n        // TS pre-2.2 uses an object\n        symbol = table[key];\n    }\n    return symbol;\n}\nfunction toNumbers(value) {\n    return value ? value.split('.').map(function (v) { return +v; }) : [];\n}\nfunction compareNumbers(a, b) {\n    for (var i = 0; i < a.length && i < b.length; i++) {\n        if (a[i] > b[i])\n            return 1;\n        if (a[i] < b[i])\n            return -1;\n    }\n    return 0;\n}\nfunction isTypescriptVersion(low, high) {\n    var tsNumbers = toNumbers(ts__default.version);\n    return compareNumbers(toNumbers(low), tsNumbers) <= 0 &&\n        compareNumbers(toNumbers(high), tsNumbers) >= 0;\n}\n\n});\n\nvar language_services = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n\nThe API from compiler-cli that language-service can see.\nIt is important that none the exported modules require anything other than\nAngular modules and Typescript as this will indirectly add a dependency\nto the language service.\n\n*/\n\nexports.CompilerHost = compiler_host.CompilerHost;\nexports.ModuleResolutionHostAdapter = compiler_host.ModuleResolutionHostAdapter;\nexports.NodeCompilerHostContext = compiler_host.NodeCompilerHostContext;\n\nexports.getExpressionDiagnostics = expression_diagnostics.getExpressionDiagnostics;\nexports.getExpressionScope = expression_diagnostics.getExpressionScope;\nexports.getTemplateExpressionDiagnostics = expression_diagnostics.getTemplateExpressionDiagnostics;\n\nexports.AstType = expression_type.AstType;\nexports.DiagnosticKind = expression_type.DiagnosticKind;\nexports.TypeDiagnostic = expression_type.TypeDiagnostic;\n\nexports.BuiltinType = symbols$2.BuiltinType;\n\nexports.getClassFromStaticSymbol = typescript_symbols.getClassFromStaticSymbol;\nexports.getClassMembers = typescript_symbols.getClassMembers;\nexports.getClassMembersFromDeclaration = typescript_symbols.getClassMembersFromDeclaration;\nexports.getPipesTable = typescript_symbols.getPipesTable;\nexports.getSymbolQuery = typescript_symbols.getSymbolQuery;\n\n});\n\nvar language_services_1 = language_services.CompilerHost;\nvar language_services_2 = language_services.ModuleResolutionHostAdapter;\nvar language_services_5 = language_services.getExpressionScope;\nvar language_services_6 = language_services.getTemplateExpressionDiagnostics;\nvar language_services_7 = language_services.AstType;\nvar language_services_10 = language_services.BuiltinType;\nvar language_services_13 = language_services.getClassMembersFromDeclaration;\nvar language_services_14 = language_services.getPipesTable;\nvar language_services_15 = language_services.getSymbolQuery;\n\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window$1 = typeof window !== 'undefined' && window;\nvar __self$1 = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global$1 = typeof commonjsGlobal !== 'undefined' && commonjsGlobal;\nvar _root = __window$1 || __global$1 || __self$1;\nvar root_1 = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n\n\nvar root = {\n\troot: root_1\n};\n\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nvar isFunction_2 = isFunction;\n\n\nvar isFunction_1 = {\n\tisFunction: isFunction_2\n};\n\nvar isArray_1 = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n\n\nvar isArray = {\n\tisArray: isArray_1\n};\n\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nvar isObject_2 = isObject;\n\n\nvar isObject_1 = {\n\tisObject: isObject_2\n};\n\n// typeof any so that it we don't have to cast when comparing a result to the error object\nvar errorObject_1 = { e: {} };\n\n\nvar errorObject = {\n\terrorObject: errorObject_1\n};\n\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.errorObject.e = e;\n        return errorObject.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nvar tryCatch_2 = tryCatch;\n\n\n\nvar tryCatch_1 = {\n\ttryCatch: tryCatch_2\n};\n\nvar __extends$2 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends$2(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nvar UnsubscriptionError_2 = UnsubscriptionError;\n\n\nvar UnsubscriptionError_1 = {\n\tUnsubscriptionError: UnsubscriptionError_2\n};\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.errorObject.e.errors) : [errorObject.errorObject.e]);\n            }\n        }\n        if (isArray.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nvar Subscription_2 = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n\n\nvar Subscription_1 = {\n\tSubscription: Subscription_2\n};\n\nvar empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n\n\nvar Observer = {\n\tempty: empty\n};\n\nvar rxSubscriber = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nvar Symbol = root.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n\n});\n\nvar __extends$1 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends$1(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nvar Subscriber_2 = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends$1(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n\n\nvar Subscriber_1 = {\n\tSubscriber: Subscriber_2\n};\n\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nvar toSubscriber_2 = toSubscriber;\n\n\nvar toSubscriber_1 = {\n\ttoSubscriber: toSubscriber_2\n};\n\nvar observable = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n\n});\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable$$1 = new Observable();\n        observable$$1.source = this;\n        observable$$1.operator = operator;\n        return observable$$1;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.root.Rx && root.root.Rx.config && root.root.Rx.config.Promise) {\n                PromiseCtor = root.root.Rx.config.Promise;\n            }\n            else if (root.root.Promise) {\n                PromiseCtor = root.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable.observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nvar Observable_2 = Observable;\n\n\nvar Observable_1 = {\n\tObservable: Observable_2\n};\n\nvar __extends$4 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends$4(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nvar ScalarObservable_2 = ScalarObservable;\n\n\nvar ScalarObservable_1 = {\n\tScalarObservable: ScalarObservable_2\n};\n\nvar __extends$5 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends$5(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nvar EmptyObservable_2 = EmptyObservable;\n\n\nvar EmptyObservable_1 = {\n\tEmptyObservable: EmptyObservable_2\n};\n\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nvar isScheduler_2 = isScheduler;\n\n\nvar isScheduler_1 = {\n\tisScheduler: isScheduler_2\n};\n\nvar __extends$3 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends$3(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nvar ArrayObservable_2 = ArrayObservable;\n\n\nvar ArrayObservable_1 = {\n\tArrayObservable: ArrayObservable_2\n};\n\nvar __extends$7 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends$7(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nvar OuterSubscriber_2 = OuterSubscriber;\n\n\nvar OuterSubscriber_1 = {\n\tOuterSubscriber: OuterSubscriber_2\n};\n\nvar isArrayLike_1 = (function (x) { return x && typeof x.length === 'number'; });\n\n\nvar isArrayLike = {\n\tisArrayLike: isArrayLike_1\n};\n\nfunction isPromise$2(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nvar isPromise_2 = isPromise$2;\n\n\nvar isPromise_1 = {\n\tisPromise: isPromise_2\n};\n\nvar iterator = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nfunction symbolIteratorPonyfill(root$$2) {\n    var Symbol = root$$2.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root$$2.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root$$2.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.iterator = symbolIteratorPonyfill(root.root);\n/**\n * @deprecated use iterator instead\n */\nexports.$$iterator = exports.iterator;\n\n});\n\nvar __extends$8 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends$8(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nvar InnerSubscriber_2 = InnerSubscriber;\n\n\nvar InnerSubscriber_1 = {\n\tInnerSubscriber: InnerSubscriber_2\n};\n\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike.isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[iterator.iterator] === 'function') {\n        var iterator$$1 = result[iterator.iterator]();\n        do {\n            var item = iterator$$1.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[observable.observable] === 'function') {\n        var obs = result[observable.observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = (\"You provided \" + value + \" where a stream was expected.\")\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\nvar subscribeToResult_2 = subscribeToResult;\n\n\nvar subscribeToResult_1 = {\n\tsubscribeToResult: subscribeToResult_2\n};\n\nvar __extends$6 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return this.lift(new MergeAllOperator(concurrent));\n}\nvar mergeAll_2 = mergeAll;\nvar MergeAllOperator = (function () {\n    function MergeAllOperator(concurrent) {\n        this.concurrent = concurrent;\n    }\n    MergeAllOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeAllSubscriber(observer, this.concurrent));\n    };\n    return MergeAllOperator;\n}());\nvar MergeAllOperator_1 = MergeAllOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeAllSubscriber = (function (_super) {\n    __extends$6(MergeAllSubscriber, _super);\n    function MergeAllSubscriber(destination, concurrent) {\n        _super.call(this, destination);\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n    }\n    MergeAllSubscriber.prototype._next = function (observable) {\n        if (this.active < this.concurrent) {\n            this.active++;\n            this.add(subscribeToResult_1.subscribeToResult(this, observable));\n        }\n        else {\n            this.buffer.push(observable);\n        }\n    };\n    MergeAllSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeAllSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeAllSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nvar MergeAllSubscriber_1 = MergeAllSubscriber;\n\n\nvar mergeAll_1 = {\n\tmergeAll: mergeAll_2,\n\tMergeAllOperator: MergeAllOperator_1,\n\tMergeAllSubscriber: MergeAllSubscriber_1\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge$2() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return this.lift.call(mergeStatic.apply(void 0, [this].concat(observables)));\n}\nvar merge_2$1 = merge$2;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction mergeStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler_1.isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n        return observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(concurrent));\n}\nvar mergeStatic_1 = mergeStatic;\n\n\nvar merge_1 = {\n\tmerge: merge_2$1,\n\tmergeStatic: mergeStatic_1\n};\n\nvar merge_2 = merge_1.mergeStatic;\n\nvar __extends$11 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends$11(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nvar ObjectUnsubscribedError_2 = ObjectUnsubscribedError;\n\n\nvar ObjectUnsubscribedError_1 = {\n\tObjectUnsubscribedError: ObjectUnsubscribedError_2\n};\n\nvar __extends$12 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends$12(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nvar SubjectSubscription_2 = SubjectSubscription;\n\n\nvar SubjectSubscription_1 = {\n\tSubjectSubscription: SubjectSubscription_2\n};\n\nvar __extends$10 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends$10(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nvar SubjectSubscriber_1 = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends$10(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nvar Subject_2 = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends$10(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nvar AnonymousSubject_1 = AnonymousSubject;\n\n\nvar Subject_1 = {\n\tSubjectSubscriber: SubjectSubscriber_1,\n\tSubject: Subject_2,\n\tAnonymousSubject: AnonymousSubject_1\n};\n\nvar __extends$9 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = (function (_super) {\n    __extends$9(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n        this._isComplete = false;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription_1.Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_1.Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return this.lift(new RefCountOperator(this));\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nvar ConnectableObservable_2 = ConnectableObservable;\nvar connectableProto = ConnectableObservable.prototype;\nvar connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = (function (_super) {\n    __extends$9(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber));\nvar RefCountOperator = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = (function (_super) {\n    __extends$9(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar ConnectableObservable_1 = {\n\tConnectableObservable: ConnectableObservable_2,\n\tconnectableObservableDescriptor: connectableObservableDescriptor\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    var subjectFactory;\n    if (typeof subjectOrSubjectFactory === 'function') {\n        subjectFactory = subjectOrSubjectFactory;\n    }\n    else {\n        subjectFactory = function subjectFactory() {\n            return subjectOrSubjectFactory;\n        };\n    }\n    if (typeof selector === 'function') {\n        return this.lift(new MulticastOperator(subjectFactory, selector));\n    }\n    var connectable = Object.create(this, ConnectableObservable_1.connectableObservableDescriptor);\n    connectable.source = this;\n    connectable.subjectFactory = subjectFactory;\n    return connectable;\n}\nvar multicast_2 = multicast;\nvar MulticastOperator = (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nvar MulticastOperator_1 = MulticastOperator;\n\n\nvar multicast_1 = {\n\tmulticast: multicast_2,\n\tMulticastOperator: MulticastOperator_1\n};\n\nfunction shareSubjectFactory() {\n    return new Subject_1.Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .publish().refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return multicast_1.multicast.call(this, shareSubjectFactory).refCount();\n}\nvar share_2 = share;\n\n/**\n * @license Angular v5.0.0-rc.0-fbc9537\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar InjectionToken = (function () {\n    function InjectionToken(_desc) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\n\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__paramaters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {?} objOrType\n     * @return {?}\n     */\n    function DecoratorFactory(objOrType) {\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, objOrType);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new (/** @type {?} */ (DecoratorFactory))(objOrType);\n        var /** @type {?} */ TypeDecorator = /** @type {?} */ (function TypeDecorator(cls) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var /** @type {?} */ values = props.apply(void 0, args);\n            for (var /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = (/** @type {?} */ (ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Attribute$1$1 = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy$1 = {\n    /**\n       * `OnPush` means that the change detector's mode will be set to `CheckOnce` during hydration.\n       */\n    OnPush: 0,\n    /**\n       * `Default` means that the change detector's mode will be set to `CheckAlways` during hydration.\n       */\n    Default: 1,\n};\nChangeDetectionStrategy$1[ChangeDetectionStrategy$1.OnPush] = \"OnPush\";\nChangeDetectionStrategy$1[ChangeDetectionStrategy$1.Default] = \"Default\";\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Directive$1 = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Type of the Component decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Component$1 = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy$1.Default }, c));\n}, Directive$1);\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Pipe$1 = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar NgModule$1 = makeDecorator('NgModule', function (ngModule) { return ngModule; });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ViewEncapsulation$1 = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via\n       * {@link Component#styles} or {@link Component#styleUrls}, and adding the new Host Element\n       * attribute to all selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n};\nViewEncapsulation$1[ViewEncapsulation$1.Emulated] = \"Emulated\";\nViewEncapsulation$1[ViewEncapsulation$1.Native] = \"Native\";\nViewEncapsulation$1[ViewEncapsulation$1.None] = \"None\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar Version$1 = (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * \\@stable\n */\nvar VERSION$2 = new Version$1('5.0.0-rc.0-fbc9537');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Inject$1 = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Injectable = makeDecorator('Injectable');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify$1(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify$1).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify$1(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef$1(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify$1(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new StaticInjector(providers, parent);\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new _NullInjector();\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = /** @type {?} */ ([]);\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = /** @type {?} */ ({});\nvar ɵ2 = GET_PROPERTY_NAME;\nvar USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ2 });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = (function () {\n    function StaticInjector(providers, parent) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        this.parent = parent;\n        var /** @type {?} */ records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    StaticInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        var /** @type {?} */ record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ tokenPath = e[NG_TEMP_TOKEN_PATH];\n            e.message = formatError('\\n' + e.message, tokenPath);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokens = /** @type {?} */ ([]), /** @type {?} */ records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify$1(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    var /** @type {?} */ deps = computeDeps(provider);\n    var /** @type {?} */ fn = IDENT;\n    var /** @type {?} */ value = EMPTY;\n    var /** @type {?} */ useNew = false;\n    var /** @type {?} */ provide = resolveForwardRef$1(provider.provide);\n    if (USE_VALUE$1 in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef$1((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef$1(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var /** @type {?} */ i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var /** @type {?} */ token = resolveForwardRef$1(provider.provide);\n            var /** @type {?} */ resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var /** @type {?} */ multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var /** @type {?} */ record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue);\n    }\n    catch (/** @type {?} */ e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var /** @type {?} */ path$$1 = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path$$1.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue) {\n    var /** @type {?} */ value;\n    if (record) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var /** @type {?} */ obj = undefined;\n            var /** @type {?} */ useNew = record.useNew;\n            var /** @type {?} */ fn = record.fn;\n            var /** @type {?} */ depRecords = record.deps;\n            var /** @type {?} */ deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var /** @type {?} */ i = 0; i < depRecords.length; i++) {\n                    var /** @type {?} */ depRecord = depRecords[i];\n                    var /** @type {?} */ options = depRecord.options;\n                    var /** @type {?} */ childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND));\n                }\n            }\n            record.value = value = useNew ? new ((_a = (/** @type {?} */ (fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else {\n        value = parent.get(token, notFoundValue);\n    }\n    return value;\n    var _a;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    var /** @type {?} */ deps = EMPTY;\n    var /** @type {?} */ providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n            var /** @type {?} */ options = 6;\n            var /** @type {?} */ token = resolveForwardRef$1(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n                    var /** @type {?} */ annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject$1) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef$1(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        var /** @type {?} */ token = resolveForwardRef$1((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE$1 in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction formatError(text, obj) {\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var /** @type {?} */ context = stringify$1(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify$1).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var /** @type {?} */ parts = /** @type {?} */ ([]);\n        for (var /** @type {?} */ key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var /** @type {?} */ value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify$1(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar ErrorHandler = (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify$1(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\n\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ keys = [key];\n    var /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    var /** @type {?} */ error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify$1(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify$1(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify$1).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify$1(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify$1(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify$1(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef$1(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n         * @return {?} the number of keys registered in the system.\n         */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\n/**\n * \\@internal\n */\nvar KeyRegistry = (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nvar Type$1$1 = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar ReflectionCapabilities = (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (type, parentCtor) {\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(type.toString())) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        var /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = /** @type {?} */ ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return type instanceof Type$1$1 && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify$1(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return \"./\" + stringify$1(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = /**\n     * @param {?} caps\n     * @return {?}\n     */\n    function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\n\nvar ResolvedReflectiveProvider_ = (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n    }\n    Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.resolvedFactories[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar ResolvedReflectiveFactory = (function () {\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef$1(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type$1$1) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject$1) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type$1$1) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject$1) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef$1(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar ReflectiveInjector = (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders} for more info.\n     */\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve} and {@link ReflectiveInjector#fromResolvedProviders}.\n     */\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var /** @type {?} */ len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = /**\n     * @return {?}\n     */\n    function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (/** @type {?} */ e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (/** @type {?} */ e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = /** @type {?} */ (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise$1(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var /** @type {?} */ asyncInitPromises = [];\n        var /** @type {?} */ complete = function () {\n            (/** @type {?} */ (_this)).done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                var /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise$1(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject$1, args: [APP_INITIALIZER,] }, { type: Optional },] },\n    ]; };\n    return ApplicationInitStatus;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nvar APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Console.ctorParameters = function () { return []; };\n    return Console;\n}());\n\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = /**\n     * Clears all caches.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { };\n    Compiler.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Compiler.ctorParameters = function () { return []; };\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar CompilerFactory = (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar ComponentRef = (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactory = (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify$1(component) + \". Did you add it to @NgModule.entryComponents?\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nvar _NullComponentFactoryResolver = (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"selector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.selector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.componentType; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"ngContentSelectors\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.ngContentSelectors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.inputs; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.outputs; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar NgModuleRef = (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar NgModuleFactory = (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar trace;\nvar events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    var /** @type {?} */ wtf = (/** @type {?} */ (_global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar EventEmitter = (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(Subject_2));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar NgZone = (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error('Angular requires Zone.js prolyfill.');\n        }\n        Zone.assertZonePatched();\n        var /** @type {?} */ self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = /**\n     * @return {?}\n     */\n    function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs, name) {\n        var /** @type {?} */ zone = (/** @type {?} */ ((this)))._inner;\n        var /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * @return {?}\n */\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n *\n * \\@internal\n */\nvar NoopNgZone = (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.run = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runGuarded = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runOutsideAngular = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runTask = /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = (function () {\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     */\n    /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     */\n    /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    Testability.prototype.isStable = /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (/** @type {?} */ ((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * Run callback when the application is stable\n     * @param callback function to be called after the application is stable\n     */\n    /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    Testability.prototype.whenStable = /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     */\n    /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone, },\n    ]; };\n    return Testability;\n}());\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\n\nvar _NoopGetTestability = (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ marker = new InjectionToken(\"Platform: \" + name);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                createPlatform(Injector.create(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * Provides additional options to the bootstraping process.\n *\n * \\@stable\n * @record\n */\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n */\nvar PlatformRef = (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var /** @type {?} */ ngZoneOption = options ? options.ngZone : undefined;\n        var /** @type {?} */ ngZone = getNgZone(ngZoneOption);\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = Injector.create([{ provide: NgZone, useValue: ngZone }], _this.injector);\n            var /** @type {?} */ moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { return /** @type {?} */ ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * @stable\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModule = /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ options = optionsReducer({}, compilerOptions);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef.prototype._moduleDoBootstrap = /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    function (moduleRef) {\n        var /** @type {?} */ appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify$1(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef.prototype.onDestroy = /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @return {?}\n         */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    PlatformRef.prototype.destroy = /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector, },\n    ]; };\n    return PlatformRef;\n}());\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    var /** @type {?} */ ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise$1(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n */\nvar ApplicationRef = (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var /** @type {?} */ isCurrentlyStable = new Observable_2(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var /** @type {?} */ isStable = new Observable_2(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var /** @type {?} */ stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var /** @type {?} */ unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            merge_2(isCurrentlyStable, share_2.call(isStable));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef.prototype.bootstrap = /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    ApplicationRef.prototype.tick = /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (/** @type {?} */ e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.attachView = /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.detachView = /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._loadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._unloadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationRef.prototype.ngOnDestroy = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: /**\n         * Returns the number of attached views.\n         * @return {?}\n         */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Console, },\n        { type: Injector, },\n        { type: ErrorHandler, },\n        { type: ComponentFactoryResolver, },\n        { type: ApplicationInitStatus, },\n    ]; };\n    return ApplicationRef;\n}());\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar Renderer = (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * \\@experimental\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar RendererFactory2 = (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * \\@experimental\n * @abstract\n */\nvar Renderer2 = (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n */\nvar ElementRef = (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar QueryList = (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n    }\n    Object.defineProperty(QueryList.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[this.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._results = flatten$2(res);\n        (/** @type {?} */ (this)).dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = /**\n     * internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = /**\n     * internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten$2(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten$2(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use\n * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n * View Container.\n * \\@stable\n * @abstract\n */\nvar TemplateRef = (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar ViewContainerRef = (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ChangeDetectorRef = (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ViewRef = (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar EmbeddedViewRef = (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EventListener = (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugNode = (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugElement = (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar WrappedValue = (function () {\n    function WrappedValue(wrapped) {\n        this.wrapped = wrapped;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new WrappedValue(value); };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar SimpleChange = (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) &&\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                /** @type {?} */ ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify$1(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * \\@stable\n */\nvar IterableChangeRecord_ = (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\nvar _DuplicateItemRecordList = (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = /**\n     * @template K, V\n     * @return {?}\n     */\n    function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = /**\n     * @param {?=} map\n     * @return {?}\n     */\n    function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify$1(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * \\@stable\n */\nvar KeyValueChangeRecord_ = (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\n\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar IterableDiffers = (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n            return new IterableDiffers(factories);\n        }\n        else {\n            return new IterableDiffers(factories);\n        }\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar KeyValueDiffers = (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = /**\n     * @param {?} kv\n     * @return {?}\n     */\n    function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule$1, args: [{\n                    providers: [\n                        ApplicationRef,\n                        ApplicationInitStatus,\n                        Compiler,\n                        APP_ID_RANDOM_PROVIDER,\n                        { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                        {\n                            provide: LOCALE_ID,\n                            useFactory: _localeFactory,\n                            deps: [[new Inject$1(LOCALE_ID), new Optional(), new SkipSelf()]]\n                        },\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n    ]; };\n    return ApplicationModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar SecurityContext$1 = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext$1[SecurityContext$1.NONE] = \"NONE\";\nSecurityContext$1[SecurityContext$1.HTML] = \"HTML\";\nSecurityContext$1[SecurityContext$1.STYLE] = \"STYLE\";\nSecurityContext$1[SecurityContext$1.SCRIPT] = \"SCRIPT\";\nSecurityContext$1[SecurityContext$1.URL] = \"URL\";\nSecurityContext$1[SecurityContext$1.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar Sanitizer = (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @record\n */\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    clearProviderOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify$1(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), oldValue, value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (/** @type {?} */ e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName$1(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nfunction splitDepsDsl(deps) {\n    return deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation$1.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    var /** @type {?} */ value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = /** @type {?} */ ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = /** @type {?} */ ((hostElDef)).nodeIndex + 1;\n    var /** @type {?} */ endIndex = /** @type {?} */ ((hostElDef)).nodeIndex + /** @type {?} */ ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = /** @type {?} */ ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName$1(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n    var /** @type {?} */ renderNode$$1 = elData.renderElement;\n    var /** @type {?} */ name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var /** @type {?} */ bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext$1.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOT_CREATED$1 = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    var /** @type {?} */ def = data._def;\n    var /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        providers[i] = provDef.flags & 4096 /* LazyProvider */ ? NOT_CREATED$1 :\n            _createProviderInstance$1(data, provDef);\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var /** @type {?} */ providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        var /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === NOT_CREATED$1) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return _createClass(ngModule, providerDef.value, providerDef.deps);\n        case 1024 /* TypeFactoryProvider */:\n            return _callFactory(ngModule, providerDef.value, providerDef.deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveNgModuleDep(ngModule, providerDef.deps[0]);\n        case 256 /* TypeValueProvider */:\n            return providerDef.value;\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var /** @type {?} */ def = ngModule._def;\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== NOT_CREATED$1) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EMPTY_CONTEXT = new Object();\nvar ComponentFactory_ = (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ inputsArr = [];\n            var /** @type {?} */ inputs = /** @type {?} */ ((this._inputs));\n            for (var /** @type {?} */ propName in inputs) {\n                var /** @type {?} */ templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION$2.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = /** @type {?} */ ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ viewRef_ = /** @type {?} */ (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ fs$$1 = this._view.root.rendererFactory;\n        if (fs$$1.begin) {\n            fs$$1.begin();\n        }\n        Services.checkAndUpdateView(this._view);\n        if (fs$$1.end) {\n            fs$$1.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = /**\n     * @return {?}\n     */\n    function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: 0 /* None */ }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify$1(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\nvar NOT_CREATED = new Object();\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return def.flags & 4096 /* LazyProvider */ ? NOT_CREATED : _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[/** @type {?} */ ((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return /** @type {?} */ ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    while (view) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(view, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(view, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(view, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(view, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(view, providerDef_1.nodeIndex);\n                        if (providerData.instance === NOT_CREATED) {\n                            providerData.instance = _createProviderInstance(view, providerDef_1);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(view);\n        elDef = /** @type {?} */ ((viewParentEl(view)));\n        view = /** @type {?} */ ((view.parent));\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                callElementProvidersLifecycles(view, parent_1, lifecycles);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles) {\n    for (var /** @type {?} */ i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles) {\n    var /** @type {?} */ provider = asProviderData(view, index).instance;\n    if (provider === NOT_CREATED) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.nodeIndex + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var /** @type {?} */ elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var /** @type {?} */ elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode$$1;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    var /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var /** @type {?} */ el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, instance, instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var /** @type {?} */ projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" not dirty\", \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.clearProviderOverrides = services.clearProviderOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        clearProviderOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) {\n            return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n        updateRenderer: function (view, checkType) {\n            return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        clearProviderOverrides: debugClearProviderOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n    providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    for (var /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        var /** @type {?} */ lastElementDef = null;\n        for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var /** @type {?} */ i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                // Make all providers lazy, so that we don't get into trouble\n                // with ordering problems of providers on the same element\n                nodeDef.flags |= 4096 /* LazyProvider */;\n                var /** @type {?} */ provider = /** @type {?} */ ((nodeDef.provider));\n                var /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    if (providerOverrides.size === 0 || !hasOverrrides(def)) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function hasOverrrides(def) {\n        return def.providers.some(function (node) {\n            return !!(node.flags & 3840 /* CatProviderNoDirective */) && providerOverrides.has(node.token);\n        });\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            var /** @type {?} */ provider = def.providers[i];\n            // Make all providers lazy, so that we don't get into trouble\n            // with ordering problems of providers on the same element\n            provider.flags |= 4096 /* LazyProvider */;\n            var /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = (/** @type {?} */ (checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = /** @type {?} */ ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (/** @type {?} */ e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ elDef = this.nodeDef;\n        var /** @type {?} */ elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n    }\n    Object.defineProperty(DebugRenderer2.prototype, \"data\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\nvar NgModuleFactory_ = (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        initServicesIfNeeded();\n        var /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @license Angular v5.0.0-rc.0-fbc9537\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The kind of diagnostic message.\n *\n * @experimental\n */\nvar DiagnosticKind;\n(function (DiagnosticKind) {\n    DiagnosticKind[DiagnosticKind[\"Error\"] = 0] = \"Error\";\n    DiagnosticKind[DiagnosticKind[\"Warning\"] = 1] = \"Warning\";\n})(DiagnosticKind || (DiagnosticKind = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isParseSourceSpan(value) {\n    return value && !!value.start;\n}\nfunction spanOf(span) {\n    if (!span)\n        return undefined;\n    if (isParseSourceSpan(span)) {\n        return { start: span.start.offset, end: span.end.offset };\n    }\n    else {\n        if (span.endSourceSpan) {\n            return { start: span.sourceSpan.start.offset, end: span.endSourceSpan.end.offset };\n        }\n        else if (span.children && span.children.length) {\n            return {\n                start: span.sourceSpan.start.offset,\n                end: spanOf(span.children[span.children.length - 1]).end\n            };\n        }\n        return { start: span.sourceSpan.start.offset, end: span.sourceSpan.end.offset };\n    }\n}\nfunction inSpan(position, span, exclusive) {\n    return span != null && (exclusive ? position >= span.start && position < span.end :\n        position >= span.start && position <= span.end);\n}\nfunction offsetSpan(span, amount) {\n    return { start: span.start + amount, end: span.end + amount };\n}\nfunction isNarrower(spanA, spanB) {\n    return spanA.start >= spanB.start && spanA.end <= spanB.end;\n}\nfunction hasTemplateReference(type) {\n    if (type.diDeps) {\n        for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n            var diDep = _a[_i];\n            if (diDep.token && diDep.token.identifier &&\n                identifierName(diDep.token.identifier) == 'TemplateRef')\n                return true;\n        }\n    }\n    return false;\n}\nfunction getSelectors(info) {\n    var map = new Map();\n    var selectors = flatten(info.directives.map(function (directive) {\n        var selectors = CssSelector.parse(directive.selector);\n        selectors.forEach(function (selector) { return map.set(selector, directive); });\n        return selectors;\n    }));\n    return { selectors: selectors, map: map };\n}\nfunction flatten(a) {\n    return (_a = []).concat.apply(_a, a);\n    var _a;\n}\nfunction removeSuffix(value, suffix) {\n    if (value.endsWith(suffix))\n        return value.substring(0, value.length - suffix.length);\n    return value;\n}\nfunction uniqueByName(elements) {\n    if (elements) {\n        var result = [];\n        var set = new Set();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            if (!set.has(element.name)) {\n                set.add(element.name);\n                result.push(element);\n            }\n        }\n        return result;\n    }\n}\n\nfunction diagnosticInfoFromTemplateInfo(info) {\n    return {\n        fileName: info.fileName,\n        offset: info.template.span.start,\n        query: info.template.query,\n        members: info.template.members,\n        htmlAst: info.htmlAst,\n        templateAst: info.templateAst\n    };\n}\nfunction findTemplateAstAt(ast, position, allowWidening) {\n    if (allowWidening === void 0) { allowWidening = false; }\n    var path$$1 = [];\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visit = function (ast, context) {\n            var span = spanOf(ast);\n            if (inSpan(position, span)) {\n                var len = path$$1.length;\n                if (!len || allowWidening || isNarrower(span, spanOf(path$$1[len - 1]))) {\n                    path$$1.push(ast);\n                }\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        class_1.prototype.visitEmbeddedTemplate = function (ast, context) {\n            return this.visitChildren(context, function (visit) {\n                // Ignore reference, variable and providers\n                visit(ast.attrs);\n                visit(ast.directives);\n                visit(ast.children);\n            });\n        };\n        class_1.prototype.visitElement = function (ast, context) {\n            return this.visitChildren(context, function (visit) {\n                // Ingnore providers\n                visit(ast.attrs);\n                visit(ast.inputs);\n                visit(ast.outputs);\n                visit(ast.references);\n                visit(ast.directives);\n                visit(ast.children);\n            });\n        };\n        class_1.prototype.visitDirective = function (ast, context) {\n            // Ignore the host properties of a directive\n            var result = this.visitChildren(context, function (visit) { visit(ast.inputs); });\n            // We never care about the diretive itself, just its inputs.\n            if (path$$1[path$$1.length - 1] == ast) {\n                path$$1.pop();\n            }\n            return result;\n        };\n        return class_1;\n    }(RecursiveTemplateAstVisitor));\n    templateVisitAll(visitor, ast);\n    return new AstPath(path$$1, position);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findAstAt(ast, position, excludeEmpty) {\n    if (excludeEmpty === void 0) { excludeEmpty = false; }\n    var path$$1 = [];\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visit = function (ast) {\n            if ((!excludeEmpty || ast.span.start < ast.span.end) && inSpan(position, ast.span)) {\n                path$$1.push(ast);\n                visitAstChildren(ast, this);\n            }\n        };\n        return class_1;\n    }(NullAstVisitor));\n    // We never care about the ASTWithSource node and its visit() method calls its ast's visit so\n    // the visit() method above would never see it.\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    visitor.visit(ast);\n    return new AstPath(path$$1, position);\n}\nfunction getExpressionCompletions(scope, ast, position, query) {\n    var path$$1 = findAstAt(ast, position);\n    if (path$$1.empty)\n        return undefined;\n    var tail = path$$1.tail;\n    var result = scope;\n    function getType(ast) { return new language_services_7(scope, query, {}).getType(ast); }\n    // If the completion request is in a not in a pipe or property access then the global scope\n    // (that is the scope of the implicit receiver) is the right scope as the user is typing the\n    // beginning of an expression.\n    tail.visit({\n        visitBinary: function (ast) { },\n        visitChain: function (ast) { },\n        visitConditional: function (ast) { },\n        visitFunctionCall: function (ast) { },\n        visitImplicitReceiver: function (ast) { },\n        visitInterpolation: function (ast) { result = undefined; },\n        visitKeyedRead: function (ast) { },\n        visitKeyedWrite: function (ast) { },\n        visitLiteralArray: function (ast) { },\n        visitLiteralMap: function (ast) { },\n        visitLiteralPrimitive: function (ast) { },\n        visitMethodCall: function (ast) { },\n        visitPipe: function (ast) {\n            if (position >= ast.exp.span.end &&\n                (!ast.args || !ast.args.length || position < ast.args[0].span.start)) {\n                // We are in a position a pipe name is expected.\n                result = query.getPipes();\n            }\n        },\n        visitPrefixNot: function (ast) { },\n        visitNonNullAssert: function (ast) { },\n        visitPropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitPropertyWrite: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitQuote: function (ast) {\n            // For a quote, return the members of any (if there are any).\n            result = query.getBuiltinType(language_services_10.Any).members();\n        },\n        visitSafeMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitSafePropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n    });\n    return result && result.values();\n}\nfunction getExpressionSymbol(scope, ast, position, query) {\n    var path$$1 = findAstAt(ast, position, /* excludeEmpty */ true);\n    if (path$$1.empty)\n        return undefined;\n    var tail = path$$1.tail;\n    function getType(ast) { return new language_services_7(scope, query, {}).getType(ast); }\n    var symbol = undefined;\n    var span = undefined;\n    // If the completion request is in a not in a pipe or property access then the global scope\n    // (that is the scope of the implicit receiver) is the right scope as the user is typing the\n    // beginning of an expression.\n    tail.visit({\n        visitBinary: function (ast) { },\n        visitChain: function (ast) { },\n        visitConditional: function (ast) { },\n        visitFunctionCall: function (ast) { },\n        visitImplicitReceiver: function (ast) { },\n        visitInterpolation: function (ast) { },\n        visitKeyedRead: function (ast) { },\n        visitKeyedWrite: function (ast) { },\n        visitLiteralArray: function (ast) { },\n        visitLiteralMap: function (ast) { },\n        visitLiteralPrimitive: function (ast) { },\n        visitMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitPipe: function (ast) {\n            if (position >= ast.exp.span.end &&\n                (!ast.args || !ast.args.length || position < ast.args[0].span.start)) {\n                // We are in a position a pipe name is expected.\n                var pipes = query.getPipes();\n                if (pipes) {\n                    symbol = pipes.get(ast.name);\n                    span = ast.span;\n                }\n            }\n        },\n        visitPrefixNot: function (ast) { },\n        visitNonNullAssert: function (ast) { },\n        visitPropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitPropertyWrite: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitQuote: function (ast) { },\n        visitSafeMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitSafePropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n    });\n    if (symbol && span) {\n        return { symbol: symbol, span: span };\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar values = [\n    'ID',\n    'CDATA',\n    'NAME',\n    ['ltr', 'rtl'],\n    ['rect', 'circle', 'poly', 'default'],\n    'NUMBER',\n    ['nohref'],\n    ['ismap'],\n    ['declare'],\n    ['DATA', 'REF', 'OBJECT'],\n    ['GET', 'POST'],\n    'IDREF',\n    ['TEXT', 'PASSWORD', 'CHECKBOX', 'RADIO', 'SUBMIT', 'RESET', 'FILE', 'HIDDEN', 'IMAGE', 'BUTTON'],\n    ['checked'],\n    ['disabled'],\n    ['readonly'],\n    ['multiple'],\n    ['selected'],\n    ['button', 'submit', 'reset'],\n    ['void', 'above', 'below', 'hsides', 'lhs', 'rhs', 'vsides', 'box', 'border'],\n    ['none', 'groups', 'rows', 'cols', 'all'],\n    ['left', 'center', 'right', 'justify', 'char'],\n    ['top', 'middle', 'bottom', 'baseline'],\n    'IDREFS',\n    ['row', 'col', 'rowgroup', 'colgroup'],\n    ['defer']\n];\nvar groups = [\n    { id: 0 },\n    {\n        onclick: 1,\n        ondblclick: 1,\n        onmousedown: 1,\n        onmouseup: 1,\n        onmouseover: 1,\n        onmousemove: 1,\n        onmouseout: 1,\n        onkeypress: 1,\n        onkeydown: 1,\n        onkeyup: 1\n    },\n    { lang: 2, dir: 3 },\n    { onload: 1, onunload: 1 },\n    { name: 1 },\n    { href: 1 },\n    { type: 1 },\n    { alt: 1 },\n    { tabindex: 5 },\n    { media: 1 },\n    { nohref: 6 },\n    { usemap: 1 },\n    { src: 1 },\n    { onfocus: 1, onblur: 1 },\n    { charset: 1 },\n    { declare: 8, classid: 1, codebase: 1, data: 1, codetype: 1, archive: 1, standby: 1 },\n    { title: 1 },\n    { value: 1 },\n    { cite: 1 },\n    { datetime: 1 },\n    { accept: 1 },\n    { shape: 4, coords: 1 },\n    { for: 11\n    },\n    { action: 1, method: 10, enctype: 1, onsubmit: 1, onreset: 1, 'accept-charset': 1 },\n    { valuetype: 9 },\n    { longdesc: 1 },\n    { width: 1 },\n    { disabled: 14 },\n    { readonly: 15, onselect: 1 },\n    { accesskey: 1 },\n    { size: 5, multiple: 16 },\n    { onchange: 1 },\n    { label: 1 },\n    { selected: 17 },\n    { type: 12, checked: 13, size: 1, maxlength: 5 },\n    { rows: 5, cols: 5 },\n    { type: 18 },\n    { height: 1 },\n    { summary: 1, border: 1, frame: 19, rules: 20, cellspacing: 1, cellpadding: 1, datapagesize: 1 },\n    { align: 21, char: 1, charoff: 1, valign: 22 },\n    { span: 5 },\n    { abbr: 1, axis: 1, headers: 23, scope: 24, rowspan: 5, colspan: 5 },\n    { profile: 1 },\n    { 'http-equiv': 2, name: 2, content: 1, scheme: 1 },\n    { class: 1, style: 1 },\n    { hreflang: 2, rel: 1, rev: 1 },\n    { ismap: 7 },\n    { defer: 25, event: 1, for: 1 }\n];\nvar elements = {\n    TT: [0, 1, 2, 16, 44],\n    I: [0, 1, 2, 16, 44],\n    B: [0, 1, 2, 16, 44],\n    BIG: [0, 1, 2, 16, 44],\n    SMALL: [0, 1, 2, 16, 44],\n    EM: [0, 1, 2, 16, 44],\n    STRONG: [0, 1, 2, 16, 44],\n    DFN: [0, 1, 2, 16, 44],\n    CODE: [0, 1, 2, 16, 44],\n    SAMP: [0, 1, 2, 16, 44],\n    KBD: [0, 1, 2, 16, 44],\n    VAR: [0, 1, 2, 16, 44],\n    CITE: [0, 1, 2, 16, 44],\n    ABBR: [0, 1, 2, 16, 44],\n    ACRONYM: [0, 1, 2, 16, 44],\n    SUB: [0, 1, 2, 16, 44],\n    SUP: [0, 1, 2, 16, 44],\n    SPAN: [0, 1, 2, 16, 44],\n    BDO: [0, 2, 16, 44],\n    BR: [0, 16, 44],\n    BODY: [0, 1, 2, 3, 16, 44],\n    ADDRESS: [0, 1, 2, 16, 44],\n    DIV: [0, 1, 2, 16, 44],\n    A: [0, 1, 2, 4, 5, 6, 8, 13, 14, 16, 21, 29, 44, 45],\n    MAP: [0, 1, 2, 4, 16, 44],\n    AREA: [0, 1, 2, 5, 7, 8, 10, 13, 16, 21, 29, 44],\n    LINK: [0, 1, 2, 5, 6, 9, 14, 16, 44, 45],\n    IMG: [0, 1, 2, 4, 7, 11, 12, 16, 25, 26, 37, 44, 46],\n    OBJECT: [0, 1, 2, 4, 6, 8, 11, 15, 16, 26, 37, 44],\n    PARAM: [0, 4, 6, 17, 24],\n    HR: [0, 1, 2, 16, 44],\n    P: [0, 1, 2, 16, 44],\n    H1: [0, 1, 2, 16, 44],\n    H2: [0, 1, 2, 16, 44],\n    H3: [0, 1, 2, 16, 44],\n    H4: [0, 1, 2, 16, 44],\n    H5: [0, 1, 2, 16, 44],\n    H6: [0, 1, 2, 16, 44],\n    PRE: [0, 1, 2, 16, 44],\n    Q: [0, 1, 2, 16, 18, 44],\n    BLOCKQUOTE: [0, 1, 2, 16, 18, 44],\n    INS: [0, 1, 2, 16, 18, 19, 44],\n    DEL: [0, 1, 2, 16, 18, 19, 44],\n    DL: [0, 1, 2, 16, 44],\n    DT: [0, 1, 2, 16, 44],\n    DD: [0, 1, 2, 16, 44],\n    OL: [0, 1, 2, 16, 44],\n    UL: [0, 1, 2, 16, 44],\n    LI: [0, 1, 2, 16, 44],\n    FORM: [0, 1, 2, 4, 16, 20, 23, 44],\n    LABEL: [0, 1, 2, 13, 16, 22, 29, 44],\n    INPUT: [0, 1, 2, 4, 7, 8, 11, 12, 13, 16, 17, 20, 27, 28, 29, 31, 34, 44, 46],\n    SELECT: [0, 1, 2, 4, 8, 13, 16, 27, 30, 31, 44],\n    OPTGROUP: [0, 1, 2, 16, 27, 32, 44],\n    OPTION: [0, 1, 2, 16, 17, 27, 32, 33, 44],\n    TEXTAREA: [0, 1, 2, 4, 8, 13, 16, 27, 28, 29, 31, 35, 44],\n    FIELDSET: [0, 1, 2, 16, 44],\n    LEGEND: [0, 1, 2, 16, 29, 44],\n    BUTTON: [0, 1, 2, 4, 8, 13, 16, 17, 27, 29, 36, 44],\n    TABLE: [0, 1, 2, 16, 26, 38, 44],\n    CAPTION: [0, 1, 2, 16, 44],\n    COLGROUP: [0, 1, 2, 16, 26, 39, 40, 44],\n    COL: [0, 1, 2, 16, 26, 39, 40, 44],\n    THEAD: [0, 1, 2, 16, 39, 44],\n    TBODY: [0, 1, 2, 16, 39, 44],\n    TFOOT: [0, 1, 2, 16, 39, 44],\n    TR: [0, 1, 2, 16, 39, 44],\n    TH: [0, 1, 2, 16, 39, 41, 44],\n    TD: [0, 1, 2, 16, 39, 41, 44],\n    HEAD: [2, 42],\n    TITLE: [2],\n    BASE: [5],\n    META: [2, 43],\n    STYLE: [2, 6, 9, 16],\n    SCRIPT: [6, 12, 14, 47],\n    NOSCRIPT: [0, 1, 2, 16, 44],\n    HTML: [2]\n};\nvar defaultAttributes = [0, 1, 2, 4];\nfunction elementNames() {\n    return Object.keys(elements).sort().map(function (v) { return v.toLowerCase(); });\n}\nfunction compose(indexes) {\n    var result = {};\n    if (indexes) {\n        for (var _i = 0, indexes_1 = indexes; _i < indexes_1.length; _i++) {\n            var index = indexes_1[_i];\n            var group = groups[index];\n            for (var name_1 in group)\n                if (group.hasOwnProperty(name_1))\n                    result[name_1] = values[group[name_1]];\n        }\n    }\n    return result;\n}\nfunction attributeNames(element) {\n    return Object.keys(compose(elements[element.toUpperCase()] || defaultAttributes)).sort();\n}\n\n// This section is describes the DOM property surface of a DOM element and is derivgulp formated\n// from\n// from the SCHEMA strings from the security context information. SCHEMA is copied here because\n// it would be an unnecessary risk to allow this array to be imported from the security context\n// schema registry.\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        /* added manually to avoid breaking changes */\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar EVENT = 'event';\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\nvar SchemaInformation = (function () {\n    function SchemaInformation() {\n        var _this = this;\n        this.schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var parts = encodedType.split('|');\n            var properties = parts[1].split(',');\n            var typeParts = (parts[0] + '^').split('^');\n            var typeName = typeParts[0];\n            var type = {};\n            typeName.split(',').forEach(function (tag) { return _this.schema[tag.toLowerCase()] = type; });\n            var superName = typeParts[1];\n            var superType = superName && _this.schema[superName.toLowerCase()];\n            if (superType) {\n                for (var key in superType) {\n                    type[key] = superType[key];\n                }\n            }\n            properties.forEach(function (property) {\n                if (property == '') {\n                }\n                else if (property.startsWith('*')) {\n                    type[property.substring(1)] = EVENT;\n                }\n                else if (property.startsWith('!')) {\n                    type[property.substring(1)] = BOOLEAN;\n                }\n                else if (property.startsWith('#')) {\n                    type[property.substring(1)] = NUMBER;\n                }\n                else if (property.startsWith('%')) {\n                    type[property.substring(1)] = OBJECT;\n                }\n                else {\n                    type[property] = STRING;\n                }\n            });\n        });\n    }\n    SchemaInformation.prototype.allKnownElements = function () { return Object.keys(this.schema); };\n    SchemaInformation.prototype.eventsOf = function (elementName) {\n        var elementType = this.schema[elementName.toLowerCase()] || {};\n        return Object.keys(elementType).filter(function (property) { return elementType[property] === EVENT; });\n    };\n    SchemaInformation.prototype.propertiesOf = function (elementName) {\n        var elementType = this.schema[elementName.toLowerCase()] || {};\n        return Object.keys(elementType).filter(function (property) { return elementType[property] !== EVENT; });\n    };\n    SchemaInformation.prototype.typeOf = function (elementName, property) {\n        return (this.schema[elementName.toLowerCase()] || {})[property];\n    };\n    Object.defineProperty(SchemaInformation, \"instance\", {\n        get: function () {\n            var result = SchemaInformation._instance;\n            if (!result) {\n                result = SchemaInformation._instance = new SchemaInformation();\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SchemaInformation;\n}());\nfunction eventNames(elementName) {\n    return SchemaInformation.instance.eventsOf(elementName);\n}\nfunction propertyNames(elementName) {\n    return SchemaInformation.instance.propertiesOf(elementName);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar hiddenHtmlElements = {\n    html: true,\n    script: true,\n    noscript: true,\n    base: true,\n    body: true,\n    title: true,\n    head: true,\n    link: true,\n};\nfunction getTemplateCompletions(templateInfo) {\n    var result = undefined;\n    var htmlAst = templateInfo.htmlAst, templateAst = templateInfo.templateAst, template = templateInfo.template;\n    // The templateNode starts at the delimiter character so we add 1 to skip it.\n    if (templateInfo.position != null) {\n        var templatePosition_1 = templateInfo.position - template.span.start;\n        var path_1 = findNode(htmlAst, templatePosition_1);\n        var mostSpecific = path_1.tail;\n        if (path_1.empty || !mostSpecific) {\n            result = elementCompletions(templateInfo, path_1);\n        }\n        else {\n            var astPosition_1 = templatePosition_1 - mostSpecific.sourceSpan.start.offset;\n            mostSpecific.visit({\n                visitElement: function (ast) {\n                    var startTagSpan = spanOf(ast.sourceSpan);\n                    var tagLen = ast.name.length;\n                    if (templatePosition_1 <=\n                        startTagSpan.start + tagLen + 1 /* 1 for the opening angle bracked */) {\n                        // If we are in the tag then return the element completions.\n                        result = elementCompletions(templateInfo, path_1);\n                    }\n                    else if (templatePosition_1 < startTagSpan.end) {\n                        // We are in the attribute section of the element (but not in an attribute).\n                        // Return the attribute completions.\n                        result = attributeCompletions(templateInfo, path_1);\n                    }\n                },\n                visitAttribute: function (ast) {\n                    if (!ast.valueSpan || !inSpan(templatePosition_1, spanOf(ast.valueSpan))) {\n                        // We are in the name of an attribute. Show attribute completions.\n                        result = attributeCompletions(templateInfo, path_1);\n                    }\n                    else if (ast.valueSpan && inSpan(templatePosition_1, spanOf(ast.valueSpan))) {\n                        result = attributeValueCompletions(templateInfo, templatePosition_1, ast);\n                    }\n                },\n                visitText: function (ast) {\n                    // Check if we are in a entity.\n                    result = entityCompletions(getSourceText(template, spanOf(ast)), astPosition_1);\n                    if (result)\n                        return result;\n                    result = interpolationCompletions(templateInfo, templatePosition_1);\n                    if (result)\n                        return result;\n                    var element = path_1.first(Element);\n                    if (element) {\n                        var definition = getHtmlTagDefinition(element.name);\n                        if (definition.contentType === TagContentType.PARSABLE_DATA) {\n                            result = voidElementAttributeCompletions(templateInfo, path_1);\n                            if (!result) {\n                                // If the element can hold content Show element completions.\n                                result = elementCompletions(templateInfo, path_1);\n                            }\n                        }\n                    }\n                    else {\n                        // If no element container, implies parsable data so show elements.\n                        result = voidElementAttributeCompletions(templateInfo, path_1);\n                        if (!result) {\n                            result = elementCompletions(templateInfo, path_1);\n                        }\n                    }\n                },\n                visitComment: function (ast) { },\n                visitExpansion: function (ast) { },\n                visitExpansionCase: function (ast) { }\n            }, null);\n        }\n    }\n    return result;\n}\nfunction attributeCompletions(info, path$$1) {\n    var item = path$$1.tail instanceof Element ? path$$1.tail : path$$1.parentOf(path$$1.tail);\n    if (item instanceof Element) {\n        return attributeCompletionsForElement(info, item.name, item);\n    }\n    return undefined;\n}\nfunction attributeCompletionsForElement(info, elementName, element) {\n    var attributes = getAttributeInfosForElement(info, elementName, element);\n    // Map all the attributes to a completion\n    return attributes.map(function (attr) { return ({\n        kind: attr.fromHtml ? 'html attribute' : 'attribute',\n        name: nameOfAttr(attr),\n        sort: attr.name\n    }); });\n}\nfunction getAttributeInfosForElement(info, elementName, element) {\n    var attributes = [];\n    // Add html attributes\n    var htmlAttributes = attributeNames(elementName) || [];\n    if (htmlAttributes) {\n        attributes.push.apply(attributes, htmlAttributes.map(function (name) { return ({ name: name, fromHtml: true }); }));\n    }\n    // Add html properties\n    var htmlProperties = propertyNames(elementName);\n    if (htmlProperties) {\n        attributes.push.apply(attributes, htmlProperties.map(function (name) { return ({ name: name, input: true }); }));\n    }\n    // Add html events\n    var htmlEvents = eventNames(elementName);\n    if (htmlEvents) {\n        attributes.push.apply(attributes, htmlEvents.map(function (name) { return ({ name: name, output: true }); }));\n    }\n    var _a = getSelectors(info), selectors = _a.selectors, selectorMap = _a.map;\n    if (selectors && selectors.length) {\n        // All the attributes that are selectable should be shown.\n        var applicableSelectors = selectors.filter(function (selector) { return !selector.element || selector.element == elementName; });\n        var selectorAndAttributeNames = applicableSelectors.map(function (selector) { return ({ selector: selector, attrs: selector.attrs.filter(function (a) { return !!a; }) }); });\n        var attrs_1 = flatten(selectorAndAttributeNames.map(function (selectorAndAttr) {\n            var directive = selectorMap.get(selectorAndAttr.selector);\n            var result = selectorAndAttr.attrs.map(function (name) { return ({ name: name, input: name in directive.inputs, output: name in directive.outputs }); });\n            return result;\n        }));\n        // Add template attribute if a directive contains a template reference\n        selectorAndAttributeNames.forEach(function (selectorAndAttr) {\n            var selector = selectorAndAttr.selector;\n            var directive = selectorMap.get(selector);\n            if (directive && hasTemplateReference(directive.type) && selector.attrs.length &&\n                selector.attrs[0]) {\n                attrs_1.push({ name: selector.attrs[0], template: true });\n            }\n        });\n        // All input and output properties of the matching directives should be added.\n        var elementSelector = element ?\n            createElementCssSelector(element) :\n            createElementCssSelector(new Element(elementName, [], [], null, null, null));\n        var matcher = new SelectorMatcher();\n        matcher.addSelectables(selectors);\n        matcher.match(elementSelector, function (selector) {\n            var directive = selectorMap.get(selector);\n            if (directive) {\n                attrs_1.push.apply(attrs_1, Object.keys(directive.inputs).map(function (name) { return ({ name: name, input: true }); }));\n                attrs_1.push.apply(attrs_1, Object.keys(directive.outputs).map(function (name) { return ({ name: name, output: true }); }));\n            }\n        });\n        // If a name shows up twice, fold it into a single value.\n        attrs_1 = foldAttrs(attrs_1);\n        // Now expand them back out to ensure that input/output shows up as well as input and\n        // output.\n        attributes.push.apply(attributes, flatten(attrs_1.map(expandedAttr)));\n    }\n    return attributes;\n}\nfunction attributeValueCompletions(info, position, attr) {\n    var path$$1 = findTemplateAstAt(info.templateAst, position);\n    var mostSpecific = path$$1.tail;\n    var dinfo = diagnosticInfoFromTemplateInfo(info);\n    if (mostSpecific) {\n        var visitor = new ExpressionVisitor(info, position, attr, function () { return language_services_5(dinfo, path$$1, false); });\n        mostSpecific.visit(visitor, null);\n        if (!visitor.result || !visitor.result.length) {\n            // Try allwoing widening the path\n            var widerPath_1 = findTemplateAstAt(info.templateAst, position, /* allowWidening */ true);\n            if (widerPath_1.tail) {\n                var widerVisitor = new ExpressionVisitor(info, position, attr, function () { return language_services_5(dinfo, widerPath_1, false); });\n                widerPath_1.tail.visit(widerVisitor, null);\n                return widerVisitor.result;\n            }\n        }\n        return visitor.result;\n    }\n}\nfunction elementCompletions(info, path$$1) {\n    var htmlNames = elementNames().filter(function (name) { return !(name in hiddenHtmlElements); });\n    // Collect the elements referenced by the selectors\n    var directiveElements = getSelectors(info)\n        .selectors.map(function (selector) { return selector.element; })\n        .filter(function (name) { return !!name; });\n    var components = directiveElements.map(function (name) { return ({ kind: 'component', name: name, sort: name }); });\n    var htmlElements = htmlNames.map(function (name) { return ({ kind: 'element', name: name, sort: name }); });\n    // Return components and html elements\n    return uniqueByName(htmlElements.concat(components));\n}\nfunction entityCompletions(value, position) {\n    // Look for entity completions\n    var re = /&[A-Za-z]*;?(?!\\d)/g;\n    var found;\n    var result = undefined;\n    while (found = re.exec(value)) {\n        var len = found[0].length;\n        if (position >= found.index && position < (found.index + len)) {\n            result = Object.keys(NAMED_ENTITIES)\n                .map(function (name) { return ({ kind: 'entity', name: \"&\" + name + \";\", sort: name }); });\n            break;\n        }\n    }\n    return result;\n}\nfunction interpolationCompletions(info, position) {\n    // Look for an interpolation in at the position.\n    var templatePath = findTemplateAstAt(info.templateAst, position);\n    var mostSpecific = templatePath.tail;\n    if (mostSpecific) {\n        var visitor = new ExpressionVisitor(info, position, undefined, function () { return language_services_5(diagnosticInfoFromTemplateInfo(info), templatePath, false); });\n        mostSpecific.visit(visitor, null);\n        return uniqueByName(visitor.result);\n    }\n}\n// There is a special case of HTML where text that contains a unclosed tag is treated as\n// text. For exaple '<h1> Some <a text </h1>' produces a text nodes inside of the H1\n// element \"Some <a text\". We, however, want to treat this as if the user was requesting\n// the attributes of an \"a\" element, not requesting completion in the a text element. This\n// code checks for this case and returns element completions if it is detected or undefined\n// if it is not.\nfunction voidElementAttributeCompletions(info, path$$1) {\n    var tail = path$$1.tail;\n    if (tail instanceof Text) {\n        var match = tail.value.match(/<(\\w(\\w|\\d|-)*:)?(\\w(\\w|\\d|-)*)\\s/);\n        // The position must be after the match, otherwise we are still in a place where elements\n        // are expected (such as `<|a` or `<a|`; we only want attributes for `<a |` or after).\n        if (match &&\n            path$$1.position >= (match.index || 0) + match[0].length + tail.sourceSpan.start.offset) {\n            return attributeCompletionsForElement(info, match[3]);\n        }\n    }\n}\nvar ExpressionVisitor = (function (_super) {\n    __extends(ExpressionVisitor, _super);\n    function ExpressionVisitor(info, position, attr, getExpressionScope$$1) {\n        var _this = _super.call(this) || this;\n        _this.info = info;\n        _this.position = position;\n        _this.attr = attr;\n        _this.getExpressionScope = getExpressionScope$$1 || (function () { return info.template.members; });\n        return _this;\n    }\n    ExpressionVisitor.prototype.visitDirectiveProperty = function (ast) {\n        this.attributeValueCompletions(ast.value);\n    };\n    ExpressionVisitor.prototype.visitElementProperty = function (ast) {\n        this.attributeValueCompletions(ast.value);\n    };\n    ExpressionVisitor.prototype.visitEvent = function (ast) { this.attributeValueCompletions(ast.handler); };\n    ExpressionVisitor.prototype.visitElement = function (ast) {\n        var _this = this;\n        if (this.attr && getSelectors(this.info) && this.attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\n            // The value is a template expression but the expression AST was not produced when the\n            // TemplateAst was produce so\n            // do that now.\n            var key_1 = this.attr.name.substr(TEMPLATE_ATTR_PREFIX.length);\n            // Find the selector\n            var selectorInfo = getSelectors(this.info);\n            var selectors = selectorInfo.selectors;\n            var selector_1 = selectors.filter(function (s) { return s.attrs.some(function (attr, i) { return i % 2 == 0 && attr == key_1; }); })[0];\n            var templateBindingResult = this.info.expressionParser.parseTemplateBindings(key_1, this.attr.value, null);\n            // find the template binding that contains the position\n            if (!this.attr.valueSpan)\n                return;\n            var valueRelativePosition_1 = this.position - this.attr.valueSpan.start.offset - 1;\n            var bindings = templateBindingResult.templateBindings;\n            var binding = bindings.find(function (binding) { return inSpan(valueRelativePosition_1, binding.span, /* exclusive */ true); }) ||\n                bindings.find(function (binding) { return inSpan(valueRelativePosition_1, binding.span); });\n            var keyCompletions = function () {\n                var keys = [];\n                if (selector_1) {\n                    var attrNames = selector_1.attrs.filter(function (_, i) { return i % 2 == 0; });\n                    keys = attrNames.filter(function (name) { return name.startsWith(key_1) && name != key_1; })\n                        .map(function (name) { return lowerName(name.substr(key_1.length)); });\n                }\n                keys.push('let');\n                _this.result = keys.map(function (key) { return ({ kind: 'key', name: key, sort: key }); });\n            };\n            if (!binding || (binding.key == key_1 && !binding.expression)) {\n                // We are in the root binding. We should return `let` and keys that are left in the\n                // selector.\n                keyCompletions();\n            }\n            else if (binding.keyIsVar) {\n                var equalLocation = this.attr.value.indexOf('=');\n                this.result = [];\n                if (equalLocation >= 0 && valueRelativePosition_1 >= equalLocation) {\n                    // We are after the '=' in a let clause. The valid values here are the members of the\n                    // template reference's type parameter.\n                    var directiveMetadata = selectorInfo.map.get(selector_1);\n                    if (directiveMetadata) {\n                        var contextTable = this.info.template.query.getTemplateContext(directiveMetadata.type.reference);\n                        if (contextTable) {\n                            this.result = this.symbolsToCompletions(contextTable.values());\n                        }\n                    }\n                }\n                else if (binding.key && valueRelativePosition_1 <= (binding.key.length - key_1.length)) {\n                    keyCompletions();\n                }\n            }\n            else {\n                // If the position is in the expression or after the key or there is no key, return the\n                // expression completions\n                if ((binding.expression && inSpan(valueRelativePosition_1, binding.expression.ast.span)) ||\n                    (binding.key &&\n                        valueRelativePosition_1 > binding.span.start + (binding.key.length - key_1.length)) ||\n                    !binding.key) {\n                    var span = new ParseSpan(0, this.attr.value.length);\n                    this.attributeValueCompletions(binding.expression ? binding.expression.ast :\n                        new PropertyRead(span, new ImplicitReceiver(span), ''), valueRelativePosition_1);\n                }\n                else {\n                    keyCompletions();\n                }\n            }\n        }\n    };\n    ExpressionVisitor.prototype.visitBoundText = function (ast) {\n        var expressionPosition = this.position - ast.sourceSpan.start.offset;\n        if (inSpan(expressionPosition, ast.value.span)) {\n            var completions = getExpressionCompletions(this.getExpressionScope(), ast.value, expressionPosition, this.info.template.query);\n            if (completions) {\n                this.result = this.symbolsToCompletions(completions);\n            }\n        }\n    };\n    ExpressionVisitor.prototype.attributeValueCompletions = function (value, position) {\n        var symbols = getExpressionCompletions(this.getExpressionScope(), value, position == null ? this.attributeValuePosition : position, this.info.template.query);\n        if (symbols) {\n            this.result = this.symbolsToCompletions(symbols);\n        }\n    };\n    ExpressionVisitor.prototype.symbolsToCompletions = function (symbols) {\n        return symbols.filter(function (s) { return !s.name.startsWith('__') && s.public; })\n            .map(function (symbol) { return ({ kind: symbol.kind, name: symbol.name, sort: symbol.name }); });\n    };\n    Object.defineProperty(ExpressionVisitor.prototype, \"attributeValuePosition\", {\n        get: function () {\n            if (this.attr && this.attr.valueSpan) {\n                return this.position - this.attr.valueSpan.start.offset - 1;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ExpressionVisitor;\n}(NullTemplateVisitor));\nfunction getSourceText(template, span) {\n    return template.source.substring(span.start, span.end);\n}\nfunction nameOfAttr(attr) {\n    var name = attr.name;\n    if (attr.output) {\n        name = removeSuffix(name, 'Events');\n        name = removeSuffix(name, 'Changed');\n    }\n    var result = [name];\n    if (attr.input) {\n        result.unshift('[');\n        result.push(']');\n    }\n    if (attr.output) {\n        result.unshift('(');\n        result.push(')');\n    }\n    if (attr.template) {\n        result.unshift('*');\n    }\n    return result.join('');\n}\nvar templateAttr = /^(\\w+:)?(template$|^\\*)/;\nfunction createElementCssSelector(element) {\n    var cssSelector = new CssSelector();\n    var elNameNoNs = splitNsName(element.name)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var _i = 0, _a = element.attrs; _i < _a.length; _i++) {\n        var attr = _a[_i];\n        if (!attr.name.match(templateAttr)) {\n            var _b = splitNsName(attr.name), _ = _b[0], attrNameNoNs = _b[1];\n            cssSelector.addAttribute(attrNameNoNs, attr.value);\n            if (attr.name.toLowerCase() == 'class') {\n                var classes = attr.value.split(/s+/g);\n                classes.forEach(function (className) { return cssSelector.addClassName(className); });\n            }\n        }\n    }\n    return cssSelector;\n}\nfunction foldAttrs(attrs) {\n    var inputOutput = new Map();\n    var templates = new Map();\n    var result = [];\n    attrs.forEach(function (attr) {\n        if (attr.fromHtml) {\n            return attr;\n        }\n        if (attr.template) {\n            var duplicate = templates.get(attr.name);\n            if (!duplicate) {\n                result.push({ name: attr.name, template: true });\n                templates.set(attr.name, attr);\n            }\n        }\n        if (attr.input || attr.output) {\n            var duplicate = inputOutput.get(attr.name);\n            if (duplicate) {\n                duplicate.input = duplicate.input || attr.input;\n                duplicate.output = duplicate.output || attr.output;\n            }\n            else {\n                var cloneAttr = { name: attr.name };\n                if (attr.input)\n                    cloneAttr.input = true;\n                if (attr.output)\n                    cloneAttr.output = true;\n                result.push(cloneAttr);\n                inputOutput.set(attr.name, cloneAttr);\n            }\n        }\n    });\n    return result;\n}\nfunction expandedAttr(attr) {\n    if (attr.input && attr.output) {\n        return [\n            attr, { name: attr.name, input: true, output: false },\n            { name: attr.name, input: false, output: true }\n        ];\n    }\n    return [attr];\n}\nfunction lowerName(name) {\n    return name && (name[0].toLowerCase() + name.substr(1));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction locateSymbol(info) {\n    if (!info.position)\n        return undefined;\n    var templatePosition = info.position - info.template.span.start;\n    var path$$1 = findTemplateAstAt(info.templateAst, templatePosition);\n    if (path$$1.tail) {\n        var symbol_1 = undefined;\n        var span_1 = undefined;\n        var attributeValueSymbol_1 = function (ast, inEvent) {\n            if (inEvent === void 0) { inEvent = false; }\n            var attribute = findAttribute(info);\n            if (attribute) {\n                if (inSpan(templatePosition, spanOf(attribute.valueSpan))) {\n                    var dinfo = diagnosticInfoFromTemplateInfo(info);\n                    var scope = language_services_5(dinfo, path$$1, inEvent);\n                    if (attribute.valueSpan) {\n                        var expressionOffset = attribute.valueSpan.start.offset + 1;\n                        var result = getExpressionSymbol(scope, ast, templatePosition - expressionOffset, info.template.query);\n                        if (result) {\n                            symbol_1 = result.symbol;\n                            span_1 = offsetSpan(result.span, expressionOffset);\n                        }\n                    }\n                    return true;\n                }\n            }\n            return false;\n        };\n        path$$1.tail.visit({\n            visitNgContent: function (ast) { },\n            visitEmbeddedTemplate: function (ast) { },\n            visitElement: function (ast) {\n                var component = ast.directives.find(function (d) { return d.directive.isComponent; });\n                if (component) {\n                    symbol_1 = info.template.query.getTypeSymbol(component.directive.type.reference);\n                    symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'component');\n                    span_1 = spanOf(ast);\n                }\n                else {\n                    // Find a directive that matches the element name\n                    var directive = ast.directives.find(function (d) { return d.directive.selector != null && d.directive.selector.indexOf(ast.name) >= 0; });\n                    if (directive) {\n                        symbol_1 = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                        symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'directive');\n                        span_1 = spanOf(ast);\n                    }\n                }\n            },\n            visitReference: function (ast) {\n                symbol_1 = ast.value && info.template.query.getTypeSymbol(tokenReference(ast.value));\n                span_1 = spanOf(ast);\n            },\n            visitVariable: function (ast) { },\n            visitEvent: function (ast) {\n                if (!attributeValueSymbol_1(ast.handler, /* inEvent */ true)) {\n                    symbol_1 = findOutputBinding(info, path$$1, ast);\n                    symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'event');\n                    span_1 = spanOf(ast);\n                }\n            },\n            visitElementProperty: function (ast) { attributeValueSymbol_1(ast.value); },\n            visitAttr: function (ast) { },\n            visitBoundText: function (ast) {\n                var expressionPosition = templatePosition - ast.sourceSpan.start.offset;\n                if (inSpan(expressionPosition, ast.value.span)) {\n                    var dinfo = diagnosticInfoFromTemplateInfo(info);\n                    var scope = language_services_5(dinfo, path$$1, /* includeEvent */ false);\n                    var result = getExpressionSymbol(scope, ast.value, expressionPosition, info.template.query);\n                    if (result) {\n                        symbol_1 = result.symbol;\n                        span_1 = offsetSpan(result.span, ast.sourceSpan.start.offset);\n                    }\n                }\n            },\n            visitText: function (ast) { },\n            visitDirective: function (ast) {\n                symbol_1 = info.template.query.getTypeSymbol(ast.directive.type.reference);\n                span_1 = spanOf(ast);\n            },\n            visitDirectiveProperty: function (ast) {\n                if (!attributeValueSymbol_1(ast.value)) {\n                    symbol_1 = findInputBinding(info, path$$1, ast);\n                    span_1 = spanOf(ast);\n                }\n            }\n        }, null);\n        if (symbol_1 && span_1) {\n            return { symbol: symbol_1, span: offsetSpan(span_1, info.template.span.start) };\n        }\n    }\n}\nfunction findAttribute(info) {\n    if (info.position) {\n        var templatePosition = info.position - info.template.span.start;\n        var path$$1 = findNode(info.htmlAst, templatePosition);\n        return path$$1.first(Attribute$1);\n    }\n}\nfunction findInputBinding(info, path$$1, binding) {\n    var element = path$$1.first(ElementAst);\n    if (element) {\n        for (var _i = 0, _a = element.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            var invertedInput = invertMap(directive.directive.inputs);\n            var fieldName = invertedInput[binding.templateName];\n            if (fieldName) {\n                var classSymbol = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                if (classSymbol) {\n                    return classSymbol.members().get(fieldName);\n                }\n            }\n        }\n    }\n}\nfunction findOutputBinding(info, path$$1, binding) {\n    var element = path$$1.first(ElementAst);\n    if (element) {\n        for (var _i = 0, _a = element.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            var invertedOutputs = invertMap(directive.directive.outputs);\n            var fieldName = invertedOutputs[binding.name];\n            if (fieldName) {\n                var classSymbol = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                if (classSymbol) {\n                    return classSymbol.members().get(fieldName);\n                }\n            }\n        }\n    }\n}\nfunction invertMap(obj) {\n    var result = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var name_1 = _a[_i];\n        var v = obj[name_1];\n        result[v] = name_1;\n    }\n    return result;\n}\n/**\n * Wrap a symbol and change its kind to component.\n */\nvar OverrideKindSymbol = (function () {\n    function OverrideKindSymbol(sym, kindOverride) {\n        this.sym = sym;\n        this.kind = kindOverride;\n    }\n    Object.defineProperty(OverrideKindSymbol.prototype, \"name\", {\n        get: function () { return this.sym.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"language\", {\n        get: function () { return this.sym.language; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"type\", {\n        get: function () { return this.sym.type; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"container\", {\n        get: function () { return this.sym.container; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"public\", {\n        get: function () { return this.sym.public; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"callable\", {\n        get: function () { return this.sym.callable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"nullable\", {\n        get: function () { return this.sym.nullable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"definition\", {\n        get: function () { return this.sym.definition; },\n        enumerable: true,\n        configurable: true\n    });\n    OverrideKindSymbol.prototype.members = function () { return this.sym.members(); };\n    OverrideKindSymbol.prototype.signatures = function () { return this.sym.signatures(); };\n    OverrideKindSymbol.prototype.selectSignature = function (types) { return this.sym.selectSignature(types); };\n    OverrideKindSymbol.prototype.indexed = function (argument) { return this.sym.indexed(argument); };\n    return OverrideKindSymbol;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getDefinition(info) {\n    var result = locateSymbol(info);\n    return result && result.symbol.definition;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getTemplateDiagnostics(fileName, astProvider, templates) {\n    var results = [];\n    var _loop_1 = function (template) {\n        var ast = astProvider.getTemplateAst(template, fileName);\n        if (ast) {\n            if (ast.parseErrors && ast.parseErrors.length) {\n                results.push.apply(results, ast.parseErrors.map(function (e) { return ({\n                    kind: DiagnosticKind.Error,\n                    span: offsetSpan(spanOf(e.span), template.span.start),\n                    message: e.msg\n                }); }));\n            }\n            else if (ast.templateAst && ast.htmlAst) {\n                var info = {\n                    templateAst: ast.templateAst,\n                    htmlAst: ast.htmlAst,\n                    offset: template.span.start,\n                    query: template.query,\n                    members: template.members\n                };\n                var expressionDiagnostics = language_services_6(info);\n                results.push.apply(results, expressionDiagnostics);\n            }\n            if (ast.errors) {\n                results.push.apply(results, ast.errors.map(function (e) { return ({ kind: e.kind, span: e.span || template.span, message: e.message }); }));\n            }\n        }\n    };\n    for (var _i = 0, templates_1 = templates; _i < templates_1.length; _i++) {\n        var template = templates_1[_i];\n        _loop_1(template);\n    }\n    return results;\n}\nfunction getDeclarationDiagnostics(declarations, modules) {\n    var results = [];\n    var directives = undefined;\n    var _loop_2 = function (declaration) {\n        var report = function (message, span) {\n            results.push({\n                kind: DiagnosticKind.Error,\n                span: span || declaration.declarationSpan, message: message\n            });\n        };\n        for (var _i = 0, _a = declaration.errors; _i < _a.length; _i++) {\n            var error = _a[_i];\n            report(error.message, error.span);\n        }\n        if (declaration.metadata) {\n            if (declaration.metadata.isComponent) {\n                if (!modules.ngModuleByPipeOrDirective.has(declaration.type)) {\n                    report(\"Component '\" + declaration.type.name + \"' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration\");\n                }\n                if (!declaration.metadata.template.template &&\n                    !declaration.metadata.template.templateUrl) {\n                    report(\"Component \" + declaration.type.name + \" must have a template or templateUrl\");\n                }\n            }\n            else {\n                if (!directives) {\n                    directives = new Set();\n                    modules.ngModules.forEach(function (module) {\n                        module.declaredDirectives.forEach(function (directive) { directives.add(directive.reference); });\n                    });\n                }\n                if (!directives.has(declaration.type)) {\n                    report(\"Directive '\" + declaration.type.name + \"' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration\");\n                }\n            }\n        }\n    };\n    for (var _i = 0, declarations_1 = declarations; _i < declarations_1.length; _i++) {\n        var declaration = declarations_1[_i];\n        _loop_2(declaration);\n    }\n    return results;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getHover(info) {\n    var result = locateSymbol(info);\n    if (result) {\n        return { text: hoverTextOf(result.symbol), span: result.span };\n    }\n}\nfunction hoverTextOf(symbol) {\n    var result = [{ text: symbol.kind }, { text: ' ' }, { text: symbol.name, language: symbol.language }];\n    var container = symbol.container;\n    if (container) {\n        result.push({ text: ' of ' }, { text: container.name, language: container.language });\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create an instance of an Angular `LanguageService`.\n *\n * @experimental\n */\nfunction createLanguageService(host) {\n    return new LanguageServiceImpl(host);\n}\nvar LanguageServiceImpl = (function () {\n    function LanguageServiceImpl(host) {\n        this.host = host;\n    }\n    Object.defineProperty(LanguageServiceImpl.prototype, \"metadataResolver\", {\n        get: function () { return this.host.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    LanguageServiceImpl.prototype.getTemplateReferences = function () { return this.host.getTemplateReferences(); };\n    LanguageServiceImpl.prototype.getDiagnostics = function (fileName) {\n        var results = [];\n        var templates = this.host.getTemplates(fileName);\n        if (templates && templates.length) {\n            results.push.apply(results, getTemplateDiagnostics(fileName, this, templates));\n        }\n        var declarations = this.host.getDeclarations(fileName);\n        if (declarations && declarations.length) {\n            var summary = this.host.getAnalyzedModules();\n            results.push.apply(results, getDeclarationDiagnostics(declarations, summary));\n        }\n        return uniqueBySpan(results);\n    };\n    LanguageServiceImpl.prototype.getPipesAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return templateInfo.pipes;\n        }\n        return [];\n    };\n    LanguageServiceImpl.prototype.getCompletionsAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getTemplateCompletions(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getDefinitionAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getDefinition(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getHoverAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getHover(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getTemplateAstAtPosition = function (fileName, position) {\n        var template = this.host.getTemplateAt(fileName, position);\n        if (template) {\n            var astResult = this.getTemplateAst(template, fileName);\n            if (astResult && astResult.htmlAst && astResult.templateAst && astResult.directive &&\n                astResult.directives && astResult.pipes && astResult.expressionParser)\n                return {\n                    position: position,\n                    fileName: fileName,\n                    template: template,\n                    htmlAst: astResult.htmlAst,\n                    directive: astResult.directive,\n                    directives: astResult.directives,\n                    pipes: astResult.pipes,\n                    templateAst: astResult.templateAst,\n                    expressionParser: astResult.expressionParser\n                };\n        }\n        return undefined;\n    };\n    LanguageServiceImpl.prototype.getTemplateAst = function (template, contextFile) {\n        var _this = this;\n        var result = undefined;\n        try {\n            var resolvedMetadata = this.metadataResolver.getNonNormalizedDirectiveMetadata(template.type);\n            var metadata = resolvedMetadata && resolvedMetadata.metadata;\n            if (metadata) {\n                var rawHtmlParser = new HtmlParser();\n                var htmlParser = new I18NHtmlParser(rawHtmlParser);\n                var expressionParser = new Parser(new Lexer());\n                var config = new CompilerConfig();\n                var parser = new TemplateParser(config, this.host.resolver.getReflector(), expressionParser, new DomElementSchemaRegistry(), htmlParser, null, []);\n                var htmlResult = htmlParser.parse(template.source, '', true);\n                var analyzedModules = this.host.getAnalyzedModules();\n                var errors = undefined;\n                var ngModule = analyzedModules.ngModuleByPipeOrDirective.get(template.type);\n                if (!ngModule) {\n                    // Reported by the the declaration diagnostics.\n                    ngModule = findSuitableDefaultModule(analyzedModules);\n                }\n                if (ngModule) {\n                    var resolvedDirectives = ngModule.transitiveModule.directives.map(function (d) { return _this.host.resolver.getNonNormalizedDirectiveMetadata(d.reference); });\n                    var directives = removeMissing(resolvedDirectives).map(function (d) { return d.metadata.toSummary(); });\n                    var pipes = ngModule.transitiveModule.pipes.map(function (p) { return _this.host.resolver.getOrLoadPipeMetadata(p.reference).toSummary(); });\n                    var schemas = ngModule.schemas;\n                    var parseResult = parser.tryParseHtml(htmlResult, metadata, directives, pipes, schemas);\n                    result = {\n                        htmlAst: htmlResult.rootNodes,\n                        templateAst: parseResult.templateAst,\n                        directive: metadata, directives: directives, pipes: pipes,\n                        parseErrors: parseResult.errors, expressionParser: expressionParser, errors: errors\n                    };\n                }\n            }\n        }\n        catch (e) {\n            var span = template.span;\n            if (e.fileName == contextFile) {\n                span = template.query.getSpanAt(e.line, e.column) || span;\n            }\n            result = { errors: [{ kind: DiagnosticKind.Error, message: e.message, span: span }] };\n        }\n        return result || {};\n    };\n    return LanguageServiceImpl;\n}());\nfunction removeMissing(values) {\n    return values.filter(function (e) { return !!e; });\n}\nfunction uniqueBySpan(elements) {\n    if (elements) {\n        var result = [];\n        var map = new Map();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            var span = element.span;\n            var set = map.get(span.start);\n            if (!set) {\n                set = new Set();\n                map.set(span.start, set);\n            }\n            if (!set.has(span.end)) {\n                set.add(span.end);\n                result.push(element);\n            }\n        }\n        return result;\n    }\n}\nfunction findSuitableDefaultModule(modules) {\n    var result = undefined;\n    var resultSize = 0;\n    for (var _i = 0, _a = modules.ngModules; _i < _a.length; _i++) {\n        var module_1 = _a[_i];\n        var moduleSize = module_1.transitiveModule.directives.length;\n        if (moduleSize > resultSize) {\n            result = module_1;\n            resultSize = moduleSize;\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ReflectorModuleModuleResolutionHost = (function () {\n    function ReflectorModuleModuleResolutionHost(host) {\n        var _this = this;\n        this.host = host;\n        if (host.directoryExists)\n            this.directoryExists = function (directoryName) { return _this.host.directoryExists(directoryName); };\n    }\n    ReflectorModuleModuleResolutionHost.prototype.fileExists = function (fileName) { return !!this.host.getScriptSnapshot(fileName); };\n    ReflectorModuleModuleResolutionHost.prototype.readFile = function (fileName) {\n        var snapshot = this.host.getScriptSnapshot(fileName);\n        if (snapshot) {\n            return snapshot.getText(0, snapshot.getLength());\n        }\n        // Typescript readFile() declaration should be `readFile(fileName: string): string | undefined\n        return undefined;\n    };\n    return ReflectorModuleModuleResolutionHost;\n}());\n// This reflector host's purpose is to first set verboseInvalidExpressions to true so the\n// reflector will collect errors instead of throwing, and second to all deferring the creation\n// of the program until it is actually needed.\nvar ReflectorHost = (function (_super) {\n    __extends(ReflectorHost, _super);\n    function ReflectorHost(getProgram, serviceHost, options) {\n        var _this = _super.call(this, \n        // The ancestor value for program is overridden below so passing null here is safe.\n        /* program */ null, options, new language_services_2(new ReflectorModuleModuleResolutionHost(serviceHost)), { verboseInvalidExpression: true }) || this;\n        _this.getProgram = getProgram;\n        return _this;\n    }\n    Object.defineProperty(ReflectorHost.prototype, \"program\", {\n        get: function () { return this.getProgram(); },\n        set: function (value) {\n            // Discard the result set by ancestor constructor\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectorHost;\n}(language_services_1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a `LanguageServiceHost`\n */\nfunction createLanguageServiceFromTypescript(host, service) {\n    var ngHost = new TypeScriptServiceHost(host, service);\n    var ngServer = createLanguageService(ngHost);\n    ngHost.setSite(ngServer);\n    return ngServer;\n}\n/**\n * The language service never needs the normalized versions of the metadata. To avoid parsing\n * the content and resolving references, return an empty file. This also allows normalizing\n * template that are syntatically incorrect which is required to provide completions in\n * syntactically incorrect templates.\n */\nvar DummyHtmlParser = (function (_super) {\n    __extends(DummyHtmlParser, _super);\n    function DummyHtmlParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DummyHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return new ParseTreeResult([], []);\n    };\n    return DummyHtmlParser;\n}(HtmlParser));\n/**\n * Avoid loading resources in the language servcie by using a dummy loader.\n */\nvar DummyResourceLoader = (function (_super) {\n    __extends(DummyResourceLoader, _super);\n    function DummyResourceLoader() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DummyResourceLoader.prototype.get = function (url) { return Promise.resolve(''); };\n    return DummyResourceLoader;\n}(ResourceLoader));\n/**\n * An implemntation of a `LanguageServiceHost` for a TypeScript project.\n *\n * The `TypeScriptServiceHost` implements the Angular `LanguageServiceHost` using\n * the TypeScript language services.\n *\n * @experimental\n */\nvar TypeScriptServiceHost = (function () {\n    function TypeScriptServiceHost(host, tsService) {\n        this.host = host;\n        this.tsService = tsService;\n        this._staticSymbolCache = new StaticSymbolCache();\n        this._typeCache = [];\n        this.modulesOutOfDate = true;\n        this.fileVersions = new Map();\n    }\n    TypeScriptServiceHost.prototype.setSite = function (service) { this.service = service; };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"resolver\", {\n        /**\n         * Angular LanguageServiceHost implementation\n         */\n        get: function () {\n            var _this = this;\n            this.validate();\n            var result = this._resolver;\n            if (!result) {\n                var moduleResolver = new NgModuleResolver(this.reflector);\n                var directiveResolver = new DirectiveResolver(this.reflector);\n                var pipeResolver = new PipeResolver(this.reflector);\n                var elementSchemaRegistry = new DomElementSchemaRegistry();\n                var resourceLoader = new DummyResourceLoader();\n                var urlResolver = createOfflineCompileUrlResolver();\n                var htmlParser = new DummyHtmlParser();\n                // This tracks the CompileConfig in codegen.ts. Currently these options\n                // are hard-coded.\n                var config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation$1.Emulated, useJit: false });\n                var directiveNormalizer = new DirectiveNormalizer(resourceLoader, urlResolver, htmlParser, config);\n                result = this._resolver = new CompileMetadataResolver(config, htmlParser, moduleResolver, directiveResolver, pipeResolver, new JitSummaryResolver(), elementSchemaRegistry, directiveNormalizer, new Console(), this._staticSymbolCache, this.reflector, function (error, type) { return _this.collectError(error, type && type.filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.getTemplateReferences = function () {\n        this.ensureTemplateMap();\n        return this.templateReferences || [];\n    };\n    TypeScriptServiceHost.prototype.getTemplateAt = function (fileName, position) {\n        var sourceFile = this.getSourceFile(fileName);\n        if (sourceFile) {\n            this.context = sourceFile.fileName;\n            var node = this.findNode(sourceFile, position);\n            if (node) {\n                return this.getSourceFromNode(fileName, this.host.getScriptVersion(sourceFile.fileName), node);\n            }\n        }\n        else {\n            this.ensureTemplateMap();\n            // TODO: Cannocalize the file?\n            var componentType = this.fileToComponent.get(fileName);\n            if (componentType) {\n                return this.getSourceFromType(fileName, this.host.getScriptVersion(fileName), componentType);\n            }\n        }\n        return undefined;\n    };\n    TypeScriptServiceHost.prototype.getAnalyzedModules = function () {\n        this.validate();\n        return this.ensureAnalyzedModules();\n    };\n    TypeScriptServiceHost.prototype.ensureAnalyzedModules = function () {\n        var analyzedModules = this.analyzedModules;\n        if (!analyzedModules) {\n            var analyzeHost = { isSourceFile: function (filePath) { return true; } };\n            var programFiles = this.program.getSourceFiles().map(function (sf) { return sf.fileName; });\n            analyzedModules = this.analyzedModules =\n                analyzeNgModules(programFiles, analyzeHost, this.staticSymbolResolver, this.resolver);\n        }\n        return analyzedModules;\n    };\n    TypeScriptServiceHost.prototype.getTemplates = function (fileName) {\n        var _this = this;\n        this.ensureTemplateMap();\n        var componentType = this.fileToComponent.get(fileName);\n        if (componentType) {\n            var templateSource = this.getTemplateAt(fileName, 0);\n            if (templateSource) {\n                return [templateSource];\n            }\n        }\n        else {\n            var version_1 = this.host.getScriptVersion(fileName);\n            var result_1 = [];\n            // Find each template string in the file\n            var visit_1 = function (child) {\n                var templateSource = _this.getSourceFromNode(fileName, version_1, child);\n                if (templateSource) {\n                    result_1.push(templateSource);\n                }\n                else {\n                    ts.forEachChild(child, visit_1);\n                }\n            };\n            var sourceFile = this.getSourceFile(fileName);\n            if (sourceFile) {\n                this.context = sourceFile.path || sourceFile.fileName;\n                ts.forEachChild(sourceFile, visit_1);\n            }\n            return result_1.length ? result_1 : undefined;\n        }\n    };\n    TypeScriptServiceHost.prototype.getDeclarations = function (fileName) {\n        var _this = this;\n        var result = [];\n        var sourceFile = this.getSourceFile(fileName);\n        if (sourceFile) {\n            var visit_2 = function (child) {\n                var declaration = _this.getDeclarationFromNode(sourceFile, child);\n                if (declaration) {\n                    result.push(declaration);\n                }\n                else {\n                    ts.forEachChild(child, visit_2);\n                }\n            };\n            ts.forEachChild(sourceFile, visit_2);\n        }\n        return result;\n    };\n    TypeScriptServiceHost.prototype.getSourceFile = function (fileName) {\n        return this.tsService.getProgram().getSourceFile(fileName);\n    };\n    TypeScriptServiceHost.prototype.updateAnalyzedModules = function () {\n        this.validate();\n        if (this.modulesOutOfDate) {\n            this.analyzedModules = null;\n            this._reflector = null;\n            this.templateReferences = null;\n            this.fileToComponent = null;\n            this.ensureAnalyzedModules();\n            this.modulesOutOfDate = false;\n        }\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"program\", {\n        get: function () { return this.tsService.getProgram(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"checker\", {\n        get: function () {\n            var checker = this._checker;\n            if (!checker) {\n                checker = this._checker = this.program.getTypeChecker();\n            }\n            return checker;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.validate = function () {\n        var _this = this;\n        var program = this.program;\n        if (this._staticSymbolResolver && this.lastProgram != program) {\n            // Invalidate file that have changed in the static symbol resolver\n            var invalidateFile = function (fileName) {\n                return _this._staticSymbolResolver.invalidateFile(fileName);\n            };\n            this.clearCaches();\n            var seen_1 = new Set();\n            for (var _i = 0, _a = this.program.getSourceFiles(); _i < _a.length; _i++) {\n                var sourceFile = _a[_i];\n                var fileName = sourceFile.fileName;\n                seen_1.add(fileName);\n                var version$$1 = this.host.getScriptVersion(fileName);\n                var lastVersion = this.fileVersions.get(fileName);\n                if (version$$1 != lastVersion) {\n                    this.fileVersions.set(fileName, version$$1);\n                    invalidateFile(fileName);\n                }\n            }\n            // Remove file versions that are no longer in the file and invalidate them.\n            var missing = Array.from(this.fileVersions.keys()).filter(function (f) { return !seen_1.has(f); });\n            missing.forEach(function (f) { return _this.fileVersions.delete(f); });\n            missing.forEach(invalidateFile);\n            this.lastProgram = program;\n        }\n    };\n    TypeScriptServiceHost.prototype.clearCaches = function () {\n        this._checker = null;\n        this._typeCache = [];\n        this._resolver = null;\n        this.collectedErrors = null;\n        this.modulesOutOfDate = true;\n    };\n    TypeScriptServiceHost.prototype.ensureTemplateMap = function () {\n        if (!this.fileToComponent || !this.templateReferences) {\n            var fileToComponent = new Map();\n            var templateReference = [];\n            var ngModuleSummary = this.getAnalyzedModules();\n            var urlResolver = createOfflineCompileUrlResolver();\n            for (var _i = 0, _a = ngModuleSummary.ngModules; _i < _a.length; _i++) {\n                var module_1 = _a[_i];\n                for (var _b = 0, _c = module_1.declaredDirectives; _b < _c.length; _b++) {\n                    var directive = _c[_b];\n                    var metadata = this.resolver.getNonNormalizedDirectiveMetadata(directive.reference).metadata;\n                    if (metadata.isComponent && metadata.template && metadata.template.templateUrl) {\n                        var templateName = urlResolver.resolve(this.reflector.componentModuleUrl(directive.reference), metadata.template.templateUrl);\n                        fileToComponent.set(templateName, directive.reference);\n                        templateReference.push(templateName);\n                    }\n                }\n            }\n            this.fileToComponent = fileToComponent;\n            this.templateReferences = templateReference;\n        }\n    };\n    TypeScriptServiceHost.prototype.getSourceFromDeclaration = function (fileName, version$$1, source, span, type, declaration, node, sourceFile) {\n        var queryCache = undefined;\n        var t = this;\n        if (declaration) {\n            return {\n                version: version$$1,\n                source: source,\n                span: span,\n                type: type,\n                get members() {\n                    return language_services_13(t.program, t.checker, sourceFile, declaration);\n                },\n                get query() {\n                    if (!queryCache) {\n                        var pipes_1 = t.service.getPipesAt(fileName, node.getStart());\n                        queryCache = language_services_15(t.program, t.checker, sourceFile, function () { return language_services_14(sourceFile, t.program, t.checker, pipes_1); });\n                    }\n                    return queryCache;\n                }\n            };\n        }\n    };\n    TypeScriptServiceHost.prototype.getSourceFromNode = function (fileName, version$$1, node) {\n        var result = undefined;\n        var t = this;\n        switch (node.kind) {\n            case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n            case ts.SyntaxKind.StringLiteral:\n                var _a = this.getTemplateClassDeclFromNode(node), declaration = _a[0], decorator = _a[1];\n                if (declaration && declaration.name) {\n                    var sourceFile = this.getSourceFile(fileName);\n                    return this.getSourceFromDeclaration(fileName, version$$1, this.stringOf(node) || '', shrink(spanOf$1(node)), this.reflector.getStaticSymbol(sourceFile.fileName, declaration.name.text), declaration, node, sourceFile);\n                }\n                break;\n        }\n        return result;\n    };\n    TypeScriptServiceHost.prototype.getSourceFromType = function (fileName, version$$1, type) {\n        var result = undefined;\n        var declaration = this.getTemplateClassFromStaticSymbol(type);\n        if (declaration) {\n            var snapshot = this.host.getScriptSnapshot(fileName);\n            if (snapshot) {\n                var source = snapshot.getText(0, snapshot.getLength());\n                result = this.getSourceFromDeclaration(fileName, version$$1, source, { start: 0, end: source.length }, type, declaration, declaration, declaration.getSourceFile());\n            }\n        }\n        return result;\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"reflectorHost\", {\n        get: function () {\n            var _this = this;\n            var result = this._reflectorHost;\n            if (!result) {\n                if (!this.context) {\n                    // Make up a context by finding the first script and using that as the base dir.\n                    this.context = this.host.getScriptFileNames()[0];\n                }\n                // Use the file context's directory as the base directory.\n                // The host's getCurrentDirectory() is not reliable as it is always \"\" in\n                // tsserver. We don't need the exact base directory, just one that contains\n                // a source file.\n                var source = this.tsService.getProgram().getSourceFile(this.context);\n                if (!source) {\n                    throw new Error('Internal error: no context could be determined');\n                }\n                var tsConfigPath = findTsConfig(source.fileName);\n                var basePath = path.dirname(tsConfigPath || this.context);\n                var options = { basePath: basePath, genDir: basePath };\n                var compilerOptions = this.host.getCompilationSettings();\n                if (compilerOptions && compilerOptions.baseUrl) {\n                    options.baseUrl = compilerOptions.baseUrl;\n                }\n                result = this._reflectorHost =\n                    new ReflectorHost(function () { return _this.tsService.getProgram(); }, this.host, options);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.collectError = function (error, filePath) {\n        if (filePath) {\n            var errorMap = this.collectedErrors;\n            if (!errorMap || !this.collectedErrors) {\n                errorMap = this.collectedErrors = new Map();\n            }\n            var errors = errorMap.get(filePath);\n            if (!errors) {\n                errors = [];\n                this.collectedErrors.set(filePath, errors);\n            }\n            errors.push(error);\n        }\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"staticSymbolResolver\", {\n        get: function () {\n            var _this = this;\n            var result = this._staticSymbolResolver;\n            if (!result) {\n                this._summaryResolver = new AotSummaryResolver({\n                    loadSummary: function (filePath) { return null; },\n                    isSourceFile: function (sourceFilePath) { return true; },\n                    toSummaryFileName: function (sourceFilePath) { return sourceFilePath; },\n                    fromSummaryFileName: function (filePath) { return filePath; },\n                }, this._staticSymbolCache);\n                result = this._staticSymbolResolver = new StaticSymbolResolver(this.reflectorHost, this._staticSymbolCache, this._summaryResolver, function (e, filePath) { return _this.collectError(e, filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"reflector\", {\n        get: function () {\n            var _this = this;\n            var result = this._reflector;\n            if (!result) {\n                var ssr = this.staticSymbolResolver;\n                result = this._reflector = new StaticReflector(this._summaryResolver, ssr, [], [], function (e, filePath) { return _this.collectError(e, filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.getTemplateClassFromStaticSymbol = function (type) {\n        var source = this.getSourceFile(type.filePath);\n        if (source) {\n            var declarationNode = ts.forEachChild(source, function (child) {\n                if (child.kind === ts.SyntaxKind.ClassDeclaration) {\n                    var classDeclaration = child;\n                    if (classDeclaration.name != null && classDeclaration.name.text === type.name) {\n                        return classDeclaration;\n                    }\n                }\n            });\n            return declarationNode;\n        }\n        return undefined;\n    };\n    /**\n     * Given a template string node, see if it is an Angular template string, and if so return the\n     * containing class.\n     */\n    TypeScriptServiceHost.prototype.getTemplateClassDeclFromNode = function (currentToken) {\n        // Verify we are in a 'template' property assignment, in an object literal, which is an call\n        // arg, in a decorator\n        var parentNode = currentToken.parent; // PropertyAssignment\n        if (!parentNode) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        if (parentNode.kind !== ts.SyntaxKind.PropertyAssignment) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        else {\n            // TODO: Is this different for a literal, i.e. a quoted property name like \"template\"?\n            if (parentNode.name.text !== 'template') {\n                return TypeScriptServiceHost.missingTemplate;\n            }\n        }\n        parentNode = parentNode.parent; // ObjectLiteralExpression\n        if (!parentNode || parentNode.kind !== ts.SyntaxKind.ObjectLiteralExpression) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        parentNode = parentNode.parent; // CallExpression\n        if (!parentNode || parentNode.kind !== ts.SyntaxKind.CallExpression) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        var callTarget = parentNode.expression;\n        var decorator = parentNode.parent; // Decorator\n        if (!decorator || decorator.kind !== ts.SyntaxKind.Decorator) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        var declaration = decorator.parent; // ClassDeclaration\n        if (!declaration || declaration.kind !== ts.SyntaxKind.ClassDeclaration) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        return [declaration, callTarget];\n    };\n    TypeScriptServiceHost.prototype.getCollectedErrors = function (defaultSpan, sourceFile) {\n        var errors = (this.collectedErrors && this.collectedErrors.get(sourceFile.fileName));\n        return (errors && errors.map(function (e) {\n            return { message: e.message, span: spanAt(sourceFile, e.line, e.column) || defaultSpan };\n        })) ||\n            [];\n    };\n    TypeScriptServiceHost.prototype.getDeclarationFromNode = function (sourceFile, node) {\n        if (node.kind == ts.SyntaxKind.ClassDeclaration && node.decorators &&\n            node.name) {\n            for (var _i = 0, _a = node.decorators; _i < _a.length; _i++) {\n                var decorator = _a[_i];\n                if (decorator.expression && decorator.expression.kind == ts.SyntaxKind.CallExpression) {\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        var call = decorator.expression;\n                        var target = call.expression;\n                        var type = this.checker.getTypeAtLocation(target);\n                        if (type) {\n                            var staticSymbol = this.reflector.getStaticSymbol(sourceFile.fileName, classDeclaration.name.text);\n                            try {\n                                if (this.resolver.isDirective(staticSymbol)) {\n                                    var metadata = this.resolver.getNonNormalizedDirectiveMetadata(staticSymbol).metadata;\n                                    var declarationSpan = spanOf$1(target);\n                                    return {\n                                        type: staticSymbol,\n                                        declarationSpan: declarationSpan,\n                                        metadata: metadata,\n                                        errors: this.getCollectedErrors(declarationSpan, sourceFile)\n                                    };\n                                }\n                            }\n                            catch (e) {\n                                if (e.message) {\n                                    this.collectError(e, sourceFile.fileName);\n                                    var declarationSpan = spanOf$1(target);\n                                    return {\n                                        type: staticSymbol,\n                                        declarationSpan: declarationSpan,\n                                        errors: this.getCollectedErrors(declarationSpan, sourceFile)\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TypeScriptServiceHost.prototype.stringOf = function (node) {\n        switch (node.kind) {\n            case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n                return node.text;\n            case ts.SyntaxKind.StringLiteral:\n                return node.text;\n        }\n    };\n    TypeScriptServiceHost.prototype.findNode = function (sourceFile, position) {\n        function find(node) {\n            if (position >= node.getStart() && position < node.getEnd()) {\n                return ts.forEachChild(node, find) || node;\n            }\n        }\n        return find(sourceFile);\n    };\n    TypeScriptServiceHost.missingTemplate = [undefined, undefined];\n    return TypeScriptServiceHost;\n}());\nfunction findTsConfig(fileName) {\n    var dir = path.dirname(fileName);\n    while (fs.existsSync(dir)) {\n        var candidate = path.join(dir, 'tsconfig.json');\n        if (fs.existsSync(candidate))\n            return candidate;\n        var parentDir = path.dirname(dir);\n        if (parentDir === dir)\n            break;\n        dir = parentDir;\n    }\n}\nfunction spanOf$1(node) {\n    return { start: node.getStart(), end: node.getEnd() };\n}\nfunction shrink(span, offset) {\n    if (offset == null)\n        offset = 1;\n    return { start: span.start + offset, end: span.end - offset };\n}\nfunction spanAt(sourceFile, line, column) {\n    if (line != null && column != null) {\n        var position_1 = ts.getPositionOfLineAndCharacter(sourceFile, line, column);\n        var findChild = function findChild(node) {\n            if (node.kind > ts.SyntaxKind.LastToken && node.pos <= position_1 && node.end > position_1) {\n                var betterNode = ts.forEachChild(node, findChild);\n                return betterNode || node;\n            }\n        };\n        var node = ts.forEachChild(sourceFile, findChild);\n        if (node) {\n            return { start: node.getStart(), end: node.getEnd() };\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar projectHostMap = new WeakMap();\nfunction getExternalFiles(project) {\n    var host = projectHostMap.get(project);\n    if (host) {\n        return host.getTemplateReferences();\n    }\n}\nvar angularOnlyResults = process.argv.indexOf('--angularOnlyResults') >= 0;\nfunction angularOnlyFilter(ls) {\n    return {\n        cleanupSemanticCache: function () { return ls.cleanupSemanticCache(); },\n        getSyntacticDiagnostics: function (fileName) { return []; },\n        getSemanticDiagnostics: function (fileName) { return []; },\n        getCompilerOptionsDiagnostics: function () { return []; },\n        getSyntacticClassifications: function (fileName, span) { return []; },\n        getSemanticClassifications: function (fileName, span) { return []; },\n        getEncodedSyntacticClassifications: function (fileName, span) { return ({ undefined: undefined }); },\n        getEncodedSemanticClassifications: function (fileName, span) { return undefined; },\n        getCompletionsAtPosition: function (fileName, position) { return undefined; },\n        getCompletionEntryDetails: function (fileName, position, entryName) {\n            return undefined;\n        },\n        getCompletionEntrySymbol: function (fileName, position, entryName) { return undefined; },\n        getQuickInfoAtPosition: function (fileName, position) { return undefined; },\n        getNameOrDottedNameSpan: function (fileName, startPos, endPos) { return undefined; },\n        getBreakpointStatementAtPosition: function (fileName, position) { return undefined; },\n        getSignatureHelpItems: function (fileName, position) { return undefined; },\n        getRenameInfo: function (fileName, position) { return undefined; },\n        findRenameLocations: function (fileName, position, findInStrings, findInComments) {\n            return [];\n        },\n        getDefinitionAtPosition: function (fileName, position) { return []; },\n        getTypeDefinitionAtPosition: function (fileName, position) { return []; },\n        getImplementationAtPosition: function (fileName, position) { return []; },\n        getReferencesAtPosition: function (fileName, position) { return []; },\n        findReferences: function (fileName, position) { return []; },\n        getDocumentHighlights: function (fileName, position, filesToSearch) { return []; },\n        /** @deprecated */\n        getOccurrencesAtPosition: function (fileName, position) { return []; },\n        getNavigateToItems: function (searchValue) { return []; },\n        getNavigationBarItems: function (fileName) { return []; },\n        getNavigationTree: function (fileName) { return undefined; },\n        getOutliningSpans: function (fileName) { return []; },\n        getTodoComments: function (fileName, descriptors) { return []; },\n        getBraceMatchingAtPosition: function (fileName, position) { return []; },\n        getIndentationAtPosition: function (fileName, position, options) { return undefined; },\n        getFormattingEditsForRange: function (fileName, start, end, options) { return []; },\n        getFormattingEditsForDocument: function (fileName, options) { return []; },\n        getFormattingEditsAfterKeystroke: function (fileName, position, key, options) { return []; },\n        getDocCommentTemplateAtPosition: function (fileName, position) { return undefined; },\n        isValidBraceCompletionAtPosition: function (fileName, position, openingBrace) { return undefined; },\n        getCodeFixesAtPosition: function (fileName, start, end, errorCodes) { return []; },\n        getEmitOutput: function (fileName) { return undefined; },\n        getProgram: function () { return ls.getProgram(); },\n        dispose: function () { return ls.dispose(); },\n        getApplicableRefactors: function (fileName, positionOrRaneg) { return []; },\n        getEditsForRefactor: function (fileName, formatOptions, positionOrRange, refactorName, actionName) {\n            return undefined;\n        },\n    };\n}\nfunction create(info /* ts.server.PluginCreateInfo */) {\n    // Create the proxy\n    var proxy = Object.create(null);\n    var oldLS = info.languageService;\n    if (angularOnlyResults) {\n        oldLS = angularOnlyFilter(oldLS);\n    }\n    function tryCall(fileName, callback) {\n        if (fileName && !oldLS.getProgram().getSourceFile(fileName)) {\n            return undefined;\n        }\n        try {\n            return callback();\n        }\n        catch (e) {\n            return undefined;\n        }\n    }\n    function tryFilenameCall(m) {\n        return function (fileName) { return tryCall(fileName, function () { return (m.call(ls, fileName)); }); };\n    }\n    function tryFilenameOneCall(m) {\n        return function (fileName, p) { return tryCall(fileName, function () { return (m.call(ls, fileName, p)); }); };\n    }\n    function tryFilenameTwoCall(m) {\n        return function (fileName, p1, p2) { return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2)); }); };\n    }\n    function tryFilenameThreeCall(m) {\n        return function (fileName, p1, p2, p3) { return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2, p3)); }); };\n    }\n    function tryFilenameFourCall(m) {\n        return function (fileName, p1, p2, p3, p4) {\n            return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2, p3, p4)); });\n        };\n    }\n    function typescriptOnly(ls) {\n        return {\n            cleanupSemanticCache: function () { return ls.cleanupSemanticCache(); },\n            getSyntacticDiagnostics: tryFilenameCall(ls.getSyntacticDiagnostics),\n            getSemanticDiagnostics: tryFilenameCall(ls.getSemanticDiagnostics),\n            getCompilerOptionsDiagnostics: function () { return ls.getCompilerOptionsDiagnostics(); },\n            getSyntacticClassifications: tryFilenameOneCall(ls.getSemanticClassifications),\n            getSemanticClassifications: tryFilenameOneCall(ls.getSemanticClassifications),\n            getEncodedSyntacticClassifications: tryFilenameOneCall(ls.getEncodedSyntacticClassifications),\n            getEncodedSemanticClassifications: tryFilenameOneCall(ls.getEncodedSemanticClassifications),\n            getCompletionsAtPosition: tryFilenameOneCall(ls.getCompletionsAtPosition),\n            getCompletionEntryDetails: tryFilenameTwoCall(ls.getCompletionEntryDetails),\n            getCompletionEntrySymbol: tryFilenameTwoCall(ls.getCompletionEntrySymbol),\n            getQuickInfoAtPosition: tryFilenameOneCall(ls.getQuickInfoAtPosition),\n            getNameOrDottedNameSpan: tryFilenameTwoCall(ls.getNameOrDottedNameSpan),\n            getBreakpointStatementAtPosition: tryFilenameOneCall(ls.getBreakpointStatementAtPosition),\n            getSignatureHelpItems: tryFilenameOneCall(ls.getSignatureHelpItems),\n            getRenameInfo: tryFilenameOneCall(ls.getRenameInfo),\n            findRenameLocations: tryFilenameThreeCall(ls.findRenameLocations),\n            getDefinitionAtPosition: tryFilenameOneCall(ls.getDefinitionAtPosition),\n            getTypeDefinitionAtPosition: tryFilenameOneCall(ls.getTypeDefinitionAtPosition),\n            getImplementationAtPosition: tryFilenameOneCall(ls.getImplementationAtPosition),\n            getReferencesAtPosition: tryFilenameOneCall(ls.getReferencesAtPosition),\n            findReferences: tryFilenameOneCall(ls.findReferences),\n            getDocumentHighlights: tryFilenameTwoCall(ls.getDocumentHighlights),\n            /** @deprecated */\n            getOccurrencesAtPosition: tryFilenameOneCall(ls.getOccurrencesAtPosition),\n            getNavigateToItems: function (searchValue, maxResultCount, fileName, excludeDtsFiles) { return tryCall(fileName, function () { return ls.getNavigateToItems(searchValue, maxResultCount, fileName, excludeDtsFiles); }); },\n            getNavigationBarItems: tryFilenameCall(ls.getNavigationBarItems),\n            getNavigationTree: tryFilenameCall(ls.getNavigationTree),\n            getOutliningSpans: tryFilenameCall(ls.getOutliningSpans),\n            getTodoComments: tryFilenameOneCall(ls.getTodoComments),\n            getBraceMatchingAtPosition: tryFilenameOneCall(ls.getBraceMatchingAtPosition),\n            getIndentationAtPosition: tryFilenameTwoCall(ls.getIndentationAtPosition),\n            getFormattingEditsForRange: tryFilenameThreeCall(ls.getFormattingEditsForRange),\n            getFormattingEditsForDocument: tryFilenameOneCall(ls.getFormattingEditsForDocument),\n            getFormattingEditsAfterKeystroke: tryFilenameThreeCall(ls.getFormattingEditsAfterKeystroke),\n            getDocCommentTemplateAtPosition: tryFilenameOneCall(ls.getDocCommentTemplateAtPosition),\n            isValidBraceCompletionAtPosition: tryFilenameTwoCall(ls.isValidBraceCompletionAtPosition),\n            getCodeFixesAtPosition: tryFilenameFourCall(ls.getCodeFixesAtPosition),\n            getEmitOutput: tryFilenameCall(ls.getEmitOutput),\n            getProgram: function () { return ls.getProgram(); },\n            dispose: function () { return ls.dispose(); },\n            getApplicableRefactors: function (fileName, positionOrRaneg) { return []; },\n            getEditsForRefactor: function (fileName, formatOptions, positionOrRange, refactorName, actionName) {\n                return undefined;\n            },\n        };\n    }\n    oldLS = typescriptOnly(oldLS);\n    var _loop_1 = function (k) {\n        proxy[k] = function () { return oldLS[k].apply(oldLS, arguments); };\n    };\n    for (var k in oldLS) {\n        _loop_1(k);\n    }\n    function completionToEntry(c) {\n        return { kind: c.kind, name: c.name, sortText: c.sort, kindModifiers: '' };\n    }\n    function diagnosticToDiagnostic(d, file) {\n        var result = {\n            file: file,\n            start: d.span.start,\n            length: d.span.end - d.span.start,\n            messageText: d.message,\n            category: ts.DiagnosticCategory.Error,\n            code: 0,\n            source: 'ng'\n        };\n        return result;\n    }\n    function tryOperation(attempting, callback) {\n        try {\n            return callback();\n        }\n        catch (e) {\n            info.project.projectService.logger.info(\"Failed to \" + attempting + \": \" + e.toString());\n            info.project.projectService.logger.info(\"Stack trace: \" + e.stack);\n            return null;\n        }\n    }\n    var serviceHost = new TypeScriptServiceHost(info.languageServiceHost, info.languageService);\n    var ls = createLanguageService(serviceHost);\n    serviceHost.setSite(ls);\n    projectHostMap.set(info.project, serviceHost);\n    proxy.getCompletionsAtPosition = function (fileName, position) {\n        var base = oldLS.getCompletionsAtPosition(fileName, position) || {\n            isGlobalCompletion: false,\n            isMemberCompletion: false,\n            isNewIdentifierLocation: false,\n            entries: []\n        };\n        tryOperation('get completions', function () {\n            var results = ls.getCompletionsAt(fileName, position);\n            if (results && results.length) {\n                if (base === undefined) {\n                    base = {\n                        isGlobalCompletion: false,\n                        isMemberCompletion: false,\n                        isNewIdentifierLocation: false,\n                        entries: []\n                    };\n                }\n                for (var _i = 0, results_1 = results; _i < results_1.length; _i++) {\n                    var entry = results_1[_i];\n                    base.entries.push(completionToEntry(entry));\n                }\n            }\n        });\n        return base;\n    };\n    proxy.getQuickInfoAtPosition = function (fileName, position) {\n        var base = oldLS.getQuickInfoAtPosition(fileName, position);\n        // TODO(vicb): the tags property has been removed in TS 2.2\n        tryOperation('get quick info', function () {\n            var ours = ls.getHoverAt(fileName, position);\n            if (ours) {\n                var displayParts = [];\n                for (var _i = 0, _a = ours.text; _i < _a.length; _i++) {\n                    var part = _a[_i];\n                    displayParts.push({ kind: part.language || 'angular', text: part.text });\n                }\n                var tags = base && base.tags;\n                base = {\n                    displayParts: displayParts,\n                    documentation: [],\n                    kind: 'angular',\n                    kindModifiers: 'what does this do?',\n                    textSpan: { start: ours.span.start, length: ours.span.end - ours.span.start },\n                };\n                if (tags) {\n                    base.tags = tags;\n                }\n            }\n        });\n        return base;\n    };\n    proxy.getSemanticDiagnostics = function (fileName) {\n        var result = oldLS.getSemanticDiagnostics(fileName);\n        var base = result || [];\n        tryOperation('get diagnostics', function () {\n            info.project.projectService.logger.info(\"Computing Angular semantic diagnostics...\");\n            var ours = ls.getDiagnostics(fileName);\n            if (ours && ours.length) {\n                var file_1 = oldLS.getProgram().getSourceFile(fileName);\n                base.push.apply(base, ours.map(function (d) { return diagnosticToDiagnostic(d, file_1); }));\n            }\n        });\n        return base;\n    };\n    proxy.getDefinitionAtPosition = function (fileName, position) {\n        var base = oldLS.getDefinitionAtPosition(fileName, position);\n        if (base && base.length) {\n            return base;\n        }\n        return tryOperation('get definition', function () {\n            var ours = ls.getDefinitionAt(fileName, position);\n            if (ours && ours.length) {\n                base = base || [];\n                for (var _i = 0, ours_1 = ours; _i < ours_1.length; _i++) {\n                    var loc = ours_1[_i];\n                    base.push({\n                        fileName: loc.fileName,\n                        textSpan: { start: loc.span.start, length: loc.span.end - loc.span.start },\n                        name: '',\n                        kind: 'definition',\n                        containerName: loc.fileName,\n                        containerKind: 'file'\n                    });\n                }\n            }\n            return base;\n        }) || [];\n    };\n    return proxy;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * @stable\n */\nvar VERSION = new Version$1('5.0.0-rc.0-fbc9537');\n\nexports.createLanguageService = createLanguageService;\nexports.TypeScriptServiceHost = TypeScriptServiceHost;\nexports.createLanguageServiceFromTypescript = createLanguageServiceFromTypescript;\nexports.VERSION = VERSION;\nexports.getExternalFiles = getExternalFiles;\nexports.create = create;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n});\n//# sourceMappingURL=language-service.umd.js.map\n"]}